{
	"id": "9e94ab88ff8dfb63f29e03c3dc843700",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nimport \"../lib/structures.sol\";\r\n\r\ncontract modifireFunc is structures {\r\n    \r\n    // COMMENT_MOD: Модификатор проверка роли ВЛАДЕЛЬЦА.\r\n    modifier onlyOwner () {\r\n        require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER, \"Your not admin\");\r\n        _;\r\n    }\r\n\r\n    // COMMENT_MOD: Модификатор проверка роли PRIVAT ПРОВАЙДЕРА.\r\n    modifier onlyPrivateProvider () {\r\n        require(structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"Your not Private provider\");\r\n        _;\r\n    }\r\n\r\n    // COMMENT_MOD: Модификатор проверка роли PRIVAT ПРОВАЙДЕРА.\r\n    modifier onlyPublicProvider () {\r\n        require(structUsers_[msg.sender].role == Role.SYSTEM_PUBLIC, \"Your not Private provider\");\r\n        _;\r\n    }\r\n\r\n    // COMMENT_MOD: Модификатор проверки роли ВЛАДЕЛЬЦ или PRIVAT ПРОВАЙДЕРА.\r\n    modifier onlyOwnerAndPrivateProvider () {\r\n        require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER || structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"You are not the owner or private provider\");\r\n        _;\r\n    }\r\n\r\n    // COMMENT_MOD: Модификатор проверка того, что пользователь обычный user.\r\n    modifier onlyUser () {\r\n        require(\r\n            structUsers_[msg.sender].role != Role.SYSTEM_OWNER ||\r\n            structUsers_[msg.sender].role != Role.SYSTEM_PUBLIC ||\r\n            structUsers_[msg.sender].role != Role.SYSTEM_PRIVATE ||\r\n            structUsers_[msg.sender].role != Role.INVESTOR, \"Application can only be submitted by regular users\"\r\n        );\r\n        _;\r\n    }\r\n}"
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\ncontract structures {\r\n    // COMMENT: Роли для структуры пользователей.\r\n    enum Role {\r\n        SYSTEM_OWNER,\r\n        SYSTEM_PUBLIC,\r\n        SYSTEM_PRIVATE,\r\n        INVESTOR,\r\n        USER\r\n    }\r\n\r\n    // COMMENT_SCTRUCT: Структура пользователей.\r\n    struct structUser {\r\n        Role role;               // роль  \r\n        string login;            // логин\r\n        bytes32 password;        // пароль\r\n        uint256 balance_overall; // общий баланс\r\n        uint256 balance_seed;    // баланс SEED токенов\r\n        uint256 balance_private; // баланс PRIVATE токенов\r\n        uint256 balance_public;  // баланс PUBLIC токенов\r\n    }\r\n    mapping (address => structUser) structUsers_; // обращение к структуре по АДРЕСАМ\r\n    mapping(address => mapping (address => uint256)) allowed; // делегированные пользоатели\r\n\r\n    // COMMENT: Цена за 1 токен.\r\n    uint256 public tokenPrice_ = 750000000; // 1 токен за 0.00075 ETH => 750000000; 0.001ETH => 1000000000 WEI | ЗНАЧЕНИЕ УКАЗЫВАЕТСЯ В WEI\r\n\r\n    // COMMENT: Ограничение цены токена.\r\n    uint public tokenAmount_ = 100000; // кол-во, которое может купить токенов пользователь | private = 100 000 CMON; public = 5 000 CMON\r\n\r\n    // COMMENT: Набор начальних пользователей. \r\n    address constant ownerAdr = 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4;           // ВЛАДЕЛЕЦ\r\n    address constant privateProviderAdr = 0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2; // PRIVATE ПРОВАЙДЕР\r\n    address constant publicProviderAdr = 0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db;  // PUBLIC ПРОВАЙДЕР\r\n\r\n    // COMMENT_SCTRUC: Структура фазы.\r\n    struct structPhase {\r\n        bool statusPhase; // статус фазы\r\n        bool reviewed;    // была ли активирована фаза\r\n    }\r\n    mapping (address => structPhase) structPhases_; // обращение к структуре по АДРЕСАМ\r\n\r\n    // COMMENT_STRUCT: Структура заявок пользователей.\r\n    struct structApplication {\r\n        string name;                    // имя\r\n        string contactForCommunication; // контакты для связи\r\n        address userAdr;                // адрес пользователя\r\n        bool status;                    // статус заявки\r\n        bool reviewed;                  // была ли просмотрена заявка\r\n        bool exist;                     // заявка существует\r\n    }\r\n    mapping (address => structApplication) strucApplications_; // обращение к структуре по АДРЕСАМ\r\n    address[] structApplicationsAmountAdr;                     // массив пользователей, подавших заявление\r\n    address[] whiteList;                                       // белый лист прользователей, которым одобрили заявки\r\n    address[] blackList;                                       // черный лист полльзователей\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol": {
				"modifireFunc": {
					"abi": [
						{
							"inputs": [],
							"name": "tokenAmount_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenPrice_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":107:1780  contract modifireFunc is structures {\r... */\n  mstore(0x40, 0x80)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1145:1154  750000000 */\n  0x2cb41780\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1116:1154  uint256 public tokenPrice_ = 750000000 */\n  0x02\n  sstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1376:1382  100000 */\n  0x0186a0\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1349:1382  uint public tokenAmount_ = 100000 */\n  0x03\n  sstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":107:1780  contract modifireFunc is structures {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":107:1780  contract modifireFunc is structures {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0761c8b9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x948942ad\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1116:1154  uint256 public tokenPrice_ = 750000000 */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1349:1382  uint public tokenAmount_ = 100000 */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1116:1154  uint256 public tokenPrice_ = 750000000 */\n    tag_6:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1349:1382  uint public tokenAmount_ = 100000 */\n    tag_10:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:125   */\n    tag_13:\n        /* \"#utility.yul\":94:118   */\n      tag_15\n        /* \"#utility.yul\":112:117   */\n      dup2\n        /* \"#utility.yul\":94:118   */\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"#utility.yul\":89:92   */\n      dup3\n        /* \"#utility.yul\":82:119   */\n      mstore\n        /* \"#utility.yul\":7:125   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":131:353   */\n    tag_8:\n        /* \"#utility.yul\":224:228   */\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":251:260   */\n      dup3\n        /* \"#utility.yul\":247:265   */\n      add\n        /* \"#utility.yul\":239:265   */\n      swap1\n      pop\n        /* \"#utility.yul\":275:346   */\n      tag_18\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":332:341   */\n      dup4\n        /* \"#utility.yul\":328:345   */\n      add\n        /* \"#utility.yul\":319:325   */\n      dup5\n        /* \"#utility.yul\":275:346   */\n      tag_13\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":131:353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":359:436   */\n    tag_16:\n        /* \"#utility.yul\":396:403   */\n      0x00\n        /* \"#utility.yul\":425:430   */\n      dup2\n        /* \"#utility.yul\":414:430   */\n      swap1\n      pop\n        /* \"#utility.yul\":359:436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a2b3c0ecc3b69214d888c18a930393ba0e7f2f726c158416df0b9e67e686b12a64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052632cb41780600255620186a060035534801561001f57600080fd5b5060dd8061002e6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80630761c8b9146037578063948942ad146051575b600080fd5b603d606b565b604051604891906084565b60405180910390f35b60576071565b604051606291906084565b60405180910390f35b60025481565b60035481565b607e81609d565b82525050565b6000602082019050609760008301846077565b92915050565b600081905091905056fea2646970667358221220a2b3c0ecc3b69214d888c18a930393ba0e7f2f726c158416df0b9e67e686b12a64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH4 0x2CB41780 PUSH1 0x2 SSTORE PUSH3 0x186A0 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xDD DUP1 PUSH2 0x2E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761C8B9 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x948942AD EQ PUSH1 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x48 SWAP2 SWAP1 PUSH1 0x84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x57 PUSH1 0x71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x62 SWAP2 SWAP1 PUSH1 0x84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7E DUP2 PUSH1 0x9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x97 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xB3 0xC0 0xEC 0xC3 0xB6 SWAP3 EQ 0xD8 DUP9 0xC1 DUP11 SWAP4 SUB SWAP4 0xBA 0xE PUSH32 0x2F726C158416DF0B9E67E686B12A64736F6C6343000807003300000000000000 ",
							"sourceMap": "107:1673:0:-:0;;;1145:9:1;1116:38;;1376:6;1349:33;;107:1673:0;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@tokenAmount__162": {
									"entryPoint": 113,
									"id": 162,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenPrice__159": {
									"entryPoint": 107,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:439:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:2",
														"type": ""
													}
												],
												"src": "7:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "229:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "239:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "251:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "239:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "319:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "332:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "343:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "275:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "275:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "201:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "213:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "224:4:2",
														"type": ""
													}
												],
												"src": "131:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "404:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "414:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "425:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "414:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "386:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "396:7:2",
														"type": ""
													}
												],
												"src": "359:77:2"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060325760003560e01c80630761c8b9146037578063948942ad146051575b600080fd5b603d606b565b604051604891906084565b60405180910390f35b60576071565b604051606291906084565b60405180910390f35b60025481565b60035481565b607e81609d565b82525050565b6000602082019050609760008301846077565b92915050565b600081905091905056fea2646970667358221220a2b3c0ecc3b69214d888c18a930393ba0e7f2f726c158416df0b9e67e686b12a64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761C8B9 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x948942AD EQ PUSH1 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x48 SWAP2 SWAP1 PUSH1 0x84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x57 PUSH1 0x71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x62 SWAP2 SWAP1 PUSH1 0x84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7E DUP2 PUSH1 0x9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x97 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xB3 0xC0 0xEC 0xC3 0xB6 SWAP3 EQ 0xD8 DUP9 0xC1 DUP11 SWAP4 SUB SWAP4 0xBA 0xE PUSH32 0x2F726C158416DF0B9E67E686B12A64736F6C6343000807003300000000000000 ",
							"sourceMap": "107:1673:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1116:38:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1349:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1116:38;;;;:::o;1349:33::-;;;;:::o;7:118:2:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;7:118;;:::o;131:222::-;224:4;262:2;251:9;247:18;239:26;;275:71;343:1;332:9;328:17;319:6;275:71;:::i;:::-;131:222;;;;:::o;359:77::-;396:7;425:5;414:16;;359:77;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "44200",
								"executionCost": "44305",
								"totalCost": "88505"
							},
							"external": {
								"tokenAmount_()": "2429",
								"tokenPrice_()": "2407"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 107,
									"end": 1780,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 107,
									"end": 1780,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 107,
									"end": 1780,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1145,
									"end": 1154,
									"name": "PUSH",
									"source": 1,
									"value": "2CB41780"
								},
								{
									"begin": 1116,
									"end": 1154,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1116,
									"end": 1154,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1376,
									"end": 1382,
									"name": "PUSH",
									"source": 1,
									"value": "186A0"
								},
								{
									"begin": 1349,
									"end": 1382,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1349,
									"end": 1382,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1780,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 107,
									"end": 1780,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 1780,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 107,
									"end": 1780,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 107,
									"end": 1780,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 107,
									"end": 1780,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 1780,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 1780,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 107,
									"end": 1780,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 107,
									"end": 1780,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 107,
									"end": 1780,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 107,
									"end": 1780,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 107,
									"end": 1780,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 1780,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 107,
									"end": 1780,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 1780,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 107,
									"end": 1780,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 1780,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a2b3c0ecc3b69214d888c18a930393ba0e7f2f726c158416df0b9e67e686b12a64736f6c63430008070033",
									".code": [
										{
											"begin": 107,
											"end": 1780,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "PUSH",
											"source": 0,
											"value": "761C8B9"
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "PUSH",
											"source": 0,
											"value": "948942AD"
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1780,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 112,
											"end": 117,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 89,
											"end": 92,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 82,
											"end": 119,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 224,
											"end": 228,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 251,
											"end": 260,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 247,
											"end": 265,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 239,
											"end": 265,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 265,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 328,
											"end": 345,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 131,
											"end": 353,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 131,
											"end": 353,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 131,
											"end": 353,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 131,
											"end": 353,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 396,
											"end": 403,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 414,
											"end": 430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 414,
											"end": 430,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 359,
											"end": 436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 359,
											"end": 436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 359,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 359,
											"end": 436,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"tokenAmount_()": "948942ad",
							"tokenPrice_()": "0761c8b9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"tokenAmount_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":\"modifireFunc\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":{\"keccak256\":\"0xa17b49413a248fc009de08a53e28b9e30a56b77d861b0ff6ef209b4ee9de6f9a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6e4cb7942dbd51df026110b335be263ad5ab4da3fd58c777b89b72d5e38b920f\",\"dweb:/ipfs/QmaDD68qAH8CtLZvERjYt3p1mg6iwrvhCQ2b5u5pXcfwoL\"]},\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":{\"keccak256\":\"0xea8efd41e9b10029637121123e94c0106e3164c790f18eb5cb7e938ce7f60005\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b0b229072dd849251d0d9da81ae6294a9f9438844cea581fcce6691fa16ba4bb\",\"dweb:/ipfs/QmNoSWRUbximeoyZQDbWTkAH9zSJZ5qyopyZk5o54x2aqa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 150,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "structUsers_",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(structUser)145_storage)"
							},
							{
								"astId": 156,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "allowed",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 159,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "tokenPrice_",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 162,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "tokenAmount_",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 181,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "structPhases_",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(structPhase)176_storage)"
							},
							{
								"astId": 199,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "strucApplications_",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(structApplication)194_storage)"
							},
							{
								"astId": 202,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "structApplicationsAmountAdr",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 205,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "whiteList",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 208,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "blackList",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(Role)129": {
								"encoding": "inplace",
								"label": "enum structures.Role",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(structApplication)194_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structApplication)",
								"numberOfBytes": "32",
								"value": "t_struct(structApplication)194_storage"
							},
							"t_mapping(t_address,t_struct(structPhase)176_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structPhase)",
								"numberOfBytes": "32",
								"value": "t_struct(structPhase)176_storage"
							},
							"t_mapping(t_address,t_struct(structUser)145_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structUser)",
								"numberOfBytes": "32",
								"value": "t_struct(structUser)145_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(structApplication)194_storage": {
								"encoding": "inplace",
								"label": "struct structures.structApplication",
								"members": [
									{
										"astId": 183,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 185,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "contactForCommunication",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 187,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "userAdr",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 189,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "status",
										"offset": 20,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 191,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "reviewed",
										"offset": 21,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 193,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "exist",
										"offset": 22,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(structPhase)176_storage": {
								"encoding": "inplace",
								"label": "struct structures.structPhase",
								"members": [
									{
										"astId": 173,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "statusPhase",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 175,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "reviewed",
										"offset": 1,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(structUser)145_storage": {
								"encoding": "inplace",
								"label": "struct structures.structUser",
								"members": [
									{
										"astId": 132,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "role",
										"offset": 0,
										"slot": "0",
										"type": "t_enum(Role)129"
									},
									{
										"astId": 134,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "login",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 136,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "password",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									},
									{
										"astId": 138,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "balance_overall",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 140,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "balance_seed",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 142,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "balance_private",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 144,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "balance_public",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol": {
				"structures": {
					"abi": [
						{
							"inputs": [],
							"name": "tokenAmount_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenPrice_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":72:3409  contract structures {\r... */\n  mstore(0x40, 0x80)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1145:1154  750000000 */\n  0x2cb41780\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1116:1154  uint256 public tokenPrice_ = 750000000 */\n  0x02\n  sstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1376:1382  100000 */\n  0x0186a0\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1349:1382  uint public tokenAmount_ = 100000 */\n  0x03\n  sstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":72:3409  contract structures {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":72:3409  contract structures {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0761c8b9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x948942ad\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1116:1154  uint256 public tokenPrice_ = 750000000 */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1349:1382  uint public tokenAmount_ = 100000 */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1116:1154  uint256 public tokenPrice_ = 750000000 */\n    tag_6:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1349:1382  uint public tokenAmount_ = 100000 */\n    tag_10:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:125   */\n    tag_13:\n        /* \"#utility.yul\":94:118   */\n      tag_15\n        /* \"#utility.yul\":112:117   */\n      dup2\n        /* \"#utility.yul\":94:118   */\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"#utility.yul\":89:92   */\n      dup3\n        /* \"#utility.yul\":82:119   */\n      mstore\n        /* \"#utility.yul\":7:125   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":131:353   */\n    tag_8:\n        /* \"#utility.yul\":224:228   */\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":251:260   */\n      dup3\n        /* \"#utility.yul\":247:265   */\n      add\n        /* \"#utility.yul\":239:265   */\n      swap1\n      pop\n        /* \"#utility.yul\":275:346   */\n      tag_18\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":332:341   */\n      dup4\n        /* \"#utility.yul\":328:345   */\n      add\n        /* \"#utility.yul\":319:325   */\n      dup5\n        /* \"#utility.yul\":275:346   */\n      tag_13\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":131:353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":359:436   */\n    tag_16:\n        /* \"#utility.yul\":396:403   */\n      0x00\n        /* \"#utility.yul\":425:430   */\n      dup2\n        /* \"#utility.yul\":414:430   */\n      swap1\n      pop\n        /* \"#utility.yul\":359:436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b070031024b8b8ecb5613f39b4c8b09a757b24f2315732ec220a40292e64c5ea64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052632cb41780600255620186a060035534801561001f57600080fd5b5060dd8061002e6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80630761c8b9146037578063948942ad146051575b600080fd5b603d606b565b604051604891906084565b60405180910390f35b60576071565b604051606291906084565b60405180910390f35b60025481565b60035481565b607e81609d565b82525050565b6000602082019050609760008301846077565b92915050565b600081905091905056fea2646970667358221220b070031024b8b8ecb5613f39b4c8b09a757b24f2315732ec220a40292e64c5ea64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH4 0x2CB41780 PUSH1 0x2 SSTORE PUSH3 0x186A0 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xDD DUP1 PUSH2 0x2E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761C8B9 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x948942AD EQ PUSH1 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x48 SWAP2 SWAP1 PUSH1 0x84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x57 PUSH1 0x71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x62 SWAP2 SWAP1 PUSH1 0x84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7E DUP2 PUSH1 0x9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x97 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 PUSH17 0x31024B8B8ECB5613F39B4C8B09A757B24 CALLCODE BALANCE JUMPI ORIGIN 0xEC 0x22 EXP BLOCKHASH 0x29 0x2E PUSH5 0xC5EA64736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "72:3337:1:-:0;;;1145:9;1116:38;;1376:6;1349:33;;72:3337;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@tokenAmount__162": {
									"entryPoint": 113,
									"id": 162,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenPrice__159": {
									"entryPoint": 107,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:439:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:2",
														"type": ""
													}
												],
												"src": "7:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "229:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "239:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "251:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "239:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "319:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "332:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "343:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "275:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "275:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "201:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "213:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "224:4:2",
														"type": ""
													}
												],
												"src": "131:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "404:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "414:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "425:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "414:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "386:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "396:7:2",
														"type": ""
													}
												],
												"src": "359:77:2"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060325760003560e01c80630761c8b9146037578063948942ad146051575b600080fd5b603d606b565b604051604891906084565b60405180910390f35b60576071565b604051606291906084565b60405180910390f35b60025481565b60035481565b607e81609d565b82525050565b6000602082019050609760008301846077565b92915050565b600081905091905056fea2646970667358221220b070031024b8b8ecb5613f39b4c8b09a757b24f2315732ec220a40292e64c5ea64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761C8B9 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x948942AD EQ PUSH1 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x48 SWAP2 SWAP1 PUSH1 0x84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x57 PUSH1 0x71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x62 SWAP2 SWAP1 PUSH1 0x84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7E DUP2 PUSH1 0x9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x97 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 PUSH17 0x31024B8B8ECB5613F39B4C8B09A757B24 CALLCODE BALANCE JUMPI ORIGIN 0xEC 0x22 EXP BLOCKHASH 0x29 0x2E PUSH5 0xC5EA64736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "72:3337:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1116:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1349:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1116:38;;;;:::o;1349:33::-;;;;:::o;7:118:2:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;7:118;;:::o;131:222::-;224:4;262:2;251:9;247:18;239:26;;275:71;343:1;332:9;328:17;319:6;275:71;:::i;:::-;131:222;;;;:::o;359:77::-;396:7;425:5;414:16;;359:77;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "44200",
								"executionCost": "44305",
								"totalCost": "88505"
							},
							"external": {
								"tokenAmount_()": "2429",
								"tokenPrice_()": "2407"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 72,
									"end": 3409,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1145,
									"end": 1154,
									"name": "PUSH",
									"source": 1,
									"value": "2CB41780"
								},
								{
									"begin": 1116,
									"end": 1154,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1116,
									"end": 1154,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1376,
									"end": 1382,
									"name": "PUSH",
									"source": 1,
									"value": "186A0"
								},
								{
									"begin": 1349,
									"end": 1382,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1349,
									"end": 1382,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b070031024b8b8ecb5613f39b4c8b09a757b24f2315732ec220a40292e64c5ea64736f6c63430008070033",
									".code": [
										{
											"begin": 72,
											"end": 3409,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "PUSH",
											"source": 1,
											"value": "761C8B9"
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "PUSH",
											"source": 1,
											"value": "948942AD"
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 112,
											"end": 117,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 89,
											"end": 92,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 82,
											"end": 119,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 224,
											"end": 228,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 251,
											"end": 260,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 247,
											"end": 265,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 239,
											"end": 265,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 265,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 328,
											"end": 345,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 131,
											"end": 353,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 131,
											"end": 353,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 131,
											"end": 353,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 131,
											"end": 353,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 396,
											"end": 403,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 414,
											"end": 430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 414,
											"end": 430,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 359,
											"end": 436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 359,
											"end": 436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 359,
											"end": 436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 359,
											"end": 436,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"tokenAmount_()": "948942ad",
							"tokenPrice_()": "0761c8b9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"tokenAmount_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":\"structures\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":{\"keccak256\":\"0xea8efd41e9b10029637121123e94c0106e3164c790f18eb5cb7e938ce7f60005\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b0b229072dd849251d0d9da81ae6294a9f9438844cea581fcce6691fa16ba4bb\",\"dweb:/ipfs/QmNoSWRUbximeoyZQDbWTkAH9zSJZ5qyopyZk5o54x2aqa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 150,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "structUsers_",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(structUser)145_storage)"
							},
							{
								"astId": 156,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "allowed",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 159,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "tokenPrice_",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 162,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "tokenAmount_",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 181,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "structPhases_",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(structPhase)176_storage)"
							},
							{
								"astId": 199,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "strucApplications_",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(structApplication)194_storage)"
							},
							{
								"astId": 202,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "structApplicationsAmountAdr",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 205,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "whiteList",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 208,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "blackList",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(Role)129": {
								"encoding": "inplace",
								"label": "enum structures.Role",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(structApplication)194_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structApplication)",
								"numberOfBytes": "32",
								"value": "t_struct(structApplication)194_storage"
							},
							"t_mapping(t_address,t_struct(structPhase)176_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structPhase)",
								"numberOfBytes": "32",
								"value": "t_struct(structPhase)176_storage"
							},
							"t_mapping(t_address,t_struct(structUser)145_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structUser)",
								"numberOfBytes": "32",
								"value": "t_struct(structUser)145_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(structApplication)194_storage": {
								"encoding": "inplace",
								"label": "struct structures.structApplication",
								"members": [
									{
										"astId": 183,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 185,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "contactForCommunication",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 187,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "userAdr",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 189,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "status",
										"offset": 20,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 191,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "reviewed",
										"offset": 21,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 193,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "exist",
										"offset": 22,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(structPhase)176_storage": {
								"encoding": "inplace",
								"label": "struct structures.structPhase",
								"members": [
									{
										"astId": 173,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "statusPhase",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 175,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "reviewed",
										"offset": 1,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(structUser)145_storage": {
								"encoding": "inplace",
								"label": "struct structures.structUser",
								"members": [
									{
										"astId": 132,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "role",
										"offset": 0,
										"slot": "0",
										"type": "t_enum(Role)129"
									},
									{
										"astId": 134,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "login",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 136,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "password",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									},
									{
										"astId": 138,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "balance_overall",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 140,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "balance_seed",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 142,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "balance_private",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 144,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "balance_public",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol": {
				"ast": {
					"absolutePath": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol",
					"exportedSymbols": {
						"modifireFunc": [
							121
						],
						"structures": [
							209
						]
					},
					"id": 122,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"absolutePath": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol",
							"file": "../lib/structures.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 122,
							"sourceUnit": 210,
							"src": "72:31:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "structures",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 209,
										"src": "132:10:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "132:10:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 121,
							"linearizedBaseContracts": [
								121,
								209
							],
							"name": "modifireFunc",
							"nameLocation": "116:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "268:108:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Role_$129",
																"typeString": "enum structures.Role"
															},
															"id": 14,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 7,
																		"name": "structUsers_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 150,
																		"src": "287:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$145_storage_$",
																			"typeString": "mapping(address => struct structures.structUser storage ref)"
																		}
																	},
																	"id": 10,
																	"indexExpression": {
																		"expression": {
																			"id": 8,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "300:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 9,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "300:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "287:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_structUser_$145_storage",
																		"typeString": "struct structures.structUser storage ref"
																	}
																},
																"id": 11,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "role",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 132,
																"src": "287:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$129",
																	"typeString": "enum structures.Role"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 12,
																	"name": "Role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "320:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Role_$129_$",
																		"typeString": "type(enum structures.Role)"
																	}
																},
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "SYSTEM_OWNER",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 124,
																"src": "320:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$129",
																	"typeString": "enum structures.Role"
																}
															},
															"src": "287:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7572206e6f742061646d696e",
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "339:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c",
																"typeString": "literal_string \"Your not admin\""
															},
															"value": "Your not admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c",
																"typeString": "literal_string \"Your not admin\""
															}
														],
														"id": 6,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "279:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "279:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 17,
												"nodeType": "ExpressionStatement",
												"src": "279:77:0"
											},
											{
												"id": 18,
												"nodeType": "PlaceholderStatement",
												"src": "367:1:0"
											}
										]
									},
									"id": 20,
									"name": "onlyOwner",
									"nameLocation": "255:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "265:2:0"
									},
									"src": "246:130:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "515:121:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Role_$129",
																"typeString": "enum structures.Role"
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 23,
																		"name": "structUsers_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 150,
																		"src": "534:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$145_storage_$",
																			"typeString": "mapping(address => struct structures.structUser storage ref)"
																		}
																	},
																	"id": 26,
																	"indexExpression": {
																		"expression": {
																			"id": 24,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "547:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 25,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "547:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "534:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_structUser_$145_storage",
																		"typeString": "struct structures.structUser storage ref"
																	}
																},
																"id": 27,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "role",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 132,
																"src": "534:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$129",
																	"typeString": "enum structures.Role"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 28,
																	"name": "Role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "567:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Role_$129_$",
																		"typeString": "type(enum structures.Role)"
																	}
																},
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "SYSTEM_PRIVATE",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 126,
																"src": "567:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$129",
																	"typeString": "enum structures.Role"
																}
															},
															"src": "534:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7572206e6f7420507269766174652070726f7669646572",
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "588:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad6ae5da5b217b421ac93ea0fbb3ab0e88f39844155489a92b15ef6af2ad2fc2",
																"typeString": "literal_string \"Your not Private provider\""
															},
															"value": "Your not Private provider"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad6ae5da5b217b421ac93ea0fbb3ab0e88f39844155489a92b15ef6af2ad2fc2",
																"typeString": "literal_string \"Your not Private provider\""
															}
														],
														"id": 22,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "526:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "526:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "526:90:0"
											},
											{
												"id": 34,
												"nodeType": "PlaceholderStatement",
												"src": "627:1:0"
											}
										]
									},
									"id": 36,
									"name": "onlyPrivateProvider",
									"nameLocation": "492:19:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:2:0"
									},
									"src": "483:153:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "774:120:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Role_$129",
																"typeString": "enum structures.Role"
															},
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 39,
																		"name": "structUsers_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 150,
																		"src": "793:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$145_storage_$",
																			"typeString": "mapping(address => struct structures.structUser storage ref)"
																		}
																	},
																	"id": 42,
																	"indexExpression": {
																		"expression": {
																			"id": 40,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "806:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 41,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "806:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "793:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_structUser_$145_storage",
																		"typeString": "struct structures.structUser storage ref"
																	}
																},
																"id": 43,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "role",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 132,
																"src": "793:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$129",
																	"typeString": "enum structures.Role"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 44,
																	"name": "Role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "826:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Role_$129_$",
																		"typeString": "type(enum structures.Role)"
																	}
																},
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "SYSTEM_PUBLIC",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 125,
																"src": "826:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$129",
																	"typeString": "enum structures.Role"
																}
															},
															"src": "793:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7572206e6f7420507269766174652070726f7669646572",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "846:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad6ae5da5b217b421ac93ea0fbb3ab0e88f39844155489a92b15ef6af2ad2fc2",
																"typeString": "literal_string \"Your not Private provider\""
															},
															"value": "Your not Private provider"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad6ae5da5b217b421ac93ea0fbb3ab0e88f39844155489a92b15ef6af2ad2fc2",
																"typeString": "literal_string \"Your not Private provider\""
															}
														],
														"id": 38,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "785:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "785:89:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "785:89:0"
											},
											{
												"id": 50,
												"nodeType": "PlaceholderStatement",
												"src": "885:1:0"
											}
										]
									},
									"id": 52,
									"name": "onlyPublicProvider",
									"nameLocation": "752:18:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:0"
									},
									"src": "743:151:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "1065:191:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Role_$129",
																	"typeString": "enum structures.Role"
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 55,
																			"name": "structUsers_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 150,
																			"src": "1084:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$145_storage_$",
																				"typeString": "mapping(address => struct structures.structUser storage ref)"
																			}
																		},
																		"id": 58,
																		"indexExpression": {
																			"expression": {
																				"id": 56,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1097:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 57,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1097:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1084:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_structUser_$145_storage",
																			"typeString": "struct structures.structUser storage ref"
																		}
																	},
																	"id": 59,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "role",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 132,
																	"src": "1084:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$129",
																		"typeString": "enum structures.Role"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 60,
																		"name": "Role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 129,
																		"src": "1117:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Role_$129_$",
																			"typeString": "type(enum structures.Role)"
																		}
																	},
																	"id": 61,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "SYSTEM_OWNER",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 124,
																	"src": "1117:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$129",
																		"typeString": "enum structures.Role"
																	}
																},
																"src": "1084:50:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Role_$129",
																	"typeString": "enum structures.Role"
																},
																"id": 70,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 63,
																			"name": "structUsers_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 150,
																			"src": "1138:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$145_storage_$",
																				"typeString": "mapping(address => struct structures.structUser storage ref)"
																			}
																		},
																		"id": 66,
																		"indexExpression": {
																			"expression": {
																				"id": 64,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1151:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 65,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1151:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1138:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_structUser_$145_storage",
																			"typeString": "struct structures.structUser storage ref"
																		}
																	},
																	"id": 67,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "role",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 132,
																	"src": "1138:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$129",
																		"typeString": "enum structures.Role"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 68,
																		"name": "Role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 129,
																		"src": "1171:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Role_$129_$",
																			"typeString": "type(enum structures.Role)"
																		}
																	},
																	"id": 69,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "SYSTEM_PRIVATE",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 126,
																	"src": "1171:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$129",
																		"typeString": "enum structures.Role"
																	}
																},
																"src": "1138:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1084:106:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420746865206f776e6572206f7220707269766174652070726f7669646572",
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1192:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9",
																"typeString": "literal_string \"You are not the owner or private provider\""
															},
															"value": "You are not the owner or private provider"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9",
																"typeString": "literal_string \"You are not the owner or private provider\""
															}
														],
														"id": 54,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1076:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1076:160:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "1076:160:0"
											},
											{
												"id": 75,
												"nodeType": "PlaceholderStatement",
												"src": "1247:1:0"
											}
										]
									},
									"id": 77,
									"name": "onlyOwnerAndPrivateProvider",
									"nameLocation": "1034:27:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1062:2:0"
									},
									"src": "1025:231:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "1409:368:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 96,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_enum$_Role_$129",
																			"typeString": "enum structures.Role"
																		},
																		"id": 87,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 80,
																					"name": "structUsers_",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 150,
																					"src": "1442:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$145_storage_$",
																						"typeString": "mapping(address => struct structures.structUser storage ref)"
																					}
																				},
																				"id": 83,
																				"indexExpression": {
																					"expression": {
																						"id": 81,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "1455:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 82,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "1455:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1442:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_structUser_$145_storage",
																					"typeString": "struct structures.structUser storage ref"
																				}
																			},
																			"id": 84,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "role",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 132,
																			"src": "1442:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Role_$129",
																				"typeString": "enum structures.Role"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 85,
																				"name": "Role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 129,
																				"src": "1475:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_Role_$129_$",
																					"typeString": "type(enum structures.Role)"
																				}
																			},
																			"id": 86,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "SYSTEM_OWNER",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 124,
																			"src": "1475:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Role_$129",
																				"typeString": "enum structures.Role"
																			}
																		},
																		"src": "1442:50:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_enum$_Role_$129",
																			"typeString": "enum structures.Role"
																		},
																		"id": 95,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 88,
																					"name": "structUsers_",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 150,
																					"src": "1509:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$145_storage_$",
																						"typeString": "mapping(address => struct structures.structUser storage ref)"
																					}
																				},
																				"id": 91,
																				"indexExpression": {
																					"expression": {
																						"id": 89,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "1522:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 90,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "1522:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1509:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_structUser_$145_storage",
																					"typeString": "struct structures.structUser storage ref"
																				}
																			},
																			"id": 92,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "role",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 132,
																			"src": "1509:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Role_$129",
																				"typeString": "enum structures.Role"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 93,
																				"name": "Role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 129,
																				"src": "1542:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_Role_$129_$",
																					"typeString": "type(enum structures.Role)"
																				}
																			},
																			"id": 94,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "SYSTEM_PUBLIC",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 125,
																			"src": "1542:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Role_$129",
																				"typeString": "enum structures.Role"
																			}
																		},
																		"src": "1509:51:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "1442:118:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_Role_$129",
																		"typeString": "enum structures.Role"
																	},
																	"id": 104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 97,
																				"name": "structUsers_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 150,
																				"src": "1577:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$145_storage_$",
																					"typeString": "mapping(address => struct structures.structUser storage ref)"
																				}
																			},
																			"id": 100,
																			"indexExpression": {
																				"expression": {
																					"id": 98,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "1590:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 99,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "1590:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1577:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_structUser_$145_storage",
																				"typeString": "struct structures.structUser storage ref"
																			}
																		},
																		"id": 101,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "role",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 132,
																		"src": "1577:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Role_$129",
																			"typeString": "enum structures.Role"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"expression": {
																			"id": 102,
																			"name": "Role",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 129,
																			"src": "1610:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_Role_$129_$",
																				"typeString": "type(enum structures.Role)"
																			}
																		},
																		"id": 103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "SYSTEM_PRIVATE",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 126,
																		"src": "1610:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Role_$129",
																			"typeString": "enum structures.Role"
																		}
																	},
																	"src": "1577:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1442:187:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Role_$129",
																	"typeString": "enum structures.Role"
																},
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 106,
																			"name": "structUsers_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 150,
																			"src": "1646:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$145_storage_$",
																				"typeString": "mapping(address => struct structures.structUser storage ref)"
																			}
																		},
																		"id": 109,
																		"indexExpression": {
																			"expression": {
																				"id": 107,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1659:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1659:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1646:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_structUser_$145_storage",
																			"typeString": "struct structures.structUser storage ref"
																		}
																	},
																	"id": 110,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "role",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 132,
																	"src": "1646:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$129",
																		"typeString": "enum structures.Role"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"expression": {
																		"id": 111,
																		"name": "Role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 129,
																		"src": "1679:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Role_$129_$",
																			"typeString": "type(enum structures.Role)"
																		}
																	},
																	"id": 112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "INVESTOR",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 127,
																	"src": "1679:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$129",
																		"typeString": "enum structures.Role"
																	}
																},
																"src": "1646:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1442:250:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4170706c69636174696f6e2063616e206f6e6c79206265207375626d697474656420627920726567756c6172207573657273",
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1694:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8eee8f3e1b78fc84a03ad9368aed0f5d5ffbe790cbbf5be7c05b10e873c56608",
																"typeString": "literal_string \"Application can only be submitted by regular users\""
															},
															"value": "Application can only be submitted by regular users"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8eee8f3e1b78fc84a03ad9368aed0f5d5ffbe790cbbf5be7c05b10e873c56608",
																"typeString": "literal_string \"Application can only be submitted by regular users\""
															}
														],
														"id": 79,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1420:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1420:337:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "1420:337:0"
											},
											{
												"id": 118,
												"nodeType": "PlaceholderStatement",
												"src": "1768:1:0"
											}
										]
									},
									"id": 120,
									"name": "onlyUser",
									"nameLocation": "1397:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1406:2:0"
									},
									"src": "1388:389:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 122,
							"src": "107:1673:0",
							"usedErrors": []
						}
					],
					"src": "37:1743:0"
				},
				"id": 0
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol": {
				"ast": {
					"absolutePath": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol",
					"exportedSymbols": {
						"structures": [
							209
						]
					},
					"id": 210,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 123,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 209,
							"linearizedBaseContracts": [
								209
							],
							"name": "structures",
							"nameLocation": "81:10:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "structures.Role",
									"id": 129,
									"members": [
										{
											"id": 124,
											"name": "SYSTEM_OWNER",
											"nameLocation": "200:12:1",
											"nodeType": "EnumValue",
											"src": "200:12:1"
										},
										{
											"id": 125,
											"name": "SYSTEM_PUBLIC",
											"nameLocation": "223:13:1",
											"nodeType": "EnumValue",
											"src": "223:13:1"
										},
										{
											"id": 126,
											"name": "SYSTEM_PRIVATE",
											"nameLocation": "247:14:1",
											"nodeType": "EnumValue",
											"src": "247:14:1"
										},
										{
											"id": 127,
											"name": "INVESTOR",
											"nameLocation": "272:8:1",
											"nodeType": "EnumValue",
											"src": "272:8:1"
										},
										{
											"id": 128,
											"name": "USER",
											"nameLocation": "291:4:1",
											"nodeType": "EnumValue",
											"src": "291:4:1"
										}
									],
									"name": "Role",
									"nameLocation": "184:4:1",
									"nodeType": "EnumDefinition",
									"src": "179:123:1"
								},
								{
									"canonicalName": "structures.structUser",
									"id": 145,
									"members": [
										{
											"constant": false,
											"id": 132,
											"mutability": "mutable",
											"name": "role",
											"nameLocation": "416:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 145,
											"src": "411:9:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_Role_$129",
												"typeString": "enum structures.Role"
											},
											"typeName": {
												"id": 131,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 130,
													"name": "Role",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 129,
													"src": "411:4:1"
												},
												"referencedDeclaration": 129,
												"src": "411:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Role_$129",
													"typeString": "enum structures.Role"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 134,
											"mutability": "mutable",
											"name": "login",
											"nameLocation": "466:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 145,
											"src": "459:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 133,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "459:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 136,
											"mutability": "mutable",
											"name": "password",
											"nameLocation": "515:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 145,
											"src": "507:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 135,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "507:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 138,
											"mutability": "mutable",
											"name": "balance_overall",
											"nameLocation": "565:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 145,
											"src": "557:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 137,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "557:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 140,
											"mutability": "mutable",
											"name": "balance_seed",
											"nameLocation": "626:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 145,
											"src": "618:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 139,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "618:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 142,
											"mutability": "mutable",
											"name": "balance_private",
											"nameLocation": "696:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 145,
											"src": "688:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 141,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "688:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 144,
											"mutability": "mutable",
											"name": "balance_public",
											"nameLocation": "769:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 145,
											"src": "761:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 143,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "761:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "structUser",
									"nameLocation": "389:10:1",
									"nodeType": "StructDefinition",
									"scope": 209,
									"src": "382:448:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 150,
									"mutability": "mutable",
									"name": "structUsers_",
									"nameLocation": "868:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 209,
									"src": "836:44:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$145_storage_$",
										"typeString": "mapping(address => struct structures.structUser)"
									},
									"typeName": {
										"id": 149,
										"keyType": {
											"id": 146,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "845:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "836:31:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$145_storage_$",
											"typeString": "mapping(address => struct structures.structUser)"
										},
										"valueType": {
											"id": 148,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 147,
												"name": "structUser",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 145,
												"src": "856:10:1"
											},
											"referencedDeclaration": 145,
											"src": "856:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_structUser_$145_storage_ptr",
												"typeString": "struct structures.structUser"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 156,
									"mutability": "mutable",
									"name": "allowed",
									"nameLocation": "1000:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 209,
									"src": "951:56:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 155,
										"keyType": {
											"id": 151,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "959:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "951:48:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 154,
											"keyType": {
												"id": 152,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "979:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "970:28:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 153,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "990:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "0761c8b9",
									"id": 159,
									"mutability": "mutable",
									"name": "tokenPrice_",
									"nameLocation": "1131:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 209,
									"src": "1116:38:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 157,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1116:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "373530303030303030",
										"id": 158,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1145:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_750000000_by_1",
											"typeString": "int_const 750000000"
										},
										"value": "750000000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "948942ad",
									"id": 162,
									"mutability": "mutable",
									"name": "tokenAmount_",
									"nameLocation": "1361:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 209,
									"src": "1349:33:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 160,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1349:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030303030",
										"id": 161,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1376:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000_by_1",
											"typeString": "int_const 100000"
										},
										"value": "100000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 165,
									"mutability": "constant",
									"name": "ownerAdr",
									"nameLocation": "1625:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 209,
									"src": "1608:70:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 163,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1608:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307835423338446136613730316335363835343564436663423033466342383735663536626564644334",
										"id": 164,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1636:42:1",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x5B38Da6a701c568545dCfcB03FcB875f56beddC4"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 168,
									"mutability": "constant",
									"name": "privateProviderAdr",
									"nameLocation": "1732:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 209,
									"src": "1715:80:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 166,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1715:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307841623834383346363464394336643145634639623834394165363737644433333135383335636232",
										"id": 167,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1753:42:1",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 171,
									"mutability": "constant",
									"name": "publicProviderAdr",
									"nameLocation": "1849:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 209,
									"src": "1832:79:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 169,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1832:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307834423230393933426334383131373765633745386635373163654361453841396532324330326462",
										"id": 170,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1869:42:1",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "structures.structPhase",
									"id": 176,
									"members": [
										{
											"constant": false,
											"id": 173,
											"mutability": "mutable",
											"name": "statusPhase",
											"nameLocation": "2038:11:1",
											"nodeType": "VariableDeclaration",
											"scope": 176,
											"src": "2033:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 172,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2033:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 175,
											"mutability": "mutable",
											"name": "reviewed",
											"nameLocation": "2090:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 176,
											"src": "2085:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 174,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2085:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "structPhase",
									"nameLocation": "2010:11:1",
									"nodeType": "StructDefinition",
									"scope": 209,
									"src": "2003:157:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 181,
									"mutability": "mutable",
									"name": "structPhases_",
									"nameLocation": "2199:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 209,
									"src": "2166:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structPhase_$176_storage_$",
										"typeString": "mapping(address => struct structures.structPhase)"
									},
									"typeName": {
										"id": 180,
										"keyType": {
											"id": 177,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2175:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2166:32:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structPhase_$176_storage_$",
											"typeString": "mapping(address => struct structures.structPhase)"
										},
										"valueType": {
											"id": 179,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 178,
												"name": "structPhase",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 176,
												"src": "2186:11:1"
											},
											"referencedDeclaration": 176,
											"src": "2186:11:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_structPhase_$176_storage_ptr",
												"typeString": "struct structures.structPhase"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "structures.structApplication",
									"id": 194,
									"members": [
										{
											"constant": false,
											"id": 183,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "2412:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 194,
											"src": "2405:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 182,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2405:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 185,
											"mutability": "mutable",
											"name": "contactForCommunication",
											"nameLocation": "2463:23:1",
											"nodeType": "VariableDeclaration",
											"scope": 194,
											"src": "2456:30:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 184,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2456:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 187,
											"mutability": "mutable",
											"name": "userAdr",
											"nameLocation": "2543:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 194,
											"src": "2535:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 186,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2535:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 189,
											"mutability": "mutable",
											"name": "status",
											"nameLocation": "2620:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 194,
											"src": "2615:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 188,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2615:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 191,
											"mutability": "mutable",
											"name": "reviewed",
											"nameLocation": "2690:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 194,
											"src": "2685:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 190,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2685:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 193,
											"mutability": "mutable",
											"name": "exist",
											"nameLocation": "2784:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 194,
											"src": "2779:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 192,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2779:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "structApplication",
									"nameLocation": "2376:17:1",
									"nodeType": "StructDefinition",
									"scope": 209,
									"src": "2369:485:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 199,
									"mutability": "mutable",
									"name": "strucApplications_",
									"nameLocation": "2899:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 209,
									"src": "2860:57:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structApplication_$194_storage_$",
										"typeString": "mapping(address => struct structures.structApplication)"
									},
									"typeName": {
										"id": 198,
										"keyType": {
											"id": 195,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2869:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2860:38:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structApplication_$194_storage_$",
											"typeString": "mapping(address => struct structures.structApplication)"
										},
										"valueType": {
											"id": 197,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 196,
												"name": "structApplication",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 194,
												"src": "2880:17:1"
											},
											"referencedDeclaration": 194,
											"src": "2880:17:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_structApplication_$194_storage_ptr",
												"typeString": "struct structures.structApplication"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 202,
									"mutability": "mutable",
									"name": "structApplicationsAmountAdr",
									"nameLocation": "2998:27:1",
									"nodeType": "VariableDeclaration",
									"scope": 209,
									"src": "2988:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 200,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2988:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 201,
										"nodeType": "ArrayTypeName",
										"src": "2988:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 205,
									"mutability": "mutable",
									"name": "whiteList",
									"nameLocation": "3142:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 209,
									"src": "3132:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 203,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3132:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 204,
										"nodeType": "ArrayTypeName",
										"src": "3132:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 208,
									"mutability": "mutable",
									"name": "blackList",
									"nameLocation": "3304:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 209,
									"src": "3294:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 206,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3294:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 207,
										"nodeType": "ArrayTypeName",
										"src": "3294:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								}
							],
							"scope": 210,
							"src": "72:3337:1",
							"usedErrors": []
						}
					],
					"src": "37:3372:1"
				},
				"id": 1
			}
		}
	}
}