{
	"id": "93d5f0c38b7f1c8a08ccc79078ed637f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nimport \"./modifireFunc.sol\";\r\n\r\ncontract helpresFunc is modifireFunc {\r\n\r\n    // COMMENT_FUNC: Получения хэш-пароля.\r\n    function get_keccak256(string memory _hash) public pure returns(bytes32) {\r\n            return(keccak256(abi.encodePacked(_hash)));\r\n    }\r\n\r\n    // COMMENT_FUNC: Получение белого списка.\r\n    function get_whiteList() public onlyOwnerAndPrivateProvider view returns (address[] memory) {\r\n        return(whiteList);\r\n    }\r\n\r\n    // COMMENT_FUNC: Получение черного списка.\r\n    function get_blackList() public onlyOwner view returns (address[] memory) {\r\n        return(blackList);\r\n    }\r\n\r\n    // COMMENT_FUNC: Функция вернет текущий баланс SEED токенов.\r\n    function getBalanceSeedToken (address _userAdr) public view returns (uint256) {\r\n        return structUsers_[_userAdr].balance_seed;\r\n    }\r\n\r\n    // COMMENT_FUNC: Функция вернет текущий баланс PRIVATE токенов.\r\n    function getBalancePrivateToken (address _userAdr) public view returns (uint256) {\r\n        return structUsers_[_userAdr].balance_private;\r\n    }\r\n\r\n    // COMMENT_FUNC: Функция вернет текущий баланс PUBLIC токенов.\r\n    function getBalancePublicToken (address _userAdr) public view returns (uint256) {\r\n        return structUsers_[_userAdr].balance_public;\r\n    }\r\n\r\n    // COMMENT_FUNC: Функция вернет текущий баланс эфиров.\r\n    function getBalanceEth(address adr) public view returns(uint256) {\r\n        return address(adr).balance;\r\n    }\r\n}"
			},
			"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nimport \"../lib/structures.sol\";\r\n\r\ncontract modifireFunc is structures {\r\n    \r\n    // COMMENT_MOD: Модификатор проверка роли ВЛАДЕЛЬЦА.\r\n    modifier onlyOwner () {\r\n        require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER, \"Your not admin\");\r\n        _;\r\n    }\r\n\r\n    // COMMENT_MOD: Модификатор проверка роли PRIVAT ПРОВАЙДЕРА.\r\n    modifier onlyPrivateProvider () {\r\n        require(structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"Your not Private provider\");\r\n        _;\r\n    }\r\n\r\n    // COMMENT_MOD: Модификатор проверка роли PRIVAT ПРОВАЙДЕРА.\r\n    modifier onlyPublicProvider () {\r\n        require(structUsers_[msg.sender].role == Role.SYSTEM_PUBLIC, \"Your not Public provider\");\r\n        _;\r\n    }\r\n\r\n    // COMMENT_MOD: Модификатор проверки роли ВЛАДЕЛЬЦ или PRIVAT ПРОВАЙДЕРА.\r\n    modifier onlyOwnerAndPrivateProvider () {\r\n        require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER || structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"You are not the owner or private provider\");\r\n        _;\r\n    }\r\n\r\n    // COMMENT_MOD: Модификатор проверка того, что пользователь обычный user.\r\n    modifier onlyUser () {\r\n        require(\r\n            structUsers_[msg.sender].role != Role.SYSTEM_OWNER ||\r\n            structUsers_[msg.sender].role != Role.SYSTEM_PUBLIC ||\r\n            structUsers_[msg.sender].role != Role.SYSTEM_PRIVATE ||\r\n            structUsers_[msg.sender].role != Role.INVESTOR, \"Application can only be submitted by regular users\"\r\n        );\r\n        _;\r\n    }\r\n}"
			},
			"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\ncontract structures {\r\n    // COMMENT: Роли для структуры пользователей.\r\n    enum Role {\r\n        SYSTEM_OWNER,\r\n        SYSTEM_PUBLIC,\r\n        SYSTEM_PRIVATE,\r\n        INVESTOR,\r\n        USER\r\n    }\r\n\r\n    // COMMENT_SCTRUCT: Структура пользователей.\r\n    struct structUser {\r\n        Role role;               // роль  \r\n        string login;            // логин\r\n        bytes32 password;        // пароль\r\n        uint256 balance_overall; // общий баланс\r\n        uint256 balance_seed;    // баланс SEED токенов\r\n        uint256 balance_private; // баланс PRIVATE токенов\r\n        uint256 balance_public;  // баланс PUBLIC токенов\r\n    }\r\n    mapping (address => structUser) public structUsers_; // обращение к структуре по АДРЕСАМ\r\n    mapping(address => mapping (address => uint256)) allowed; // делегированные пользоатели\r\n\r\n    // COMMENT: Цена за 1 токен.\r\n    uint256 public tokenPrice_ = 750000000; // 1 токен за 0.00075 ETH => 750000000; 0.001ETH => 1000000000 WEI; 0.002 => 2000000000 WEI | ЗНАЧЕНИЕ УКАЗЫВАЕТСЯ В WEI\r\n    \r\n    // COMMENT: Ограничение цены токена.\r\n    uint public tokenAmount_ = 100000; // кол-во, которое может купить токенов пользователь | private = 100 000 CMON; public = 5 000 CMON\r\n\r\n    // COMMENT: Набор начальних пользователей. \r\n    address constant ownerAdr = 0x8E4c24e134908f2334aeF88556Fc1Daaa075A56c;           // ВЛАДЕЛЕЦ\r\n    address constant privateProviderAdr = 0x4490cf36A8A491800B35140A07b4190b533fFcBf; // PRIVATE ПРОВАЙДЕР\r\n    address constant publicProviderAdr = 0x9699f352bA7A92E7C0Ff6924ED99602cddBA38dB;  // PUBLIC ПРОВАЙДЕР\r\n\r\n    // COMMENT_SCTRUC: Структура фазы.\r\n    struct structPhase {\r\n        bool statusPhase; // статус фазы\r\n        bool reviewed;    // была ли активирована фаза\r\n    }\r\n    mapping (address => structPhase) structPhases_; // обращение к структуре по АДРЕСАМ\r\n\r\n    // COMMENT_STRUCT: Структура заявок пользователей.\r\n    struct structApplication {\r\n        string name;                    // имя\r\n        string contactForCommunication; // контакты для связи\r\n        address userAdr;                // адрес пользователя\r\n        bool status;                    // статус заявки\r\n        bool exist;                     // заявка существует\r\n    }\r\n    mapping (address => structApplication) strucApplications_; // обращение к структуре по АДРЕСАМ\r\n    address[]  structApplicationsAmountAdr;                     // массив пользователей, подавших заявление\r\n    address[] public whiteList;                                       // белый лист прользователей, которым одобрили заявки\r\n    address[] public blackList;                                       // черный лист полльзователей\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol": {
				"helpresFunc": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "blackList",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "adr",
									"type": "address"
								}
							],
							"name": "getBalanceEth",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAdr",
									"type": "address"
								}
							],
							"name": "getBalancePrivateToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAdr",
									"type": "address"
								}
							],
							"name": "getBalancePublicToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAdr",
									"type": "address"
								}
							],
							"name": "getBalanceSeedToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_blackList",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_hash",
									"type": "string"
								}
							],
							"name": "get_keccak256",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_whiteList",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "structUsers_",
							"outputs": [
								{
									"internalType": "enum structures.Role",
									"name": "role",
									"type": "uint8"
								},
								{
									"internalType": "string",
									"name": "login",
									"type": "string"
								},
								{
									"internalType": "bytes32",
									"name": "password",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "balance_overall",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balance_seed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balance_private",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balance_public",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAmount_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenPrice_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "whiteList",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":104:1709  contract helpresFunc is modifireFunc {\r... */\n  mstore(0x40, 0x80)\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1152:1161  750000000 */\n  0x2cb41780\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1123:1161  uint256 public tokenPrice_ = 750000000 */\n  0x02\n  sstore\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1412:1418  100000 */\n  0x0186a0\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1385:1418  uint public tokenAmount_ = 100000 */\n  0x03\n  sstore\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":104:1709  contract helpresFunc is modifireFunc {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":104:1709  contract helpresFunc is modifireFunc {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0761c8b9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2599d6d0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5c475d42\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x709ec8b4\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x72f0d72b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x7f89128f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8e4f8c6b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x948942ad\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x99067ede\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xb06cdc12\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xc10e3911\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xfc837259\n      eq\n      tag_14\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1123:1161  uint256 public tokenPrice_ = 750000000 */\n    tag_3:\n      tag_15\n      sload(0x02)\n      dup2\n      jump\n    tag_15:\n      mload(0x40)\n        /* \"#utility.yul\":2715:2740   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2703:2705   */\n      0x20\n        /* \"#utility.yul\":2688:2706   */\n      add\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1123:1161  uint256 public tokenPrice_ = 750000000 */\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":849:988  function getBalanceSeedToken (address _userAdr) public view returns (uint256) {\r... */\n    tag_4:\n      tag_15\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":945:967  structUsers_[_userAdr] */\n      and\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":918:925  uint256 */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":945:967  structUsers_[_userAdr] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":945:980  structUsers_[_userAdr].balance_seed */\n      0x04\n      add\n      sload\n      swap1\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":849:988  function getBalanceSeedToken (address _userAdr) public view returns (uint256) {\r... */\n      jump\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":3075:3101  address[] public whiteList */\n    tag_5:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1862:1894   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1844:1895   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1832:1834   */\n      0x20\n        /* \"#utility.yul\":1817:1835   */\n      add\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":3075:3101  address[] public whiteList */\n      tag_17\n        /* \"#utility.yul\":1698:1901   */\n      jump\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":3244:3270  address[] public blackList */\n    tag_6:\n      tag_24\n      tag_31\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1352:1495  function getBalancePublicToken (address _userAdr) public view returns (uint256) {\r... */\n    tag_7:\n      tag_15\n      tag_35\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_35:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1450:1472  structUsers_[_userAdr] */\n      and\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1423:1430  uint256 */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1450:1472  structUsers_[_userAdr] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1450:1487  structUsers_[_userAdr].balance_public */\n      0x06\n      add\n      sload\n      swap1\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1352:1495  function getBalancePublicToken (address _userAdr) public view returns (uint256) {\r... */\n      jump\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":632:742  function get_blackList() public onlyOwner view returns (address[] memory) {\r... */\n    tag_8:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":212:350  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n    tag_9:\n      tag_15\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1385:1418  uint public tokenAmount_ = 100000 */\n    tag_10:\n      tag_15\n      sload(0x03)\n      dup2\n      jump\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1595:1706  function getBalanceEth(address adr) public view returns(uint256) {\r... */\n    tag_11:\n      tag_15\n      tag_52\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1678:1698  address(adr).balance */\n      and\n      balance\n      swap1\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1595:1706  function getBalanceEth(address adr) public view returns(uint256) {\r... */\n      jump\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1098:1243  function getBalancePrivateToken (address _userAdr) public view returns (uint256) {\r... */\n    tag_12:\n      tag_15\n      tag_56\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_56:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1197:1219  structUsers_[_userAdr] */\n      and\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1170:1177  uint256 */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1197:1219  structUsers_[_userAdr] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1197:1235  structUsers_[_userAdr].balance_private */\n      0x05\n      add\n      sload\n      swap1\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1098:1243  function getBalancePrivateToken (address _userAdr) public view returns (uint256) {\r... */\n      jump\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":426:554  function get_whiteList() public onlyOwnerAndPrivateProvider view returns (address[] memory) {\r... */\n    tag_13:\n      tag_38\n      tag_60\n      jump\t// in\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":836:887  mapping (address => structUser) public structUsers_ */\n    tag_14:\n      tag_62\n      tag_63\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_17\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":3075:3101  address[] public whiteList */\n    tag_27:\n      0x07\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":3244:3270  address[] public blackList */\n    tag_32:\n      0x08\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":632:742  function get_blackList() public onlyOwner view returns (address[] memory) {\r... */\n    tag_39:\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":688:704  address[] memory */\n      0x60\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":320:337  Role.SYSTEM_OWNER */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":300:310  msg.sender */\n      caller\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":287:299  structUsers_ */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":287:311  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":287:316  structUsers_[msg.sender].role */\n      sload\n      0xff\n      and\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":287:337  structUsers_[msg.sender].role == Role.SYSTEM_OWNER */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_78\n      jumpi\n      tag_78\n      tag_76\n      jump\t// in\n    tag_78:\n      eq\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":279:356  require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER, \"Your not admin\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4363:4365   */\n      0x20\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":279:356  require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER, \"Your not admin\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4345:4366   */\n      mstore\n        /* \"#utility.yul\":4402:4404   */\n      0x0e\n        /* \"#utility.yul\":4382:4400   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4375:4405   */\n      mstore\n      shl(0x91, 0x2cb7bab9103737ba1030b236b4b7)\n        /* \"#utility.yul\":4421:4439   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4414:4458   */\n      mstore\n        /* \"#utility.yul\":4475:4493   */\n      0x64\n      add\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":279:356  require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER, \"Your not admin\") */\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":724:733  blackList */\n      0x08\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":717:734  return(blackList) */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_84:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_84\n      jumpi\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":632:742  function get_blackList() public onlyOwner view returns (address[] memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":212:350  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n    tag_45:\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":276:283  bytes32 */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":334:339  _hash */\n      dup2\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":317:340  abi.encodePacked(_hash) */\n      add(0x20, mload(0x40))\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":307:341  keccak256(abi.encodePacked(_hash)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":300:342  return(keccak256(abi.encodePacked(_hash))) */\n      swap1\n      pop\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":212:350  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":426:554  function get_whiteList() public onlyOwnerAndPrivateProvider view returns (address[] memory) {\r... */\n    tag_60:\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":500:516  address[] memory */\n      0x60\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1116:1133  Role.SYSTEM_OWNER */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1096:1106  msg.sender */\n      caller\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1083:1095  structUsers_ */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1083:1107  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1083:1112  structUsers_[msg.sender].role */\n      sload\n      0xff\n      and\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1083:1133  structUsers_[msg.sender].role == Role.SYSTEM_OWNER */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_94\n      jumpi\n      tag_94\n      tag_76\n      jump\t// in\n    tag_94:\n      eq\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1083:1189  structUsers_[msg.sender].role == Role.SYSTEM_OWNER || structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE */\n      dup1\n      tag_95\n      jumpi\n      pop\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1170:1189  Role.SYSTEM_PRIVATE */\n      0x02\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1150:1160  msg.sender */\n      caller\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1137:1149  structUsers_ */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1137:1161  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1137:1166  structUsers_[msg.sender].role */\n      sload\n      0xff\n      and\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1137:1189  structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_99\n      jumpi\n      tag_99\n      tag_76\n      jump\t// in\n    tag_99:\n      eq\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1083:1189  structUsers_[msg.sender].role == Role.SYSTEM_OWNER || structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE */\n    tag_95:\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1075:1235  require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER || structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"You are not the owner or private provider\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3953:3955   */\n      0x20\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1075:1235  require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER || structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"You are not the owner or private provider\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3935:3956   */\n      mstore\n        /* \"#utility.yul\":3992:3994   */\n      0x29\n        /* \"#utility.yul\":3972:3990   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3965:3995   */\n      mstore\n        /* \"#utility.yul\":4031:4065   */\n      0x596f7520617265206e6f7420746865206f776e6572206f722070726976617465\n        /* \"#utility.yul\":4011:4029   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4004:4066   */\n      mstore\n      shl(0xb9, 0x10383937bb34b232b9)\n        /* \"#utility.yul\":4082:4100   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4075:4114   */\n      mstore\n        /* \"#utility.yul\":4131:4150   */\n      0x84\n      add\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1075:1235  require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER || structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"You are not the owner or private provider\") */\n      tag_80\n        /* \"#utility.yul\":3751:4156   */\n      jump\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1075:1235  require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER || structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"You are not the owner or private provider\") */\n    tag_100:\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":536:545  whiteList */\n      0x07\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":529:546  return(whiteList) */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_84\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":426:554  function get_whiteList() public onlyOwnerAndPrivateProvider view returns (address[] memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":836:887  mapping (address => structUser) public structUsers_ */\n    tag_64:\n      0x00\n      0x20\n      dup2\n      swap1\n      mstore\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      0xff\n      swap1\n      swap3\n      and\n      swap3\n      swap2\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_108\n      swap1\n      tag_107\n      jump\t// in\n    tag_108:\n      dup1\n      iszero\n      tag_109\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_110\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_109)\n    tag_110:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_111:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_111\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_109:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      sload\n      swap1\n      pop\n      dup8\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_21:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_114\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_114:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_115\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_115:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":305:1227   */\n    tag_44:\n        /* \"#utility.yul\":374:380   */\n      0x00\n        /* \"#utility.yul\":427:429   */\n      0x20\n        /* \"#utility.yul\":415:424   */\n      dup3\n        /* \"#utility.yul\":406:413   */\n      dup5\n        /* \"#utility.yul\":402:425   */\n      sub\n        /* \"#utility.yul\":398:430   */\n      slt\n        /* \"#utility.yul\":395:447   */\n      iszero\n      tag_117\n      jumpi\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      dup1\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":395:447   */\n    tag_117:\n        /* \"#utility.yul\":470:493   */\n      dup2\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":542:556   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":539:573   */\n      iszero\n      tag_118\n      jumpi\n        /* \"#utility.yul\":569:570   */\n      0x00\n        /* \"#utility.yul\":566:567   */\n      dup1\n        /* \"#utility.yul\":559:571   */\n      revert\n        /* \"#utility.yul\":539:573   */\n    tag_118:\n        /* \"#utility.yul\":607:613   */\n      dup2\n        /* \"#utility.yul\":596:605   */\n      dup5\n        /* \"#utility.yul\":592:614   */\n      add\n        /* \"#utility.yul\":582:614   */\n      swap2\n      pop\n        /* \"#utility.yul\":652:659   */\n      dup5\n        /* \"#utility.yul\":645:649   */\n      0x1f\n        /* \"#utility.yul\":641:643   */\n      dup4\n        /* \"#utility.yul\":637:650   */\n      add\n        /* \"#utility.yul\":633:660   */\n      slt\n        /* \"#utility.yul\":623:678   */\n      tag_119\n      jumpi\n        /* \"#utility.yul\":674:675   */\n      0x00\n        /* \"#utility.yul\":671:672   */\n      dup1\n        /* \"#utility.yul\":664:676   */\n      revert\n        /* \"#utility.yul\":623:678   */\n    tag_119:\n        /* \"#utility.yul\":710:712   */\n      dup2\n        /* \"#utility.yul\":697:713   */\n      calldataload\n        /* \"#utility.yul\":732:734   */\n      dup2\n        /* \"#utility.yul\":728:730   */\n      dup2\n        /* \"#utility.yul\":725:735   */\n      gt\n        /* \"#utility.yul\":722:758   */\n      iszero\n      tag_121\n      jumpi\n        /* \"#utility.yul\":738:756   */\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":813:815   */\n      0x40\n        /* \"#utility.yul\":807:816   */\n      mload\n        /* \"#utility.yul\":781:783   */\n      0x1f\n        /* \"#utility.yul\":867:880   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":863:885   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":887:889   */\n      0x3f\n        /* \"#utility.yul\":859:890   */\n      add\n        /* \"#utility.yul\":855:895   */\n      and\n        /* \"#utility.yul\":843:896   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":911:929   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":931:953   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":908:954   */\n      or\n        /* \"#utility.yul\":905:977   */\n      iszero\n      tag_124\n      jumpi\n        /* \"#utility.yul\":957:975   */\n      tag_124\n      tag_122\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":997:1007   */\n      dup2\n        /* \"#utility.yul\":993:995   */\n      0x40\n        /* \"#utility.yul\":986:1008   */\n      mstore\n        /* \"#utility.yul\":1032:1034   */\n      dup3\n        /* \"#utility.yul\":1024:1030   */\n      dup2\n        /* \"#utility.yul\":1017:1035   */\n      mstore\n        /* \"#utility.yul\":1072:1079   */\n      dup8\n        /* \"#utility.yul\":1067:1069   */\n      0x20\n        /* \"#utility.yul\":1062:1064   */\n      dup5\n        /* \"#utility.yul\":1058:1060   */\n      dup8\n        /* \"#utility.yul\":1054:1065   */\n      add\n        /* \"#utility.yul\":1050:1070   */\n      add\n        /* \"#utility.yul\":1047:1080   */\n      gt\n        /* \"#utility.yul\":1044:1097   */\n      iszero\n      tag_125\n      jumpi\n        /* \"#utility.yul\":1093:1094   */\n      0x00\n        /* \"#utility.yul\":1090:1091   */\n      dup1\n        /* \"#utility.yul\":1083:1095   */\n      revert\n        /* \"#utility.yul\":1044:1097   */\n    tag_125:\n        /* \"#utility.yul\":1149:1151   */\n      dup3\n        /* \"#utility.yul\":1144:1146   */\n      0x20\n        /* \"#utility.yul\":1140:1142   */\n      dup7\n        /* \"#utility.yul\":1136:1147   */\n      add\n        /* \"#utility.yul\":1131:1133   */\n      0x20\n        /* \"#utility.yul\":1123:1129   */\n      dup4\n        /* \"#utility.yul\":1119:1134   */\n      add\n        /* \"#utility.yul\":1106:1152   */\n      calldatacopy\n        /* \"#utility.yul\":1194:1195   */\n      0x00\n        /* \"#utility.yul\":1172:1187   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":1189:1191   */\n      0x20\n        /* \"#utility.yul\":1168:1192   */\n      add\n        /* \"#utility.yul\":1161:1196   */\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n        /* \"#utility.yul\":1176:1182   */\n      swap6\n        /* \"#utility.yul\":305:1227   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1232:1412   */\n    tag_26:\n        /* \"#utility.yul\":1291:1297   */\n      0x00\n        /* \"#utility.yul\":1344:1346   */\n      0x20\n        /* \"#utility.yul\":1332:1341   */\n      dup3\n        /* \"#utility.yul\":1323:1330   */\n      dup5\n        /* \"#utility.yul\":1319:1342   */\n      sub\n        /* \"#utility.yul\":1315:1347   */\n      slt\n        /* \"#utility.yul\":1312:1364   */\n      iszero\n      tag_127\n      jumpi\n        /* \"#utility.yul\":1360:1361   */\n      0x00\n        /* \"#utility.yul\":1357:1358   */\n      dup1\n        /* \"#utility.yul\":1350:1362   */\n      revert\n        /* \"#utility.yul\":1312:1364   */\n    tag_127:\n      pop\n        /* \"#utility.yul\":1383:1406   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1232:1412   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1417:1693   */\n    tag_87:\n        /* \"#utility.yul\":1548:1551   */\n      0x00\n        /* \"#utility.yul\":1586:1592   */\n      dup3\n        /* \"#utility.yul\":1580:1593   */\n      mload\n        /* \"#utility.yul\":1602:1655   */\n      tag_129\n        /* \"#utility.yul\":1648:1654   */\n      dup2\n        /* \"#utility.yul\":1643:1646   */\n      dup5\n        /* \"#utility.yul\":1636:1640   */\n      0x20\n        /* \"#utility.yul\":1628:1634   */\n      dup8\n        /* \"#utility.yul\":1624:1641   */\n      add\n        /* \"#utility.yul\":1602:1655   */\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":1671:1687   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":1417:1693   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1906:2564   */\n    tag_41:\n        /* \"#utility.yul\":2077:2079   */\n      0x20\n        /* \"#utility.yul\":2129:2150   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2199:2212   */\n      dup3\n      mload\n        /* \"#utility.yul\":2102:2120   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":2221:2243   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":2048:2052   */\n      0x00\n      swap2\n        /* \"#utility.yul\":2077:2079   */\n      swap1\n        /* \"#utility.yul\":2300:2315   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":2274:2276   */\n      0x40\n        /* \"#utility.yul\":2259:2277   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":2048:2052   */\n      dup5\n        /* \"#utility.yul\":2343:2538   */\n    tag_133:\n        /* \"#utility.yul\":2357:2363   */\n      dup2\n        /* \"#utility.yul\":2354:2355   */\n      dup2\n        /* \"#utility.yul\":2351:2364   */\n      lt\n        /* \"#utility.yul\":2343:2538   */\n      iszero\n      tag_135\n      jumpi\n        /* \"#utility.yul\":2422:2435   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2418:2457   */\n      and\n        /* \"#utility.yul\":2406:2458   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2513:2528   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":2478:2490   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":2454:2455   */\n      0x01\n        /* \"#utility.yul\":2372:2381   */\n      add\n        /* \"#utility.yul\":2343:2538   */\n      jump(tag_133)\n    tag_135:\n      pop\n        /* \"#utility.yul\":2555:2558   */\n      swap1\n      swap7\n        /* \"#utility.yul\":1906:2564   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2751:3746   */\n    tag_66:\n        /* \"#utility.yul\":3037:3041   */\n      0x00\n        /* \"#utility.yul\":3077:3078   */\n      0x05\n        /* \"#utility.yul\":3069:3075   */\n      dup10\n        /* \"#utility.yul\":3066:3079   */\n      lt\n        /* \"#utility.yul\":3056:3200   */\n      tag_138\n      jumpi\n        /* \"#utility.yul\":3122:3132   */\n      0x4e487b71\n        /* \"#utility.yul\":3117:3120   */\n      0xe0\n        /* \"#utility.yul\":3113:3133   */\n      shl\n        /* \"#utility.yul\":3110:3111   */\n      0x00\n        /* \"#utility.yul\":3103:3134   */\n      mstore\n        /* \"#utility.yul\":3157:3161   */\n      0x21\n        /* \"#utility.yul\":3154:3155   */\n      0x04\n        /* \"#utility.yul\":3147:3162   */\n      mstore\n        /* \"#utility.yul\":3185:3189   */\n      0x24\n        /* \"#utility.yul\":3182:3183   */\n      0x00\n        /* \"#utility.yul\":3175:3190   */\n      revert\n        /* \"#utility.yul\":3056:3200   */\n    tag_138:\n        /* \"#utility.yul\":3227:3233   */\n      dup9\n        /* \"#utility.yul\":3216:3225   */\n      dup3\n        /* \"#utility.yul\":3209:3234   */\n      mstore\n        /* \"#utility.yul\":3270:3273   */\n      0xe0\n        /* \"#utility.yul\":3265:3267   */\n      0x20\n        /* \"#utility.yul\":3254:3263   */\n      dup4\n        /* \"#utility.yul\":3250:3268   */\n      add\n        /* \"#utility.yul\":3243:3274   */\n      mstore\n        /* \"#utility.yul\":3303:3309   */\n      dup8\n        /* \"#utility.yul\":3297:3310   */\n      mload\n        /* \"#utility.yul\":3347:3353   */\n      dup1\n        /* \"#utility.yul\":3341:3344   */\n      0xe0\n        /* \"#utility.yul\":3330:3339   */\n      dup5\n        /* \"#utility.yul\":3326:3345   */\n      add\n        /* \"#utility.yul\":3319:3354   */\n      mstore\n        /* \"#utility.yul\":3373:3376   */\n      0x0100\n        /* \"#utility.yul\":3385:3451   */\n      tag_139\n        /* \"#utility.yul\":3444:3450   */\n      dup3\n        /* \"#utility.yul\":3439:3441   */\n      dup3\n        /* \"#utility.yul\":3428:3437   */\n      dup7\n        /* \"#utility.yul\":3424:3442   */\n      add\n        /* \"#utility.yul\":3419:3421   */\n      0x20\n        /* \"#utility.yul\":3411:3417   */\n      dup14\n        /* \"#utility.yul\":3407:3422   */\n      add\n        /* \"#utility.yul\":3385:3451   */\n      tag_130\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":3553:3555   */\n      0x40\n        /* \"#utility.yul\":3538:3556   */\n      dup5\n      add\n        /* \"#utility.yul\":3531:3565   */\n      swap9\n      swap1\n      swap9\n      mstore\n        /* \"#utility.yul\":3596:3598   */\n      0x60\n        /* \"#utility.yul\":3581:3599   */\n      dup4\n      add\n        /* \"#utility.yul\":3574:3608   */\n      swap7\n      swap1\n      swap7\n      mstore\n      pop\n        /* \"#utility.yul\":3639:3642   */\n      0x80\n        /* \"#utility.yul\":3624:3643   */\n      dup2\n      add\n        /* \"#utility.yul\":3617:3652   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":3683:3686   */\n      0xa0\n        /* \"#utility.yul\":3668:3687   */\n      dup4\n      add\n        /* \"#utility.yul\":3661:3696   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3727:3730   */\n      0xc0\n        /* \"#utility.yul\":3712:3731   */\n      dup3\n      add\n        /* \"#utility.yul\":3705:3740   */\n      mstore\n        /* \"#utility.yul\":3512:3514   */\n      0x1f\n        /* \"#utility.yul\":3491:3506   */\n      swap1\n      swap2\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3487:3516   */\n      and\n        /* \"#utility.yul\":3472:3517   */\n      add\n        /* \"#utility.yul\":3468:3522   */\n      add\n      swap3\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2751:3746   */\n      jump\t// out\n        /* \"#utility.yul\":4686:4944   */\n    tag_130:\n        /* \"#utility.yul\":4758:4759   */\n      0x00\n        /* \"#utility.yul\":4768:4881   */\n    tag_144:\n        /* \"#utility.yul\":4782:4788   */\n      dup4\n        /* \"#utility.yul\":4779:4780   */\n      dup2\n        /* \"#utility.yul\":4776:4789   */\n      lt\n        /* \"#utility.yul\":4768:4881   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":4858:4869   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":4852:4870   */\n      mload\n        /* \"#utility.yul\":4839:4850   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":4832:4871   */\n      mstore\n        /* \"#utility.yul\":4804:4806   */\n      0x20\n        /* \"#utility.yul\":4797:4807   */\n      add\n        /* \"#utility.yul\":4768:4881   */\n      jump(tag_144)\n    tag_146:\n        /* \"#utility.yul\":4899:4905   */\n      dup4\n        /* \"#utility.yul\":4896:4897   */\n      dup2\n        /* \"#utility.yul\":4893:4906   */\n      gt\n        /* \"#utility.yul\":4890:4938   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":4934:4935   */\n      0x00\n        /* \"#utility.yul\":4925:4931   */\n      dup5\n        /* \"#utility.yul\":4920:4923   */\n      dup5\n        /* \"#utility.yul\":4916:4932   */\n      add\n        /* \"#utility.yul\":4909:4936   */\n      mstore\n        /* \"#utility.yul\":4890:4938   */\n    tag_147:\n      pop\n        /* \"#utility.yul\":4686:4944   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4949:5329   */\n    tag_107:\n        /* \"#utility.yul\":5028:5029   */\n      0x01\n        /* \"#utility.yul\":5024:5036   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5071:5083   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5092:5153   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":5146:5150   */\n      0x7f\n        /* \"#utility.yul\":5138:5144   */\n      dup3\n        /* \"#utility.yul\":5134:5151   */\n      and\n        /* \"#utility.yul\":5124:5151   */\n      swap2\n      pop\n        /* \"#utility.yul\":5092:5153   */\n    tag_149:\n        /* \"#utility.yul\":5199:5201   */\n      0x20\n        /* \"#utility.yul\":5191:5197   */\n      dup3\n        /* \"#utility.yul\":5188:5202   */\n      lt\n        /* \"#utility.yul\":5168:5186   */\n      dup2\n        /* \"#utility.yul\":5165:5203   */\n      eq\n        /* \"#utility.yul\":5162:5323   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":5245:5255   */\n      0x4e487b71\n        /* \"#utility.yul\":5240:5243   */\n      0xe0\n        /* \"#utility.yul\":5236:5256   */\n      shl\n        /* \"#utility.yul\":5233:5234   */\n      0x00\n        /* \"#utility.yul\":5226:5257   */\n      mstore\n        /* \"#utility.yul\":5280:5284   */\n      0x22\n        /* \"#utility.yul\":5277:5278   */\n      0x04\n        /* \"#utility.yul\":5270:5285   */\n      mstore\n        /* \"#utility.yul\":5308:5312   */\n      0x24\n        /* \"#utility.yul\":5305:5306   */\n      0x00\n        /* \"#utility.yul\":5298:5313   */\n      revert\n        /* \"#utility.yul\":5162:5323   */\n    tag_150:\n      pop\n        /* \"#utility.yul\":4949:5329   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5334:5461   */\n    tag_76:\n        /* \"#utility.yul\":5395:5405   */\n      0x4e487b71\n        /* \"#utility.yul\":5390:5393   */\n      0xe0\n        /* \"#utility.yul\":5386:5406   */\n      shl\n        /* \"#utility.yul\":5383:5384   */\n      0x00\n        /* \"#utility.yul\":5376:5407   */\n      mstore\n        /* \"#utility.yul\":5426:5430   */\n      0x21\n        /* \"#utility.yul\":5423:5424   */\n      0x04\n        /* \"#utility.yul\":5416:5431   */\n      mstore\n        /* \"#utility.yul\":5450:5454   */\n      0x24\n        /* \"#utility.yul\":5447:5448   */\n      0x00\n        /* \"#utility.yul\":5440:5455   */\n      revert\n        /* \"#utility.yul\":5466:5593   */\n    tag_122:\n        /* \"#utility.yul\":5527:5537   */\n      0x4e487b71\n        /* \"#utility.yul\":5522:5525   */\n      0xe0\n        /* \"#utility.yul\":5518:5538   */\n      shl\n        /* \"#utility.yul\":5515:5516   */\n      0x00\n        /* \"#utility.yul\":5508:5539   */\n      mstore\n        /* \"#utility.yul\":5558:5562   */\n      0x41\n        /* \"#utility.yul\":5555:5556   */\n      0x04\n        /* \"#utility.yul\":5548:5563   */\n      mstore\n        /* \"#utility.yul\":5582:5586   */\n      0x24\n        /* \"#utility.yul\":5579:5580   */\n      0x00\n        /* \"#utility.yul\":5572:5587   */\n      revert\n\n    auxdata: 0xa264697066735822122022f6446f17f1b217107db37b5fd11c38c89f0d2c5f0e1f6e6733f63bfe68d07f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052632cb41780600255620186a060035534801561001f57600080fd5b506107bb8061002f6000396000f3fe608060405234801561001057600080fd5b50600436106100a45760003560e01c80630761c8b9146100a95780632599d6d0146100c55780635c475d42146100f1578063709ec8b41461011c57806372f0d72b1461012f5780637f89128f1461015b5780638e4f8c6b14610170578063948942ad1461018357806399067ede1461018c578063b06cdc12146101a7578063c10e3911146101d3578063fc837259146101db575b600080fd5b6100b260025481565b6040519081526020015b60405180910390f35b6100b26100d3366004610510565b6001600160a01b031660009081526020819052604090206004015490565b6101046100ff3660046105f0565b610201565b6040516001600160a01b0390911681526020016100bc565b61010461012a3660046105f0565b61022b565b6100b261013d366004610510565b6001600160a01b031660009081526020819052604090206006015490565b61016361023b565b6040516100bc9190610625565b6100b261017e366004610540565b610306565b6100b260035481565b6100b261019a366004610510565b6001600160a01b03163190565b6100b26101b5366004610510565b6001600160a01b031660009081526020819052604090206005015490565b610163610336565b6101ee6101e9366004610510565b610449565b6040516100bc9796959493929190610672565b6007818154811061021157600080fd5b6000918252602090912001546001600160a01b0316905081565b6008818154811061021157600080fd5b606060003360009081526020819052604090205460ff16600481111561026357610263610759565b146102a65760405162461bcd60e51b815260206004820152600e60248201526d2cb7bab9103737ba1030b236b4b760911b60448201526064015b60405180910390fd5b60088054806020026020016040519081016040528092919081815260200182805480156102fc57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102de575b5050505050905090565b6000816040516020016103199190610609565b604051602081830303815290604052805190602001209050919050565b606060003360009081526020819052604090205460ff16600481111561035e5761035e610759565b148061038d575060023360009081526020819052604090205460ff16600481111561038b5761038b610759565b145b6103eb5760405162461bcd60e51b815260206004820152602960248201527f596f7520617265206e6f7420746865206f776e6572206f72207072697661746560448201526810383937bb34b232b960b91b606482015260840161029d565b60078054806020026020016040519081016040528092919081815260200182805480156102fc576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116102de575050505050905090565b6000602081905290815260409020805460018201805460ff909216929161046f9061071e565b80601f016020809104026020016040519081016040528092919081815260200182805461049b9061071e565b80156104e85780601f106104bd576101008083540402835291602001916104e8565b820191906000526020600020905b8154815290600101906020018083116104cb57829003601f168201915b5050505050908060020154908060030154908060040154908060050154908060060154905087565b60006020828403121561052257600080fd5b81356001600160a01b038116811461053957600080fd5b9392505050565b60006020828403121561055257600080fd5b81356001600160401b038082111561056957600080fd5b818401915084601f83011261057d57600080fd5b81358181111561058f5761058f61076f565b604051601f8201601f19908116603f011681019083821181831017156105b7576105b761076f565b816040528281528760208487010111156105d057600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561060257600080fd5b5035919050565b6000825161061b8184602087016106ee565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b818110156106665783516001600160a01b031683529284019291840191600101610641565b50909695505050505050565b60006005891061069257634e487b7160e01b600052602160045260246000fd5b88825260e0602083015287518060e08401526101006106b78282860160208d016106ee565b6040840198909852606083019690965250608081019390935260a083019190915260c0820152601f909101601f1916010192915050565b60005b838110156107095781810151838201526020016106f1565b83811115610718576000848401525b50505050565b600181811c9082168061073257607f821691505b6020821081141561075357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122022f6446f17f1b217107db37b5fd11c38c89f0d2c5f0e1f6e6733f63bfe68d07f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH4 0x2CB41780 PUSH1 0x2 SSTORE PUSH3 0x186A0 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7BB DUP1 PUSH2 0x2F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761C8B9 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x2599D6D0 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x5C475D42 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x709EC8B4 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x72F0D72B EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x7F89128F EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x8E4F8C6B EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x948942AD EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x99067EDE EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xB06CDC12 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xC10E3911 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xFC837259 EQ PUSH2 0x1DB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB2 PUSH2 0xD3 CALLDATASIZE PUSH1 0x4 PUSH2 0x510 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x104 PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0x5F0 JUMP JUMPDEST PUSH2 0x201 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBC JUMP JUMPDEST PUSH2 0x104 PUSH2 0x12A CALLDATASIZE PUSH1 0x4 PUSH2 0x5F0 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x13D CALLDATASIZE PUSH1 0x4 PUSH2 0x510 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x163 PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x625 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x17E CALLDATASIZE PUSH1 0x4 PUSH2 0x540 JUMP JUMPDEST PUSH2 0x306 JUMP JUMPDEST PUSH2 0xB2 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0x510 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x510 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x163 PUSH2 0x336 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x510 JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x672 JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x263 JUMPI PUSH2 0x263 PUSH2 0x759 JUMP JUMPDEST EQ PUSH2 0x2A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x2CB7BAB9103737BA1030B236B4B7 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DE JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x609 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x35E JUMPI PUSH2 0x35E PUSH2 0x759 JUMP JUMPDEST EQ DUP1 PUSH2 0x38D JUMPI POP PUSH1 0x2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x38B JUMPI PUSH2 0x38B PUSH2 0x759 JUMP JUMPDEST EQ JUMPDEST PUSH2 0x3EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420746865206F776E6572206F722070726976617465 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x10383937BB34B232B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29D JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DE JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH2 0x46F SWAP1 PUSH2 0x71E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x49B SWAP1 PUSH2 0x71E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4BD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4CB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x539 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x57D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x58F JUMPI PUSH2 0x58F PUSH2 0x76F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x5B7 JUMPI PUSH2 0x5B7 PUSH2 0x76F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x61B DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x6EE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x666 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x641 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP10 LT PUSH2 0x692 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP9 DUP3 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP4 ADD MSTORE DUP8 MLOAD DUP1 PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 PUSH2 0x6B7 DUP3 DUP3 DUP7 ADD PUSH1 0x20 DUP14 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x40 DUP5 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x60 DUP4 ADD SWAP7 SWAP1 SWAP7 MSTORE POP PUSH1 0x80 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xA0 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x709 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x6F1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x718 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x732 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x753 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xF6 DIFFICULTY PUSH16 0x17F1B217107DB37B5FD11C38C89F0D2C 0x5F 0xE 0x1F PUSH15 0x6733F63BFE68D07F64736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "104:1605:0:-:0;;;1152:9:2;1123:38;;1412:6;1385:33;;104:1605:0;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@blackList_305": {
									"entryPoint": 555,
									"id": 305,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getBalanceEth_97": {
									"entryPoint": null,
									"id": 97,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBalancePrivateToken_70": {
									"entryPoint": null,
									"id": 70,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBalancePublicToken_83": {
									"entryPoint": null,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBalanceSeedToken_57": {
									"entryPoint": null,
									"id": 57,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@get_blackList_44": {
									"entryPoint": 571,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@get_keccak256_20": {
									"entryPoint": 774,
									"id": 20,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@get_whiteList_32": {
									"entryPoint": 822,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@structUsers__249": {
									"entryPoint": 1097,
									"id": 249,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenAmount__261": {
									"entryPoint": null,
									"id": 261,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenPrice__258": {
									"entryPoint": null,
									"id": 258,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@whiteList_302": {
									"entryPoint": 513,
									"id": 302,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 1344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 1573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_Role_$228_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint8_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 1650,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 1774,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 1881,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1903,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5595:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:216:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:3"
															},
															"nodeType": "YulIf",
															"src": "94:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "239:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "244:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "248:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:50:3"
															},
															"nodeType": "YulIf",
															"src": "200:70:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:3",
														"type": ""
													}
												],
												"src": "14:286:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "385:842:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "431:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "440:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "443:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "433:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "433:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "433:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "406:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "402:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "402:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "427:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "398:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "398:32:3"
															},
															"nodeType": "YulIf",
															"src": "395:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "483:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "470:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "470:23:3"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "460:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "502:28:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "520:2:3",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "524:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "516:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "516:10:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "512:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "512:18:3"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "506:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "557:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "566:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "569:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "559:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "559:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "559:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "545:6:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "553:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "542:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "542:14:3"
															},
															"nodeType": "YulIf",
															"src": "539:34:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "582:32:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "596:9:3"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "607:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "592:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "592:22:3"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "586:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "662:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "671:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "674:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "664:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "664:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "664:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "641:2:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "645:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "637:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "637:13:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "652:7:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "633:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "633:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:35:3"
															},
															"nodeType": "YulIf",
															"src": "623:55:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "687:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "710:2:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "697:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "697:16:3"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "691:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "736:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "738:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "738:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "738:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "728:2:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "732:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "725:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "725:10:3"
															},
															"nodeType": "YulIf",
															"src": "722:36:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "767:17:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "781:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "777:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "777:7:3"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "771:2:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "793:23:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "813:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "807:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "807:9:3"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "797:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "825:71:3",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "847:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "871:2:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "875:4:3",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "867:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "867:13:3"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "882:2:3"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "863:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "863:22:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "887:2:3",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "859:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "859:31:3"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "892:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "855:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:40:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "843:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "843:53:3"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "829:10:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "955:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "957:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "957:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "957:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "914:10:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "926:2:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "911:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "911:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "934:10:3"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "946:6:3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "931:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "931:22:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "908:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "908:46:3"
															},
															"nodeType": "YulIf",
															"src": "905:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "993:2:3",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "997:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "986:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "986:22:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "986:22:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1024:6:3"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1032:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1017:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1017:18:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1017:18:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1081:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1090:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1093:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1083:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1083:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1083:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1058:2:3"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1062:2:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1054:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1054:11:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1067:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1050:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1050:20:3"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1072:7:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1047:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1047:33:3"
															},
															"nodeType": "YulIf",
															"src": "1044:53:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1123:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1131:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1119:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1119:15:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1140:2:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1144:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1136:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1136:11:3"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1149:2:3"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1106:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1106:46:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1106:46:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:3"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1184:2:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1172:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1172:15:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1189:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1168:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1168:24:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1194:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1161:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1161:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1161:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1205:16:3",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1215:6:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1205:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "351:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "362:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "374:6:3",
														"type": ""
													}
												],
												"src": "305:922:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1302:110:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1348:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1357:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1360:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1350:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1350:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1350:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1323:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1332:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1319:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1319:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1344:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:32:3"
															},
															"nodeType": "YulIf",
															"src": "1312:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1373:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1396:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1383:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1383:23:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1373:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1268:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1279:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1291:6:3",
														"type": ""
													}
												],
												"src": "1232:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1556:137:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1566:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1586:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1580:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1580:13:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1570:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1628:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1636:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1624:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1624:17:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1643:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1648:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1602:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1602:53:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1602:53:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1664:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1675:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1680:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1671:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1671:16:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1664:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1532:3:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1537:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1548:3:3",
														"type": ""
													}
												],
												"src": "1417:276:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1799:102:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1809:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1821:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1832:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1817:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1817:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1809:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1851:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1866:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1882:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1887:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1878:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1878:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1891:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1874:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1874:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1862:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1862:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1844:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1844:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1768:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1779:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1790:4:3",
														"type": ""
													}
												],
												"src": "1698:203:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2057:507:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2067:12:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2077:2:3",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2071:2:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2088:32:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2106:9:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2117:2:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2102:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2102:18:3"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "2092:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2136:9:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2147:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2129:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2129:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2129:21:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2159:17:3",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "2170:6:3"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "2163:3:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2185:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2205:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2199:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2199:13:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2189:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "2228:6:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2236:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2221:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2221:22:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2221:22:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2252:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2263:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2274:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2259:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:18:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2252:3:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2286:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2304:6:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2312:2:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2300:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2300:15:3"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "2290:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2324:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2333:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2328:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2392:146:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2428:6:3"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "2422:5:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2422:13:3"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2445:3:3",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2450:1:3",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2441:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2441:11:3"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2454:1:3",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "2437:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2437:19:3"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "2418:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2418:39:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2406:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2406:52:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2406:52:3"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2471:19:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2482:3:3"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2487:2:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2478:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2478:12:3"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2471:3:3"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2503:25:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2517:6:3"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2525:2:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2513:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2513:15:3"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2503:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2354:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2357:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2351:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2351:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2365:18:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2367:14:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2376:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2379:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2372:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2372:9:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2367:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2347:3:3",
																"statements": []
															},
															"src": "2343:195:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2547:11:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2555:3:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2547:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2026:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2037:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2048:4:3",
														"type": ""
													}
												],
												"src": "1906:658:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2670:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2680:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2692:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2703:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2688:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2688:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2680:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2722:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2733:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2715:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2715:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2715:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2639:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2650:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2661:4:3",
														"type": ""
													}
												],
												"src": "2569:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3046:700:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3089:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3110:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3117:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3122:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3113:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3113:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3103:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3103:31:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3103:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3154:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3157:4:3",
																					"type": "",
																					"value": "0x21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3147:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3147:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3147:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3182:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3185:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3175:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3175:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3175:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3069:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3077:1:3",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3066:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3066:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3059:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3059:21:3"
															},
															"nodeType": "YulIf",
															"src": "3056:144:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3216:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3227:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3209:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3209:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3209:25:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3254:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3265:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3250:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3250:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3270:3:3",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3243:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3243:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3243:31:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3283:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3303:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3297:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3297:13:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3287:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3330:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3341:3:3",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3326:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3326:19:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3347:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3319:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3319:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3319:35:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3363:13:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3373:3:3",
																"type": "",
																"value": "256"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3367:2:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3411:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3419:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3407:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3407:15:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3428:9:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3439:2:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3424:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3424:18:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3444:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3385:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3385:66:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3385:66:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3460:62:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3476:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3495:6:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3503:2:3",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3491:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3491:15:3"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3512:2:3",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3508:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3508:7:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3487:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3487:29:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3472:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3472:45:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3519:2:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3468:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3468:54:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3460:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3542:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3553:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3538:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3538:18:3"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3558:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3531:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3531:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3531:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3585:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3596:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3581:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3581:18:3"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "3601:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3574:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3574:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3574:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3628:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3639:3:3",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3624:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3624:19:3"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "3645:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3617:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3617:35:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3672:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3683:3:3",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3668:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3668:19:3"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "3689:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3661:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3661:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3661:35:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3716:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3727:3:3",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3712:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3712:19:3"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "3733:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3705:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3705:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3705:35:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Role_$228_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint8_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2967:9:3",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "2978:6:3",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2986:6:3",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2994:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3002:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3010:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3018:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3026:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3037:4:3",
														"type": ""
													}
												],
												"src": "2751:995:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3925:231:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3942:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3953:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3935:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3935:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3935:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3976:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3987:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3972:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3972:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3992:2:3",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3965:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3965:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3965:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4015:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4026:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4011:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4011:18:3"
																	},
																	{
																		"hexValue": "596f7520617265206e6f7420746865206f776e6572206f722070726976617465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4031:34:3",
																		"type": "",
																		"value": "You are not the owner or private"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4004:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4004:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4004:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4086:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4097:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4082:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4082:18:3"
																	},
																	{
																		"hexValue": "2070726f7669646572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4102:11:3",
																		"type": "",
																		"value": " provider"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4075:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4075:39:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4075:39:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4123:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4135:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4146:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4131:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4131:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4123:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3902:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3916:4:3",
														"type": ""
													}
												],
												"src": "3751:405:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4335:164:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4352:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4363:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4345:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4345:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4345:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4386:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4397:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4382:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4382:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4402:2:3",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4375:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4375:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4375:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4425:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4436:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4421:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4421:18:3"
																	},
																	{
																		"hexValue": "596f7572206e6f742061646d696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4441:16:3",
																		"type": "",
																		"value": "Your not admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4414:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4414:44:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4414:44:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4467:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4479:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4490:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4475:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4475:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4467:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4312:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4326:4:3",
														"type": ""
													}
												],
												"src": "4161:338:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4605:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4615:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4627:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4638:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4623:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4623:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4615:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4657:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4668:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4650:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4650:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4650:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4574:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4585:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4596:4:3",
														"type": ""
													}
												],
												"src": "4504:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4739:205:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4749:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4758:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4753:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4818:63:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "4843:3:3"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4848:1:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4839:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4839:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "4862:3:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4867:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4858:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4858:11:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4852:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4852:18:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4832:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4832:39:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4832:39:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4779:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4782:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4776:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4776:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4790:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4792:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4801:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4804:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4797:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4797:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4792:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4772:3:3",
																"statements": []
															},
															"src": "4768:113:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4907:31:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "4920:3:3"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "4925:6:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4916:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4916:16:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4934:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4909:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4909:27:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4909:27:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4896:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4899:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4893:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4893:13:3"
															},
															"nodeType": "YulIf",
															"src": "4890:48:3"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4717:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "4722:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4727:6:3",
														"type": ""
													}
												],
												"src": "4686:258:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5004:325:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5014:22:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5028:1:3",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5031:4:3"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5024:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5024:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5014:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5045:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5075:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5081:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5071:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5071:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5049:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5122:31:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5124:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5138:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5146:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5134:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5134:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5124:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5102:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5095:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5095:26:3"
															},
															"nodeType": "YulIf",
															"src": "5092:61:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5212:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5233:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5240:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5245:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5236:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5236:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5226:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5226:31:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5226:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5277:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5280:4:3",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5270:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5270:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5270:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5305:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5308:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5298:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5298:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5298:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5168:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5191:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5199:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5188:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5188:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5165:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5165:38:3"
															},
															"nodeType": "YulIf",
															"src": "5162:161:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4984:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4993:6:3",
														"type": ""
													}
												],
												"src": "4949:380:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5366:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5383:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5390:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5395:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5386:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5386:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5376:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5376:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5376:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5423:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5426:4:3",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5416:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5416:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5416:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5447:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5450:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5440:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5440:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5440:15:3"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "5334:127:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5498:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5515:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5522:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5527:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5518:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5518:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5508:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5508:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5508:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5555:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5558:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5548:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5548:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5548:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5579:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5582:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5572:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5572:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5572:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5466:127:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_enum$_Role_$228_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint8_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        if iszero(lt(value0, 5))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 224)\n        let length := mload(value1)\n        mstore(add(headStart, 224), length)\n        let _1 := 256\n        copy_memory_to_memory(add(value1, 32), add(headStart, _1), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), _1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_encode_tuple_t_stringliteral_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"You are not the owner or private\")\n        mstore(add(headStart, 96), \" provider\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Your not admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a45760003560e01c80630761c8b9146100a95780632599d6d0146100c55780635c475d42146100f1578063709ec8b41461011c57806372f0d72b1461012f5780637f89128f1461015b5780638e4f8c6b14610170578063948942ad1461018357806399067ede1461018c578063b06cdc12146101a7578063c10e3911146101d3578063fc837259146101db575b600080fd5b6100b260025481565b6040519081526020015b60405180910390f35b6100b26100d3366004610510565b6001600160a01b031660009081526020819052604090206004015490565b6101046100ff3660046105f0565b610201565b6040516001600160a01b0390911681526020016100bc565b61010461012a3660046105f0565b61022b565b6100b261013d366004610510565b6001600160a01b031660009081526020819052604090206006015490565b61016361023b565b6040516100bc9190610625565b6100b261017e366004610540565b610306565b6100b260035481565b6100b261019a366004610510565b6001600160a01b03163190565b6100b26101b5366004610510565b6001600160a01b031660009081526020819052604090206005015490565b610163610336565b6101ee6101e9366004610510565b610449565b6040516100bc9796959493929190610672565b6007818154811061021157600080fd5b6000918252602090912001546001600160a01b0316905081565b6008818154811061021157600080fd5b606060003360009081526020819052604090205460ff16600481111561026357610263610759565b146102a65760405162461bcd60e51b815260206004820152600e60248201526d2cb7bab9103737ba1030b236b4b760911b60448201526064015b60405180910390fd5b60088054806020026020016040519081016040528092919081815260200182805480156102fc57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102de575b5050505050905090565b6000816040516020016103199190610609565b604051602081830303815290604052805190602001209050919050565b606060003360009081526020819052604090205460ff16600481111561035e5761035e610759565b148061038d575060023360009081526020819052604090205460ff16600481111561038b5761038b610759565b145b6103eb5760405162461bcd60e51b815260206004820152602960248201527f596f7520617265206e6f7420746865206f776e6572206f72207072697661746560448201526810383937bb34b232b960b91b606482015260840161029d565b60078054806020026020016040519081016040528092919081815260200182805480156102fc576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116102de575050505050905090565b6000602081905290815260409020805460018201805460ff909216929161046f9061071e565b80601f016020809104026020016040519081016040528092919081815260200182805461049b9061071e565b80156104e85780601f106104bd576101008083540402835291602001916104e8565b820191906000526020600020905b8154815290600101906020018083116104cb57829003601f168201915b5050505050908060020154908060030154908060040154908060050154908060060154905087565b60006020828403121561052257600080fd5b81356001600160a01b038116811461053957600080fd5b9392505050565b60006020828403121561055257600080fd5b81356001600160401b038082111561056957600080fd5b818401915084601f83011261057d57600080fd5b81358181111561058f5761058f61076f565b604051601f8201601f19908116603f011681019083821181831017156105b7576105b761076f565b816040528281528760208487010111156105d057600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561060257600080fd5b5035919050565b6000825161061b8184602087016106ee565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b818110156106665783516001600160a01b031683529284019291840191600101610641565b50909695505050505050565b60006005891061069257634e487b7160e01b600052602160045260246000fd5b88825260e0602083015287518060e08401526101006106b78282860160208d016106ee565b6040840198909852606083019690965250608081019390935260a083019190915260c0820152601f909101601f1916010192915050565b60005b838110156107095781810151838201526020016106f1565b83811115610718576000848401525b50505050565b600181811c9082168061073257607f821691505b6020821081141561075357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122022f6446f17f1b217107db37b5fd11c38c89f0d2c5f0e1f6e6733f63bfe68d07f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761C8B9 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x2599D6D0 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x5C475D42 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x709EC8B4 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x72F0D72B EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x7F89128F EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x8E4F8C6B EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x948942AD EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x99067EDE EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xB06CDC12 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xC10E3911 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xFC837259 EQ PUSH2 0x1DB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB2 PUSH2 0xD3 CALLDATASIZE PUSH1 0x4 PUSH2 0x510 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x104 PUSH2 0xFF CALLDATASIZE PUSH1 0x4 PUSH2 0x5F0 JUMP JUMPDEST PUSH2 0x201 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBC JUMP JUMPDEST PUSH2 0x104 PUSH2 0x12A CALLDATASIZE PUSH1 0x4 PUSH2 0x5F0 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x13D CALLDATASIZE PUSH1 0x4 PUSH2 0x510 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x163 PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x625 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x17E CALLDATASIZE PUSH1 0x4 PUSH2 0x540 JUMP JUMPDEST PUSH2 0x306 JUMP JUMPDEST PUSH2 0xB2 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0x510 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x510 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x163 PUSH2 0x336 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x1E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x510 JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBC SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x672 JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x263 JUMPI PUSH2 0x263 PUSH2 0x759 JUMP JUMPDEST EQ PUSH2 0x2A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x2CB7BAB9103737BA1030B236B4B7 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DE JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x609 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x35E JUMPI PUSH2 0x35E PUSH2 0x759 JUMP JUMPDEST EQ DUP1 PUSH2 0x38D JUMPI POP PUSH1 0x2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x38B JUMPI PUSH2 0x38B PUSH2 0x759 JUMP JUMPDEST EQ JUMPDEST PUSH2 0x3EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420746865206F776E6572206F722070726976617465 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x10383937BB34B232B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29D JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DE JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH2 0x46F SWAP1 PUSH2 0x71E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x49B SWAP1 PUSH2 0x71E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4BD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4CB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x539 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x57D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x58F JUMPI PUSH2 0x58F PUSH2 0x76F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x5B7 JUMPI PUSH2 0x5B7 PUSH2 0x76F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x61B DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x6EE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x666 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x641 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP10 LT PUSH2 0x692 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP9 DUP3 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP4 ADD MSTORE DUP8 MLOAD DUP1 PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 PUSH2 0x6B7 DUP3 DUP3 DUP7 ADD PUSH1 0x20 DUP14 ADD PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x40 DUP5 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x60 DUP4 ADD SWAP7 SWAP1 SWAP7 MSTORE POP PUSH1 0x80 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xA0 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x709 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x6F1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x718 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x732 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x753 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xF6 DIFFICULTY PUSH16 0x17F1B217107DB37B5FD11C38C89F0D2C 0x5F 0xE 0x1F PUSH15 0x6733F63BFE68D07F64736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "104:1605:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1123:38:2;;;;;;;;;2715:25:3;;;2703:2;2688:18;1123:38:2;;;;;;;;849:139:0;;;;;;:::i;:::-;-1:-1:-1;;;;;945:22:0;918:7;945:22;;;;;;;;;;:35;;;;849:139;3075:26:2;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1862:32:3;;;1844:51;;1832:2;1817:18;3075:26:2;1698:203:3;3244:26:2;;;;;;:::i;:::-;;:::i;1352:143:0:-;;;;;;:::i;:::-;-1:-1:-1;;;;;1450:22:0;1423:7;1450:22;;;;;;;;;;:37;;;;1352:143;632:110;;;:::i;:::-;;;;;;;:::i;212:138::-;;;;;;:::i;:::-;;:::i;1385:33:2:-;;;;;;1595:111:0;;;;;;:::i;:::-;-1:-1:-1;;;;;1678:20:0;;;1595:111;1098:145;;;;;;:::i;:::-;-1:-1:-1;;;;;1197:22:0;1170:7;1197:22;;;;;;;;;;:38;;;;1098:145;426:128;;;:::i;836:51:2:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;3075:26::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3075:26:2;;-1:-1:-1;3075:26:2;:::o;3244:::-;;;;;;;;;;;;632:110:0;688:16;320:17:1;300:10;287:12;:24;;;;;;;;;;:29;;;:50;;;;;;;;:::i;:::-;;279:77;;;;-1:-1:-1;;;279:77:1;;4363:2:3;279:77:1;;;4345:21:3;4402:2;4382:18;;;4375:30;-1:-1:-1;;;4421:18:3;;;4414:44;4475:18;;279:77:1;;;;;;;;;724:9:0::1;717:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;717:17:0::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;;;;632:110:::0;:::o;212:138::-;276:7;334:5;317:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;307:34;;;;;;300:42;;212:138;;;:::o;426:128::-;500:16;1116:17:1;1096:10;1083:12;:24;;;;;;;;;;:29;;;:50;;;;;;;;:::i;:::-;;:106;;;-1:-1:-1;1170:19:1;1150:10;1137:12;:24;;;;;;;;;;:29;;;:52;;;;;;;;:::i;:::-;;1083:106;1075:160;;;;-1:-1:-1;;;1075:160:1;;3953:2:3;1075:160:1;;;3935:21:3;3992:2;3972:18;;;3965:30;4031:34;4011:18;;;4004:62;-1:-1:-1;;;4082:18:3;;;4075:39;4131:19;;1075:160:1;3751:405:3;1075:160:1;536:9:0::1;529:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;529:17:0::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;;;426:128:::0;:::o;836:51:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:286:3:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:3;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:3:o;305:922::-;374:6;427:2;415:9;406:7;402:23;398:32;395:52;;;443:1;440;433:12;395:52;470:23;;-1:-1:-1;;;;;542:14:3;;;539:34;;;569:1;566;559:12;539:34;607:6;596:9;592:22;582:32;;652:7;645:4;641:2;637:13;633:27;623:55;;674:1;671;664:12;623:55;710:2;697:16;732:2;728;725:10;722:36;;;738:18;;:::i;:::-;813:2;807:9;781:2;867:13;;-1:-1:-1;;863:22:3;;;887:2;859:31;855:40;843:53;;;911:18;;;931:22;;;908:46;905:72;;;957:18;;:::i;:::-;997:10;993:2;986:22;1032:2;1024:6;1017:18;1072:7;1067:2;1062;1058;1054:11;1050:20;1047:33;1044:53;;;1093:1;1090;1083:12;1044:53;1149:2;1144;1140;1136:11;1131:2;1123:6;1119:15;1106:46;1194:1;1172:15;;;1189:2;1168:24;1161:35;;;;-1:-1:-1;1176:6:3;305:922;-1:-1:-1;;;;;305:922:3:o;1232:180::-;1291:6;1344:2;1332:9;1323:7;1319:23;1315:32;1312:52;;;1360:1;1357;1350:12;1312:52;-1:-1:-1;1383:23:3;;1232:180;-1:-1:-1;1232:180:3:o;1417:276::-;1548:3;1586:6;1580:13;1602:53;1648:6;1643:3;1636:4;1628:6;1624:17;1602:53;:::i;:::-;1671:16;;;;;1417:276;-1:-1:-1;;1417:276:3:o;1906:658::-;2077:2;2129:21;;;2199:13;;2102:18;;;2221:22;;;2048:4;;2077:2;2300:15;;;;2274:2;2259:18;;;2048:4;2343:195;2357:6;2354:1;2351:13;2343:195;;;2422:13;;-1:-1:-1;;;;;2418:39:3;2406:52;;2513:15;;;;2478:12;;;;2454:1;2372:9;2343:195;;;-1:-1:-1;2555:3:3;;1906:658;-1:-1:-1;;;;;;1906:658:3:o;2751:995::-;3037:4;3077:1;3069:6;3066:13;3056:144;;3122:10;3117:3;3113:20;3110:1;3103:31;3157:4;3154:1;3147:15;3185:4;3182:1;3175:15;3056:144;3227:6;3216:9;3209:25;3270:3;3265:2;3254:9;3250:18;3243:31;3303:6;3297:13;3347:6;3341:3;3330:9;3326:19;3319:35;3373:3;3385:66;3444:6;3439:2;3428:9;3424:18;3419:2;3411:6;3407:15;3385:66;:::i;:::-;3553:2;3538:18;;3531:34;;;;3596:2;3581:18;;3574:34;;;;-1:-1:-1;3639:3:3;3624:19;;3617:35;;;;3683:3;3668:19;;3661:35;;;;3727:3;3712:19;;3705:35;3512:2;3491:15;;;-1:-1:-1;;3487:29:3;3472:45;3468:54;;;-1:-1:-1;;2751:995:3:o;4686:258::-;4758:1;4768:113;4782:6;4779:1;4776:13;4768:113;;;4858:11;;;4852:18;4839:11;;;4832:39;4804:2;4797:10;4768:113;;;4899:6;4896:1;4893:13;4890:48;;;4934:1;4925:6;4920:3;4916:16;4909:27;4890:48;;4686:258;;;:::o;4949:380::-;5028:1;5024:12;;;;5071;;;5092:61;;5146:4;5138:6;5134:17;5124:27;;5092:61;5199:2;5191:6;5188:14;5168:18;5165:38;5162:161;;;5245:10;5240:3;5236:20;5233:1;5226:31;5280:4;5277:1;5270:15;5308:4;5305:1;5298:15;5162:161;;4949:380;;;:::o;5334:127::-;5395:10;5390:3;5386:20;5383:1;5376:31;5426:4;5423:1;5416:15;5450:4;5447:1;5440:15;5466:127;5527:10;5522:3;5518:20;5515:1;5508:31;5558:4;5555:1;5548:15;5582:4;5579:1;5572:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "395800",
								"executionCost": "44642",
								"totalCost": "440442"
							},
							"external": {
								"blackList(uint256)": "4658",
								"getBalanceEth(address)": "3076",
								"getBalancePrivateToken(address)": "2676",
								"getBalancePublicToken(address)": "2566",
								"getBalanceSeedToken(address)": "2500",
								"get_blackList()": "infinite",
								"get_keccak256(string)": "infinite",
								"get_whiteList()": "infinite",
								"structUsers_(address)": "infinite",
								"tokenAmount_()": "2416",
								"tokenPrice_()": "2262",
								"whiteList(uint256)": "4636"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 104,
									"end": 1709,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1152,
									"end": 1161,
									"name": "PUSH",
									"source": 2,
									"value": "2CB41780"
								},
								{
									"begin": 1123,
									"end": 1161,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1123,
									"end": 1161,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1412,
									"end": 1418,
									"name": "PUSH",
									"source": 2,
									"value": "186A0"
								},
								{
									"begin": 1385,
									"end": 1418,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1385,
									"end": 1418,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122022f6446f17f1b217107db37b5fd11c38c89f0d2c5f0e1f6e6733f63bfe68d07f64736f6c63430008070033",
									".code": [
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "761C8B9"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "2599D6D0"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "5C475D42"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "709EC8B4"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "72F0D72B"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "7F89128F"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "8E4F8C6B"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "948942AD"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "99067EDE"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "B06CDC12"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "C10E3911"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "FC837259"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2740,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2715,
											"end": 2740,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2715,
											"end": 2740,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2703,
											"end": 2705,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2688,
											"end": 2706,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 849,
											"end": 988,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 945,
											"end": 967,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 918,
											"end": 925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 945,
											"end": 967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 945,
											"end": 967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 945,
											"end": 967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 945,
											"end": 967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 945,
											"end": 967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 945,
											"end": 967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 945,
											"end": 967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 945,
											"end": 967,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 945,
											"end": 967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 945,
											"end": 967,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 945,
											"end": 980,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 945,
											"end": 980,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 945,
											"end": 980,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 945,
											"end": 980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1862,
											"end": 1894,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1844,
											"end": 1895,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1844,
											"end": 1895,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1832,
											"end": 1834,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1817,
											"end": 1835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1698,
											"end": 1901,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1487,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1450,
											"end": 1487,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1487,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1595,
											"end": 1706,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1595,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1595,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1595,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1595,
											"end": 1706,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1595,
											"end": 1706,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1595,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1595,
											"end": 1706,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1595,
											"end": 1706,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1595,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1678,
											"end": 1698,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1698,
											"name": "BALANCE",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1595,
											"end": 1706,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1177,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1235,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1197,
											"end": 1235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1235,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 426,
											"end": 554,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 426,
											"end": 554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 426,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 426,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 426,
											"end": 554,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 632,
											"end": 742,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 688,
											"end": 704,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 320,
											"end": 337,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 300,
											"end": 310,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 287,
											"end": 299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 287,
											"end": 311,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 287,
											"end": 311,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 287,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 287,
											"end": 311,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 287,
											"end": 311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 287,
											"end": 311,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 287,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 287,
											"end": 311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 287,
											"end": 311,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 287,
											"end": 316,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 287,
											"end": 316,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 287,
											"end": 316,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 287,
											"end": 337,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 287,
											"end": 337,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 287,
											"end": 337,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 287,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 287,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 287,
											"end": 337,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 279,
											"end": 356,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 279,
											"end": 356,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4363,
											"end": 4365,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 279,
											"end": 356,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 279,
											"end": 356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4345,
											"end": 4366,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4402,
											"end": 4404,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 4382,
											"end": 4400,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4382,
											"end": 4400,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4400,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4405,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CB7BAB9103737BA1030B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4421,
											"end": 4439,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4421,
											"end": 4439,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4421,
											"end": 4439,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4414,
											"end": 4458,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4475,
											"end": 4493,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4475,
											"end": 4493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 279,
											"end": 356,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 279,
											"end": 356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 279,
											"end": 356,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 279,
											"end": 356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 724,
											"end": 733,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 717,
											"end": 734,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 276,
											"end": 283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 307,
											"end": 341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 341,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 307,
											"end": 341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 341,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 307,
											"end": 341,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 307,
											"end": 341,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 300,
											"end": 342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 426,
											"end": 554,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 426,
											"end": 554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 500,
											"end": 516,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1116,
											"end": 1133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1096,
											"end": 1106,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1112,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1112,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1083,
											"end": 1112,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1083,
											"end": 1189,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1170,
											"end": 1189,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1150,
											"end": 1160,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1166,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1166,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1137,
											"end": 1166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1189,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1083,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 3955,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 3956,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3992,
											"end": 3994,
											"name": "PUSH",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3972,
											"end": 3990,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3972,
											"end": 3990,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3972,
											"end": 3990,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3965,
											"end": 3995,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4065,
											"name": "PUSH",
											"source": 3,
											"value": "596F7520617265206E6F7420746865206F776E6572206F722070726976617465"
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4004,
											"end": 4066,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "10383937BB34B232B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4082,
											"end": 4100,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4082,
											"end": 4100,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4082,
											"end": 4100,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4075,
											"end": 4114,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4131,
											"end": 4150,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 4131,
											"end": 4150,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3751,
											"end": 4156,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 536,
											"end": 545,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 529,
											"end": 546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 426,
											"end": 554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 426,
											"end": 554,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 305,
											"end": 1227,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 305,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 374,
											"end": 380,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 429,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 406,
											"end": 413,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 402,
											"end": 425,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 398,
											"end": 430,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 395,
											"end": 447,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 395,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 395,
											"end": 447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 395,
											"end": 447,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 395,
											"end": 447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 470,
											"end": 493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 470,
											"end": 493,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 542,
											"end": 556,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 542,
											"end": 556,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 542,
											"end": 556,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 539,
											"end": 573,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 539,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 539,
											"end": 573,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 569,
											"end": 570,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 567,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 559,
											"end": 571,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 539,
											"end": 573,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 539,
											"end": 573,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 607,
											"end": 613,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 596,
											"end": 605,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 592,
											"end": 614,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 582,
											"end": 614,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 582,
											"end": 614,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 652,
											"end": 659,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 645,
											"end": 649,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 641,
											"end": 643,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 637,
											"end": 650,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 633,
											"end": 660,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 623,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 623,
											"end": 678,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 674,
											"end": 675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 672,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 664,
											"end": 676,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 623,
											"end": 678,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 623,
											"end": 678,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 710,
											"end": 712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 697,
											"end": 713,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 732,
											"end": 734,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 728,
											"end": 730,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 725,
											"end": 735,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 722,
											"end": 758,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 722,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 722,
											"end": 758,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 738,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 813,
											"end": 815,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 816,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 781,
											"end": 783,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 867,
											"end": 880,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 867,
											"end": 880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 863,
											"end": 885,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 863,
											"end": 885,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 863,
											"end": 885,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 887,
											"end": 889,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 859,
											"end": 890,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 855,
											"end": 895,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 843,
											"end": 896,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 843,
											"end": 896,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 843,
											"end": 896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 911,
											"end": 929,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 911,
											"end": 929,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 911,
											"end": 929,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 931,
											"end": 953,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 931,
											"end": 953,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 931,
											"end": 953,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 908,
											"end": 954,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 905,
											"end": 977,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 905,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 905,
											"end": 977,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 957,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 957,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 957,
											"end": 975,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 957,
											"end": 975,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 957,
											"end": 975,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1007,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 993,
											"end": 995,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 986,
											"end": 1008,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1034,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1030,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1035,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1072,
											"end": 1079,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1067,
											"end": 1069,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1064,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1058,
											"end": 1060,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1065,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1070,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1097,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1044,
											"end": 1097,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1093,
											"end": 1094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1090,
											"end": 1091,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1095,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1097,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1044,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1151,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1144,
											"end": 1146,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1147,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1133,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1123,
											"end": 1129,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1134,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1106,
											"end": 1152,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 1194,
											"end": 1195,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1187,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1187,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1187,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1191,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1168,
											"end": 1192,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1196,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1196,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1196,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1196,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1176,
											"end": 1182,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 305,
											"end": 1227,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 305,
											"end": 1227,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1232,
											"end": 1412,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1232,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1344,
											"end": 1346,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1341,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1323,
											"end": 1330,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1319,
											"end": 1342,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1347,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1364,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1312,
											"end": 1364,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1361,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1357,
											"end": 1358,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1362,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1312,
											"end": 1364,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1312,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1383,
											"end": 1406,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1383,
											"end": 1406,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1412,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1232,
											"end": 1412,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1417,
											"end": 1693,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1417,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1551,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1592,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1580,
											"end": 1593,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1602,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1648,
											"end": 1654,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1643,
											"end": 1646,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1636,
											"end": 1640,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1634,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1624,
											"end": 1641,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1602,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 1602,
											"end": 1655,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1602,
											"end": 1655,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1602,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1687,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1687,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1687,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1687,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1417,
											"end": 1693,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1417,
											"end": 1693,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1906,
											"end": 2564,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1906,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2077,
											"end": 2079,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2129,
											"end": 2150,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2129,
											"end": 2150,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2129,
											"end": 2150,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2212,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2212,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2120,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2120,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2120,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2221,
											"end": 2243,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2221,
											"end": 2243,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2221,
											"end": 2243,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2052,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2052,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2077,
											"end": 2079,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2300,
											"end": 2315,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2300,
											"end": 2315,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2300,
											"end": 2315,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2300,
											"end": 2315,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2276,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2259,
											"end": 2277,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2259,
											"end": 2277,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2259,
											"end": 2277,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2048,
											"end": 2052,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2343,
											"end": 2538,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2343,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2357,
											"end": 2363,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2354,
											"end": 2355,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2351,
											"end": 2364,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2343,
											"end": 2538,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2343,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2343,
											"end": 2538,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2422,
											"end": 2435,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2418,
											"end": 2457,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2406,
											"end": 2458,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2406,
											"end": 2458,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2528,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2528,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2513,
											"end": 2528,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2454,
											"end": 2455,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2372,
											"end": 2381,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2343,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2343,
											"end": 2538,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2343,
											"end": 2538,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 2343,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2555,
											"end": 2558,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2555,
											"end": 2558,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 1906,
											"end": 2564,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1906,
											"end": 2564,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2751,
											"end": 3746,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2751,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3037,
											"end": 3041,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3077,
											"end": 3078,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3069,
											"end": 3075,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 3066,
											"end": 3079,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3056,
											"end": 3200,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3122,
											"end": 3132,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 3117,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 3113,
											"end": 3133,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 3110,
											"end": 3111,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3103,
											"end": 3134,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3157,
											"end": 3161,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3154,
											"end": 3155,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3147,
											"end": 3162,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3189,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3182,
											"end": 3183,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3175,
											"end": 3190,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3200,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3056,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3227,
											"end": 3233,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3216,
											"end": 3225,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3209,
											"end": 3234,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3270,
											"end": 3273,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 3265,
											"end": 3267,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3254,
											"end": 3263,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3250,
											"end": 3268,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3243,
											"end": 3274,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3309,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3297,
											"end": 3310,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3353,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3341,
											"end": 3344,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 3330,
											"end": 3339,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3326,
											"end": 3345,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3319,
											"end": 3354,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3373,
											"end": 3376,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3385,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3444,
											"end": 3450,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3441,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3428,
											"end": 3437,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3424,
											"end": 3442,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3419,
											"end": 3421,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3411,
											"end": 3417,
											"name": "DUP14",
											"source": 3
										},
										{
											"begin": 3407,
											"end": 3422,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3385,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 3385,
											"end": 3451,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3385,
											"end": 3451,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 3385,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3553,
											"end": 3555,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3538,
											"end": 3556,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3556,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3531,
											"end": 3565,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 3531,
											"end": 3565,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3531,
											"end": 3565,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 3531,
											"end": 3565,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3596,
											"end": 3598,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3581,
											"end": 3599,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3581,
											"end": 3599,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3574,
											"end": 3608,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 3574,
											"end": 3608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3574,
											"end": 3608,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 3574,
											"end": 3608,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3639,
											"end": 3642,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3624,
											"end": 3643,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3624,
											"end": 3643,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3617,
											"end": 3652,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3617,
											"end": 3652,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3617,
											"end": 3652,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3617,
											"end": 3652,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3683,
											"end": 3686,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 3668,
											"end": 3687,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3668,
											"end": 3687,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3661,
											"end": 3696,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3661,
											"end": 3696,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3661,
											"end": 3696,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3661,
											"end": 3696,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3730,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 3712,
											"end": 3731,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3712,
											"end": 3731,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3705,
											"end": 3740,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3514,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3491,
											"end": 3506,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3491,
											"end": 3506,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3491,
											"end": 3506,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3487,
											"end": 3516,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3472,
											"end": 3517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3468,
											"end": 3522,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3468,
											"end": 3522,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3468,
											"end": 3522,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2751,
											"end": 3746,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4686,
											"end": 4944,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 4686,
											"end": 4944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4758,
											"end": 4759,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4768,
											"end": 4881,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4768,
											"end": 4881,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4782,
											"end": 4788,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4779,
											"end": 4780,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 4789,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4768,
											"end": 4881,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4768,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4768,
											"end": 4881,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4858,
											"end": 4869,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4858,
											"end": 4869,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4858,
											"end": 4869,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4839,
											"end": 4850,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4839,
											"end": 4850,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4839,
											"end": 4850,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4832,
											"end": 4871,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4804,
											"end": 4806,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4797,
											"end": 4807,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4768,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4768,
											"end": 4881,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4768,
											"end": 4881,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4768,
											"end": 4881,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4899,
											"end": 4905,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4896,
											"end": 4897,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4893,
											"end": 4906,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4890,
											"end": 4938,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4890,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 4890,
											"end": 4938,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4934,
											"end": 4935,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4931,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4920,
											"end": 4923,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4916,
											"end": 4932,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4909,
											"end": 4936,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4890,
											"end": 4938,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 4890,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4890,
											"end": 4938,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4686,
											"end": 4944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4686,
											"end": 4944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4686,
											"end": 4944,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4686,
											"end": 4944,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4949,
											"end": 5329,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 4949,
											"end": 5329,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5028,
											"end": 5029,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5024,
											"end": 5036,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5024,
											"end": 5036,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5024,
											"end": 5036,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 5024,
											"end": 5036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5083,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5083,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5071,
											"end": 5083,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5092,
											"end": 5153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 5092,
											"end": 5153,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5146,
											"end": 5150,
											"name": "PUSH",
											"source": 3,
											"value": "7F"
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5134,
											"end": 5151,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5124,
											"end": 5151,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5124,
											"end": 5151,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5092,
											"end": 5153,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 5092,
											"end": 5153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5199,
											"end": 5201,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5191,
											"end": 5197,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5188,
											"end": 5202,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5165,
											"end": 5203,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5323,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5323,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 5162,
											"end": 5323,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5255,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 5240,
											"end": 5243,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 5236,
											"end": 5256,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 5233,
											"end": 5234,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5226,
											"end": 5257,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5280,
											"end": 5284,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 5277,
											"end": 5278,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5270,
											"end": 5285,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5308,
											"end": 5312,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5305,
											"end": 5306,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5298,
											"end": 5313,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5323,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 5162,
											"end": 5323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5323,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 5329,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 5329,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 5329,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 5329,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5334,
											"end": 5461,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 5334,
											"end": 5461,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5395,
											"end": 5405,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 5390,
											"end": 5393,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 5386,
											"end": 5406,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 5383,
											"end": 5384,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5376,
											"end": 5407,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5426,
											"end": 5430,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 5423,
											"end": 5424,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5416,
											"end": 5431,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5450,
											"end": 5454,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5447,
											"end": 5448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5440,
											"end": 5455,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5466,
											"end": 5593,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 5466,
											"end": 5593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5527,
											"end": 5537,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 5522,
											"end": 5525,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 5518,
											"end": 5538,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 5515,
											"end": 5516,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5508,
											"end": 5539,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5558,
											"end": 5562,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 5555,
											"end": 5556,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5548,
											"end": 5563,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5582,
											"end": 5586,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5579,
											"end": 5580,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5572,
											"end": 5587,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"blackList(uint256)": "709ec8b4",
							"getBalanceEth(address)": "99067ede",
							"getBalancePrivateToken(address)": "b06cdc12",
							"getBalancePublicToken(address)": "72f0d72b",
							"getBalanceSeedToken(address)": "2599d6d0",
							"get_blackList()": "7f89128f",
							"get_keccak256(string)": "8e4f8c6b",
							"get_whiteList()": "c10e3911",
							"structUsers_(address)": "fc837259",
							"tokenAmount_()": "948942ad",
							"tokenPrice_()": "0761c8b9",
							"whiteList(uint256)": "5c475d42"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"blackList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"getBalanceEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAdr\",\"type\":\"address\"}],\"name\":\"getBalancePrivateToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAdr\",\"type\":\"address\"}],\"name\":\"getBalancePublicToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAdr\",\"type\":\"address\"}],\"name\":\"getBalanceSeedToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_blackList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"get_keccak256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_whiteList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"structUsers_\",\"outputs\":[{\"internalType\":\"enum structures.Role\",\"name\":\"role\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"login\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"password\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"balance_overall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance_seed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance_private\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance_public\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAmount_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"whiteList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":\"helpresFunc\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":{\"keccak256\":\"0x3ddbddb851b15da5ec8f16c56887cf73d7f4357c7121b35680c335fe17b3810e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://67e0c2995856ad3955ca0230b92cfbdea7e8efdee28de165f6e2f206666250cd\",\"dweb:/ipfs/QmRq59xFmiH4iDQFfkUZgeow2Khgeeh2qPRG8SEao3SUEC\"]},\"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":{\"keccak256\":\"0x791815edf6d8d205da15be693b57ddde64d7cf3bf65ad29c748e9e98c1f675ac\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://de960745a1c9cf451cc7401bef8c7090fec7892241a55138c64740527bc9e11c\",\"dweb:/ipfs/QmNdesY61PZkUX2jpu1FqgUURAPcFWybkSCLG98zrHtsFG\"]},\"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":{\"keccak256\":\"0xf9f627f7dd8a6f3b6dbfbf598d682a703332de43f360f47d8fbc230c9704fb7f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://17634dcb263feecfa368c39c34ac70e5e049c9ba55913705091e454a029ee382\",\"dweb:/ipfs/QmYdrubNJZSuyQtQYTdRF7f4KFPLsfURHxXGmatbp1S3xo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 249,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "structUsers_",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(structUser)244_storage)"
							},
							{
								"astId": 255,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "allowed",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 258,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "tokenPrice_",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 261,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "tokenAmount_",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 280,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "structPhases_",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(structPhase)275_storage)"
							},
							{
								"astId": 296,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "strucApplications_",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(structApplication)291_storage)"
							},
							{
								"astId": 299,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "structApplicationsAmountAdr",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 302,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "whiteList",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 305,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "blackList",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(Role)228": {
								"encoding": "inplace",
								"label": "enum structures.Role",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(structApplication)291_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structApplication)",
								"numberOfBytes": "32",
								"value": "t_struct(structApplication)291_storage"
							},
							"t_mapping(t_address,t_struct(structPhase)275_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structPhase)",
								"numberOfBytes": "32",
								"value": "t_struct(structPhase)275_storage"
							},
							"t_mapping(t_address,t_struct(structUser)244_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structUser)",
								"numberOfBytes": "32",
								"value": "t_struct(structUser)244_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(structApplication)291_storage": {
								"encoding": "inplace",
								"label": "struct structures.structApplication",
								"members": [
									{
										"astId": 282,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 284,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "contactForCommunication",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 286,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "userAdr",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 288,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "status",
										"offset": 20,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 290,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "exist",
										"offset": 21,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(structPhase)275_storage": {
								"encoding": "inplace",
								"label": "struct structures.structPhase",
								"members": [
									{
										"astId": 272,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "statusPhase",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 274,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "reviewed",
										"offset": 1,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(structUser)244_storage": {
								"encoding": "inplace",
								"label": "struct structures.structUser",
								"members": [
									{
										"astId": 231,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "role",
										"offset": 0,
										"slot": "0",
										"type": "t_enum(Role)228"
									},
									{
										"astId": 233,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "login",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 235,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "password",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									},
									{
										"astId": 237,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "balance_overall",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 239,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "balance_seed",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 241,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "balance_private",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 243,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "balance_public",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol": {
				"modifireFunc": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "blackList",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "structUsers_",
							"outputs": [
								{
									"internalType": "enum structures.Role",
									"name": "role",
									"type": "uint8"
								},
								{
									"internalType": "string",
									"name": "login",
									"type": "string"
								},
								{
									"internalType": "bytes32",
									"name": "password",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "balance_overall",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balance_seed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balance_private",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balance_public",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAmount_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenPrice_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "whiteList",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":107:1779  contract modifireFunc is structures {\r... */\n  mstore(0x40, 0x80)\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1152:1161  750000000 */\n  0x2cb41780\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1123:1161  uint256 public tokenPrice_ = 750000000 */\n  0x02\n  sstore\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1412:1418  100000 */\n  0x0186a0\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1385:1418  uint public tokenAmount_ = 100000 */\n  0x03\n  sstore\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":107:1779  contract modifireFunc is structures {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":107:1779  contract modifireFunc is structures {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0761c8b9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5c475d42\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x709ec8b4\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x948942ad\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xfc837259\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1123:1161  uint256 public tokenPrice_ = 750000000 */\n    tag_3:\n      tag_8\n      sload(0x02)\n      dup2\n      jump\n    tag_8:\n      mload(0x40)\n        /* \"#utility.yul\":2039:2064   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2027:2029   */\n      0x20\n        /* \"#utility.yul\":2012:2030   */\n      add\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1123:1161  uint256 public tokenPrice_ = 750000000 */\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":3075:3101  address[] public whiteList */\n    tag_4:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":654:686   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":636:687   */\n      dup2\n      mstore\n        /* \"#utility.yul\":624:626   */\n      0x20\n        /* \"#utility.yul\":609:627   */\n      add\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":3075:3101  address[] public whiteList */\n      tag_10\n        /* \"#utility.yul\":490:693   */\n      jump\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":3244:3270  address[] public blackList */\n    tag_5:\n      tag_12\n      tag_19\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_19:\n      tag_20\n      jump\t// in\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1385:1418  uint public tokenAmount_ = 100000 */\n    tag_6:\n      tag_8\n      sload(0x03)\n      dup2\n      jump\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":836:887  mapping (address => structUser) public structUsers_ */\n    tag_7:\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_10\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":3075:3101  address[] public whiteList */\n    tag_15:\n      0x07\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":3244:3270  address[] public blackList */\n    tag_20:\n      0x08\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":836:887  mapping (address => structUser) public structUsers_ */\n    tag_28:\n      0x00\n      0x20\n      dup2\n      swap1\n      mstore\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      0xff\n      swap1\n      swap3\n      and\n      swap3\n      swap2\n      tag_35\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_37\n      swap1\n      tag_36\n      jump\t// in\n    tag_37:\n      dup1\n      iszero\n      tag_38\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_39\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_38)\n    tag_39:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_40:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_40\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_38:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      sload\n      swap1\n      pop\n      dup8\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_27:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_43\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_43:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_44\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_44:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":305:485   */\n    tag_14:\n        /* \"#utility.yul\":364:370   */\n      0x00\n        /* \"#utility.yul\":417:419   */\n      0x20\n        /* \"#utility.yul\":405:414   */\n      dup3\n        /* \"#utility.yul\":396:403   */\n      dup5\n        /* \"#utility.yul\":392:415   */\n      sub\n        /* \"#utility.yul\":388:420   */\n      slt\n        /* \"#utility.yul\":385:437   */\n      iszero\n      tag_46\n      jumpi\n        /* \"#utility.yul\":433:434   */\n      0x00\n        /* \"#utility.yul\":430:431   */\n      dup1\n        /* \"#utility.yul\":423:435   */\n      revert\n        /* \"#utility.yul\":385:437   */\n    tag_46:\n      pop\n        /* \"#utility.yul\":456:479   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":305:485   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":698:1888   */\n    tag_30:\n        /* \"#utility.yul\":984:988   */\n      0x00\n        /* \"#utility.yul\":1024:1025   */\n      0x05\n        /* \"#utility.yul\":1016:1022   */\n      dup10\n        /* \"#utility.yul\":1013:1026   */\n      lt\n        /* \"#utility.yul\":1003:1147   */\n      tag_49\n      jumpi\n        /* \"#utility.yul\":1069:1079   */\n      0x4e487b71\n        /* \"#utility.yul\":1064:1067   */\n      0xe0\n        /* \"#utility.yul\":1060:1080   */\n      shl\n        /* \"#utility.yul\":1057:1058   */\n      0x00\n        /* \"#utility.yul\":1050:1081   */\n      mstore\n        /* \"#utility.yul\":1104:1108   */\n      0x21\n        /* \"#utility.yul\":1101:1102   */\n      0x04\n        /* \"#utility.yul\":1094:1109   */\n      mstore\n        /* \"#utility.yul\":1132:1136   */\n      0x24\n        /* \"#utility.yul\":1129:1130   */\n      0x00\n        /* \"#utility.yul\":1122:1137   */\n      revert\n        /* \"#utility.yul\":1003:1147   */\n    tag_49:\n        /* \"#utility.yul\":1174:1180   */\n      dup9\n        /* \"#utility.yul\":1163:1172   */\n      dup3\n        /* \"#utility.yul\":1156:1181   */\n      mstore\n        /* \"#utility.yul\":1200:1202   */\n      0x20\n        /* \"#utility.yul\":1238:1241   */\n      0xe0\n        /* \"#utility.yul\":1233:1235   */\n      dup2\n        /* \"#utility.yul\":1222:1231   */\n      dup5\n        /* \"#utility.yul\":1218:1236   */\n      add\n        /* \"#utility.yul\":1211:1242   */\n      mstore\n        /* \"#utility.yul\":1271:1277   */\n      dup9\n        /* \"#utility.yul\":1265:1278   */\n      mload\n        /* \"#utility.yul\":1315:1321   */\n      dup1\n        /* \"#utility.yul\":1309:1312   */\n      0xe0\n        /* \"#utility.yul\":1298:1307   */\n      dup6\n        /* \"#utility.yul\":1294:1313   */\n      add\n        /* \"#utility.yul\":1287:1322   */\n      mstore\n        /* \"#utility.yul\":1340:1341   */\n      0x00\n        /* \"#utility.yul\":1350:1491   */\n    tag_50:\n        /* \"#utility.yul\":1364:1370   */\n      dup2\n        /* \"#utility.yul\":1361:1362   */\n      dup2\n        /* \"#utility.yul\":1358:1371   */\n      lt\n        /* \"#utility.yul\":1350:1491   */\n      iszero\n      tag_52\n      jumpi\n        /* \"#utility.yul\":1460:1474   */\n      dup11\n      dup2\n      add\n        /* \"#utility.yul\":1456:1479   */\n      dup4\n      add\n        /* \"#utility.yul\":1450:1480   */\n      mload\n        /* \"#utility.yul\":1425:1442   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1444:1447   */\n      0x0100\n        /* \"#utility.yul\":1421:1448   */\n      add\n        /* \"#utility.yul\":1414:1481   */\n      mstore\n        /* \"#utility.yul\":1379:1389   */\n      dup3\n      add\n        /* \"#utility.yul\":1350:1491   */\n      jump(tag_50)\n    tag_52:\n        /* \"#utility.yul\":1509:1515   */\n      dup2\n        /* \"#utility.yul\":1506:1507   */\n      dup2\n        /* \"#utility.yul\":1503:1516   */\n      gt\n        /* \"#utility.yul\":1500:1592   */\n      iszero\n      tag_53\n      jumpi\n        /* \"#utility.yul\":1580:1581   */\n      0x00\n        /* \"#utility.yul\":1574:1577   */\n      0x0100\n        /* \"#utility.yul\":1565:1571   */\n      dup4\n        /* \"#utility.yul\":1554:1563   */\n      dup8\n        /* \"#utility.yul\":1550:1572   */\n      add\n        /* \"#utility.yul\":1546:1578   */\n      add\n        /* \"#utility.yul\":1539:1582   */\n      mstore\n        /* \"#utility.yul\":1500:1592   */\n    tag_53:\n      pop\n        /* \"#utility.yul\":1695:1697   */\n      0x40\n        /* \"#utility.yul\":1680:1698   */\n      dup5\n      add\n        /* \"#utility.yul\":1673:1707   */\n      swap9\n      swap1\n      swap9\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":1738:1740   */\n      0x60\n        /* \"#utility.yul\":1723:1741   */\n      dup2\n      add\n        /* \"#utility.yul\":1716:1750   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":1781:1784   */\n      0x80\n        /* \"#utility.yul\":1766:1785   */\n      dup5\n      add\n        /* \"#utility.yul\":1759:1794   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":1825:1828   */\n      0xa0\n        /* \"#utility.yul\":1810:1829   */\n      dup4\n      add\n        /* \"#utility.yul\":1803:1838   */\n      mstore\n        /* \"#utility.yul\":1869:1872   */\n      0xc0\n        /* \"#utility.yul\":1854:1873   */\n      dup3\n      add\n        /* \"#utility.yul\":1847:1882   */\n      mstore\n        /* \"#utility.yul\":1660:1663   */\n      0x0100\n        /* \"#utility.yul\":1653:1655   */\n      0x1f\n        /* \"#utility.yul\":1632:1647   */\n      swap1\n      swap3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1628:1657   */\n      and\n        /* \"#utility.yul\":1613:1658   */\n      add\n        /* \"#utility.yul\":1609:1664   */\n      add\n      swap3\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":698:1888   */\n      jump\t// out\n        /* \"#utility.yul\":2075:2455   */\n    tag_36:\n        /* \"#utility.yul\":2154:2155   */\n      0x01\n        /* \"#utility.yul\":2150:2162   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2197:2209   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2218:2279   */\n      tag_56\n      jumpi\n        /* \"#utility.yul\":2272:2276   */\n      0x7f\n        /* \"#utility.yul\":2264:2270   */\n      dup3\n        /* \"#utility.yul\":2260:2277   */\n      and\n        /* \"#utility.yul\":2250:2277   */\n      swap2\n      pop\n        /* \"#utility.yul\":2218:2279   */\n    tag_56:\n        /* \"#utility.yul\":2325:2327   */\n      0x20\n        /* \"#utility.yul\":2317:2323   */\n      dup3\n        /* \"#utility.yul\":2314:2328   */\n      lt\n        /* \"#utility.yul\":2294:2312   */\n      dup2\n        /* \"#utility.yul\":2291:2329   */\n      eq\n        /* \"#utility.yul\":2288:2449   */\n      iszero\n      tag_57\n      jumpi\n        /* \"#utility.yul\":2371:2381   */\n      0x4e487b71\n        /* \"#utility.yul\":2366:2369   */\n      0xe0\n        /* \"#utility.yul\":2362:2382   */\n      shl\n        /* \"#utility.yul\":2359:2360   */\n      0x00\n        /* \"#utility.yul\":2352:2383   */\n      mstore\n        /* \"#utility.yul\":2406:2410   */\n      0x22\n        /* \"#utility.yul\":2403:2404   */\n      0x04\n        /* \"#utility.yul\":2396:2411   */\n      mstore\n        /* \"#utility.yul\":2434:2438   */\n      0x24\n        /* \"#utility.yul\":2431:2432   */\n      0x00\n        /* \"#utility.yul\":2424:2439   */\n      revert\n        /* \"#utility.yul\":2288:2449   */\n    tag_57:\n      pop\n        /* \"#utility.yul\":2075:2455   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205fe3bce9010edf2b462a0812f205a021eca633b27f5fd74c000e1d75696ad1f664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052632cb41780600255620186a060035534801561001f57600080fd5b5061033f8061002f6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630761c8b91461005c5780635c475d4214610078578063709ec8b4146100a3578063948942ad146100b6578063fc837259146100bf575b600080fd5b61006560025481565b6040519081526020015b60405180910390f35b61008b610086366004610216565b6100e5565b6040516001600160a01b03909116815260200161006f565b61008b6100b1366004610216565b61010f565b61006560035481565b6100d26100cd3660046101e6565b61011f565b60405161006f979695949392919061022f565b600781815481106100f557600080fd5b6000918252602090912001546001600160a01b0316905081565b600881815481106100f557600080fd5b6000602081905290815260409020805460018201805460ff9092169291610145906102ce565b80601f0160208091040260200160405190810160405280929190818152602001828054610171906102ce565b80156101be5780601f10610193576101008083540402835291602001916101be565b820191906000526020600020905b8154815290600101906020018083116101a157829003601f168201915b5050505050908060020154908060030154908060040154908060050154908060060154905087565b6000602082840312156101f857600080fd5b81356001600160a01b038116811461020f57600080fd5b9392505050565b60006020828403121561022857600080fd5b5035919050565b60006005891061024f57634e487b7160e01b600052602160045260246000fd5b888252602060e08184015288518060e085015260005b81811015610282578a810183015185820161010001528201610265565b8181111561029557600061010083870101525b50604084019890985250506060810194909452608084019290925260a083015260c0820152610100601f909201601f1916010192915050565b600181811c908216806102e257607f821691505b6020821081141561030357634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212205fe3bce9010edf2b462a0812f205a021eca633b27f5fd74c000e1d75696ad1f664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH4 0x2CB41780 PUSH1 0x2 SSTORE PUSH3 0x186A0 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F DUP1 PUSH2 0x2F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761C8B9 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x5C475D42 EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0x709EC8B4 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x948942AD EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0xFC837259 EQ PUSH2 0xBF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x65 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8B PUSH2 0x86 CALLDATASIZE PUSH1 0x4 PUSH2 0x216 JUMP JUMPDEST PUSH2 0xE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6F JUMP JUMPDEST PUSH2 0x8B PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x216 JUMP JUMPDEST PUSH2 0x10F JUMP JUMPDEST PUSH2 0x65 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD2 PUSH2 0xCD CALLDATASIZE PUSH1 0x4 PUSH2 0x1E6 JUMP JUMPDEST PUSH2 0x11F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22F JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH2 0x145 SWAP1 PUSH2 0x2CE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x171 SWAP1 PUSH2 0x2CE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1BE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x193 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1BE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP10 LT PUSH2 0x24F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP9 DUP3 MSTORE PUSH1 0x20 PUSH1 0xE0 DUP2 DUP5 ADD MSTORE DUP9 MLOAD DUP1 PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x282 JUMPI DUP11 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH2 0x100 ADD MSTORE DUP3 ADD PUSH2 0x265 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 PUSH2 0x100 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x40 DUP5 ADD SWAP9 SWAP1 SWAP9 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x100 PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2E2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x303 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0xE3 0xBC 0xE9 ADD 0xE 0xDF 0x2B CHAINID 0x2A ADDMOD SLT CALLCODE SDIV LOG0 0x21 0xEC 0xA6 CALLER 0xB2 PUSH32 0x5FD74C000E1D75696AD1F664736F6C6343000807003300000000000000000000 ",
							"sourceMap": "107:1672:1:-:0;;;1152:9:2;1123:38;;1412:6;1385:33;;107:1672:1;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@blackList_305": {
									"entryPoint": 271,
									"id": 305,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@structUsers__249": {
									"entryPoint": 287,
									"id": 249,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenAmount__261": {
									"entryPoint": null,
									"id": 261,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenPrice__258": {
									"entryPoint": null,
									"id": 258,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@whiteList_302": {
									"entryPoint": 229,
									"id": 302,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_Role_$228_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint8_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2457:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:216:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:3"
															},
															"nodeType": "YulIf",
															"src": "94:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "239:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "244:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "248:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:50:3"
															},
															"nodeType": "YulIf",
															"src": "200:70:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:3",
														"type": ""
													}
												],
												"src": "14:286:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "375:110:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "421:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "430:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "433:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "423:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "423:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "396:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "405:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "392:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "392:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "417:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "388:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "388:32:3"
															},
															"nodeType": "YulIf",
															"src": "385:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "446:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "469:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "456:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "456:23:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "446:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "341:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "352:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "364:6:3",
														"type": ""
													}
												],
												"src": "305:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "591:102:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "601:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "613:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "609:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "609:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "601:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "643:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "658:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "674:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "679:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "670:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "670:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "683:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "666:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "666:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "654:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "654:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "636:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "636:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "636:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "560:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "571:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "582:4:3",
														"type": ""
													}
												],
												"src": "490:203:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "993:895:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1036:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1057:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1064:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1069:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1060:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1060:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1050:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1050:31:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1050:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1101:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1104:4:3",
																					"type": "",
																					"value": "0x21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1094:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1094:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1094:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1129:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1132:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1122:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1122:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1122:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1016:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1024:1:3",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1013:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1013:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1006:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1006:21:3"
															},
															"nodeType": "YulIf",
															"src": "1003:144:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1163:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1174:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1156:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1156:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1156:25:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1190:12:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1200:2:3",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1194:2:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1222:9:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1233:2:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1218:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1218:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1238:3:3",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1211:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1211:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1211:31:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1251:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1265:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:13:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1255:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1298:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1309:3:3",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1294:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1294:19:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1315:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1287:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1287:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1287:35:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1331:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1340:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1335:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1400:91:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1429:9:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1440:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1425:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1425:17:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1444:3:3",
																							"type": "",
																							"value": "256"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1421:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1421:27:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value1",
																											"nodeType": "YulIdentifier",
																											"src": "1464:6:3"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1472:1:3"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1460:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1460:14:3"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1476:2:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1456:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1456:23:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1450:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1450:30:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1414:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1414:67:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1414:67:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1361:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1364:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1358:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1358:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1372:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1374:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1383:1:3"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1386:2:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1379:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1379:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1374:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1354:3:3",
																"statements": []
															},
															"src": "1350:141:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1525:67:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1554:9:3"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1565:6:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1550:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1550:22:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1574:3:3",
																							"type": "",
																							"value": "256"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1546:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1546:32:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1580:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1539:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1539:43:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1539:43:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1506:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1509:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1503:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1503:13:3"
															},
															"nodeType": "YulIf",
															"src": "1500:92:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:63:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1617:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1636:6:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1644:2:3",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1632:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1632:15:3"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1653:2:3",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1649:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1649:7:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1628:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1628:29:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1613:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1613:45:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1660:3:3",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1609:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1609:55:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1601:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1684:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1695:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1680:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1680:18:3"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1700:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1673:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1673:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1673:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1727:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1738:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1723:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1723:18:3"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "1743:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1716:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1716:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1716:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1770:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1781:3:3",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1766:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1766:19:3"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "1787:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1759:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1759:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1759:35:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1814:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1825:3:3",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1810:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1810:19:3"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "1831:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1803:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1803:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1803:35:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1858:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1869:3:3",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1854:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1854:19:3"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "1875:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1847:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1847:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1847:35:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Role_$228_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint8_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "914:9:3",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "925:6:3",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "933:6:3",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "941:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "949:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "957:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "965:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "973:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "984:4:3",
														"type": ""
													}
												],
												"src": "698:1190:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1994:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2004:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2016:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2027:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2012:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2012:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2004:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2046:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2057:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2039:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2039:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2039:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1963:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1974:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1985:4:3",
														"type": ""
													}
												],
												"src": "1893:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2130:325:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2140:22:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2154:1:3",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2157:4:3"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2150:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2150:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2140:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2171:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2201:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2207:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2197:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2197:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2175:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2248:31:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2250:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2264:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2272:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2260:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2260:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2250:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2228:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2221:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2221:26:3"
															},
															"nodeType": "YulIf",
															"src": "2218:61:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2338:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2359:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2366:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2371:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2362:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2362:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2352:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2352:31:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2352:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2403:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2406:4:3",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2396:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2396:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2396:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2431:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2434:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2424:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2424:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2424:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2294:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2317:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2325:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2314:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2314:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2291:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2291:38:3"
															},
															"nodeType": "YulIf",
															"src": "2288:161:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2110:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2119:6:3",
														"type": ""
													}
												],
												"src": "2075:380:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_enum$_Role_$228_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint8_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        if iszero(lt(value0, 5))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n        let _1 := 32\n        mstore(add(headStart, _1), 224)\n        let length := mload(value1)\n        mstore(add(headStart, 224), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 256), mload(add(add(value1, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 256), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 256)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c80630761c8b91461005c5780635c475d4214610078578063709ec8b4146100a3578063948942ad146100b6578063fc837259146100bf575b600080fd5b61006560025481565b6040519081526020015b60405180910390f35b61008b610086366004610216565b6100e5565b6040516001600160a01b03909116815260200161006f565b61008b6100b1366004610216565b61010f565b61006560035481565b6100d26100cd3660046101e6565b61011f565b60405161006f979695949392919061022f565b600781815481106100f557600080fd5b6000918252602090912001546001600160a01b0316905081565b600881815481106100f557600080fd5b6000602081905290815260409020805460018201805460ff9092169291610145906102ce565b80601f0160208091040260200160405190810160405280929190818152602001828054610171906102ce565b80156101be5780601f10610193576101008083540402835291602001916101be565b820191906000526020600020905b8154815290600101906020018083116101a157829003601f168201915b5050505050908060020154908060030154908060040154908060050154908060060154905087565b6000602082840312156101f857600080fd5b81356001600160a01b038116811461020f57600080fd5b9392505050565b60006020828403121561022857600080fd5b5035919050565b60006005891061024f57634e487b7160e01b600052602160045260246000fd5b888252602060e08184015288518060e085015260005b81811015610282578a810183015185820161010001528201610265565b8181111561029557600061010083870101525b50604084019890985250506060810194909452608084019290925260a083015260c0820152610100601f909201601f1916010192915050565b600181811c908216806102e257607f821691505b6020821081141561030357634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212205fe3bce9010edf2b462a0812f205a021eca633b27f5fd74c000e1d75696ad1f664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761C8B9 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x5C475D42 EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0x709EC8B4 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x948942AD EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0xFC837259 EQ PUSH2 0xBF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x65 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8B PUSH2 0x86 CALLDATASIZE PUSH1 0x4 PUSH2 0x216 JUMP JUMPDEST PUSH2 0xE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6F JUMP JUMPDEST PUSH2 0x8B PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x216 JUMP JUMPDEST PUSH2 0x10F JUMP JUMPDEST PUSH2 0x65 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD2 PUSH2 0xCD CALLDATASIZE PUSH1 0x4 PUSH2 0x1E6 JUMP JUMPDEST PUSH2 0x11F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22F JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH2 0x145 SWAP1 PUSH2 0x2CE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x171 SWAP1 PUSH2 0x2CE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1BE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x193 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1BE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP10 LT PUSH2 0x24F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP9 DUP3 MSTORE PUSH1 0x20 PUSH1 0xE0 DUP2 DUP5 ADD MSTORE DUP9 MLOAD DUP1 PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x282 JUMPI DUP11 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH2 0x100 ADD MSTORE DUP3 ADD PUSH2 0x265 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 PUSH2 0x100 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x40 DUP5 ADD SWAP9 SWAP1 SWAP9 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x100 PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2E2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x303 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0xE3 0xBC 0xE9 ADD 0xE 0xDF 0x2B CHAINID 0x2A ADDMOD SLT CALLCODE SDIV LOG0 0x21 0xEC 0xA6 CALLER 0xB2 PUSH32 0x5FD74C000E1D75696AD1F664736F6C6343000807003300000000000000000000 ",
							"sourceMap": "107:1672:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1123:38:2;;;;;;;;;2039:25:3;;;2027:2;2012:18;1123:38:2;;;;;;;;3075:26;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;654:32:3;;;636:51;;624:2;609:18;3075:26:2;490:203:3;3244:26:2;;;;;;:::i;:::-;;:::i;1385:33::-;;;;;;836:51;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;3075:26::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3075:26:2;;-1:-1:-1;3075:26:2;:::o;3244:::-;;;;;;;;;;;;836:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:286:3:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:3;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:3:o;305:180::-;364:6;417:2;405:9;396:7;392:23;388:32;385:52;;;433:1;430;423:12;385:52;-1:-1:-1;456:23:3;;305:180;-1:-1:-1;305:180:3:o;698:1190::-;984:4;1024:1;1016:6;1013:13;1003:144;;1069:10;1064:3;1060:20;1057:1;1050:31;1104:4;1101:1;1094:15;1132:4;1129:1;1122:15;1003:144;1174:6;1163:9;1156:25;1200:2;1238:3;1233:2;1222:9;1218:18;1211:31;1271:6;1265:13;1315:6;1309:3;1298:9;1294:19;1287:35;1340:1;1350:141;1364:6;1361:1;1358:13;1350:141;;;1460:14;;;1456:23;;1450:30;1425:17;;;1444:3;1421:27;1414:67;1379:10;;1350:141;;;1509:6;1506:1;1503:13;1500:92;;;1580:1;1574:3;1565:6;1554:9;1550:22;1546:32;1539:43;1500:92;-1:-1:-1;1695:2:3;1680:18;;1673:34;;;;-1:-1:-1;;1738:2:3;1723:18;;1716:34;;;;1781:3;1766:19;;1759:35;;;;1825:3;1810:19;;1803:35;1869:3;1854:19;;1847:35;1660:3;1653:2;1632:15;;;-1:-1:-1;;1628:29:3;1613:45;1609:55;;;-1:-1:-1;;698:1190:3:o;2075:380::-;2154:1;2150:12;;;;2197;;;2218:61;;2272:4;2264:6;2260:17;2250:27;;2218:61;2325:2;2317:6;2314:14;2294:18;2291:38;2288:161;;;2371:10;2366:3;2362:20;2359:1;2352:31;2406:4;2403:1;2396:15;2434:4;2431:1;2424:15;2288:161;;2075:380;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "166200",
								"executionCost": "44420",
								"totalCost": "210620"
							},
							"external": {
								"blackList(uint256)": "4636",
								"structUsers_(address)": "infinite",
								"tokenAmount_()": "2328",
								"tokenPrice_()": "2262",
								"whiteList(uint256)": "4614"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 107,
									"end": 1779,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1152,
									"end": 1161,
									"name": "PUSH",
									"source": 2,
									"value": "2CB41780"
								},
								{
									"begin": 1123,
									"end": 1161,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1123,
									"end": 1161,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1412,
									"end": 1418,
									"name": "PUSH",
									"source": 2,
									"value": "186A0"
								},
								{
									"begin": 1385,
									"end": 1418,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1385,
									"end": 1418,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205fe3bce9010edf2b462a0812f205a021eca633b27f5fd74c000e1d75696ad1f664736f6c63430008070033",
									".code": [
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "761C8B9"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "5C475D42"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "709EC8B4"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "948942AD"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "FC837259"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2039,
											"end": 2064,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2064,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2064,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2027,
											"end": 2029,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2012,
											"end": 2030,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 654,
											"end": 686,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 654,
											"end": 686,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 654,
											"end": 686,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 636,
											"end": 687,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 636,
											"end": 687,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 624,
											"end": 626,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 609,
											"end": 627,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 490,
											"end": 693,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 305,
											"end": 485,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 305,
											"end": 485,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 364,
											"end": 370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 419,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 405,
											"end": 414,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 396,
											"end": 403,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 392,
											"end": 415,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 388,
											"end": 420,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 385,
											"end": 437,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 385,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 385,
											"end": 437,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 433,
											"end": 434,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 431,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 423,
											"end": 435,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 385,
											"end": 437,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 385,
											"end": 437,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 456,
											"end": 479,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 456,
											"end": 479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 305,
											"end": 485,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 305,
											"end": 485,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 698,
											"end": 1888,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 698,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 984,
											"end": 988,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1025,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1016,
											"end": 1022,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 1013,
											"end": 1026,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1003,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1003,
											"end": 1147,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1069,
											"end": 1079,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 1064,
											"end": 1067,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1060,
											"end": 1080,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1057,
											"end": 1058,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1050,
											"end": 1081,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1104,
											"end": 1108,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1101,
											"end": 1102,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1094,
											"end": 1109,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1136,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1129,
											"end": 1130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1122,
											"end": 1137,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1003,
											"end": 1147,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1003,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1174,
											"end": 1180,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1156,
											"end": 1181,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1200,
											"end": 1202,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1238,
											"end": 1241,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1233,
											"end": 1235,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1231,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1236,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1211,
											"end": 1242,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1271,
											"end": 1277,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1278,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1321,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1309,
											"end": 1312,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1298,
											"end": 1307,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1294,
											"end": 1313,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1287,
											"end": 1322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 1341,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1491,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1350,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1364,
											"end": 1370,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1371,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1491,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1350,
											"end": 1491,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1460,
											"end": 1474,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 1460,
											"end": 1474,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1460,
											"end": 1474,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1450,
											"end": 1480,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 1447,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1421,
											"end": 1448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1481,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1379,
											"end": 1389,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1379,
											"end": 1389,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1350,
											"end": 1491,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1491,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1350,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1506,
											"end": 1507,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1516,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1580,
											"end": 1581,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1574,
											"end": 1577,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1565,
											"end": 1571,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1554,
											"end": 1563,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1550,
											"end": 1572,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1578,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1582,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1695,
											"end": 1697,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1680,
											"end": 1698,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1680,
											"end": 1698,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1673,
											"end": 1707,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 1673,
											"end": 1707,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1673,
											"end": 1707,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 1673,
											"end": 1707,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1738,
											"end": 1740,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1723,
											"end": 1741,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1723,
											"end": 1741,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1750,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1750,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1750,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1750,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1781,
											"end": 1784,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1766,
											"end": 1785,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1785,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1794,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1794,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1794,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1828,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1810,
											"end": 1829,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 1829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1838,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1869,
											"end": 1872,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 1854,
											"end": 1873,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 1873,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1882,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1663,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1653,
											"end": 1655,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1632,
											"end": 1647,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 1647,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 1647,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1628,
											"end": 1657,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1613,
											"end": 1658,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1609,
											"end": 1664,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1609,
											"end": 1664,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1609,
											"end": 1664,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 698,
											"end": 1888,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2075,
											"end": 2455,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2075,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2155,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2150,
											"end": 2162,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2162,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2162,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2162,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2218,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2218,
											"end": 2279,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2272,
											"end": 2276,
											"name": "PUSH",
											"source": 3,
											"value": "7F"
										},
										{
											"begin": 2264,
											"end": 2270,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2260,
											"end": 2277,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2250,
											"end": 2277,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2250,
											"end": 2277,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2218,
											"end": 2279,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2218,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2327,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2323,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2328,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2329,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2449,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2288,
											"end": 2449,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2381,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 2366,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2360,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2406,
											"end": 2410,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2403,
											"end": 2404,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2396,
											"end": 2411,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2438,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2431,
											"end": 2432,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2424,
											"end": 2439,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2449,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2288,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2449,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2075,
											"end": 2455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2075,
											"end": 2455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2075,
											"end": 2455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2075,
											"end": 2455,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"blackList(uint256)": "709ec8b4",
							"structUsers_(address)": "fc837259",
							"tokenAmount_()": "948942ad",
							"tokenPrice_()": "0761c8b9",
							"whiteList(uint256)": "5c475d42"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"blackList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"structUsers_\",\"outputs\":[{\"internalType\":\"enum structures.Role\",\"name\":\"role\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"login\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"password\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"balance_overall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance_seed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance_private\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance_public\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAmount_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"whiteList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":\"modifireFunc\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":{\"keccak256\":\"0x791815edf6d8d205da15be693b57ddde64d7cf3bf65ad29c748e9e98c1f675ac\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://de960745a1c9cf451cc7401bef8c7090fec7892241a55138c64740527bc9e11c\",\"dweb:/ipfs/QmNdesY61PZkUX2jpu1FqgUURAPcFWybkSCLG98zrHtsFG\"]},\"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":{\"keccak256\":\"0xf9f627f7dd8a6f3b6dbfbf598d682a703332de43f360f47d8fbc230c9704fb7f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://17634dcb263feecfa368c39c34ac70e5e049c9ba55913705091e454a029ee382\",\"dweb:/ipfs/QmYdrubNJZSuyQtQYTdRF7f4KFPLsfURHxXGmatbp1S3xo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 249,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "structUsers_",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(structUser)244_storage)"
							},
							{
								"astId": 255,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "allowed",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 258,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "tokenPrice_",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 261,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "tokenAmount_",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 280,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "structPhases_",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(structPhase)275_storage)"
							},
							{
								"astId": 296,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "strucApplications_",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(structApplication)291_storage)"
							},
							{
								"astId": 299,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "structApplicationsAmountAdr",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 302,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "whiteList",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 305,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "blackList",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(Role)228": {
								"encoding": "inplace",
								"label": "enum structures.Role",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(structApplication)291_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structApplication)",
								"numberOfBytes": "32",
								"value": "t_struct(structApplication)291_storage"
							},
							"t_mapping(t_address,t_struct(structPhase)275_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structPhase)",
								"numberOfBytes": "32",
								"value": "t_struct(structPhase)275_storage"
							},
							"t_mapping(t_address,t_struct(structUser)244_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structUser)",
								"numberOfBytes": "32",
								"value": "t_struct(structUser)244_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(structApplication)291_storage": {
								"encoding": "inplace",
								"label": "struct structures.structApplication",
								"members": [
									{
										"astId": 282,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 284,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "contactForCommunication",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 286,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "userAdr",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 288,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "status",
										"offset": 20,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 290,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "exist",
										"offset": 21,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(structPhase)275_storage": {
								"encoding": "inplace",
								"label": "struct structures.structPhase",
								"members": [
									{
										"astId": 272,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "statusPhase",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 274,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "reviewed",
										"offset": 1,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(structUser)244_storage": {
								"encoding": "inplace",
								"label": "struct structures.structUser",
								"members": [
									{
										"astId": 231,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "role",
										"offset": 0,
										"slot": "0",
										"type": "t_enum(Role)228"
									},
									{
										"astId": 233,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "login",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 235,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "password",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									},
									{
										"astId": 237,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "balance_overall",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 239,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "balance_seed",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 241,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "balance_private",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 243,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "balance_public",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol": {
				"structures": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "blackList",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "structUsers_",
							"outputs": [
								{
									"internalType": "enum structures.Role",
									"name": "role",
									"type": "uint8"
								},
								{
									"internalType": "string",
									"name": "login",
									"type": "string"
								},
								{
									"internalType": "bytes32",
									"name": "password",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "balance_overall",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balance_seed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balance_private",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balance_public",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAmount_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenPrice_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "whiteList",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":72:3366  contract structures {\r... */\n  mstore(0x40, 0x80)\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1152:1161  750000000 */\n  0x2cb41780\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1123:1161  uint256 public tokenPrice_ = 750000000 */\n  0x02\n  sstore\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1412:1418  100000 */\n  0x0186a0\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1385:1418  uint public tokenAmount_ = 100000 */\n  0x03\n  sstore\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":72:3366  contract structures {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":72:3366  contract structures {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0761c8b9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5c475d42\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x709ec8b4\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x948942ad\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xfc837259\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1123:1161  uint256 public tokenPrice_ = 750000000 */\n    tag_3:\n      tag_8\n      sload(0x02)\n      dup2\n      jump\n    tag_8:\n      mload(0x40)\n        /* \"#utility.yul\":2039:2064   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2027:2029   */\n      0x20\n        /* \"#utility.yul\":2012:2030   */\n      add\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1123:1161  uint256 public tokenPrice_ = 750000000 */\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":3075:3101  address[] public whiteList */\n    tag_4:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":654:686   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":636:687   */\n      dup2\n      mstore\n        /* \"#utility.yul\":624:626   */\n      0x20\n        /* \"#utility.yul\":609:627   */\n      add\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":3075:3101  address[] public whiteList */\n      tag_10\n        /* \"#utility.yul\":490:693   */\n      jump\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":3244:3270  address[] public blackList */\n    tag_5:\n      tag_12\n      tag_19\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_19:\n      tag_20\n      jump\t// in\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1385:1418  uint public tokenAmount_ = 100000 */\n    tag_6:\n      tag_8\n      sload(0x03)\n      dup2\n      jump\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":836:887  mapping (address => structUser) public structUsers_ */\n    tag_7:\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_10\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":3075:3101  address[] public whiteList */\n    tag_15:\n      0x07\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":3244:3270  address[] public blackList */\n    tag_20:\n      0x08\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":836:887  mapping (address => structUser) public structUsers_ */\n    tag_28:\n      0x00\n      0x20\n      dup2\n      swap1\n      mstore\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      0xff\n      swap1\n      swap3\n      and\n      swap3\n      swap2\n      tag_35\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_37\n      swap1\n      tag_36\n      jump\t// in\n    tag_37:\n      dup1\n      iszero\n      tag_38\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_39\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_38)\n    tag_39:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_40:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_40\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_38:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      sload\n      swap1\n      pop\n      dup8\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_27:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_43\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_43:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_44\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_44:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":305:485   */\n    tag_14:\n        /* \"#utility.yul\":364:370   */\n      0x00\n        /* \"#utility.yul\":417:419   */\n      0x20\n        /* \"#utility.yul\":405:414   */\n      dup3\n        /* \"#utility.yul\":396:403   */\n      dup5\n        /* \"#utility.yul\":392:415   */\n      sub\n        /* \"#utility.yul\":388:420   */\n      slt\n        /* \"#utility.yul\":385:437   */\n      iszero\n      tag_46\n      jumpi\n        /* \"#utility.yul\":433:434   */\n      0x00\n        /* \"#utility.yul\":430:431   */\n      dup1\n        /* \"#utility.yul\":423:435   */\n      revert\n        /* \"#utility.yul\":385:437   */\n    tag_46:\n      pop\n        /* \"#utility.yul\":456:479   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":305:485   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":698:1888   */\n    tag_30:\n        /* \"#utility.yul\":984:988   */\n      0x00\n        /* \"#utility.yul\":1024:1025   */\n      0x05\n        /* \"#utility.yul\":1016:1022   */\n      dup10\n        /* \"#utility.yul\":1013:1026   */\n      lt\n        /* \"#utility.yul\":1003:1147   */\n      tag_49\n      jumpi\n        /* \"#utility.yul\":1069:1079   */\n      0x4e487b71\n        /* \"#utility.yul\":1064:1067   */\n      0xe0\n        /* \"#utility.yul\":1060:1080   */\n      shl\n        /* \"#utility.yul\":1057:1058   */\n      0x00\n        /* \"#utility.yul\":1050:1081   */\n      mstore\n        /* \"#utility.yul\":1104:1108   */\n      0x21\n        /* \"#utility.yul\":1101:1102   */\n      0x04\n        /* \"#utility.yul\":1094:1109   */\n      mstore\n        /* \"#utility.yul\":1132:1136   */\n      0x24\n        /* \"#utility.yul\":1129:1130   */\n      0x00\n        /* \"#utility.yul\":1122:1137   */\n      revert\n        /* \"#utility.yul\":1003:1147   */\n    tag_49:\n        /* \"#utility.yul\":1174:1180   */\n      dup9\n        /* \"#utility.yul\":1163:1172   */\n      dup3\n        /* \"#utility.yul\":1156:1181   */\n      mstore\n        /* \"#utility.yul\":1200:1202   */\n      0x20\n        /* \"#utility.yul\":1238:1241   */\n      0xe0\n        /* \"#utility.yul\":1233:1235   */\n      dup2\n        /* \"#utility.yul\":1222:1231   */\n      dup5\n        /* \"#utility.yul\":1218:1236   */\n      add\n        /* \"#utility.yul\":1211:1242   */\n      mstore\n        /* \"#utility.yul\":1271:1277   */\n      dup9\n        /* \"#utility.yul\":1265:1278   */\n      mload\n        /* \"#utility.yul\":1315:1321   */\n      dup1\n        /* \"#utility.yul\":1309:1312   */\n      0xe0\n        /* \"#utility.yul\":1298:1307   */\n      dup6\n        /* \"#utility.yul\":1294:1313   */\n      add\n        /* \"#utility.yul\":1287:1322   */\n      mstore\n        /* \"#utility.yul\":1340:1341   */\n      0x00\n        /* \"#utility.yul\":1350:1491   */\n    tag_50:\n        /* \"#utility.yul\":1364:1370   */\n      dup2\n        /* \"#utility.yul\":1361:1362   */\n      dup2\n        /* \"#utility.yul\":1358:1371   */\n      lt\n        /* \"#utility.yul\":1350:1491   */\n      iszero\n      tag_52\n      jumpi\n        /* \"#utility.yul\":1460:1474   */\n      dup11\n      dup2\n      add\n        /* \"#utility.yul\":1456:1479   */\n      dup4\n      add\n        /* \"#utility.yul\":1450:1480   */\n      mload\n        /* \"#utility.yul\":1425:1442   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1444:1447   */\n      0x0100\n        /* \"#utility.yul\":1421:1448   */\n      add\n        /* \"#utility.yul\":1414:1481   */\n      mstore\n        /* \"#utility.yul\":1379:1389   */\n      dup3\n      add\n        /* \"#utility.yul\":1350:1491   */\n      jump(tag_50)\n    tag_52:\n        /* \"#utility.yul\":1509:1515   */\n      dup2\n        /* \"#utility.yul\":1506:1507   */\n      dup2\n        /* \"#utility.yul\":1503:1516   */\n      gt\n        /* \"#utility.yul\":1500:1592   */\n      iszero\n      tag_53\n      jumpi\n        /* \"#utility.yul\":1580:1581   */\n      0x00\n        /* \"#utility.yul\":1574:1577   */\n      0x0100\n        /* \"#utility.yul\":1565:1571   */\n      dup4\n        /* \"#utility.yul\":1554:1563   */\n      dup8\n        /* \"#utility.yul\":1550:1572   */\n      add\n        /* \"#utility.yul\":1546:1578   */\n      add\n        /* \"#utility.yul\":1539:1582   */\n      mstore\n        /* \"#utility.yul\":1500:1592   */\n    tag_53:\n      pop\n        /* \"#utility.yul\":1695:1697   */\n      0x40\n        /* \"#utility.yul\":1680:1698   */\n      dup5\n      add\n        /* \"#utility.yul\":1673:1707   */\n      swap9\n      swap1\n      swap9\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":1738:1740   */\n      0x60\n        /* \"#utility.yul\":1723:1741   */\n      dup2\n      add\n        /* \"#utility.yul\":1716:1750   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":1781:1784   */\n      0x80\n        /* \"#utility.yul\":1766:1785   */\n      dup5\n      add\n        /* \"#utility.yul\":1759:1794   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":1825:1828   */\n      0xa0\n        /* \"#utility.yul\":1810:1829   */\n      dup4\n      add\n        /* \"#utility.yul\":1803:1838   */\n      mstore\n        /* \"#utility.yul\":1869:1872   */\n      0xc0\n        /* \"#utility.yul\":1854:1873   */\n      dup3\n      add\n        /* \"#utility.yul\":1847:1882   */\n      mstore\n        /* \"#utility.yul\":1660:1663   */\n      0x0100\n        /* \"#utility.yul\":1653:1655   */\n      0x1f\n        /* \"#utility.yul\":1632:1647   */\n      swap1\n      swap3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1628:1657   */\n      and\n        /* \"#utility.yul\":1613:1658   */\n      add\n        /* \"#utility.yul\":1609:1664   */\n      add\n      swap3\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":698:1888   */\n      jump\t// out\n        /* \"#utility.yul\":2075:2455   */\n    tag_36:\n        /* \"#utility.yul\":2154:2155   */\n      0x01\n        /* \"#utility.yul\":2150:2162   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2197:2209   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2218:2279   */\n      tag_56\n      jumpi\n        /* \"#utility.yul\":2272:2276   */\n      0x7f\n        /* \"#utility.yul\":2264:2270   */\n      dup3\n        /* \"#utility.yul\":2260:2277   */\n      and\n        /* \"#utility.yul\":2250:2277   */\n      swap2\n      pop\n        /* \"#utility.yul\":2218:2279   */\n    tag_56:\n        /* \"#utility.yul\":2325:2327   */\n      0x20\n        /* \"#utility.yul\":2317:2323   */\n      dup3\n        /* \"#utility.yul\":2314:2328   */\n      lt\n        /* \"#utility.yul\":2294:2312   */\n      dup2\n        /* \"#utility.yul\":2291:2329   */\n      eq\n        /* \"#utility.yul\":2288:2449   */\n      iszero\n      tag_57\n      jumpi\n        /* \"#utility.yul\":2371:2381   */\n      0x4e487b71\n        /* \"#utility.yul\":2366:2369   */\n      0xe0\n        /* \"#utility.yul\":2362:2382   */\n      shl\n        /* \"#utility.yul\":2359:2360   */\n      0x00\n        /* \"#utility.yul\":2352:2383   */\n      mstore\n        /* \"#utility.yul\":2406:2410   */\n      0x22\n        /* \"#utility.yul\":2403:2404   */\n      0x04\n        /* \"#utility.yul\":2396:2411   */\n      mstore\n        /* \"#utility.yul\":2434:2438   */\n      0x24\n        /* \"#utility.yul\":2431:2432   */\n      0x00\n        /* \"#utility.yul\":2424:2439   */\n      revert\n        /* \"#utility.yul\":2288:2449   */\n    tag_57:\n      pop\n        /* \"#utility.yul\":2075:2455   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e14529ea284172d63c22f47a2161d963d72c7fbdc0e78297b42602458800c6f564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052632cb41780600255620186a060035534801561001f57600080fd5b5061033f8061002f6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630761c8b91461005c5780635c475d4214610078578063709ec8b4146100a3578063948942ad146100b6578063fc837259146100bf575b600080fd5b61006560025481565b6040519081526020015b60405180910390f35b61008b610086366004610216565b6100e5565b6040516001600160a01b03909116815260200161006f565b61008b6100b1366004610216565b61010f565b61006560035481565b6100d26100cd3660046101e6565b61011f565b60405161006f979695949392919061022f565b600781815481106100f557600080fd5b6000918252602090912001546001600160a01b0316905081565b600881815481106100f557600080fd5b6000602081905290815260409020805460018201805460ff9092169291610145906102ce565b80601f0160208091040260200160405190810160405280929190818152602001828054610171906102ce565b80156101be5780601f10610193576101008083540402835291602001916101be565b820191906000526020600020905b8154815290600101906020018083116101a157829003601f168201915b5050505050908060020154908060030154908060040154908060050154908060060154905087565b6000602082840312156101f857600080fd5b81356001600160a01b038116811461020f57600080fd5b9392505050565b60006020828403121561022857600080fd5b5035919050565b60006005891061024f57634e487b7160e01b600052602160045260246000fd5b888252602060e08184015288518060e085015260005b81811015610282578a810183015185820161010001528201610265565b8181111561029557600061010083870101525b50604084019890985250506060810194909452608084019290925260a083015260c0820152610100601f909201601f1916010192915050565b600181811c908216806102e257607f821691505b6020821081141561030357634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220e14529ea284172d63c22f47a2161d963d72c7fbdc0e78297b42602458800c6f564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH4 0x2CB41780 PUSH1 0x2 SSTORE PUSH3 0x186A0 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F DUP1 PUSH2 0x2F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761C8B9 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x5C475D42 EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0x709EC8B4 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x948942AD EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0xFC837259 EQ PUSH2 0xBF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x65 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8B PUSH2 0x86 CALLDATASIZE PUSH1 0x4 PUSH2 0x216 JUMP JUMPDEST PUSH2 0xE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6F JUMP JUMPDEST PUSH2 0x8B PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x216 JUMP JUMPDEST PUSH2 0x10F JUMP JUMPDEST PUSH2 0x65 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD2 PUSH2 0xCD CALLDATASIZE PUSH1 0x4 PUSH2 0x1E6 JUMP JUMPDEST PUSH2 0x11F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22F JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH2 0x145 SWAP1 PUSH2 0x2CE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x171 SWAP1 PUSH2 0x2CE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1BE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x193 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1BE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP10 LT PUSH2 0x24F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP9 DUP3 MSTORE PUSH1 0x20 PUSH1 0xE0 DUP2 DUP5 ADD MSTORE DUP9 MLOAD DUP1 PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x282 JUMPI DUP11 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH2 0x100 ADD MSTORE DUP3 ADD PUSH2 0x265 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 PUSH2 0x100 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x40 DUP5 ADD SWAP9 SWAP1 SWAP9 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x100 PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2E2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x303 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 GASLIMIT 0x29 0xEA 0x28 COINBASE PUSH19 0xD63C22F47A2161D963D72C7FBDC0E78297B426 MUL GASLIMIT DUP9 STOP 0xC6 CREATE2 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "72:3294:2:-:0;;;1152:9;1123:38;;1412:6;1385:33;;72:3294;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@blackList_305": {
									"entryPoint": 271,
									"id": 305,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@structUsers__249": {
									"entryPoint": 287,
									"id": 249,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenAmount__261": {
									"entryPoint": null,
									"id": 261,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenPrice__258": {
									"entryPoint": null,
									"id": 258,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@whiteList_302": {
									"entryPoint": 229,
									"id": 302,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_Role_$228_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint8_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2457:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:216:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:3"
															},
															"nodeType": "YulIf",
															"src": "94:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "239:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "244:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "248:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:50:3"
															},
															"nodeType": "YulIf",
															"src": "200:70:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:3",
														"type": ""
													}
												],
												"src": "14:286:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "375:110:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "421:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "430:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "433:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "423:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "423:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "396:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "405:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "392:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "392:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "417:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "388:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "388:32:3"
															},
															"nodeType": "YulIf",
															"src": "385:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "446:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "469:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "456:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "456:23:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "446:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "341:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "352:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "364:6:3",
														"type": ""
													}
												],
												"src": "305:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "591:102:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "601:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "613:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "609:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "609:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "601:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "643:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "658:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "674:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "679:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "670:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "670:11:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "683:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "666:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "666:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "654:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "654:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "636:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "636:51:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "636:51:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "560:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "571:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "582:4:3",
														"type": ""
													}
												],
												"src": "490:203:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "993:895:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1036:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1057:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1064:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1069:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1060:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1060:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1050:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1050:31:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1050:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1101:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1104:4:3",
																					"type": "",
																					"value": "0x21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1094:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1094:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1094:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1129:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1132:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1122:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1122:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1122:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1016:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1024:1:3",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1013:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1013:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1006:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1006:21:3"
															},
															"nodeType": "YulIf",
															"src": "1003:144:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1163:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1174:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1156:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1156:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1156:25:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1190:12:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1200:2:3",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1194:2:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1222:9:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1233:2:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1218:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1218:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1238:3:3",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1211:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1211:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1211:31:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1251:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1265:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1265:13:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1255:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1298:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1309:3:3",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1294:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1294:19:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1315:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1287:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1287:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1287:35:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1331:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1340:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1335:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1400:91:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1429:9:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1440:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1425:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1425:17:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1444:3:3",
																							"type": "",
																							"value": "256"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1421:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1421:27:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value1",
																											"nodeType": "YulIdentifier",
																											"src": "1464:6:3"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1472:1:3"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1460:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1460:14:3"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1476:2:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1456:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1456:23:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1450:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1450:30:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1414:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1414:67:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1414:67:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1361:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1364:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1358:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1358:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1372:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1374:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1383:1:3"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1386:2:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1379:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1379:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1374:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1354:3:3",
																"statements": []
															},
															"src": "1350:141:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1525:67:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1554:9:3"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1565:6:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1550:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1550:22:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1574:3:3",
																							"type": "",
																							"value": "256"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1546:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1546:32:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1580:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1539:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1539:43:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1539:43:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1506:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1509:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1503:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1503:13:3"
															},
															"nodeType": "YulIf",
															"src": "1500:92:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:63:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1617:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1636:6:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1644:2:3",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1632:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1632:15:3"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1653:2:3",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1649:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1649:7:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1628:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1628:29:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1613:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1613:45:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1660:3:3",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1609:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1609:55:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1601:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1684:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1695:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1680:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1680:18:3"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1700:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1673:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1673:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1673:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1727:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1738:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1723:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1723:18:3"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "1743:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1716:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1716:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1716:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1770:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1781:3:3",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1766:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1766:19:3"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "1787:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1759:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1759:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1759:35:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1814:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1825:3:3",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1810:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1810:19:3"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "1831:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1803:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1803:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1803:35:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1858:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1869:3:3",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1854:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1854:19:3"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "1875:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1847:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1847:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1847:35:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Role_$228_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint8_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "914:9:3",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "925:6:3",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "933:6:3",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "941:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "949:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "957:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "965:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "973:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "984:4:3",
														"type": ""
													}
												],
												"src": "698:1190:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1994:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2004:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2016:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2027:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2012:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2012:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2004:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2046:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2057:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2039:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2039:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2039:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1963:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1974:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1985:4:3",
														"type": ""
													}
												],
												"src": "1893:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2130:325:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2140:22:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2154:1:3",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2157:4:3"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2150:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2150:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2140:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2171:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2201:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2207:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2197:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2197:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2175:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2248:31:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2250:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2264:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2272:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2260:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2260:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2250:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2228:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2221:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2221:26:3"
															},
															"nodeType": "YulIf",
															"src": "2218:61:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2338:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2359:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2366:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2371:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2362:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2362:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2352:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2352:31:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2352:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2403:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2406:4:3",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2396:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2396:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2396:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2431:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2434:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2424:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2424:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2424:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2294:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2317:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2325:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2314:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2314:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2291:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2291:38:3"
															},
															"nodeType": "YulIf",
															"src": "2288:161:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2110:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2119:6:3",
														"type": ""
													}
												],
												"src": "2075:380:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_enum$_Role_$228_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint8_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        if iszero(lt(value0, 5))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n        let _1 := 32\n        mstore(add(headStart, _1), 224)\n        let length := mload(value1)\n        mstore(add(headStart, 224), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 256), mload(add(add(value1, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 256), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 256)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c80630761c8b91461005c5780635c475d4214610078578063709ec8b4146100a3578063948942ad146100b6578063fc837259146100bf575b600080fd5b61006560025481565b6040519081526020015b60405180910390f35b61008b610086366004610216565b6100e5565b6040516001600160a01b03909116815260200161006f565b61008b6100b1366004610216565b61010f565b61006560035481565b6100d26100cd3660046101e6565b61011f565b60405161006f979695949392919061022f565b600781815481106100f557600080fd5b6000918252602090912001546001600160a01b0316905081565b600881815481106100f557600080fd5b6000602081905290815260409020805460018201805460ff9092169291610145906102ce565b80601f0160208091040260200160405190810160405280929190818152602001828054610171906102ce565b80156101be5780601f10610193576101008083540402835291602001916101be565b820191906000526020600020905b8154815290600101906020018083116101a157829003601f168201915b5050505050908060020154908060030154908060040154908060050154908060060154905087565b6000602082840312156101f857600080fd5b81356001600160a01b038116811461020f57600080fd5b9392505050565b60006020828403121561022857600080fd5b5035919050565b60006005891061024f57634e487b7160e01b600052602160045260246000fd5b888252602060e08184015288518060e085015260005b81811015610282578a810183015185820161010001528201610265565b8181111561029557600061010083870101525b50604084019890985250506060810194909452608084019290925260a083015260c0820152610100601f909201601f1916010192915050565b600181811c908216806102e257607f821691505b6020821081141561030357634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220e14529ea284172d63c22f47a2161d963d72c7fbdc0e78297b42602458800c6f564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761C8B9 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x5C475D42 EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0x709EC8B4 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x948942AD EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0xFC837259 EQ PUSH2 0xBF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x65 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8B PUSH2 0x86 CALLDATASIZE PUSH1 0x4 PUSH2 0x216 JUMP JUMPDEST PUSH2 0xE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x6F JUMP JUMPDEST PUSH2 0x8B PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x216 JUMP JUMPDEST PUSH2 0x10F JUMP JUMPDEST PUSH2 0x65 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD2 PUSH2 0xCD CALLDATASIZE PUSH1 0x4 PUSH2 0x1E6 JUMP JUMPDEST PUSH2 0x11F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22F JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH2 0x145 SWAP1 PUSH2 0x2CE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x171 SWAP1 PUSH2 0x2CE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1BE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x193 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1BE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP10 LT PUSH2 0x24F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP9 DUP3 MSTORE PUSH1 0x20 PUSH1 0xE0 DUP2 DUP5 ADD MSTORE DUP9 MLOAD DUP1 PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x282 JUMPI DUP11 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH2 0x100 ADD MSTORE DUP3 ADD PUSH2 0x265 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 PUSH2 0x100 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x40 DUP5 ADD SWAP9 SWAP1 SWAP9 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x100 PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2E2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x303 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 GASLIMIT 0x29 0xEA 0x28 COINBASE PUSH19 0xD63C22F47A2161D963D72C7FBDC0E78297B426 MUL GASLIMIT DUP9 STOP 0xC6 CREATE2 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "72:3294:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1123:38;;;;;;;;;2039:25:3;;;2027:2;2012:18;1123:38:2;;;;;;;;3075:26;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;654:32:3;;;636:51;;624:2;609:18;3075:26:2;490:203:3;3244:26:2;;;;;;:::i;:::-;;:::i;1385:33::-;;;;;;836:51;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;3075:26::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3075:26:2;;-1:-1:-1;3075:26:2;:::o;3244:::-;;;;;;;;;;;;836:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:286:3:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:3;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:3:o;305:180::-;364:6;417:2;405:9;396:7;392:23;388:32;385:52;;;433:1;430;423:12;385:52;-1:-1:-1;456:23:3;;305:180;-1:-1:-1;305:180:3:o;698:1190::-;984:4;1024:1;1016:6;1013:13;1003:144;;1069:10;1064:3;1060:20;1057:1;1050:31;1104:4;1101:1;1094:15;1132:4;1129:1;1122:15;1003:144;1174:6;1163:9;1156:25;1200:2;1238:3;1233:2;1222:9;1218:18;1211:31;1271:6;1265:13;1315:6;1309:3;1298:9;1294:19;1287:35;1340:1;1350:141;1364:6;1361:1;1358:13;1350:141;;;1460:14;;;1456:23;;1450:30;1425:17;;;1444:3;1421:27;1414:67;1379:10;;1350:141;;;1509:6;1506:1;1503:13;1500:92;;;1580:1;1574:3;1565:6;1554:9;1550:22;1546:32;1539:43;1500:92;-1:-1:-1;1695:2:3;1680:18;;1673:34;;;;-1:-1:-1;;1738:2:3;1723:18;;1716:34;;;;1781:3;1766:19;;1759:35;;;;1825:3;1810:19;;1803:35;1869:3;1854:19;;1847:35;1660:3;1653:2;1632:15;;;-1:-1:-1;;1628:29:3;1613:45;1609:55;;;-1:-1:-1;;698:1190:3:o;2075:380::-;2154:1;2150:12;;;;2197;;;2218:61;;2272:4;2264:6;2260:17;2250:27;;2218:61;2325:2;2317:6;2314:14;2294:18;2291:38;2288:161;;;2371:10;2366:3;2362:20;2359:1;2352:31;2406:4;2403:1;2396:15;2434:4;2431:1;2424:15;2288:161;;2075:380;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "166200",
								"executionCost": "44420",
								"totalCost": "210620"
							},
							"external": {
								"blackList(uint256)": "4636",
								"structUsers_(address)": "infinite",
								"tokenAmount_()": "2328",
								"tokenPrice_()": "2262",
								"whiteList(uint256)": "4614"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 72,
									"end": 3366,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 72,
									"end": 3366,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 72,
									"end": 3366,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1152,
									"end": 1161,
									"name": "PUSH",
									"source": 2,
									"value": "2CB41780"
								},
								{
									"begin": 1123,
									"end": 1161,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1123,
									"end": 1161,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1412,
									"end": 1418,
									"name": "PUSH",
									"source": 2,
									"value": "186A0"
								},
								{
									"begin": 1385,
									"end": 1418,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1385,
									"end": 1418,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3366,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3366,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3366,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3366,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 72,
									"end": 3366,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3366,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 3366,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3366,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3366,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 72,
									"end": 3366,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3366,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3366,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 3366,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3366,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 3366,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 3366,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3366,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 3366,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e14529ea284172d63c22f47a2161d963d72c7fbdc0e78297b42602458800c6f564736f6c63430008070033",
									".code": [
										{
											"begin": 72,
											"end": 3366,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "PUSH",
											"source": 2,
											"value": "761C8B9"
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "PUSH",
											"source": 2,
											"value": "5C475D42"
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "PUSH",
											"source": 2,
											"value": "709EC8B4"
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "PUSH",
											"source": 2,
											"value": "948942AD"
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "PUSH",
											"source": 2,
											"value": "FC837259"
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3366,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2039,
											"end": 2064,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2064,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2039,
											"end": 2064,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2027,
											"end": 2029,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2012,
											"end": 2030,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 654,
											"end": 686,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 654,
											"end": 686,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 654,
											"end": 686,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 636,
											"end": 687,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 636,
											"end": 687,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 624,
											"end": 626,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 609,
											"end": 627,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 490,
											"end": 693,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3101,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3270,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 305,
											"end": 485,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 305,
											"end": 485,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 364,
											"end": 370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 417,
											"end": 419,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 405,
											"end": 414,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 396,
											"end": 403,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 392,
											"end": 415,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 388,
											"end": 420,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 385,
											"end": 437,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 385,
											"end": 437,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 385,
											"end": 437,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 433,
											"end": 434,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 431,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 423,
											"end": 435,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 385,
											"end": 437,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 385,
											"end": 437,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 456,
											"end": 479,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 456,
											"end": 479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 305,
											"end": 485,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 305,
											"end": 485,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 698,
											"end": 1888,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 698,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 984,
											"end": 988,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1025,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1016,
											"end": 1022,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 1013,
											"end": 1026,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1003,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1003,
											"end": 1147,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1069,
											"end": 1079,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 1064,
											"end": 1067,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1060,
											"end": 1080,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1057,
											"end": 1058,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1050,
											"end": 1081,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1104,
											"end": 1108,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 1101,
											"end": 1102,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1094,
											"end": 1109,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1132,
											"end": 1136,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1129,
											"end": 1130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1122,
											"end": 1137,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1003,
											"end": 1147,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1003,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1174,
											"end": 1180,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1156,
											"end": 1181,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1200,
											"end": 1202,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1238,
											"end": 1241,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1233,
											"end": 1235,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1231,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1218,
											"end": 1236,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1211,
											"end": 1242,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1271,
											"end": 1277,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1278,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1321,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1309,
											"end": 1312,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1298,
											"end": 1307,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1294,
											"end": 1313,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1287,
											"end": 1322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 1341,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1491,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1350,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1364,
											"end": 1370,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1371,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1491,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1350,
											"end": 1491,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1460,
											"end": 1474,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 1460,
											"end": 1474,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1460,
											"end": 1474,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1456,
											"end": 1479,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1450,
											"end": 1480,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 1447,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1421,
											"end": 1448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1481,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1379,
											"end": 1389,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1379,
											"end": 1389,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1350,
											"end": 1491,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1491,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1350,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1506,
											"end": 1507,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1516,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1580,
											"end": 1581,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1574,
											"end": 1577,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1565,
											"end": 1571,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1554,
											"end": 1563,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1550,
											"end": 1572,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1546,
											"end": 1578,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1539,
											"end": 1582,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1500,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1695,
											"end": 1697,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1680,
											"end": 1698,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1680,
											"end": 1698,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1673,
											"end": 1707,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 1673,
											"end": 1707,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1673,
											"end": 1707,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 1673,
											"end": 1707,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1738,
											"end": 1740,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1723,
											"end": 1741,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1723,
											"end": 1741,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1750,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1750,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1750,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1750,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1781,
											"end": 1784,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1766,
											"end": 1785,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 1785,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1794,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1794,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1794,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1828,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1810,
											"end": 1829,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1810,
											"end": 1829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1838,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1869,
											"end": 1872,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 1854,
											"end": 1873,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 1873,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1882,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1663,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1653,
											"end": 1655,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1632,
											"end": 1647,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 1647,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1632,
											"end": 1647,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1628,
											"end": 1657,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1613,
											"end": 1658,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1609,
											"end": 1664,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1609,
											"end": 1664,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1609,
											"end": 1664,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 698,
											"end": 1888,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2075,
											"end": 2455,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2075,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2155,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2150,
											"end": 2162,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2162,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2162,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 2150,
											"end": 2162,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2197,
											"end": 2209,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2218,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2218,
											"end": 2279,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2272,
											"end": 2276,
											"name": "PUSH",
											"source": 3,
											"value": "7F"
										},
										{
											"begin": 2264,
											"end": 2270,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2260,
											"end": 2277,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2250,
											"end": 2277,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2250,
											"end": 2277,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2218,
											"end": 2279,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2218,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2327,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2323,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2328,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2294,
											"end": 2312,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2291,
											"end": 2329,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2449,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2449,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2288,
											"end": 2449,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2381,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 2366,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2362,
											"end": 2382,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2360,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2383,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2406,
											"end": 2410,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2403,
											"end": 2404,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2396,
											"end": 2411,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2434,
											"end": 2438,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2431,
											"end": 2432,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2424,
											"end": 2439,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2449,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2288,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2449,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2075,
											"end": 2455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2075,
											"end": 2455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2075,
											"end": 2455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2075,
											"end": 2455,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"blackList(uint256)": "709ec8b4",
							"structUsers_(address)": "fc837259",
							"tokenAmount_()": "948942ad",
							"tokenPrice_()": "0761c8b9",
							"whiteList(uint256)": "5c475d42"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"blackList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"structUsers_\",\"outputs\":[{\"internalType\":\"enum structures.Role\",\"name\":\"role\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"login\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"password\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"balance_overall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance_seed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance_private\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance_public\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAmount_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"whiteList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":\"structures\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":{\"keccak256\":\"0xf9f627f7dd8a6f3b6dbfbf598d682a703332de43f360f47d8fbc230c9704fb7f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://17634dcb263feecfa368c39c34ac70e5e049c9ba55913705091e454a029ee382\",\"dweb:/ipfs/QmYdrubNJZSuyQtQYTdRF7f4KFPLsfURHxXGmatbp1S3xo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 249,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "structUsers_",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(structUser)244_storage)"
							},
							{
								"astId": 255,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "allowed",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 258,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "tokenPrice_",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 261,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "tokenAmount_",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 280,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "structPhases_",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(structPhase)275_storage)"
							},
							{
								"astId": 296,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "strucApplications_",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(structApplication)291_storage)"
							},
							{
								"astId": 299,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "structApplicationsAmountAdr",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 302,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "whiteList",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 305,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "blackList",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(Role)228": {
								"encoding": "inplace",
								"label": "enum structures.Role",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(structApplication)291_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structApplication)",
								"numberOfBytes": "32",
								"value": "t_struct(structApplication)291_storage"
							},
							"t_mapping(t_address,t_struct(structPhase)275_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structPhase)",
								"numberOfBytes": "32",
								"value": "t_struct(structPhase)275_storage"
							},
							"t_mapping(t_address,t_struct(structUser)244_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structUser)",
								"numberOfBytes": "32",
								"value": "t_struct(structUser)244_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(structApplication)291_storage": {
								"encoding": "inplace",
								"label": "struct structures.structApplication",
								"members": [
									{
										"astId": 282,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 284,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "contactForCommunication",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 286,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "userAdr",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 288,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "status",
										"offset": 20,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 290,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "exist",
										"offset": 21,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(structPhase)275_storage": {
								"encoding": "inplace",
								"label": "struct structures.structPhase",
								"members": [
									{
										"astId": 272,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "statusPhase",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 274,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "reviewed",
										"offset": 1,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(structUser)244_storage": {
								"encoding": "inplace",
								"label": "struct structures.structUser",
								"members": [
									{
										"astId": 231,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "role",
										"offset": 0,
										"slot": "0",
										"type": "t_enum(Role)228"
									},
									{
										"astId": 233,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "login",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 235,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "password",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									},
									{
										"astId": 237,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "balance_overall",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 239,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "balance_seed",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 241,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "balance_private",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 243,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "balance_public",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol": {
				"ast": {
					"absolutePath": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol",
					"exportedSymbols": {
						"helpresFunc": [
							98
						],
						"modifireFunc": [
							220
						],
						"structures": [
							306
						]
					},
					"id": 99,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"absolutePath": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol",
							"file": "./modifireFunc.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 99,
							"sourceUnit": 221,
							"src": "72:28:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "modifireFunc",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 220,
										"src": "128:12:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "128:12:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 98,
							"linearizedBaseContracts": [
								98,
								220,
								306
							],
							"name": "helpresFunc",
							"nameLocation": "113:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "285:65:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 14,
																			"name": "_hash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 6,
																			"src": "334:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"expression": {
																			"id": 12,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "317:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 13,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "317:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 15,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "317:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 11,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "307:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "307:34:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 17,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "306:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 10,
												"id": 18,
												"nodeType": "Return",
												"src": "300:42:0"
											}
										]
									},
									"functionSelector": "8e4f8c6b",
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_keccak256",
									"nameLocation": "221:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "_hash",
												"nameLocation": "249:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "235:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 5,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "235:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "234:21:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "276:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 8,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "275:9:0"
									},
									"scope": 98,
									"src": "212:138:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "518:36:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 28,
															"name": "whiteList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "536:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														}
													],
													"id": 29,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "535:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 27,
												"id": 30,
												"nodeType": "Return",
												"src": "529:17:0"
											}
										]
									},
									"functionSelector": "c10e3911",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 23,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 22,
												"name": "onlyOwnerAndPrivateProvider",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 176,
												"src": "458:27:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "458:27:0"
										}
									],
									"name": "get_whiteList",
									"nameLocation": "435:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "448:2:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "500:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 24,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "500:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 25,
													"nodeType": "ArrayTypeName",
													"src": "500:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:18:0"
									},
									"scope": 98,
									"src": "426:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "706:36:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 40,
															"name": "blackList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "724:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														}
													],
													"id": 41,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "723:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 39,
												"id": 42,
												"nodeType": "Return",
												"src": "717:17:0"
											}
										]
									},
									"functionSelector": "7f89128f",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 35,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 34,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 119,
												"src": "664:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "664:9:0"
										}
									],
									"name": "get_blackList",
									"nameLocation": "641:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "654:2:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "688:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 36,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "688:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 37,
													"nodeType": "ArrayTypeName",
													"src": "688:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "687:18:0"
									},
									"scope": 98,
									"src": "632:110:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "927:61:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 51,
															"name": "structUsers_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "945:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$244_storage_$",
																"typeString": "mapping(address => struct structures.structUser storage ref)"
															}
														},
														"id": 53,
														"indexExpression": {
															"id": 52,
															"name": "_userAdr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "958:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "945:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_structUser_$244_storage",
															"typeString": "struct structures.structUser storage ref"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance_seed",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 239,
													"src": "945:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 50,
												"id": 55,
												"nodeType": "Return",
												"src": "938:42:0"
											}
										]
									},
									"functionSelector": "2599d6d0",
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalanceSeedToken",
									"nameLocation": "858:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "_userAdr",
												"nameLocation": "887:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "879:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:18:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "918:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "918:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "917:9:0"
									},
									"scope": 98,
									"src": "849:139:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "1179:64:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 64,
															"name": "structUsers_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "1197:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$244_storage_$",
																"typeString": "mapping(address => struct structures.structUser storage ref)"
															}
														},
														"id": 66,
														"indexExpression": {
															"id": 65,
															"name": "_userAdr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "1210:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1197:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_structUser_$244_storage",
															"typeString": "struct structures.structUser storage ref"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance_private",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 241,
													"src": "1197:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 63,
												"id": 68,
												"nodeType": "Return",
												"src": "1190:45:0"
											}
										]
									},
									"functionSelector": "b06cdc12",
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalancePrivateToken",
									"nameLocation": "1107:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "_userAdr",
												"nameLocation": "1139:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1131:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1131:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1130:18:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1170:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1170:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1169:9:0"
									},
									"scope": 98,
									"src": "1098:145:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1432:63:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 77,
															"name": "structUsers_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "1450:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$244_storage_$",
																"typeString": "mapping(address => struct structures.structUser storage ref)"
															}
														},
														"id": 79,
														"indexExpression": {
															"id": 78,
															"name": "_userAdr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "1463:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1450:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_structUser_$244_storage",
															"typeString": "struct structures.structUser storage ref"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance_public",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 243,
													"src": "1450:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 76,
												"id": 81,
												"nodeType": "Return",
												"src": "1443:44:0"
											}
										]
									},
									"functionSelector": "72f0d72b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalancePublicToken",
									"nameLocation": "1361:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "_userAdr",
												"nameLocation": "1392:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1384:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1383:18:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1423:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1422:9:0"
									},
									"scope": 98,
									"src": "1352:143:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "1660:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 92,
																"name": "adr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "1686:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1678:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 90,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1678:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 93,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1678:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "1678:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 89,
												"id": 95,
												"nodeType": "Return",
												"src": "1671:27:0"
											}
										]
									},
									"functionSelector": "99067ede",
									"id": 97,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalanceEth",
									"nameLocation": "1604:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "adr",
												"nameLocation": "1626:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1618:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1618:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1617:13:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1651:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1651:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1650:9:0"
									},
									"scope": 98,
									"src": "1595:111:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 99,
							"src": "104:1605:0",
							"usedErrors": []
						}
					],
					"src": "37:1672:0"
				},
				"id": 0
			},
			"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol": {
				"ast": {
					"absolutePath": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol",
					"exportedSymbols": {
						"modifireFunc": [
							220
						],
						"structures": [
							306
						]
					},
					"id": 221,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 100,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:1"
						},
						{
							"absolutePath": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol",
							"file": "../lib/structures.sol",
							"id": 101,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 221,
							"sourceUnit": 307,
							"src": "72:31:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 102,
										"name": "structures",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 306,
										"src": "132:10:1"
									},
									"id": 103,
									"nodeType": "InheritanceSpecifier",
									"src": "132:10:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 220,
							"linearizedBaseContracts": [
								220,
								306
							],
							"name": "modifireFunc",
							"nameLocation": "116:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "268:108:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Role_$228",
																"typeString": "enum structures.Role"
															},
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 106,
																		"name": "structUsers_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 249,
																		"src": "287:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$244_storage_$",
																			"typeString": "mapping(address => struct structures.structUser storage ref)"
																		}
																	},
																	"id": 109,
																	"indexExpression": {
																		"expression": {
																			"id": 107,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "300:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "300:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "287:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_structUser_$244_storage",
																		"typeString": "struct structures.structUser storage ref"
																	}
																},
																"id": 110,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "role",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 231,
																"src": "287:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$228",
																	"typeString": "enum structures.Role"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 111,
																	"name": "Role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 228,
																	"src": "320:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Role_$228_$",
																		"typeString": "type(enum structures.Role)"
																	}
																},
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "SYSTEM_OWNER",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 223,
																"src": "320:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$228",
																	"typeString": "enum structures.Role"
																}
															},
															"src": "287:50:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7572206e6f742061646d696e",
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "339:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c",
																"typeString": "literal_string \"Your not admin\""
															},
															"value": "Your not admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c",
																"typeString": "literal_string \"Your not admin\""
															}
														],
														"id": 105,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "279:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "279:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "279:77:1"
											},
											{
												"id": 117,
												"nodeType": "PlaceholderStatement",
												"src": "367:1:1"
											}
										]
									},
									"id": 119,
									"name": "onlyOwner",
									"nameLocation": "255:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "265:2:1"
									},
									"src": "246:130:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "515:121:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Role_$228",
																"typeString": "enum structures.Role"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 122,
																		"name": "structUsers_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 249,
																		"src": "534:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$244_storage_$",
																			"typeString": "mapping(address => struct structures.structUser storage ref)"
																		}
																	},
																	"id": 125,
																	"indexExpression": {
																		"expression": {
																			"id": 123,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "547:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "547:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "534:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_structUser_$244_storage",
																		"typeString": "struct structures.structUser storage ref"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "role",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 231,
																"src": "534:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$228",
																	"typeString": "enum structures.Role"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 127,
																	"name": "Role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 228,
																	"src": "567:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Role_$228_$",
																		"typeString": "type(enum structures.Role)"
																	}
																},
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "SYSTEM_PRIVATE",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 225,
																"src": "567:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$228",
																	"typeString": "enum structures.Role"
																}
															},
															"src": "534:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7572206e6f7420507269766174652070726f7669646572",
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "588:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad6ae5da5b217b421ac93ea0fbb3ab0e88f39844155489a92b15ef6af2ad2fc2",
																"typeString": "literal_string \"Your not Private provider\""
															},
															"value": "Your not Private provider"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad6ae5da5b217b421ac93ea0fbb3ab0e88f39844155489a92b15ef6af2ad2fc2",
																"typeString": "literal_string \"Your not Private provider\""
															}
														],
														"id": 121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "526:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "526:90:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "526:90:1"
											},
											{
												"id": 133,
												"nodeType": "PlaceholderStatement",
												"src": "627:1:1"
											}
										]
									},
									"id": 135,
									"name": "onlyPrivateProvider",
									"nameLocation": "492:19:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:2:1"
									},
									"src": "483:153:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "774:119:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Role_$228",
																"typeString": "enum structures.Role"
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 138,
																		"name": "structUsers_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 249,
																		"src": "793:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$244_storage_$",
																			"typeString": "mapping(address => struct structures.structUser storage ref)"
																		}
																	},
																	"id": 141,
																	"indexExpression": {
																		"expression": {
																			"id": 139,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "806:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "806:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "793:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_structUser_$244_storage",
																		"typeString": "struct structures.structUser storage ref"
																	}
																},
																"id": 142,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "role",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 231,
																"src": "793:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$228",
																	"typeString": "enum structures.Role"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 143,
																	"name": "Role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 228,
																	"src": "826:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Role_$228_$",
																		"typeString": "type(enum structures.Role)"
																	}
																},
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "SYSTEM_PUBLIC",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 224,
																"src": "826:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$228",
																	"typeString": "enum structures.Role"
																}
															},
															"src": "793:51:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7572206e6f74205075626c69632070726f7669646572",
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "846:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_05f2418b58e7bb30fbad3c3b3cb0109a11446f25f5b2b9d17a61bb07228bb0e1",
																"typeString": "literal_string \"Your not Public provider\""
															},
															"value": "Your not Public provider"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_05f2418b58e7bb30fbad3c3b3cb0109a11446f25f5b2b9d17a61bb07228bb0e1",
																"typeString": "literal_string \"Your not Public provider\""
															}
														],
														"id": 137,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "785:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "785:88:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "785:88:1"
											},
											{
												"id": 149,
												"nodeType": "PlaceholderStatement",
												"src": "884:1:1"
											}
										]
									},
									"id": 151,
									"name": "onlyPublicProvider",
									"nameLocation": "752:18:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:1"
									},
									"src": "743:150:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "1064:191:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Role_$228",
																	"typeString": "enum structures.Role"
																},
																"id": 161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 154,
																			"name": "structUsers_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 249,
																			"src": "1083:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$244_storage_$",
																				"typeString": "mapping(address => struct structures.structUser storage ref)"
																			}
																		},
																		"id": 157,
																		"indexExpression": {
																			"expression": {
																				"id": 155,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1096:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 156,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1096:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1083:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_structUser_$244_storage",
																			"typeString": "struct structures.structUser storage ref"
																		}
																	},
																	"id": 158,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "role",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 231,
																	"src": "1083:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$228",
																		"typeString": "enum structures.Role"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 159,
																		"name": "Role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 228,
																		"src": "1116:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Role_$228_$",
																			"typeString": "type(enum structures.Role)"
																		}
																	},
																	"id": 160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "SYSTEM_OWNER",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 223,
																	"src": "1116:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$228",
																		"typeString": "enum structures.Role"
																	}
																},
																"src": "1083:50:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Role_$228",
																	"typeString": "enum structures.Role"
																},
																"id": 169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 162,
																			"name": "structUsers_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 249,
																			"src": "1137:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$244_storage_$",
																				"typeString": "mapping(address => struct structures.structUser storage ref)"
																			}
																		},
																		"id": 165,
																		"indexExpression": {
																			"expression": {
																				"id": 163,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1150:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1150:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1137:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_structUser_$244_storage",
																			"typeString": "struct structures.structUser storage ref"
																		}
																	},
																	"id": 166,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "role",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 231,
																	"src": "1137:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$228",
																		"typeString": "enum structures.Role"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 167,
																		"name": "Role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 228,
																		"src": "1170:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Role_$228_$",
																			"typeString": "type(enum structures.Role)"
																		}
																	},
																	"id": 168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "SYSTEM_PRIVATE",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 225,
																	"src": "1170:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$228",
																		"typeString": "enum structures.Role"
																	}
																},
																"src": "1137:52:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1083:106:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420746865206f776e6572206f7220707269766174652070726f7669646572",
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1191:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9",
																"typeString": "literal_string \"You are not the owner or private provider\""
															},
															"value": "You are not the owner or private provider"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9",
																"typeString": "literal_string \"You are not the owner or private provider\""
															}
														],
														"id": 153,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1075:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1075:160:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "1075:160:1"
											},
											{
												"id": 174,
												"nodeType": "PlaceholderStatement",
												"src": "1246:1:1"
											}
										]
									},
									"id": 176,
									"name": "onlyOwnerAndPrivateProvider",
									"nameLocation": "1033:27:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1061:2:1"
									},
									"src": "1024:231:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "1408:368:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_enum$_Role_$228",
																			"typeString": "enum structures.Role"
																		},
																		"id": 186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 179,
																					"name": "structUsers_",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 249,
																					"src": "1441:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$244_storage_$",
																						"typeString": "mapping(address => struct structures.structUser storage ref)"
																					}
																				},
																				"id": 182,
																				"indexExpression": {
																					"expression": {
																						"id": 180,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "1454:3:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 181,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "1454:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1441:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_structUser_$244_storage",
																					"typeString": "struct structures.structUser storage ref"
																				}
																			},
																			"id": 183,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "role",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 231,
																			"src": "1441:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Role_$228",
																				"typeString": "enum structures.Role"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 184,
																				"name": "Role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 228,
																				"src": "1474:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_Role_$228_$",
																					"typeString": "type(enum structures.Role)"
																				}
																			},
																			"id": 185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "SYSTEM_OWNER",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 223,
																			"src": "1474:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Role_$228",
																				"typeString": "enum structures.Role"
																			}
																		},
																		"src": "1441:50:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_enum$_Role_$228",
																			"typeString": "enum structures.Role"
																		},
																		"id": 194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 187,
																					"name": "structUsers_",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 249,
																					"src": "1508:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$244_storage_$",
																						"typeString": "mapping(address => struct structures.structUser storage ref)"
																					}
																				},
																				"id": 190,
																				"indexExpression": {
																					"expression": {
																						"id": 188,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "1521:3:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 189,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "1521:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1508:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_structUser_$244_storage",
																					"typeString": "struct structures.structUser storage ref"
																				}
																			},
																			"id": 191,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "role",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 231,
																			"src": "1508:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Role_$228",
																				"typeString": "enum structures.Role"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 192,
																				"name": "Role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 228,
																				"src": "1541:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_Role_$228_$",
																					"typeString": "type(enum structures.Role)"
																				}
																			},
																			"id": 193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "SYSTEM_PUBLIC",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 224,
																			"src": "1541:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Role_$228",
																				"typeString": "enum structures.Role"
																			}
																		},
																		"src": "1508:51:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "1441:118:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_Role_$228",
																		"typeString": "enum structures.Role"
																	},
																	"id": 203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 196,
																				"name": "structUsers_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 249,
																				"src": "1576:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$244_storage_$",
																					"typeString": "mapping(address => struct structures.structUser storage ref)"
																				}
																			},
																			"id": 199,
																			"indexExpression": {
																				"expression": {
																					"id": 197,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "1589:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 198,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "1589:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1576:24:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_structUser_$244_storage",
																				"typeString": "struct structures.structUser storage ref"
																			}
																		},
																		"id": 200,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "role",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 231,
																		"src": "1576:29:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Role_$228",
																			"typeString": "enum structures.Role"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"expression": {
																			"id": 201,
																			"name": "Role",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 228,
																			"src": "1609:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_Role_$228_$",
																				"typeString": "type(enum structures.Role)"
																			}
																		},
																		"id": 202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "SYSTEM_PRIVATE",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 225,
																		"src": "1609:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Role_$228",
																			"typeString": "enum structures.Role"
																		}
																	},
																	"src": "1576:52:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1441:187:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Role_$228",
																	"typeString": "enum structures.Role"
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 205,
																			"name": "structUsers_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 249,
																			"src": "1645:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$244_storage_$",
																				"typeString": "mapping(address => struct structures.structUser storage ref)"
																			}
																		},
																		"id": 208,
																		"indexExpression": {
																			"expression": {
																				"id": 206,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1658:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1658:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1645:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_structUser_$244_storage",
																			"typeString": "struct structures.structUser storage ref"
																		}
																	},
																	"id": 209,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "role",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 231,
																	"src": "1645:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$228",
																		"typeString": "enum structures.Role"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"expression": {
																		"id": 210,
																		"name": "Role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 228,
																		"src": "1678:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Role_$228_$",
																			"typeString": "type(enum structures.Role)"
																		}
																	},
																	"id": 211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "INVESTOR",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 226,
																	"src": "1678:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$228",
																		"typeString": "enum structures.Role"
																	}
																},
																"src": "1645:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1441:250:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4170706c69636174696f6e2063616e206f6e6c79206265207375626d697474656420627920726567756c6172207573657273",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1693:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8eee8f3e1b78fc84a03ad9368aed0f5d5ffbe790cbbf5be7c05b10e873c56608",
																"typeString": "literal_string \"Application can only be submitted by regular users\""
															},
															"value": "Application can only be submitted by regular users"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8eee8f3e1b78fc84a03ad9368aed0f5d5ffbe790cbbf5be7c05b10e873c56608",
																"typeString": "literal_string \"Application can only be submitted by regular users\""
															}
														],
														"id": 178,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1419:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1419:337:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "1419:337:1"
											},
											{
												"id": 217,
												"nodeType": "PlaceholderStatement",
												"src": "1767:1:1"
											}
										]
									},
									"id": 219,
									"name": "onlyUser",
									"nameLocation": "1396:8:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1405:2:1"
									},
									"src": "1387:389:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 221,
							"src": "107:1672:1",
							"usedErrors": []
						}
					],
					"src": "37:1742:1"
				},
				"id": 1
			},
			"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol": {
				"ast": {
					"absolutePath": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol",
					"exportedSymbols": {
						"structures": [
							306
						]
					},
					"id": 307,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 222,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 306,
							"linearizedBaseContracts": [
								306
							],
							"name": "structures",
							"nameLocation": "81:10:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "structures.Role",
									"id": 228,
									"members": [
										{
											"id": 223,
											"name": "SYSTEM_OWNER",
											"nameLocation": "200:12:2",
											"nodeType": "EnumValue",
											"src": "200:12:2"
										},
										{
											"id": 224,
											"name": "SYSTEM_PUBLIC",
											"nameLocation": "223:13:2",
											"nodeType": "EnumValue",
											"src": "223:13:2"
										},
										{
											"id": 225,
											"name": "SYSTEM_PRIVATE",
											"nameLocation": "247:14:2",
											"nodeType": "EnumValue",
											"src": "247:14:2"
										},
										{
											"id": 226,
											"name": "INVESTOR",
											"nameLocation": "272:8:2",
											"nodeType": "EnumValue",
											"src": "272:8:2"
										},
										{
											"id": 227,
											"name": "USER",
											"nameLocation": "291:4:2",
											"nodeType": "EnumValue",
											"src": "291:4:2"
										}
									],
									"name": "Role",
									"nameLocation": "184:4:2",
									"nodeType": "EnumDefinition",
									"src": "179:123:2"
								},
								{
									"canonicalName": "structures.structUser",
									"id": 244,
									"members": [
										{
											"constant": false,
											"id": 231,
											"mutability": "mutable",
											"name": "role",
											"nameLocation": "416:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 244,
											"src": "411:9:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_Role_$228",
												"typeString": "enum structures.Role"
											},
											"typeName": {
												"id": 230,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 229,
													"name": "Role",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 228,
													"src": "411:4:2"
												},
												"referencedDeclaration": 228,
												"src": "411:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Role_$228",
													"typeString": "enum structures.Role"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 233,
											"mutability": "mutable",
											"name": "login",
											"nameLocation": "466:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 244,
											"src": "459:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 232,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "459:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 235,
											"mutability": "mutable",
											"name": "password",
											"nameLocation": "515:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 244,
											"src": "507:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 234,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "507:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 237,
											"mutability": "mutable",
											"name": "balance_overall",
											"nameLocation": "565:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 244,
											"src": "557:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 236,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "557:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 239,
											"mutability": "mutable",
											"name": "balance_seed",
											"nameLocation": "626:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 244,
											"src": "618:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 238,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "618:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 241,
											"mutability": "mutable",
											"name": "balance_private",
											"nameLocation": "696:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 244,
											"src": "688:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 240,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "688:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 243,
											"mutability": "mutable",
											"name": "balance_public",
											"nameLocation": "769:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 244,
											"src": "761:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 242,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "761:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "structUser",
									"nameLocation": "389:10:2",
									"nodeType": "StructDefinition",
									"scope": 306,
									"src": "382:448:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc837259",
									"id": 249,
									"mutability": "mutable",
									"name": "structUsers_",
									"nameLocation": "875:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "836:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$244_storage_$",
										"typeString": "mapping(address => struct structures.structUser)"
									},
									"typeName": {
										"id": 248,
										"keyType": {
											"id": 245,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "845:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "836:31:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$244_storage_$",
											"typeString": "mapping(address => struct structures.structUser)"
										},
										"valueType": {
											"id": 247,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 246,
												"name": "structUser",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 244,
												"src": "856:10:2"
											},
											"referencedDeclaration": 244,
											"src": "856:10:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_structUser_$244_storage_ptr",
												"typeString": "struct structures.structUser"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 255,
									"mutability": "mutable",
									"name": "allowed",
									"nameLocation": "1007:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "958:56:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 254,
										"keyType": {
											"id": 250,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "966:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "958:48:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 253,
											"keyType": {
												"id": 251,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "986:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "977:28:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 252,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "997:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "0761c8b9",
									"id": 258,
									"mutability": "mutable",
									"name": "tokenPrice_",
									"nameLocation": "1138:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "1123:38:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 256,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1123:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "373530303030303030",
										"id": 257,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1152:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_750000000_by_1",
											"typeString": "int_const 750000000"
										},
										"value": "750000000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "948942ad",
									"id": 261,
									"mutability": "mutable",
									"name": "tokenAmount_",
									"nameLocation": "1397:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "1385:33:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 259,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1385:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030303030",
										"id": 260,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1412:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000_by_1",
											"typeString": "int_const 100000"
										},
										"value": "100000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 264,
									"mutability": "constant",
									"name": "ownerAdr",
									"nameLocation": "1661:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "1644:70:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 262,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1644:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307838453463323465313334393038663233333461654638383535364663314461616130373541353663",
										"id": 263,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1672:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x8E4c24e134908f2334aeF88556Fc1Daaa075A56c"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 267,
									"mutability": "constant",
									"name": "privateProviderAdr",
									"nameLocation": "1768:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "1751:80:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 265,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1751:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307834343930636633364138413439313830304233353134304130376234313930623533336646634266",
										"id": 266,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1789:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x4490cf36A8A491800B35140A07b4190b533fFcBf"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 270,
									"mutability": "constant",
									"name": "publicProviderAdr",
									"nameLocation": "1885:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "1868:79:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 268,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1868:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307839363939663335326241374139324537433046663639323445443939363032636464424133386442",
										"id": 269,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1905:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x9699f352bA7A92E7C0Ff6924ED99602cddBA38dB"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "structures.structPhase",
									"id": 275,
									"members": [
										{
											"constant": false,
											"id": 272,
											"mutability": "mutable",
											"name": "statusPhase",
											"nameLocation": "2074:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 275,
											"src": "2069:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 271,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2069:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 274,
											"mutability": "mutable",
											"name": "reviewed",
											"nameLocation": "2126:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 275,
											"src": "2121:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 273,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2121:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "structPhase",
									"nameLocation": "2046:11:2",
									"nodeType": "StructDefinition",
									"scope": 306,
									"src": "2039:157:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 280,
									"mutability": "mutable",
									"name": "structPhases_",
									"nameLocation": "2235:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "2202:46:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structPhase_$275_storage_$",
										"typeString": "mapping(address => struct structures.structPhase)"
									},
									"typeName": {
										"id": 279,
										"keyType": {
											"id": 276,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2211:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2202:32:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structPhase_$275_storage_$",
											"typeString": "mapping(address => struct structures.structPhase)"
										},
										"valueType": {
											"id": 278,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 277,
												"name": "structPhase",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 275,
												"src": "2222:11:2"
											},
											"referencedDeclaration": 275,
											"src": "2222:11:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_structPhase_$275_storage_ptr",
												"typeString": "struct structures.structPhase"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "structures.structApplication",
									"id": 291,
									"members": [
										{
											"constant": false,
											"id": 282,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "2448:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 291,
											"src": "2441:11:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 281,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2441:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 284,
											"mutability": "mutable",
											"name": "contactForCommunication",
											"nameLocation": "2499:23:2",
											"nodeType": "VariableDeclaration",
											"scope": 291,
											"src": "2492:30:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 283,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2492:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 286,
											"mutability": "mutable",
											"name": "userAdr",
											"nameLocation": "2579:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 291,
											"src": "2571:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 285,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2571:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 288,
											"mutability": "mutable",
											"name": "status",
											"nameLocation": "2656:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 291,
											"src": "2651:11:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 287,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2651:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 290,
											"mutability": "mutable",
											"name": "exist",
											"nameLocation": "2726:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 291,
											"src": "2721:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 289,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2721:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "structApplication",
									"nameLocation": "2412:17:2",
									"nodeType": "StructDefinition",
									"scope": 306,
									"src": "2405:391:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 296,
									"mutability": "mutable",
									"name": "strucApplications_",
									"nameLocation": "2841:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "2802:57:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structApplication_$291_storage_$",
										"typeString": "mapping(address => struct structures.structApplication)"
									},
									"typeName": {
										"id": 295,
										"keyType": {
											"id": 292,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2811:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2802:38:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structApplication_$291_storage_$",
											"typeString": "mapping(address => struct structures.structApplication)"
										},
										"valueType": {
											"id": 294,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 293,
												"name": "structApplication",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 291,
												"src": "2822:17:2"
											},
											"referencedDeclaration": 291,
											"src": "2822:17:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_structApplication_$291_storage_ptr",
												"typeString": "struct structures.structApplication"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 299,
									"mutability": "mutable",
									"name": "structApplicationsAmountAdr",
									"nameLocation": "2941:27:2",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "2930:38:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 297,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2930:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 298,
										"nodeType": "ArrayTypeName",
										"src": "2930:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "5c475d42",
									"id": 302,
									"mutability": "mutable",
									"name": "whiteList",
									"nameLocation": "3092:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "3075:26:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 300,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3075:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 301,
										"nodeType": "ArrayTypeName",
										"src": "3075:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "709ec8b4",
									"id": 305,
									"mutability": "mutable",
									"name": "blackList",
									"nameLocation": "3261:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "3244:26:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 303,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3244:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 304,
										"nodeType": "ArrayTypeName",
										"src": "3244:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								}
							],
							"scope": 307,
							"src": "72:3294:2",
							"usedErrors": []
						}
					],
					"src": "37:3329:2"
				},
				"id": 2
			}
		}
	}
}