{
	"id": "cda66304c4884e26434a3d6862f7efd1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nimport \"../lib/structures.sol\";\r\n\r\ncontract modifireFunc is structures {\r\n    \r\n    // COMMENT_MOD: Модификатор проверка роли ВЛАДЕЛЬЦА.\r\n    modifier onlyOwner () {\r\n        require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER, \"Your not admin\");\r\n        _;\r\n    }\r\n\r\n    // COMMENT_MOD: Модификатор проверка роли PRIVAT ПРОВАЙДЕРА.\r\n    modifier onlyPrivateProvider () {\r\n        require(structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"Your not Private provider\");\r\n        _;\r\n    }\r\n\r\n    // COMMENT_MOD: Модификатор проверка роли PRIVAT ПРОВАЙДЕРА.\r\n    modifier onlyPublicProvider () {\r\n        require(structUsers_[msg.sender].role == Role.SYSTEM_PUBLIC, \"Your not Public provider\");\r\n        _;\r\n    }\r\n\r\n    // COMMENT_MOD: Модификатор проверки роли ВЛАДЕЛЬЦ или PRIVAT ПРОВАЙДЕРА.\r\n    modifier onlyOwnerAndPrivateProvider () {\r\n        require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER || structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"You are not the owner or private provider\");\r\n        _;\r\n    }\r\n\r\n    // COMMENT_MOD: Модификатор проверка того, что пользователь обычный user.\r\n    modifier onlyUser () {\r\n        require(\r\n            structUsers_[msg.sender].role != Role.SYSTEM_OWNER ||\r\n            structUsers_[msg.sender].role != Role.SYSTEM_PUBLIC ||\r\n            structUsers_[msg.sender].role != Role.SYSTEM_PRIVATE ||\r\n            structUsers_[msg.sender].role != Role.INVESTOR, \"Application can only be submitted by regular users\"\r\n        );\r\n        _;\r\n    }\r\n}"
			},
			"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\ncontract structures {\r\n    // COMMENT: Роли для структуры пользователей.\r\n    enum Role {\r\n        SYSTEM_OWNER,\r\n        SYSTEM_PUBLIC,\r\n        SYSTEM_PRIVATE,\r\n        INVESTOR,\r\n        USER\r\n    }\r\n\r\n    // COMMENT_SCTRUCT: Структура пользователей.\r\n    struct structUser {\r\n        Role role;               // роль  \r\n        string login;            // логин\r\n        bytes32 password;        // пароль\r\n        uint256 balance_overall; // общий баланс\r\n        uint256 balance_seed;    // баланс SEED токенов\r\n        uint256 balance_private; // баланс PRIVATE токенов\r\n        uint256 balance_public;  // баланс PUBLIC токенов\r\n    }\r\n    mapping (address => structUser) public structUsers_; // обращение к структуре по АДРЕСАМ\r\n    mapping(address => mapping (address => uint256)) allowed; // делегированные пользоатели\r\n\r\n    // COMMENT: Цена за 1 токен.\r\n    uint256 public tokenPrice_ = 750000000; // 1 токен за 0.00075 ETH => 750000000; 0.001ETH => 1000000000 WEI; 0.002 => 2000000000 WEI | ЗНАЧЕНИЕ УКАЗЫВАЕТСЯ В WEI\r\n    \r\n    // COMMENT: Ограничение цены токена.\r\n    uint public tokenAmount_ = 100000; // кол-во, которое может купить токенов пользователь | private = 100 000 CMON; public = 5 000 CMON\r\n\r\n    // COMMENT: Набор начальних пользователей. \r\n    address constant ownerAdr = 0x8E4c24e134908f2334aeF88556Fc1Daaa075A56c;           // ВЛАДЕЛЕЦ\r\n    address constant privateProviderAdr = 0x4490cf36A8A491800B35140A07b4190b533fFcBf; // PRIVATE ПРОВАЙДЕР\r\n    address constant publicProviderAdr = 0x9699f352bA7A92E7C0Ff6924ED99602cddBA38dB;  // PUBLIC ПРОВАЙДЕР\r\n\r\n    // COMMENT_SCTRUC: Структура фазы.\r\n    struct structPhase {\r\n        bool statusPhase; // статус фазы\r\n        bool reviewed;    // была ли активирована фаза\r\n    }\r\n    mapping (address => structPhase) structPhases_; // обращение к структуре по АДРЕСАМ\r\n\r\n    // COMMENT_STRUCT: Структура заявок пользователей.\r\n    struct structApplication {\r\n        string name;                    // имя\r\n        string contactForCommunication; // контакты для связи\r\n        address userAdr;                // адрес пользователя\r\n        bool status;                    // статус заявки\r\n        bool exist;                     // заявка существует\r\n    }\r\n    mapping (address => structApplication) strucApplications_; // обращение к структуре по АДРЕСАМ\r\n    address[] structApplicationsAmountAdr;                     // массив пользователей, подавших заявление\r\n    address[] whiteList;                                       // белый лист прользователей, которым одобрили заявки\r\n    address[] blackList;                                       // черный лист полльзователей\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol": {
				"modifireFunc": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "structUsers_",
							"outputs": [
								{
									"internalType": "enum structures.Role",
									"name": "role",
									"type": "uint8"
								},
								{
									"internalType": "string",
									"name": "login",
									"type": "string"
								},
								{
									"internalType": "bytes32",
									"name": "password",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "balance_overall",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balance_seed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balance_private",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balance_public",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAmount_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenPrice_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":107:1779  contract modifireFunc is structures {\r... */\n  mstore(0x40, 0x80)\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1152:1161  750000000 */\n  0x2cb41780\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1123:1161  uint256 public tokenPrice_ = 750000000 */\n  0x02\n  sstore\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1412:1418  100000 */\n  0x0186a0\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1385:1418  uint public tokenAmount_ = 100000 */\n  0x03\n  sstore\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":107:1779  contract modifireFunc is structures {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":107:1779  contract modifireFunc is structures {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0761c8b9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x948942ad\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xfc837259\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1123:1161  uint256 public tokenPrice_ = 750000000 */\n    tag_3:\n      tag_6\n      sload(0x02)\n      dup2\n      jump\n    tag_6:\n      mload(0x40)\n        /* \"#utility.yul\":1646:1671   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1634:1636   */\n      0x20\n        /* \"#utility.yul\":1619:1637   */\n      add\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1123:1161  uint256 public tokenPrice_ = 750000000 */\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1385:1418  uint public tokenAmount_ = 100000 */\n    tag_4:\n      tag_6\n      sload(0x03)\n      dup2\n      jump\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":836:887  mapping (address => structUser) public structUsers_ */\n    tag_5:\n      tag_13\n      tag_14\n      calldatasize\n      0x04\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_8\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_16:\n      0x00\n      0x20\n      dup2\n      swap1\n      mstore\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      0xff\n      swap1\n      swap3\n      and\n      swap3\n      swap2\n      tag_19\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_21\n      swap1\n      tag_20\n      jump\t// in\n    tag_21:\n      dup1\n      iszero\n      tag_22\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_23\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_22)\n    tag_23:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_24:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_24\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_22:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      sload\n      swap1\n      pop\n      dup8\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_15:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_27\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_27:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_28\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_28:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":305:1495   */\n    tag_18:\n        /* \"#utility.yul\":591:595   */\n      0x00\n        /* \"#utility.yul\":631:632   */\n      0x05\n        /* \"#utility.yul\":623:629   */\n      dup10\n        /* \"#utility.yul\":620:633   */\n      lt\n        /* \"#utility.yul\":610:754   */\n      tag_30\n      jumpi\n        /* \"#utility.yul\":676:686   */\n      0x4e487b71\n        /* \"#utility.yul\":671:674   */\n      0xe0\n        /* \"#utility.yul\":667:687   */\n      shl\n        /* \"#utility.yul\":664:665   */\n      0x00\n        /* \"#utility.yul\":657:688   */\n      mstore\n        /* \"#utility.yul\":711:715   */\n      0x21\n        /* \"#utility.yul\":708:709   */\n      0x04\n        /* \"#utility.yul\":701:716   */\n      mstore\n        /* \"#utility.yul\":739:743   */\n      0x24\n        /* \"#utility.yul\":736:737   */\n      0x00\n        /* \"#utility.yul\":729:744   */\n      revert\n        /* \"#utility.yul\":610:754   */\n    tag_30:\n        /* \"#utility.yul\":781:787   */\n      dup9\n        /* \"#utility.yul\":770:779   */\n      dup3\n        /* \"#utility.yul\":763:788   */\n      mstore\n        /* \"#utility.yul\":807:809   */\n      0x20\n        /* \"#utility.yul\":845:848   */\n      0xe0\n        /* \"#utility.yul\":840:842   */\n      dup2\n        /* \"#utility.yul\":829:838   */\n      dup5\n        /* \"#utility.yul\":825:843   */\n      add\n        /* \"#utility.yul\":818:849   */\n      mstore\n        /* \"#utility.yul\":878:884   */\n      dup9\n        /* \"#utility.yul\":872:885   */\n      mload\n        /* \"#utility.yul\":922:928   */\n      dup1\n        /* \"#utility.yul\":916:919   */\n      0xe0\n        /* \"#utility.yul\":905:914   */\n      dup6\n        /* \"#utility.yul\":901:920   */\n      add\n        /* \"#utility.yul\":894:929   */\n      mstore\n        /* \"#utility.yul\":947:948   */\n      0x00\n        /* \"#utility.yul\":957:1098   */\n    tag_31:\n        /* \"#utility.yul\":971:977   */\n      dup2\n        /* \"#utility.yul\":968:969   */\n      dup2\n        /* \"#utility.yul\":965:978   */\n      lt\n        /* \"#utility.yul\":957:1098   */\n      iszero\n      tag_33\n      jumpi\n        /* \"#utility.yul\":1067:1081   */\n      dup11\n      dup2\n      add\n        /* \"#utility.yul\":1063:1086   */\n      dup4\n      add\n        /* \"#utility.yul\":1057:1087   */\n      mload\n        /* \"#utility.yul\":1032:1049   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1051:1054   */\n      0x0100\n        /* \"#utility.yul\":1028:1055   */\n      add\n        /* \"#utility.yul\":1021:1088   */\n      mstore\n        /* \"#utility.yul\":986:996   */\n      dup3\n      add\n        /* \"#utility.yul\":957:1098   */\n      jump(tag_31)\n    tag_33:\n        /* \"#utility.yul\":1116:1122   */\n      dup2\n        /* \"#utility.yul\":1113:1114   */\n      dup2\n        /* \"#utility.yul\":1110:1123   */\n      gt\n        /* \"#utility.yul\":1107:1199   */\n      iszero\n      tag_34\n      jumpi\n        /* \"#utility.yul\":1187:1188   */\n      0x00\n        /* \"#utility.yul\":1181:1184   */\n      0x0100\n        /* \"#utility.yul\":1172:1178   */\n      dup4\n        /* \"#utility.yul\":1161:1170   */\n      dup8\n        /* \"#utility.yul\":1157:1179   */\n      add\n        /* \"#utility.yul\":1153:1185   */\n      add\n        /* \"#utility.yul\":1146:1189   */\n      mstore\n        /* \"#utility.yul\":1107:1199   */\n    tag_34:\n      pop\n        /* \"#utility.yul\":1302:1304   */\n      0x40\n        /* \"#utility.yul\":1287:1305   */\n      dup5\n      add\n        /* \"#utility.yul\":1280:1314   */\n      swap9\n      swap1\n      swap9\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":1345:1347   */\n      0x60\n        /* \"#utility.yul\":1330:1348   */\n      dup2\n      add\n        /* \"#utility.yul\":1323:1357   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":1388:1391   */\n      0x80\n        /* \"#utility.yul\":1373:1392   */\n      dup5\n      add\n        /* \"#utility.yul\":1366:1401   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":1432:1435   */\n      0xa0\n        /* \"#utility.yul\":1417:1436   */\n      dup4\n      add\n        /* \"#utility.yul\":1410:1445   */\n      mstore\n        /* \"#utility.yul\":1476:1479   */\n      0xc0\n        /* \"#utility.yul\":1461:1480   */\n      dup3\n      add\n        /* \"#utility.yul\":1454:1489   */\n      mstore\n        /* \"#utility.yul\":1267:1270   */\n      0x0100\n        /* \"#utility.yul\":1260:1262   */\n      0x1f\n        /* \"#utility.yul\":1239:1254   */\n      swap1\n      swap3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1235:1264   */\n      and\n        /* \"#utility.yul\":1220:1265   */\n      add\n        /* \"#utility.yul\":1216:1271   */\n      add\n      swap3\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":305:1495   */\n      jump\t// out\n        /* \"#utility.yul\":1682:2062   */\n    tag_20:\n        /* \"#utility.yul\":1761:1762   */\n      0x01\n        /* \"#utility.yul\":1757:1769   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":1804:1816   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":1825:1886   */\n      tag_37\n      jumpi\n        /* \"#utility.yul\":1879:1883   */\n      0x7f\n        /* \"#utility.yul\":1871:1877   */\n      dup3\n        /* \"#utility.yul\":1867:1884   */\n      and\n        /* \"#utility.yul\":1857:1884   */\n      swap2\n      pop\n        /* \"#utility.yul\":1825:1886   */\n    tag_37:\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1924:1930   */\n      dup3\n        /* \"#utility.yul\":1921:1935   */\n      lt\n        /* \"#utility.yul\":1901:1919   */\n      dup2\n        /* \"#utility.yul\":1898:1936   */\n      eq\n        /* \"#utility.yul\":1895:2056   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":1978:1988   */\n      0x4e487b71\n        /* \"#utility.yul\":1973:1976   */\n      0xe0\n        /* \"#utility.yul\":1969:1989   */\n      shl\n        /* \"#utility.yul\":1966:1967   */\n      0x00\n        /* \"#utility.yul\":1959:1990   */\n      mstore\n        /* \"#utility.yul\":2013:2017   */\n      0x22\n        /* \"#utility.yul\":2010:2011   */\n      0x04\n        /* \"#utility.yul\":2003:2018   */\n      mstore\n        /* \"#utility.yul\":2041:2045   */\n      0x24\n        /* \"#utility.yul\":2038:2039   */\n      0x00\n        /* \"#utility.yul\":2031:2046   */\n      revert\n        /* \"#utility.yul\":1895:2056   */\n    tag_38:\n      pop\n        /* \"#utility.yul\":1682:2062   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ca23a1f39f06c5f42573bc7a872d83584198264e0f12570daf8e9c1430ccceee64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052632cb41780600255620186a060035534801561001f57600080fd5b506102988061002f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630761c8b914610046578063948942ad14610062578063fc8372591461006b575b600080fd5b61004f60025481565b6040519081526020015b60405180910390f35b61004f60035481565b61007e610079366004610158565b610091565b6040516100599796959493929190610188565b6000602081905290815260409020805460018201805460ff90921692916100b790610227565b80601f01602080910402602001604051908101604052809291908181526020018280546100e390610227565b80156101305780601f1061010557610100808354040283529160200191610130565b820191906000526020600020905b81548152906001019060200180831161011357829003601f168201915b5050505050908060020154908060030154908060040154908060050154908060060154905087565b60006020828403121561016a57600080fd5b81356001600160a01b038116811461018157600080fd5b9392505050565b6000600589106101a857634e487b7160e01b600052602160045260246000fd5b888252602060e08184015288518060e085015260005b818110156101db578a8101830151858201610100015282016101be565b818111156101ee57600061010083870101525b50604084019890985250506060810194909452608084019290925260a083015260c0820152610100601f909201601f1916010192915050565b600181811c9082168061023b57607f821691505b6020821081141561025c57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220ca23a1f39f06c5f42573bc7a872d83584198264e0f12570daf8e9c1430ccceee64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH4 0x2CB41780 PUSH1 0x2 SSTORE PUSH3 0x186A0 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x298 DUP1 PUSH2 0x2F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761C8B9 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x948942AD EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xFC837259 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4F PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7E PUSH2 0x79 CALLDATASIZE PUSH1 0x4 PUSH2 0x158 JUMP JUMPDEST PUSH2 0x91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x188 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH2 0xB7 SWAP1 PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE3 SWAP1 PUSH2 0x227 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x130 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x105 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x130 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x113 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP10 LT PUSH2 0x1A8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP9 DUP3 MSTORE PUSH1 0x20 PUSH1 0xE0 DUP2 DUP5 ADD MSTORE DUP9 MLOAD DUP1 PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1DB JUMPI DUP11 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH2 0x100 ADD MSTORE DUP3 ADD PUSH2 0x1BE JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1EE JUMPI PUSH1 0x0 PUSH2 0x100 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x40 DUP5 ADD SWAP9 SWAP1 SWAP9 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x100 PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x23B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x25C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0x23 LOG1 RETURN SWAP16 MOD 0xC5 DELEGATECALL 0x25 PUSH20 0xBC7A872D83584198264E0F12570DAF8E9C1430CC 0xCE 0xEE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "107:1672:0:-:0;;;1152:9:1;1123:38;;1412:6;1385:33;;107:1672:0;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@structUsers__150": {
									"entryPoint": 145,
									"id": 150,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenAmount__162": {
									"entryPoint": null,
									"id": 162,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenPrice__159": {
									"entryPoint": null,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_Role_$129_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint8_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 392,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2064:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:216:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:2"
															},
															"nodeType": "YulIf",
															"src": "94:52:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:2"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "239:3:2",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "244:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "248:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:50:2"
															},
															"nodeType": "YulIf",
															"src": "200:70:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:2",
														"type": ""
													}
												],
												"src": "14:286:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "600:895:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "643:111:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "664:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "671:3:2",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "676:10:2",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "667:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "667:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "657:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "657:31:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "657:31:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "708:1:2",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "711:4:2",
																					"type": "",
																					"value": "0x21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "701:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "701:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "701:15:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "736:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "739:4:2",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "729:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "729:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "729:15:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "623:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:1:2",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "620:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "620:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "613:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "613:21:2"
															},
															"nodeType": "YulIf",
															"src": "610:144:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "770:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "781:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "763:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "763:25:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "797:12:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "807:2:2",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "801:2:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "829:9:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "840:2:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "825:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "825:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "845:3:2",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "818:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "818:31:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "858:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "878:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "872:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "872:13:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "862:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "905:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "916:3:2",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "901:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "901:19:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "922:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:35:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "894:35:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "938:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "947:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "942:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1007:91:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1036:9:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1047:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1032:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1032:17:2"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1051:3:2",
																							"type": "",
																							"value": "256"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1028:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1028:27:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value1",
																											"nodeType": "YulIdentifier",
																											"src": "1071:6:2"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1079:1:2"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1067:3:2"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1067:14:2"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1083:2:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1063:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1063:23:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1057:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1057:30:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1021:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1021:67:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1021:67:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "968:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "971:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "965:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "965:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "979:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "981:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "990:1:2"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "993:2:2"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "986:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "986:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "981:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "961:3:2",
																"statements": []
															},
															"src": "957:141:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1132:67:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1161:9:2"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1172:6:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1157:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1157:22:2"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1181:3:2",
																							"type": "",
																							"value": "256"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1153:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1153:32:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1187:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1146:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1146:43:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1146:43:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1113:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1116:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1110:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1110:13:2"
															},
															"nodeType": "YulIf",
															"src": "1107:92:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1208:63:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1224:9:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1243:6:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1251:2:2",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1239:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1239:15:2"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1260:2:2",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1256:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1256:7:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1235:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1235:29:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:45:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1267:3:2",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1216:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1216:55:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1208:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1291:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1302:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1287:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1287:18:2"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1280:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1280:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1280:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1334:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1345:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1330:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1330:18:2"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "1350:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1323:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1323:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1323:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1377:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1388:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1373:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1373:19:2"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "1394:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1366:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1366:35:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1366:35:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1421:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1432:3:2",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1417:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1417:19:2"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "1438:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1410:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1410:35:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1410:35:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1465:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1476:3:2",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1461:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1461:19:2"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "1482:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1454:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1454:35:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1454:35:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Role_$129_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint8_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "521:9:2",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "532:6:2",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "540:6:2",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "548:6:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "556:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "564:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "572:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "580:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "591:4:2",
														"type": ""
													}
												],
												"src": "305:1190:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1601:76:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1611:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1623:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1634:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1619:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1619:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1611:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1653:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1664:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1646:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1646:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1646:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1570:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1581:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1592:4:2",
														"type": ""
													}
												],
												"src": "1500:177:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1737:325:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1747:22:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1761:1:2",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1764:4:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1757:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1757:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1747:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1778:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1808:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1814:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1804:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1804:12:2"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1782:18:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1855:31:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1857:27:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1871:6:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1879:4:2",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1867:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1867:17:2"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1857:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1835:18:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1828:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1828:26:2"
															},
															"nodeType": "YulIf",
															"src": "1825:61:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1945:111:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1966:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1973:3:2",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1978:10:2",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1969:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1969:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1959:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1959:31:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1959:31:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2010:1:2",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2013:4:2",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2003:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2003:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2003:15:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2038:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2041:4:2",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2031:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2031:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2031:15:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1901:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1921:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1921:14:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1898:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:38:2"
															},
															"nodeType": "YulIf",
															"src": "1895:161:2"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1717:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1726:6:2",
														"type": ""
													}
												],
												"src": "1682:380:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_enum$_Role_$129_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint8_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        if iszero(lt(value0, 5))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n        let _1 := 32\n        mstore(add(headStart, _1), 224)\n        let length := mload(value1)\n        mstore(add(headStart, 224), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 256), mload(add(add(value1, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 256), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 256)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80630761c8b914610046578063948942ad14610062578063fc8372591461006b575b600080fd5b61004f60025481565b6040519081526020015b60405180910390f35b61004f60035481565b61007e610079366004610158565b610091565b6040516100599796959493929190610188565b6000602081905290815260409020805460018201805460ff90921692916100b790610227565b80601f01602080910402602001604051908101604052809291908181526020018280546100e390610227565b80156101305780601f1061010557610100808354040283529160200191610130565b820191906000526020600020905b81548152906001019060200180831161011357829003601f168201915b5050505050908060020154908060030154908060040154908060050154908060060154905087565b60006020828403121561016a57600080fd5b81356001600160a01b038116811461018157600080fd5b9392505050565b6000600589106101a857634e487b7160e01b600052602160045260246000fd5b888252602060e08184015288518060e085015260005b818110156101db578a8101830151858201610100015282016101be565b818111156101ee57600061010083870101525b50604084019890985250506060810194909452608084019290925260a083015260c0820152610100601f909201601f1916010192915050565b600181811c9082168061023b57607f821691505b6020821081141561025c57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220ca23a1f39f06c5f42573bc7a872d83584198264e0f12570daf8e9c1430ccceee64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761C8B9 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x948942AD EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xFC837259 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4F PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7E PUSH2 0x79 CALLDATASIZE PUSH1 0x4 PUSH2 0x158 JUMP JUMPDEST PUSH2 0x91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x188 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH2 0xB7 SWAP1 PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE3 SWAP1 PUSH2 0x227 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x130 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x105 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x130 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x113 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP10 LT PUSH2 0x1A8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP9 DUP3 MSTORE PUSH1 0x20 PUSH1 0xE0 DUP2 DUP5 ADD MSTORE DUP9 MLOAD DUP1 PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1DB JUMPI DUP11 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH2 0x100 ADD MSTORE DUP3 ADD PUSH2 0x1BE JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1EE JUMPI PUSH1 0x0 PUSH2 0x100 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x40 DUP5 ADD SWAP9 SWAP1 SWAP9 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x100 PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x23B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x25C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0x23 LOG1 RETURN SWAP16 MOD 0xC5 DELEGATECALL 0x25 PUSH20 0xBC7A872D83584198264E0F12570DAF8E9C1430CC 0xCE 0xEE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "107:1672:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1123:38:1;;;;;;;;;1646:25:2;;;1634:2;1619:18;1123:38:1;;;;;;;;1385:33;;;;;;836:51;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:286:2:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:2;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:2:o;305:1190::-;591:4;631:1;623:6;620:13;610:144;;676:10;671:3;667:20;664:1;657:31;711:4;708:1;701:15;739:4;736:1;729:15;610:144;781:6;770:9;763:25;807:2;845:3;840:2;829:9;825:18;818:31;878:6;872:13;922:6;916:3;905:9;901:19;894:35;947:1;957:141;971:6;968:1;965:13;957:141;;;1067:14;;;1063:23;;1057:30;1032:17;;;1051:3;1028:27;1021:67;986:10;;957:141;;;1116:6;1113:1;1110:13;1107:92;;;1187:1;1181:3;1172:6;1161:9;1157:22;1153:32;1146:43;1107:92;-1:-1:-1;1302:2:2;1287:18;;1280:34;;;;-1:-1:-1;;1345:2:2;1330:18;;1323:34;;;;1388:3;1373:19;;1366:35;;;;1432:3;1417:19;;1410:35;1476:3;1461:19;;1454:35;1267:3;1260:2;1239:15;;;-1:-1:-1;;1235:29:2;1220:45;1216:55;;;-1:-1:-1;;305:1190:2:o;1682:380::-;1761:1;1757:12;;;;1804;;;1825:61;;1879:4;1871:6;1867:17;1857:27;;1825:61;1932:2;1924:6;1921:14;1901:18;1898:38;1895:161;;;1978:10;1973:3;1969:20;1966:1;1959:31;2013:4;2010:1;2003:15;2041:4;2038:1;2031:15;1895:161;;1682:380;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "132800",
								"executionCost": "44389",
								"totalCost": "177189"
							},
							"external": {
								"structUsers_(address)": "infinite",
								"tokenAmount_()": "2284",
								"tokenPrice_()": "2262"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 107,
									"end": 1779,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1152,
									"end": 1161,
									"name": "PUSH",
									"source": 1,
									"value": "2CB41780"
								},
								{
									"begin": 1123,
									"end": 1161,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1123,
									"end": 1161,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1412,
									"end": 1418,
									"name": "PUSH",
									"source": 1,
									"value": "186A0"
								},
								{
									"begin": 1385,
									"end": 1418,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1385,
									"end": 1418,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ca23a1f39f06c5f42573bc7a872d83584198264e0f12570daf8e9c1430ccceee64736f6c63430008070033",
									".code": [
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 0,
											"value": "761C8B9"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 0,
											"value": "948942AD"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 0,
											"value": "FC837259"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1646,
											"end": 1671,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1646,
											"end": 1671,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1636,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 305,
											"end": 1495,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 305,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 591,
											"end": 595,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 632,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 623,
											"end": 629,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 620,
											"end": 633,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 610,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 610,
											"end": 754,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 676,
											"end": 686,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 671,
											"end": 674,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 667,
											"end": 687,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 664,
											"end": 665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 688,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 711,
											"end": 715,
											"name": "PUSH",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 708,
											"end": 709,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 701,
											"end": 716,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 739,
											"end": 743,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 736,
											"end": 737,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 744,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 610,
											"end": 754,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 610,
											"end": 754,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 787,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 770,
											"end": 779,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 763,
											"end": 788,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 807,
											"end": 809,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 848,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 840,
											"end": 842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 829,
											"end": 838,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 825,
											"end": 843,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 818,
											"end": 849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 878,
											"end": 884,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 872,
											"end": 885,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 922,
											"end": 928,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 916,
											"end": 919,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 905,
											"end": 914,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 901,
											"end": 920,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 894,
											"end": 929,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 947,
											"end": 948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 971,
											"end": 977,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 968,
											"end": 969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 965,
											"end": 978,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1067,
											"end": 1081,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 1067,
											"end": 1081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1067,
											"end": 1081,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1086,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1086,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1087,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1032,
											"end": 1049,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1032,
											"end": 1049,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1032,
											"end": 1049,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1054,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1028,
											"end": 1055,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1088,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 986,
											"end": 996,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 986,
											"end": 996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1122,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1114,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1123,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1199,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1107,
											"end": 1199,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1184,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1172,
											"end": 1178,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1161,
											"end": 1170,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1179,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1185,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1199,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1107,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1302,
											"end": 1304,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1305,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1287,
											"end": 1305,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1314,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1314,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1314,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1345,
											"end": 1347,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1330,
											"end": 1348,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1330,
											"end": 1348,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1323,
											"end": 1357,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1323,
											"end": 1357,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1323,
											"end": 1357,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1323,
											"end": 1357,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1391,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1373,
											"end": 1392,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1392,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1366,
											"end": 1401,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1366,
											"end": 1401,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1366,
											"end": 1401,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1366,
											"end": 1401,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1432,
											"end": 1435,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 1417,
											"end": 1436,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 1436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1445,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1479,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 1461,
											"end": 1480,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1480,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1267,
											"end": 1270,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1260,
											"end": 1262,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1265,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1216,
											"end": 1271,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1216,
											"end": 1271,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1216,
											"end": 1271,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 305,
											"end": 1495,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1682,
											"end": 2062,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1682,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1762,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1825,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1825,
											"end": 1886,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1883,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 1871,
											"end": 1877,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1884,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1857,
											"end": 1884,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1857,
											"end": 1884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1825,
											"end": 1886,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1825,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1924,
											"end": 1930,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1935,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1919,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1936,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 2056,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1895,
											"end": 2056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1978,
											"end": 1988,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 1973,
											"end": 1976,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1967,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 1990,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2013,
											"end": 2017,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2010,
											"end": 2011,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2018,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2045,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2038,
											"end": 2039,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2031,
											"end": 2046,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 2056,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1895,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 2056,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1682,
											"end": 2062,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1682,
											"end": 2062,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1682,
											"end": 2062,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1682,
											"end": 2062,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"structUsers_(address)": "fc837259",
							"tokenAmount_()": "948942ad",
							"tokenPrice_()": "0761c8b9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"structUsers_\",\"outputs\":[{\"internalType\":\"enum structures.Role\",\"name\":\"role\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"login\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"password\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"balance_overall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance_seed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance_private\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance_public\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAmount_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":\"modifireFunc\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":{\"keccak256\":\"0x791815edf6d8d205da15be693b57ddde64d7cf3bf65ad29c748e9e98c1f675ac\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://de960745a1c9cf451cc7401bef8c7090fec7892241a55138c64740527bc9e11c\",\"dweb:/ipfs/QmNdesY61PZkUX2jpu1FqgUURAPcFWybkSCLG98zrHtsFG\"]},\"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":{\"keccak256\":\"0xb7e1ff8a289e5c363e3e72f6a72d2cfb8f2292fab11020fa270a3f192df9a512\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d1dcc0b7802d1d7b612433cf525e945e62862710c1bdb1e6c77ad6d870571a8b\",\"dweb:/ipfs/QmRnaJJqfNpRWWxvhsDPpd8LYqpzNmxjaVqmbXpSp4mUQE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 150,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "structUsers_",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(structUser)145_storage)"
							},
							{
								"astId": 156,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "allowed",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 159,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "tokenPrice_",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 162,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "tokenAmount_",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 181,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "structPhases_",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(structPhase)176_storage)"
							},
							{
								"astId": 197,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "strucApplications_",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(structApplication)192_storage)"
							},
							{
								"astId": 200,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "structApplicationsAmountAdr",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 203,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "whiteList",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 206,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "blackList",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(Role)129": {
								"encoding": "inplace",
								"label": "enum structures.Role",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(structApplication)192_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structApplication)",
								"numberOfBytes": "32",
								"value": "t_struct(structApplication)192_storage"
							},
							"t_mapping(t_address,t_struct(structPhase)176_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structPhase)",
								"numberOfBytes": "32",
								"value": "t_struct(structPhase)176_storage"
							},
							"t_mapping(t_address,t_struct(structUser)145_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structUser)",
								"numberOfBytes": "32",
								"value": "t_struct(structUser)145_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(structApplication)192_storage": {
								"encoding": "inplace",
								"label": "struct structures.structApplication",
								"members": [
									{
										"astId": 183,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 185,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "contactForCommunication",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 187,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "userAdr",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 189,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "status",
										"offset": 20,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 191,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "exist",
										"offset": 21,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(structPhase)176_storage": {
								"encoding": "inplace",
								"label": "struct structures.structPhase",
								"members": [
									{
										"astId": 173,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "statusPhase",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 175,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "reviewed",
										"offset": 1,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(structUser)145_storage": {
								"encoding": "inplace",
								"label": "struct structures.structUser",
								"members": [
									{
										"astId": 132,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "role",
										"offset": 0,
										"slot": "0",
										"type": "t_enum(Role)129"
									},
									{
										"astId": 134,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "login",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 136,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "password",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									},
									{
										"astId": 138,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "balance_overall",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 140,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "balance_seed",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 142,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "balance_private",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 144,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "balance_public",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol": {
				"structures": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "structUsers_",
							"outputs": [
								{
									"internalType": "enum structures.Role",
									"name": "role",
									"type": "uint8"
								},
								{
									"internalType": "string",
									"name": "login",
									"type": "string"
								},
								{
									"internalType": "bytes32",
									"name": "password",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "balance_overall",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balance_seed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balance_private",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balance_public",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAmount_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenPrice_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":72:3351  contract structures {\r... */\n  mstore(0x40, 0x80)\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1152:1161  750000000 */\n  0x2cb41780\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1123:1161  uint256 public tokenPrice_ = 750000000 */\n  0x02\n  sstore\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1412:1418  100000 */\n  0x0186a0\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1385:1418  uint public tokenAmount_ = 100000 */\n  0x03\n  sstore\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":72:3351  contract structures {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":72:3351  contract structures {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0761c8b9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x948942ad\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xfc837259\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1123:1161  uint256 public tokenPrice_ = 750000000 */\n    tag_3:\n      tag_6\n      sload(0x02)\n      dup2\n      jump\n    tag_6:\n      mload(0x40)\n        /* \"#utility.yul\":1646:1671   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1634:1636   */\n      0x20\n        /* \"#utility.yul\":1619:1637   */\n      add\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1123:1161  uint256 public tokenPrice_ = 750000000 */\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1385:1418  uint public tokenAmount_ = 100000 */\n    tag_4:\n      tag_6\n      sload(0x03)\n      dup2\n      jump\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":836:887  mapping (address => structUser) public structUsers_ */\n    tag_5:\n      tag_13\n      tag_14\n      calldatasize\n      0x04\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_8\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_16:\n      0x00\n      0x20\n      dup2\n      swap1\n      mstore\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      0xff\n      swap1\n      swap3\n      and\n      swap3\n      swap2\n      tag_19\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_21\n      swap1\n      tag_20\n      jump\t// in\n    tag_21:\n      dup1\n      iszero\n      tag_22\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_23\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_22)\n    tag_23:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_24:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_24\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_22:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      sload\n      swap1\n      pop\n      dup8\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_15:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_27\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_27:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_28\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_28:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":305:1495   */\n    tag_18:\n        /* \"#utility.yul\":591:595   */\n      0x00\n        /* \"#utility.yul\":631:632   */\n      0x05\n        /* \"#utility.yul\":623:629   */\n      dup10\n        /* \"#utility.yul\":620:633   */\n      lt\n        /* \"#utility.yul\":610:754   */\n      tag_30\n      jumpi\n        /* \"#utility.yul\":676:686   */\n      0x4e487b71\n        /* \"#utility.yul\":671:674   */\n      0xe0\n        /* \"#utility.yul\":667:687   */\n      shl\n        /* \"#utility.yul\":664:665   */\n      0x00\n        /* \"#utility.yul\":657:688   */\n      mstore\n        /* \"#utility.yul\":711:715   */\n      0x21\n        /* \"#utility.yul\":708:709   */\n      0x04\n        /* \"#utility.yul\":701:716   */\n      mstore\n        /* \"#utility.yul\":739:743   */\n      0x24\n        /* \"#utility.yul\":736:737   */\n      0x00\n        /* \"#utility.yul\":729:744   */\n      revert\n        /* \"#utility.yul\":610:754   */\n    tag_30:\n        /* \"#utility.yul\":781:787   */\n      dup9\n        /* \"#utility.yul\":770:779   */\n      dup3\n        /* \"#utility.yul\":763:788   */\n      mstore\n        /* \"#utility.yul\":807:809   */\n      0x20\n        /* \"#utility.yul\":845:848   */\n      0xe0\n        /* \"#utility.yul\":840:842   */\n      dup2\n        /* \"#utility.yul\":829:838   */\n      dup5\n        /* \"#utility.yul\":825:843   */\n      add\n        /* \"#utility.yul\":818:849   */\n      mstore\n        /* \"#utility.yul\":878:884   */\n      dup9\n        /* \"#utility.yul\":872:885   */\n      mload\n        /* \"#utility.yul\":922:928   */\n      dup1\n        /* \"#utility.yul\":916:919   */\n      0xe0\n        /* \"#utility.yul\":905:914   */\n      dup6\n        /* \"#utility.yul\":901:920   */\n      add\n        /* \"#utility.yul\":894:929   */\n      mstore\n        /* \"#utility.yul\":947:948   */\n      0x00\n        /* \"#utility.yul\":957:1098   */\n    tag_31:\n        /* \"#utility.yul\":971:977   */\n      dup2\n        /* \"#utility.yul\":968:969   */\n      dup2\n        /* \"#utility.yul\":965:978   */\n      lt\n        /* \"#utility.yul\":957:1098   */\n      iszero\n      tag_33\n      jumpi\n        /* \"#utility.yul\":1067:1081   */\n      dup11\n      dup2\n      add\n        /* \"#utility.yul\":1063:1086   */\n      dup4\n      add\n        /* \"#utility.yul\":1057:1087   */\n      mload\n        /* \"#utility.yul\":1032:1049   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1051:1054   */\n      0x0100\n        /* \"#utility.yul\":1028:1055   */\n      add\n        /* \"#utility.yul\":1021:1088   */\n      mstore\n        /* \"#utility.yul\":986:996   */\n      dup3\n      add\n        /* \"#utility.yul\":957:1098   */\n      jump(tag_31)\n    tag_33:\n        /* \"#utility.yul\":1116:1122   */\n      dup2\n        /* \"#utility.yul\":1113:1114   */\n      dup2\n        /* \"#utility.yul\":1110:1123   */\n      gt\n        /* \"#utility.yul\":1107:1199   */\n      iszero\n      tag_34\n      jumpi\n        /* \"#utility.yul\":1187:1188   */\n      0x00\n        /* \"#utility.yul\":1181:1184   */\n      0x0100\n        /* \"#utility.yul\":1172:1178   */\n      dup4\n        /* \"#utility.yul\":1161:1170   */\n      dup8\n        /* \"#utility.yul\":1157:1179   */\n      add\n        /* \"#utility.yul\":1153:1185   */\n      add\n        /* \"#utility.yul\":1146:1189   */\n      mstore\n        /* \"#utility.yul\":1107:1199   */\n    tag_34:\n      pop\n        /* \"#utility.yul\":1302:1304   */\n      0x40\n        /* \"#utility.yul\":1287:1305   */\n      dup5\n      add\n        /* \"#utility.yul\":1280:1314   */\n      swap9\n      swap1\n      swap9\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":1345:1347   */\n      0x60\n        /* \"#utility.yul\":1330:1348   */\n      dup2\n      add\n        /* \"#utility.yul\":1323:1357   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":1388:1391   */\n      0x80\n        /* \"#utility.yul\":1373:1392   */\n      dup5\n      add\n        /* \"#utility.yul\":1366:1401   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":1432:1435   */\n      0xa0\n        /* \"#utility.yul\":1417:1436   */\n      dup4\n      add\n        /* \"#utility.yul\":1410:1445   */\n      mstore\n        /* \"#utility.yul\":1476:1479   */\n      0xc0\n        /* \"#utility.yul\":1461:1480   */\n      dup3\n      add\n        /* \"#utility.yul\":1454:1489   */\n      mstore\n        /* \"#utility.yul\":1267:1270   */\n      0x0100\n        /* \"#utility.yul\":1260:1262   */\n      0x1f\n        /* \"#utility.yul\":1239:1254   */\n      swap1\n      swap3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1235:1264   */\n      and\n        /* \"#utility.yul\":1220:1265   */\n      add\n        /* \"#utility.yul\":1216:1271   */\n      add\n      swap3\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":305:1495   */\n      jump\t// out\n        /* \"#utility.yul\":1682:2062   */\n    tag_20:\n        /* \"#utility.yul\":1761:1762   */\n      0x01\n        /* \"#utility.yul\":1757:1769   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":1804:1816   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":1825:1886   */\n      tag_37\n      jumpi\n        /* \"#utility.yul\":1879:1883   */\n      0x7f\n        /* \"#utility.yul\":1871:1877   */\n      dup3\n        /* \"#utility.yul\":1867:1884   */\n      and\n        /* \"#utility.yul\":1857:1884   */\n      swap2\n      pop\n        /* \"#utility.yul\":1825:1886   */\n    tag_37:\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1924:1930   */\n      dup3\n        /* \"#utility.yul\":1921:1935   */\n      lt\n        /* \"#utility.yul\":1901:1919   */\n      dup2\n        /* \"#utility.yul\":1898:1936   */\n      eq\n        /* \"#utility.yul\":1895:2056   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":1978:1988   */\n      0x4e487b71\n        /* \"#utility.yul\":1973:1976   */\n      0xe0\n        /* \"#utility.yul\":1969:1989   */\n      shl\n        /* \"#utility.yul\":1966:1967   */\n      0x00\n        /* \"#utility.yul\":1959:1990   */\n      mstore\n        /* \"#utility.yul\":2013:2017   */\n      0x22\n        /* \"#utility.yul\":2010:2011   */\n      0x04\n        /* \"#utility.yul\":2003:2018   */\n      mstore\n        /* \"#utility.yul\":2041:2045   */\n      0x24\n        /* \"#utility.yul\":2038:2039   */\n      0x00\n        /* \"#utility.yul\":2031:2046   */\n      revert\n        /* \"#utility.yul\":1895:2056   */\n    tag_38:\n      pop\n        /* \"#utility.yul\":1682:2062   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f06475f8b07b9c170d6f1a52f3246579987c4fe9dbd800d83d121f20bc3fb08464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052632cb41780600255620186a060035534801561001f57600080fd5b506102988061002f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630761c8b914610046578063948942ad14610062578063fc8372591461006b575b600080fd5b61004f60025481565b6040519081526020015b60405180910390f35b61004f60035481565b61007e610079366004610158565b610091565b6040516100599796959493929190610188565b6000602081905290815260409020805460018201805460ff90921692916100b790610227565b80601f01602080910402602001604051908101604052809291908181526020018280546100e390610227565b80156101305780601f1061010557610100808354040283529160200191610130565b820191906000526020600020905b81548152906001019060200180831161011357829003601f168201915b5050505050908060020154908060030154908060040154908060050154908060060154905087565b60006020828403121561016a57600080fd5b81356001600160a01b038116811461018157600080fd5b9392505050565b6000600589106101a857634e487b7160e01b600052602160045260246000fd5b888252602060e08184015288518060e085015260005b818110156101db578a8101830151858201610100015282016101be565b818111156101ee57600061010083870101525b50604084019890985250506060810194909452608084019290925260a083015260c0820152610100601f909201601f1916010192915050565b600181811c9082168061023b57607f821691505b6020821081141561025c57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220f06475f8b07b9c170d6f1a52f3246579987c4fe9dbd800d83d121f20bc3fb08464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH4 0x2CB41780 PUSH1 0x2 SSTORE PUSH3 0x186A0 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x298 DUP1 PUSH2 0x2F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761C8B9 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x948942AD EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xFC837259 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4F PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7E PUSH2 0x79 CALLDATASIZE PUSH1 0x4 PUSH2 0x158 JUMP JUMPDEST PUSH2 0x91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x188 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH2 0xB7 SWAP1 PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE3 SWAP1 PUSH2 0x227 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x130 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x105 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x130 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x113 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP10 LT PUSH2 0x1A8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP9 DUP3 MSTORE PUSH1 0x20 PUSH1 0xE0 DUP2 DUP5 ADD MSTORE DUP9 MLOAD DUP1 PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1DB JUMPI DUP11 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH2 0x100 ADD MSTORE DUP3 ADD PUSH2 0x1BE JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1EE JUMPI PUSH1 0x0 PUSH2 0x100 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x40 DUP5 ADD SWAP9 SWAP1 SWAP9 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x100 PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x23B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x25C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE PUSH5 0x75F8B07B9C OR 0xD PUSH16 0x1A52F3246579987C4FE9DBD800D83D12 0x1F KECCAK256 0xBC EXTCODEHASH 0xB0 DUP5 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "72:3279:1:-:0;;;1152:9;1123:38;;1412:6;1385:33;;72:3279;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@structUsers__150": {
									"entryPoint": 145,
									"id": 150,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenAmount__162": {
									"entryPoint": null,
									"id": 162,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenPrice__159": {
									"entryPoint": null,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_Role_$129_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint8_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 392,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2064:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:216:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:2"
															},
															"nodeType": "YulIf",
															"src": "94:52:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:2"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "239:3:2",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "244:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "248:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:50:2"
															},
															"nodeType": "YulIf",
															"src": "200:70:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:2",
														"type": ""
													}
												],
												"src": "14:286:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "600:895:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "643:111:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "664:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "671:3:2",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "676:10:2",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "667:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "667:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "657:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "657:31:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "657:31:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "708:1:2",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "711:4:2",
																					"type": "",
																					"value": "0x21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "701:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "701:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "701:15:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "736:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "739:4:2",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "729:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "729:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "729:15:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "623:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:1:2",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "620:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "620:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "613:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "613:21:2"
															},
															"nodeType": "YulIf",
															"src": "610:144:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "770:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "781:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "763:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "763:25:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "797:12:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "807:2:2",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "801:2:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "829:9:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "840:2:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "825:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "825:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "845:3:2",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "818:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "818:31:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "858:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "878:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "872:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "872:13:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "862:6:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "905:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "916:3:2",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "901:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "901:19:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "922:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:35:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "894:35:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "938:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "947:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "942:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1007:91:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1036:9:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1047:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1032:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1032:17:2"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1051:3:2",
																							"type": "",
																							"value": "256"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1028:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1028:27:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value1",
																											"nodeType": "YulIdentifier",
																											"src": "1071:6:2"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1079:1:2"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1067:3:2"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1067:14:2"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1083:2:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1063:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1063:23:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1057:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1057:30:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1021:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1021:67:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1021:67:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "968:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "971:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "965:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "965:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "979:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "981:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "990:1:2"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "993:2:2"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "986:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "986:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "981:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "961:3:2",
																"statements": []
															},
															"src": "957:141:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1132:67:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1161:9:2"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1172:6:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1157:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1157:22:2"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1181:3:2",
																							"type": "",
																							"value": "256"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1153:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1153:32:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1187:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1146:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1146:43:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1146:43:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1113:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1116:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1110:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1110:13:2"
															},
															"nodeType": "YulIf",
															"src": "1107:92:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1208:63:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1224:9:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1243:6:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1251:2:2",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1239:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1239:15:2"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1260:2:2",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1256:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1256:7:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1235:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1235:29:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:45:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1267:3:2",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1216:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1216:55:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1208:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1291:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1302:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1287:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1287:18:2"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1280:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1280:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1280:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1334:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1345:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1330:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1330:18:2"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "1350:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1323:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1323:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1323:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1377:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1388:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1373:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1373:19:2"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "1394:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1366:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1366:35:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1366:35:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1421:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1432:3:2",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1417:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1417:19:2"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "1438:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1410:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1410:35:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1410:35:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1465:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1476:3:2",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1461:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1461:19:2"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "1482:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1454:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1454:35:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1454:35:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Role_$129_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint8_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "521:9:2",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "532:6:2",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "540:6:2",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "548:6:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "556:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "564:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "572:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "580:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "591:4:2",
														"type": ""
													}
												],
												"src": "305:1190:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1601:76:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1611:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1623:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1634:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1619:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1619:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1611:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1653:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1664:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1646:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1646:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1646:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1570:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1581:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1592:4:2",
														"type": ""
													}
												],
												"src": "1500:177:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1737:325:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1747:22:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1761:1:2",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1764:4:2"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1757:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1757:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1747:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1778:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1808:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1814:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1804:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1804:12:2"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1782:18:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1855:31:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1857:27:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1871:6:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1879:4:2",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1867:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1867:17:2"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1857:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1835:18:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1828:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1828:26:2"
															},
															"nodeType": "YulIf",
															"src": "1825:61:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1945:111:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1966:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1973:3:2",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1978:10:2",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1969:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1969:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1959:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1959:31:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1959:31:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2010:1:2",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2013:4:2",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2003:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2003:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2003:15:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2038:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2041:4:2",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2031:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2031:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2031:15:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1901:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1921:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1921:14:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1898:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:38:2"
															},
															"nodeType": "YulIf",
															"src": "1895:161:2"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1717:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1726:6:2",
														"type": ""
													}
												],
												"src": "1682:380:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_enum$_Role_$129_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint8_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        if iszero(lt(value0, 5))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n        let _1 := 32\n        mstore(add(headStart, _1), 224)\n        let length := mload(value1)\n        mstore(add(headStart, 224), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 256), mload(add(add(value1, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 256), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 256)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80630761c8b914610046578063948942ad14610062578063fc8372591461006b575b600080fd5b61004f60025481565b6040519081526020015b60405180910390f35b61004f60035481565b61007e610079366004610158565b610091565b6040516100599796959493929190610188565b6000602081905290815260409020805460018201805460ff90921692916100b790610227565b80601f01602080910402602001604051908101604052809291908181526020018280546100e390610227565b80156101305780601f1061010557610100808354040283529160200191610130565b820191906000526020600020905b81548152906001019060200180831161011357829003601f168201915b5050505050908060020154908060030154908060040154908060050154908060060154905087565b60006020828403121561016a57600080fd5b81356001600160a01b038116811461018157600080fd5b9392505050565b6000600589106101a857634e487b7160e01b600052602160045260246000fd5b888252602060e08184015288518060e085015260005b818110156101db578a8101830151858201610100015282016101be565b818111156101ee57600061010083870101525b50604084019890985250506060810194909452608084019290925260a083015260c0820152610100601f909201601f1916010192915050565b600181811c9082168061023b57607f821691505b6020821081141561025c57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220f06475f8b07b9c170d6f1a52f3246579987c4fe9dbd800d83d121f20bc3fb08464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761C8B9 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x948942AD EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xFC837259 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4F PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7E PUSH2 0x79 CALLDATASIZE PUSH1 0x4 PUSH2 0x158 JUMP JUMPDEST PUSH2 0x91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x188 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH2 0xB7 SWAP1 PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE3 SWAP1 PUSH2 0x227 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x130 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x105 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x130 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x113 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP10 LT PUSH2 0x1A8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP9 DUP3 MSTORE PUSH1 0x20 PUSH1 0xE0 DUP2 DUP5 ADD MSTORE DUP9 MLOAD DUP1 PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1DB JUMPI DUP11 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH2 0x100 ADD MSTORE DUP3 ADD PUSH2 0x1BE JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1EE JUMPI PUSH1 0x0 PUSH2 0x100 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x40 DUP5 ADD SWAP9 SWAP1 SWAP9 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x100 PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x23B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x25C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE PUSH5 0x75F8B07B9C OR 0xD PUSH16 0x1A52F3246579987C4FE9DBD800D83D12 0x1F KECCAK256 0xBC EXTCODEHASH 0xB0 DUP5 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "72:3279:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1123:38;;;;;;;;;1646:25:2;;;1634:2;1619:18;1123:38:1;;;;;;;;1385:33;;;;;;836:51;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:286:2:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:2;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:2:o;305:1190::-;591:4;631:1;623:6;620:13;610:144;;676:10;671:3;667:20;664:1;657:31;711:4;708:1;701:15;739:4;736:1;729:15;610:144;781:6;770:9;763:25;807:2;845:3;840:2;829:9;825:18;818:31;878:6;872:13;922:6;916:3;905:9;901:19;894:35;947:1;957:141;971:6;968:1;965:13;957:141;;;1067:14;;;1063:23;;1057:30;1032:17;;;1051:3;1028:27;1021:67;986:10;;957:141;;;1116:6;1113:1;1110:13;1107:92;;;1187:1;1181:3;1172:6;1161:9;1157:22;1153:32;1146:43;1107:92;-1:-1:-1;1302:2:2;1287:18;;1280:34;;;;-1:-1:-1;;1345:2:2;1330:18;;1323:34;;;;1388:3;1373:19;;1366:35;;;;1432:3;1417:19;;1410:35;1476:3;1461:19;;1454:35;1267:3;1260:2;1239:15;;;-1:-1:-1;;1235:29:2;1220:45;1216:55;;;-1:-1:-1;;305:1190:2:o;1682:380::-;1761:1;1757:12;;;;1804;;;1825:61;;1879:4;1871:6;1867:17;1857:27;;1825:61;1932:2;1924:6;1921:14;1901:18;1898:38;1895:161;;;1978:10;1973:3;1969:20;1966:1;1959:31;2013:4;2010:1;2003:15;2041:4;2038:1;2031:15;1895:161;;1682:380;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "132800",
								"executionCost": "44389",
								"totalCost": "177189"
							},
							"external": {
								"structUsers_(address)": "infinite",
								"tokenAmount_()": "2284",
								"tokenPrice_()": "2262"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 72,
									"end": 3351,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1152,
									"end": 1161,
									"name": "PUSH",
									"source": 1,
									"value": "2CB41780"
								},
								{
									"begin": 1123,
									"end": 1161,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1123,
									"end": 1161,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1412,
									"end": 1418,
									"name": "PUSH",
									"source": 1,
									"value": "186A0"
								},
								{
									"begin": 1385,
									"end": 1418,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1385,
									"end": 1418,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f06475f8b07b9c170d6f1a52f3246579987c4fe9dbd800d83d121f20bc3fb08464736f6c63430008070033",
									".code": [
										{
											"begin": 72,
											"end": 3351,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "PUSH",
											"source": 1,
											"value": "761C8B9"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "PUSH",
											"source": 1,
											"value": "948942AD"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "PUSH",
											"source": 1,
											"value": "FC837259"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1646,
											"end": 1671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1646,
											"end": 1671,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1646,
											"end": 1671,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1636,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 305,
											"end": 1495,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 305,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 591,
											"end": 595,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 632,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 623,
											"end": 629,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 620,
											"end": 633,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 610,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 610,
											"end": 754,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 676,
											"end": 686,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 671,
											"end": 674,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 667,
											"end": 687,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 664,
											"end": 665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 688,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 711,
											"end": 715,
											"name": "PUSH",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 708,
											"end": 709,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 701,
											"end": 716,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 739,
											"end": 743,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 736,
											"end": 737,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 744,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 610,
											"end": 754,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 610,
											"end": 754,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 781,
											"end": 787,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 770,
											"end": 779,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 763,
											"end": 788,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 807,
											"end": 809,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 848,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 840,
											"end": 842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 829,
											"end": 838,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 825,
											"end": 843,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 818,
											"end": 849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 878,
											"end": 884,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 872,
											"end": 885,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 922,
											"end": 928,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 916,
											"end": 919,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 905,
											"end": 914,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 901,
											"end": 920,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 894,
											"end": 929,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 947,
											"end": 948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 971,
											"end": 977,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 968,
											"end": 969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 965,
											"end": 978,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1067,
											"end": 1081,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 1067,
											"end": 1081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1067,
											"end": 1081,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1086,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1086,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1087,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1032,
											"end": 1049,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1032,
											"end": 1049,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1032,
											"end": 1049,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1054,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1028,
											"end": 1055,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1088,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 986,
											"end": 996,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 986,
											"end": 996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1122,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1114,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1123,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1199,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1107,
											"end": 1199,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1188,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1184,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1172,
											"end": 1178,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1161,
											"end": 1170,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1157,
											"end": 1179,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1185,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1199,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1107,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1302,
											"end": 1304,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1305,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1287,
											"end": 1305,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1314,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1314,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1314,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1345,
											"end": 1347,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1330,
											"end": 1348,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1330,
											"end": 1348,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1323,
											"end": 1357,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1323,
											"end": 1357,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1323,
											"end": 1357,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1323,
											"end": 1357,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1391,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1373,
											"end": 1392,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1392,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1366,
											"end": 1401,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1366,
											"end": 1401,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1366,
											"end": 1401,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1366,
											"end": 1401,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1432,
											"end": 1435,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 1417,
											"end": 1436,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 1436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1410,
											"end": 1445,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1479,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 1461,
											"end": 1480,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1461,
											"end": 1480,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1267,
											"end": 1270,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1260,
											"end": 1262,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 1265,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1216,
											"end": 1271,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1216,
											"end": 1271,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1216,
											"end": 1271,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 305,
											"end": 1495,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1682,
											"end": 2062,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1682,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1761,
											"end": 1762,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1825,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1825,
											"end": 1886,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1883,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 1871,
											"end": 1877,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 1884,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1857,
											"end": 1884,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1857,
											"end": 1884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1825,
											"end": 1886,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1825,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1924,
											"end": 1930,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 1935,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1919,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 1936,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 2056,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1895,
											"end": 2056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1978,
											"end": 1988,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B71"
										},
										{
											"begin": 1973,
											"end": 1976,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1967,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 1990,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2013,
											"end": 2017,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2010,
											"end": 2011,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2018,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2041,
											"end": 2045,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2038,
											"end": 2039,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2031,
											"end": 2046,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 2056,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1895,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 2056,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1682,
											"end": 2062,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1682,
											"end": 2062,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1682,
											"end": 2062,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1682,
											"end": 2062,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"structUsers_(address)": "fc837259",
							"tokenAmount_()": "948942ad",
							"tokenPrice_()": "0761c8b9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"structUsers_\",\"outputs\":[{\"internalType\":\"enum structures.Role\",\"name\":\"role\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"login\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"password\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"balance_overall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance_seed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance_private\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance_public\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAmount_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":\"structures\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":{\"keccak256\":\"0xb7e1ff8a289e5c363e3e72f6a72d2cfb8f2292fab11020fa270a3f192df9a512\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d1dcc0b7802d1d7b612433cf525e945e62862710c1bdb1e6c77ad6d870571a8b\",\"dweb:/ipfs/QmRnaJJqfNpRWWxvhsDPpd8LYqpzNmxjaVqmbXpSp4mUQE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 150,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "structUsers_",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(structUser)145_storage)"
							},
							{
								"astId": 156,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "allowed",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 159,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "tokenPrice_",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 162,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "tokenAmount_",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 181,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "structPhases_",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(structPhase)176_storage)"
							},
							{
								"astId": 197,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "strucApplications_",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(structApplication)192_storage)"
							},
							{
								"astId": 200,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "structApplicationsAmountAdr",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 203,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "whiteList",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 206,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "blackList",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(Role)129": {
								"encoding": "inplace",
								"label": "enum structures.Role",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(structApplication)192_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structApplication)",
								"numberOfBytes": "32",
								"value": "t_struct(structApplication)192_storage"
							},
							"t_mapping(t_address,t_struct(structPhase)176_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structPhase)",
								"numberOfBytes": "32",
								"value": "t_struct(structPhase)176_storage"
							},
							"t_mapping(t_address,t_struct(structUser)145_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structUser)",
								"numberOfBytes": "32",
								"value": "t_struct(structUser)145_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(structApplication)192_storage": {
								"encoding": "inplace",
								"label": "struct structures.structApplication",
								"members": [
									{
										"astId": 183,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 185,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "contactForCommunication",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 187,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "userAdr",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 189,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "status",
										"offset": 20,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 191,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "exist",
										"offset": 21,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(structPhase)176_storage": {
								"encoding": "inplace",
								"label": "struct structures.structPhase",
								"members": [
									{
										"astId": 173,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "statusPhase",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 175,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "reviewed",
										"offset": 1,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(structUser)145_storage": {
								"encoding": "inplace",
								"label": "struct structures.structUser",
								"members": [
									{
										"astId": 132,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "role",
										"offset": 0,
										"slot": "0",
										"type": "t_enum(Role)129"
									},
									{
										"astId": 134,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "login",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 136,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "password",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									},
									{
										"astId": 138,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "balance_overall",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 140,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "balance_seed",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 142,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "balance_private",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 144,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "balance_public",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol": {
				"ast": {
					"absolutePath": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol",
					"exportedSymbols": {
						"modifireFunc": [
							121
						],
						"structures": [
							207
						]
					},
					"id": 122,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"absolutePath": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol",
							"file": "../lib/structures.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 122,
							"sourceUnit": 208,
							"src": "72:31:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "structures",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 207,
										"src": "132:10:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "132:10:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 121,
							"linearizedBaseContracts": [
								121,
								207
							],
							"name": "modifireFunc",
							"nameLocation": "116:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "268:108:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Role_$129",
																"typeString": "enum structures.Role"
															},
															"id": 14,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 7,
																		"name": "structUsers_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 150,
																		"src": "287:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$145_storage_$",
																			"typeString": "mapping(address => struct structures.structUser storage ref)"
																		}
																	},
																	"id": 10,
																	"indexExpression": {
																		"expression": {
																			"id": 8,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "300:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 9,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "300:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "287:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_structUser_$145_storage",
																		"typeString": "struct structures.structUser storage ref"
																	}
																},
																"id": 11,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "role",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 132,
																"src": "287:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$129",
																	"typeString": "enum structures.Role"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 12,
																	"name": "Role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "320:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Role_$129_$",
																		"typeString": "type(enum structures.Role)"
																	}
																},
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "SYSTEM_OWNER",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 124,
																"src": "320:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$129",
																	"typeString": "enum structures.Role"
																}
															},
															"src": "287:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7572206e6f742061646d696e",
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "339:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c",
																"typeString": "literal_string \"Your not admin\""
															},
															"value": "Your not admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c",
																"typeString": "literal_string \"Your not admin\""
															}
														],
														"id": 6,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "279:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "279:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 17,
												"nodeType": "ExpressionStatement",
												"src": "279:77:0"
											},
											{
												"id": 18,
												"nodeType": "PlaceholderStatement",
												"src": "367:1:0"
											}
										]
									},
									"id": 20,
									"name": "onlyOwner",
									"nameLocation": "255:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "265:2:0"
									},
									"src": "246:130:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "515:121:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Role_$129",
																"typeString": "enum structures.Role"
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 23,
																		"name": "structUsers_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 150,
																		"src": "534:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$145_storage_$",
																			"typeString": "mapping(address => struct structures.structUser storage ref)"
																		}
																	},
																	"id": 26,
																	"indexExpression": {
																		"expression": {
																			"id": 24,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "547:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 25,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "547:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "534:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_structUser_$145_storage",
																		"typeString": "struct structures.structUser storage ref"
																	}
																},
																"id": 27,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "role",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 132,
																"src": "534:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$129",
																	"typeString": "enum structures.Role"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 28,
																	"name": "Role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "567:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Role_$129_$",
																		"typeString": "type(enum structures.Role)"
																	}
																},
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "SYSTEM_PRIVATE",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 126,
																"src": "567:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$129",
																	"typeString": "enum structures.Role"
																}
															},
															"src": "534:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7572206e6f7420507269766174652070726f7669646572",
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "588:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad6ae5da5b217b421ac93ea0fbb3ab0e88f39844155489a92b15ef6af2ad2fc2",
																"typeString": "literal_string \"Your not Private provider\""
															},
															"value": "Your not Private provider"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad6ae5da5b217b421ac93ea0fbb3ab0e88f39844155489a92b15ef6af2ad2fc2",
																"typeString": "literal_string \"Your not Private provider\""
															}
														],
														"id": 22,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "526:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "526:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "526:90:0"
											},
											{
												"id": 34,
												"nodeType": "PlaceholderStatement",
												"src": "627:1:0"
											}
										]
									},
									"id": 36,
									"name": "onlyPrivateProvider",
									"nameLocation": "492:19:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:2:0"
									},
									"src": "483:153:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "774:119:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Role_$129",
																"typeString": "enum structures.Role"
															},
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 39,
																		"name": "structUsers_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 150,
																		"src": "793:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$145_storage_$",
																			"typeString": "mapping(address => struct structures.structUser storage ref)"
																		}
																	},
																	"id": 42,
																	"indexExpression": {
																		"expression": {
																			"id": 40,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "806:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 41,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "806:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "793:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_structUser_$145_storage",
																		"typeString": "struct structures.structUser storage ref"
																	}
																},
																"id": 43,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "role",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 132,
																"src": "793:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$129",
																	"typeString": "enum structures.Role"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 44,
																	"name": "Role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "826:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Role_$129_$",
																		"typeString": "type(enum structures.Role)"
																	}
																},
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "SYSTEM_PUBLIC",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 125,
																"src": "826:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$129",
																	"typeString": "enum structures.Role"
																}
															},
															"src": "793:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7572206e6f74205075626c69632070726f7669646572",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "846:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_05f2418b58e7bb30fbad3c3b3cb0109a11446f25f5b2b9d17a61bb07228bb0e1",
																"typeString": "literal_string \"Your not Public provider\""
															},
															"value": "Your not Public provider"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_05f2418b58e7bb30fbad3c3b3cb0109a11446f25f5b2b9d17a61bb07228bb0e1",
																"typeString": "literal_string \"Your not Public provider\""
															}
														],
														"id": 38,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "785:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "785:88:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "785:88:0"
											},
											{
												"id": 50,
												"nodeType": "PlaceholderStatement",
												"src": "884:1:0"
											}
										]
									},
									"id": 52,
									"name": "onlyPublicProvider",
									"nameLocation": "752:18:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:0"
									},
									"src": "743:150:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "1064:191:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Role_$129",
																	"typeString": "enum structures.Role"
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 55,
																			"name": "structUsers_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 150,
																			"src": "1083:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$145_storage_$",
																				"typeString": "mapping(address => struct structures.structUser storage ref)"
																			}
																		},
																		"id": 58,
																		"indexExpression": {
																			"expression": {
																				"id": 56,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1096:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 57,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1096:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1083:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_structUser_$145_storage",
																			"typeString": "struct structures.structUser storage ref"
																		}
																	},
																	"id": 59,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "role",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 132,
																	"src": "1083:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$129",
																		"typeString": "enum structures.Role"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 60,
																		"name": "Role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 129,
																		"src": "1116:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Role_$129_$",
																			"typeString": "type(enum structures.Role)"
																		}
																	},
																	"id": 61,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "SYSTEM_OWNER",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 124,
																	"src": "1116:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$129",
																		"typeString": "enum structures.Role"
																	}
																},
																"src": "1083:50:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Role_$129",
																	"typeString": "enum structures.Role"
																},
																"id": 70,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 63,
																			"name": "structUsers_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 150,
																			"src": "1137:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$145_storage_$",
																				"typeString": "mapping(address => struct structures.structUser storage ref)"
																			}
																		},
																		"id": 66,
																		"indexExpression": {
																			"expression": {
																				"id": 64,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1150:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 65,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1150:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1137:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_structUser_$145_storage",
																			"typeString": "struct structures.structUser storage ref"
																		}
																	},
																	"id": 67,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "role",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 132,
																	"src": "1137:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$129",
																		"typeString": "enum structures.Role"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 68,
																		"name": "Role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 129,
																		"src": "1170:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Role_$129_$",
																			"typeString": "type(enum structures.Role)"
																		}
																	},
																	"id": 69,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "SYSTEM_PRIVATE",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 126,
																	"src": "1170:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$129",
																		"typeString": "enum structures.Role"
																	}
																},
																"src": "1137:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1083:106:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420746865206f776e6572206f7220707269766174652070726f7669646572",
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1191:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9",
																"typeString": "literal_string \"You are not the owner or private provider\""
															},
															"value": "You are not the owner or private provider"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9",
																"typeString": "literal_string \"You are not the owner or private provider\""
															}
														],
														"id": 54,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1075:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1075:160:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "1075:160:0"
											},
											{
												"id": 75,
												"nodeType": "PlaceholderStatement",
												"src": "1246:1:0"
											}
										]
									},
									"id": 77,
									"name": "onlyOwnerAndPrivateProvider",
									"nameLocation": "1033:27:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1061:2:0"
									},
									"src": "1024:231:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "1408:368:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 96,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_enum$_Role_$129",
																			"typeString": "enum structures.Role"
																		},
																		"id": 87,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 80,
																					"name": "structUsers_",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 150,
																					"src": "1441:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$145_storage_$",
																						"typeString": "mapping(address => struct structures.structUser storage ref)"
																					}
																				},
																				"id": 83,
																				"indexExpression": {
																					"expression": {
																						"id": 81,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "1454:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 82,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "1454:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1441:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_structUser_$145_storage",
																					"typeString": "struct structures.structUser storage ref"
																				}
																			},
																			"id": 84,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "role",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 132,
																			"src": "1441:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Role_$129",
																				"typeString": "enum structures.Role"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 85,
																				"name": "Role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 129,
																				"src": "1474:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_Role_$129_$",
																					"typeString": "type(enum structures.Role)"
																				}
																			},
																			"id": 86,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "SYSTEM_OWNER",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 124,
																			"src": "1474:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Role_$129",
																				"typeString": "enum structures.Role"
																			}
																		},
																		"src": "1441:50:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_enum$_Role_$129",
																			"typeString": "enum structures.Role"
																		},
																		"id": 95,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 88,
																					"name": "structUsers_",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 150,
																					"src": "1508:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$145_storage_$",
																						"typeString": "mapping(address => struct structures.structUser storage ref)"
																					}
																				},
																				"id": 91,
																				"indexExpression": {
																					"expression": {
																						"id": 89,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "1521:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 90,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "1521:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1508:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_structUser_$145_storage",
																					"typeString": "struct structures.structUser storage ref"
																				}
																			},
																			"id": 92,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "role",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 132,
																			"src": "1508:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Role_$129",
																				"typeString": "enum structures.Role"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 93,
																				"name": "Role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 129,
																				"src": "1541:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_Role_$129_$",
																					"typeString": "type(enum structures.Role)"
																				}
																			},
																			"id": 94,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "SYSTEM_PUBLIC",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 125,
																			"src": "1541:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Role_$129",
																				"typeString": "enum structures.Role"
																			}
																		},
																		"src": "1508:51:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "1441:118:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_Role_$129",
																		"typeString": "enum structures.Role"
																	},
																	"id": 104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 97,
																				"name": "structUsers_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 150,
																				"src": "1576:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$145_storage_$",
																					"typeString": "mapping(address => struct structures.structUser storage ref)"
																				}
																			},
																			"id": 100,
																			"indexExpression": {
																				"expression": {
																					"id": 98,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "1589:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 99,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "1589:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1576:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_structUser_$145_storage",
																				"typeString": "struct structures.structUser storage ref"
																			}
																		},
																		"id": 101,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "role",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 132,
																		"src": "1576:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Role_$129",
																			"typeString": "enum structures.Role"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"expression": {
																			"id": 102,
																			"name": "Role",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 129,
																			"src": "1609:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_Role_$129_$",
																				"typeString": "type(enum structures.Role)"
																			}
																		},
																		"id": 103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "SYSTEM_PRIVATE",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 126,
																		"src": "1609:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Role_$129",
																			"typeString": "enum structures.Role"
																		}
																	},
																	"src": "1576:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1441:187:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Role_$129",
																	"typeString": "enum structures.Role"
																},
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 106,
																			"name": "structUsers_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 150,
																			"src": "1645:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$145_storage_$",
																				"typeString": "mapping(address => struct structures.structUser storage ref)"
																			}
																		},
																		"id": 109,
																		"indexExpression": {
																			"expression": {
																				"id": 107,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1658:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1658:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1645:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_structUser_$145_storage",
																			"typeString": "struct structures.structUser storage ref"
																		}
																	},
																	"id": 110,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "role",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 132,
																	"src": "1645:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$129",
																		"typeString": "enum structures.Role"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"expression": {
																		"id": 111,
																		"name": "Role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 129,
																		"src": "1678:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Role_$129_$",
																			"typeString": "type(enum structures.Role)"
																		}
																	},
																	"id": 112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "INVESTOR",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 127,
																	"src": "1678:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$129",
																		"typeString": "enum structures.Role"
																	}
																},
																"src": "1645:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1441:250:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4170706c69636174696f6e2063616e206f6e6c79206265207375626d697474656420627920726567756c6172207573657273",
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1693:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8eee8f3e1b78fc84a03ad9368aed0f5d5ffbe790cbbf5be7c05b10e873c56608",
																"typeString": "literal_string \"Application can only be submitted by regular users\""
															},
															"value": "Application can only be submitted by regular users"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8eee8f3e1b78fc84a03ad9368aed0f5d5ffbe790cbbf5be7c05b10e873c56608",
																"typeString": "literal_string \"Application can only be submitted by regular users\""
															}
														],
														"id": 79,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1419:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1419:337:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "1419:337:0"
											},
											{
												"id": 118,
												"nodeType": "PlaceholderStatement",
												"src": "1767:1:0"
											}
										]
									},
									"id": 120,
									"name": "onlyUser",
									"nameLocation": "1396:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1405:2:0"
									},
									"src": "1387:389:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 122,
							"src": "107:1672:0",
							"usedErrors": []
						}
					],
					"src": "37:1742:0"
				},
				"id": 0
			},
			"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol": {
				"ast": {
					"absolutePath": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol",
					"exportedSymbols": {
						"structures": [
							207
						]
					},
					"id": 208,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 123,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 207,
							"linearizedBaseContracts": [
								207
							],
							"name": "structures",
							"nameLocation": "81:10:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "structures.Role",
									"id": 129,
									"members": [
										{
											"id": 124,
											"name": "SYSTEM_OWNER",
											"nameLocation": "200:12:1",
											"nodeType": "EnumValue",
											"src": "200:12:1"
										},
										{
											"id": 125,
											"name": "SYSTEM_PUBLIC",
											"nameLocation": "223:13:1",
											"nodeType": "EnumValue",
											"src": "223:13:1"
										},
										{
											"id": 126,
											"name": "SYSTEM_PRIVATE",
											"nameLocation": "247:14:1",
											"nodeType": "EnumValue",
											"src": "247:14:1"
										},
										{
											"id": 127,
											"name": "INVESTOR",
											"nameLocation": "272:8:1",
											"nodeType": "EnumValue",
											"src": "272:8:1"
										},
										{
											"id": 128,
											"name": "USER",
											"nameLocation": "291:4:1",
											"nodeType": "EnumValue",
											"src": "291:4:1"
										}
									],
									"name": "Role",
									"nameLocation": "184:4:1",
									"nodeType": "EnumDefinition",
									"src": "179:123:1"
								},
								{
									"canonicalName": "structures.structUser",
									"id": 145,
									"members": [
										{
											"constant": false,
											"id": 132,
											"mutability": "mutable",
											"name": "role",
											"nameLocation": "416:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 145,
											"src": "411:9:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_Role_$129",
												"typeString": "enum structures.Role"
											},
											"typeName": {
												"id": 131,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 130,
													"name": "Role",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 129,
													"src": "411:4:1"
												},
												"referencedDeclaration": 129,
												"src": "411:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Role_$129",
													"typeString": "enum structures.Role"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 134,
											"mutability": "mutable",
											"name": "login",
											"nameLocation": "466:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 145,
											"src": "459:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 133,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "459:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 136,
											"mutability": "mutable",
											"name": "password",
											"nameLocation": "515:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 145,
											"src": "507:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 135,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "507:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 138,
											"mutability": "mutable",
											"name": "balance_overall",
											"nameLocation": "565:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 145,
											"src": "557:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 137,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "557:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 140,
											"mutability": "mutable",
											"name": "balance_seed",
											"nameLocation": "626:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 145,
											"src": "618:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 139,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "618:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 142,
											"mutability": "mutable",
											"name": "balance_private",
											"nameLocation": "696:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 145,
											"src": "688:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 141,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "688:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 144,
											"mutability": "mutable",
											"name": "balance_public",
											"nameLocation": "769:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 145,
											"src": "761:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 143,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "761:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "structUser",
									"nameLocation": "389:10:1",
									"nodeType": "StructDefinition",
									"scope": 207,
									"src": "382:448:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc837259",
									"id": 150,
									"mutability": "mutable",
									"name": "structUsers_",
									"nameLocation": "875:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 207,
									"src": "836:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$145_storage_$",
										"typeString": "mapping(address => struct structures.structUser)"
									},
									"typeName": {
										"id": 149,
										"keyType": {
											"id": 146,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "845:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "836:31:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$145_storage_$",
											"typeString": "mapping(address => struct structures.structUser)"
										},
										"valueType": {
											"id": 148,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 147,
												"name": "structUser",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 145,
												"src": "856:10:1"
											},
											"referencedDeclaration": 145,
											"src": "856:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_structUser_$145_storage_ptr",
												"typeString": "struct structures.structUser"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 156,
									"mutability": "mutable",
									"name": "allowed",
									"nameLocation": "1007:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 207,
									"src": "958:56:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 155,
										"keyType": {
											"id": 151,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "966:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "958:48:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 154,
											"keyType": {
												"id": 152,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "986:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "977:28:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 153,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "997:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "0761c8b9",
									"id": 159,
									"mutability": "mutable",
									"name": "tokenPrice_",
									"nameLocation": "1138:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 207,
									"src": "1123:38:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 157,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1123:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "373530303030303030",
										"id": 158,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1152:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_750000000_by_1",
											"typeString": "int_const 750000000"
										},
										"value": "750000000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "948942ad",
									"id": 162,
									"mutability": "mutable",
									"name": "tokenAmount_",
									"nameLocation": "1397:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 207,
									"src": "1385:33:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 160,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1385:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030303030",
										"id": 161,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1412:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000_by_1",
											"typeString": "int_const 100000"
										},
										"value": "100000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 165,
									"mutability": "constant",
									"name": "ownerAdr",
									"nameLocation": "1661:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 207,
									"src": "1644:70:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 163,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1644:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307838453463323465313334393038663233333461654638383535364663314461616130373541353663",
										"id": 164,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1672:42:1",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x8E4c24e134908f2334aeF88556Fc1Daaa075A56c"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 168,
									"mutability": "constant",
									"name": "privateProviderAdr",
									"nameLocation": "1768:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 207,
									"src": "1751:80:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 166,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1751:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307834343930636633364138413439313830304233353134304130376234313930623533336646634266",
										"id": 167,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1789:42:1",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x4490cf36A8A491800B35140A07b4190b533fFcBf"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 171,
									"mutability": "constant",
									"name": "publicProviderAdr",
									"nameLocation": "1885:17:1",
									"nodeType": "VariableDeclaration",
									"scope": 207,
									"src": "1868:79:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 169,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1868:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307839363939663335326241374139324537433046663639323445443939363032636464424133386442",
										"id": 170,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1905:42:1",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x9699f352bA7A92E7C0Ff6924ED99602cddBA38dB"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "structures.structPhase",
									"id": 176,
									"members": [
										{
											"constant": false,
											"id": 173,
											"mutability": "mutable",
											"name": "statusPhase",
											"nameLocation": "2074:11:1",
											"nodeType": "VariableDeclaration",
											"scope": 176,
											"src": "2069:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 172,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2069:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 175,
											"mutability": "mutable",
											"name": "reviewed",
											"nameLocation": "2126:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 176,
											"src": "2121:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 174,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2121:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "structPhase",
									"nameLocation": "2046:11:1",
									"nodeType": "StructDefinition",
									"scope": 207,
									"src": "2039:157:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 181,
									"mutability": "mutable",
									"name": "structPhases_",
									"nameLocation": "2235:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 207,
									"src": "2202:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structPhase_$176_storage_$",
										"typeString": "mapping(address => struct structures.structPhase)"
									},
									"typeName": {
										"id": 180,
										"keyType": {
											"id": 177,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2211:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2202:32:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structPhase_$176_storage_$",
											"typeString": "mapping(address => struct structures.structPhase)"
										},
										"valueType": {
											"id": 179,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 178,
												"name": "structPhase",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 176,
												"src": "2222:11:1"
											},
											"referencedDeclaration": 176,
											"src": "2222:11:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_structPhase_$176_storage_ptr",
												"typeString": "struct structures.structPhase"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "structures.structApplication",
									"id": 192,
									"members": [
										{
											"constant": false,
											"id": 183,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "2448:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 192,
											"src": "2441:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 182,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2441:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 185,
											"mutability": "mutable",
											"name": "contactForCommunication",
											"nameLocation": "2499:23:1",
											"nodeType": "VariableDeclaration",
											"scope": 192,
											"src": "2492:30:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 184,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2492:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 187,
											"mutability": "mutable",
											"name": "userAdr",
											"nameLocation": "2579:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 192,
											"src": "2571:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 186,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2571:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 189,
											"mutability": "mutable",
											"name": "status",
											"nameLocation": "2656:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 192,
											"src": "2651:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 188,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2651:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 191,
											"mutability": "mutable",
											"name": "exist",
											"nameLocation": "2726:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 192,
											"src": "2721:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 190,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2721:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "structApplication",
									"nameLocation": "2412:17:1",
									"nodeType": "StructDefinition",
									"scope": 207,
									"src": "2405:391:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 197,
									"mutability": "mutable",
									"name": "strucApplications_",
									"nameLocation": "2841:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 207,
									"src": "2802:57:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structApplication_$192_storage_$",
										"typeString": "mapping(address => struct structures.structApplication)"
									},
									"typeName": {
										"id": 196,
										"keyType": {
											"id": 193,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2811:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2802:38:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structApplication_$192_storage_$",
											"typeString": "mapping(address => struct structures.structApplication)"
										},
										"valueType": {
											"id": 195,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 194,
												"name": "structApplication",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 192,
												"src": "2822:17:1"
											},
											"referencedDeclaration": 192,
											"src": "2822:17:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_structApplication_$192_storage_ptr",
												"typeString": "struct structures.structApplication"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 200,
									"mutability": "mutable",
									"name": "structApplicationsAmountAdr",
									"nameLocation": "2940:27:1",
									"nodeType": "VariableDeclaration",
									"scope": 207,
									"src": "2930:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 198,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2930:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 199,
										"nodeType": "ArrayTypeName",
										"src": "2930:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 203,
									"mutability": "mutable",
									"name": "whiteList",
									"nameLocation": "3084:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 207,
									"src": "3074:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 201,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3074:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 202,
										"nodeType": "ArrayTypeName",
										"src": "3074:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 206,
									"mutability": "mutable",
									"name": "blackList",
									"nameLocation": "3246:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 207,
									"src": "3236:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 204,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3236:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 205,
										"nodeType": "ArrayTypeName",
										"src": "3236:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								}
							],
							"scope": 208,
							"src": "72:3279:1",
							"usedErrors": []
						}
					],
					"src": "37:3314:1"
				},
				"id": 1
			}
		}
	}
}