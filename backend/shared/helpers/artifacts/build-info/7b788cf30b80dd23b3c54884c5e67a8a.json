{
	"id": "7b788cf30b80dd23b3c54884c5e67a8a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nimport \"./modifireFunc.sol\";\r\n\r\ncontract helpresFunc is modifireFunc {\r\n\r\n    // COMMENT_FUNC: Получения хэш-пароля.\r\n    function get_keccak256(string memory _hash) public pure returns(bytes32) {\r\n            return(keccak256(abi.encodePacked(_hash)));\r\n    }\r\n\r\n    // COMMENT_FUNC: Получение белого списка.\r\n    function get_whiteList() public onlyOwnerAndPrivateProvider view returns (address[] memory) {\r\n        return(whiteList);\r\n    }\r\n\r\n    // COMMENT_FUNC: Получение черного списка.\r\n    function get_blackList() public onlyOwner view returns (address[] memory) {\r\n        return(blackList);\r\n    }\r\n\r\n    // COMMENT_FUNC: Функция вернет текущий баланс SEED токенов.\r\n    function getBalanceSeedToken (address _userAdr) public view returns (uint256) {\r\n        return structUsers_[_userAdr].balance_seed;\r\n    }\r\n\r\n    // COMMENT_FUNC: Функция вернет текущий баланс PRIVATE токенов.\r\n    function getBalancePrivateToken (address _userAdr) public view returns (uint256) {\r\n        return structUsers_[_userAdr].balance_private;\r\n    }\r\n\r\n    // COMMENT_FUNC: Функция вернет текущий баланс PUBLIC токенов.\r\n    function getBalancePublicToken (address _userAdr) public view returns (uint256) {\r\n        return structUsers_[_userAdr].balance_public;\r\n    }\r\n}"
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nimport \"../lib/structures.sol\";\r\n\r\ncontract modifireFunc is structures {\r\n    \r\n    // COMMENT_MOD: Модификатор проверка роли ВЛАДЕЛЬЦА.\r\n    modifier onlyOwner () {\r\n        require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER, \"Your not admin\");\r\n        _;\r\n    }\r\n\r\n    // COMMENT_MOD: Модификатор проверка роли PRIVAT ПРОВАЙДЕРА.\r\n    modifier onlyPrivateProvider () {\r\n        require(structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"Your not Private provider\");\r\n        _;\r\n    }\r\n\r\n    // COMMENT_MOD: Модификатор проверки роли ВЛАДЕЛЬЦ или PRIVAT ПРОВАЙДЕРА.\r\n    modifier onlyOwnerAndPrivateProvider () {\r\n        require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER || structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"You are not the owner or private provider\");\r\n        _;\r\n    }\r\n\r\n    // COMMENT_MOD: Модификатор проверка того, что пользователь обычный user.\r\n    modifier onlyUser () {\r\n        require(\r\n            structUsers_[msg.sender].role != Role.SYSTEM_OWNER ||\r\n            structUsers_[msg.sender].role != Role.SYSTEM_PUBLIC ||\r\n            structUsers_[msg.sender].role != Role.SYSTEM_PRIVATE ||\r\n            structUsers_[msg.sender].role != Role.INVESTOR, \"Application can only be submitted by regular users\"\r\n        );\r\n        _;\r\n    }\r\n}"
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\ncontract structures {\r\n    // COMMENT: Роли для структуры пользователей.\r\n    enum Role {\r\n        SYSTEM_OWNER,\r\n        SYSTEM_PUBLIC,\r\n        SYSTEM_PRIVATE,\r\n        INVESTOR,\r\n        USER\r\n    }\r\n\r\n    // COMMENT_SCTRUCT: Структура пользователей.\r\n    struct structUser {\r\n        Role role;               // роль  \r\n        string login;            // логин\r\n        bytes32 password;        // пароль\r\n        uint256 balance_overall; // общий баланс\r\n        uint256 balance_seed;    // баланс SEED токенов\r\n        uint256 balance_private; // баланс PRIVATE токенов\r\n        uint256 balance_public;  // баланс PUBLIC токенов\r\n    }\r\n    mapping (address => structUser) structUsers_; // обращение к структуре по АДРЕСАМ\r\n    mapping(address => mapping (address => uint256)) allowed; // делегированные пользоатели\r\n\r\n    // COMMENT: Цена за 1 токен.\r\n    uint256 public tokenPrice_ = 750000000; // 1 токен за 0.00075 ETH => 750000000; 0.001ETH => 1000000000 WEI | ЗНАЧЕНИЕ УКАЗЫВАЕТСЯ В WEI\r\n\r\n    // COMMENT: Ограничение цены токена.\r\n    uint public tokenAmount_ = 100000; // кол-во, которое может купить токенов пользователь | private = 100 000 CMON; public = 5 000 CMON\r\n\r\n    // COMMENT: Набор начальних пользователей. \r\n    address constant ownerAdr = 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4;           // ВЛАДЕЛЕЦ\r\n    address constant privateProviderAdr = 0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2; // PRIVATE ПРОВАЙДЕР\r\n    address constant publicProviderAdr = 0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db;  // PUBLIC ПРОВАЙДЕР\r\n\r\n    // COMMENT_SCTRUC: Структура фазы.\r\n    struct structPhase {\r\n        bool statusPhase; // статус фазы\r\n        bool reviewed;    // была ли активирована фаза\r\n    }\r\n    mapping (address => structPhase) structPhases_; // обращение к структуре по АДРЕСАМ\r\n\r\n    // COMMENT_STRUCT: Структура заявок пользователей.\r\n    struct structApplication {\r\n        string name;                    // имя\r\n        string contactForCommunication; // контакты для связи\r\n        address userAdr;                // адрес пользователя\r\n        bool status;                    // статус заявки\r\n        bool reviewed;                  // была ли просмотрена заявка\r\n        bool exist;                     // заявка существует\r\n    }\r\n    mapping (address => structApplication) strucApplications_; // обращение к структуре по АДРЕСАМ\r\n    address[] structApplicationsAmountAdr;                     // массив пользователей, подавших заявление\r\n    address[] whiteList;                                       // белый лист прользователей, которым одобрили заявки\r\n    address[] blackList;                                       // черный лист полльзователей\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol": {
				"helpresFunc": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAdr",
									"type": "address"
								}
							],
							"name": "getBalancePrivateToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAdr",
									"type": "address"
								}
							],
							"name": "getBalancePublicToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAdr",
									"type": "address"
								}
							],
							"name": "getBalanceSeedToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_blackList",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_hash",
									"type": "string"
								}
							],
							"name": "get_keccak256",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_whiteList",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAmount_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenPrice_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":104:1498  contract helpresFunc is modifireFunc {\r... */\n  mstore(0x40, 0x80)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1145:1154  750000000 */\n  0x2cb41780\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1116:1154  uint256 public tokenPrice_ = 750000000 */\n  0x02\n  sstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1376:1382  100000 */\n  0x0186a0\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1349:1382  uint public tokenAmount_ = 100000 */\n  0x03\n  sstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":104:1498  contract helpresFunc is modifireFunc {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":104:1498  contract helpresFunc is modifireFunc {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0761c8b9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2599d6d0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x72f0d72b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x7f89128f\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8e4f8c6b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x948942ad\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb06cdc12\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xc10e3911\n      eq\n      tag_10\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1116:1154  uint256 public tokenPrice_ = 750000000 */\n    tag_3:\n      tag_11\n      sload(0x02)\n      dup2\n      jump\n    tag_11:\n      mload(0x40)\n        /* \"#utility.yul\":2474:2499   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2462:2464   */\n      0x20\n        /* \"#utility.yul\":2447:2465   */\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1116:1154  uint256 public tokenPrice_ = 750000000 */\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":849:988  function getBalanceSeedToken (address _userAdr) public view returns (uint256) {\r... */\n    tag_4:\n      tag_11\n      tag_16\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_16:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":945:967  structUsers_[_userAdr] */\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":918:925  uint256 */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":945:967  structUsers_[_userAdr] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":945:980  structUsers_[_userAdr].balance_seed */\n      0x04\n      add\n      sload\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":849:988  function getBalanceSeedToken (address _userAdr) public view returns (uint256) {\r... */\n      jump\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1352:1495  function getBalancePublicToken (address _userAdr) public view returns (uint256) {\r... */\n    tag_5:\n      tag_11\n      tag_21\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_21:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1450:1472  structUsers_[_userAdr] */\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1423:1430  uint256 */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1450:1472  structUsers_[_userAdr] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1450:1487  structUsers_[_userAdr].balance_public */\n      0x06\n      add\n      sload\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1352:1495  function getBalancePublicToken (address _userAdr) public view returns (uint256) {\r... */\n      jump\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":632:742  function get_blackList() public onlyOwner view returns (address[] memory) {\r... */\n    tag_6:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":212:350  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n    tag_7:\n      tag_11\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1349:1382  uint public tokenAmount_ = 100000 */\n    tag_8:\n      tag_11\n      sload(0x03)\n      dup2\n      jump\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1098:1243  function getBalancePrivateToken (address _userAdr) public view returns (uint256) {\r... */\n    tag_9:\n      tag_11\n      tag_38\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_38:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1197:1219  structUsers_[_userAdr] */\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1170:1177  uint256 */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1197:1219  structUsers_[_userAdr] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1197:1235  structUsers_[_userAdr].balance_private */\n      0x05\n      add\n      sload\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1098:1243  function getBalancePrivateToken (address _userAdr) public view returns (uint256) {\r... */\n      jump\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":426:554  function get_whiteList() public onlyOwnerAndPrivateProvider view returns (address[] memory) {\r... */\n    tag_10:\n      tag_24\n      tag_42\n      jump\t// in\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":632:742  function get_blackList() public onlyOwner view returns (address[] memory) {\r... */\n    tag_25:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":688:704  address[] memory */\n      0x60\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":320:337  Role.SYSTEM_OWNER */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":300:310  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":287:299  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":287:311  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":287:316  structUsers_[msg.sender].role */\n      sload\n      0xff\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":287:337  structUsers_[msg.sender].role == Role.SYSTEM_OWNER */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_51\n      jumpi\n      tag_51\n      tag_49\n      jump\t// in\n    tag_51:\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":279:356  require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER, \"Your not admin\") */\n      tag_52\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3122:3124   */\n      0x20\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":279:356  require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER, \"Your not admin\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3104:3125   */\n      mstore\n        /* \"#utility.yul\":3161:3163   */\n      0x0e\n        /* \"#utility.yul\":3141:3159   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3134:3164   */\n      mstore\n      shl(0x91, 0x2cb7bab9103737ba1030b236b4b7)\n        /* \"#utility.yul\":3180:3198   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3173:3217   */\n      mstore\n        /* \"#utility.yul\":3234:3252   */\n      0x64\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":279:356  require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER, \"Your not admin\") */\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_52:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":724:733  blackList */\n      0x08\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":717:734  return(blackList) */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_57:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_57\n      jumpi\n    tag_56:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":632:742  function get_blackList() public onlyOwner view returns (address[] memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":212:350  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n    tag_31:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":276:283  bytes32 */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":334:339  _hash */\n      dup2\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":317:340  abi.encodePacked(_hash) */\n      add(0x20, mload(0x40))\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":307:341  keccak256(abi.encodePacked(_hash)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":300:342  return(keccak256(abi.encodePacked(_hash))) */\n      swap1\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":212:350  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":426:554  function get_whiteList() public onlyOwnerAndPrivateProvider view returns (address[] memory) {\r... */\n    tag_42:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":500:516  address[] memory */\n      0x60\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":859:876  Role.SYSTEM_OWNER */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":839:849  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":826:838  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":826:850  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":826:855  structUsers_[msg.sender].role */\n      sload\n      0xff\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":826:876  structUsers_[msg.sender].role == Role.SYSTEM_OWNER */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_66\n      jumpi\n      tag_66\n      tag_49\n      jump\t// in\n    tag_66:\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":826:932  structUsers_[msg.sender].role == Role.SYSTEM_OWNER || structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE */\n      dup1\n      tag_67\n      jumpi\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":913:932  Role.SYSTEM_PRIVATE */\n      0x02\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":893:903  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":880:892  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":880:904  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":880:909  structUsers_[msg.sender].role */\n      sload\n      0xff\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":880:932  structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_71\n      jumpi\n      tag_71\n      tag_49\n      jump\t// in\n    tag_71:\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":826:932  structUsers_[msg.sender].role == Role.SYSTEM_OWNER || structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE */\n    tag_67:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":818:978  require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER || structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"You are not the owner or private provider\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2712:2714   */\n      0x20\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":818:978  require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER || structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"You are not the owner or private provider\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2694:2715   */\n      mstore\n        /* \"#utility.yul\":2751:2753   */\n      0x29\n        /* \"#utility.yul\":2731:2749   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2724:2754   */\n      mstore\n        /* \"#utility.yul\":2790:2824   */\n      0x596f7520617265206e6f7420746865206f776e6572206f722070726976617465\n        /* \"#utility.yul\":2770:2788   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2763:2825   */\n      mstore\n      shl(0xb9, 0x10383937bb34b232b9)\n        /* \"#utility.yul\":2841:2859   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2834:2873   */\n      mstore\n        /* \"#utility.yul\":2890:2909   */\n      0x84\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":818:978  require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER || structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"You are not the owner or private provider\") */\n      tag_53\n        /* \"#utility.yul\":2510:2915   */\n      jump\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":818:978  require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER || structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"You are not the owner or private provider\") */\n    tag_72:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":536:545  whiteList */\n      0x07\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":529:546  return(whiteList) */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_57\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":426:554  function get_whiteList() public onlyOwnerAndPrivateProvider view returns (address[] memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_17:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_80\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_80:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_81\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_81:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":305:1227   */\n    tag_30:\n        /* \"#utility.yul\":374:380   */\n      0x00\n        /* \"#utility.yul\":427:429   */\n      0x20\n        /* \"#utility.yul\":415:424   */\n      dup3\n        /* \"#utility.yul\":406:413   */\n      dup5\n        /* \"#utility.yul\":402:425   */\n      sub\n        /* \"#utility.yul\":398:430   */\n      slt\n        /* \"#utility.yul\":395:447   */\n      iszero\n      tag_83\n      jumpi\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      dup1\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":395:447   */\n    tag_83:\n        /* \"#utility.yul\":470:493   */\n      dup2\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":542:556   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":539:573   */\n      iszero\n      tag_84\n      jumpi\n        /* \"#utility.yul\":569:570   */\n      0x00\n        /* \"#utility.yul\":566:567   */\n      dup1\n        /* \"#utility.yul\":559:571   */\n      revert\n        /* \"#utility.yul\":539:573   */\n    tag_84:\n        /* \"#utility.yul\":607:613   */\n      dup2\n        /* \"#utility.yul\":596:605   */\n      dup5\n        /* \"#utility.yul\":592:614   */\n      add\n        /* \"#utility.yul\":582:614   */\n      swap2\n      pop\n        /* \"#utility.yul\":652:659   */\n      dup5\n        /* \"#utility.yul\":645:649   */\n      0x1f\n        /* \"#utility.yul\":641:643   */\n      dup4\n        /* \"#utility.yul\":637:650   */\n      add\n        /* \"#utility.yul\":633:660   */\n      slt\n        /* \"#utility.yul\":623:678   */\n      tag_85\n      jumpi\n        /* \"#utility.yul\":674:675   */\n      0x00\n        /* \"#utility.yul\":671:672   */\n      dup1\n        /* \"#utility.yul\":664:676   */\n      revert\n        /* \"#utility.yul\":623:678   */\n    tag_85:\n        /* \"#utility.yul\":710:712   */\n      dup2\n        /* \"#utility.yul\":697:713   */\n      calldataload\n        /* \"#utility.yul\":732:734   */\n      dup2\n        /* \"#utility.yul\":728:730   */\n      dup2\n        /* \"#utility.yul\":725:735   */\n      gt\n        /* \"#utility.yul\":722:758   */\n      iszero\n      tag_87\n      jumpi\n        /* \"#utility.yul\":738:756   */\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":813:815   */\n      0x40\n        /* \"#utility.yul\":807:816   */\n      mload\n        /* \"#utility.yul\":781:783   */\n      0x1f\n        /* \"#utility.yul\":867:880   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":863:885   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":887:889   */\n      0x3f\n        /* \"#utility.yul\":859:890   */\n      add\n        /* \"#utility.yul\":855:895   */\n      and\n        /* \"#utility.yul\":843:896   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":911:929   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":931:953   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":908:954   */\n      or\n        /* \"#utility.yul\":905:977   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":957:975   */\n      tag_90\n      tag_88\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":997:1007   */\n      dup2\n        /* \"#utility.yul\":993:995   */\n      0x40\n        /* \"#utility.yul\":986:1008   */\n      mstore\n        /* \"#utility.yul\":1032:1034   */\n      dup3\n        /* \"#utility.yul\":1024:1030   */\n      dup2\n        /* \"#utility.yul\":1017:1035   */\n      mstore\n        /* \"#utility.yul\":1072:1079   */\n      dup8\n        /* \"#utility.yul\":1067:1069   */\n      0x20\n        /* \"#utility.yul\":1062:1064   */\n      dup5\n        /* \"#utility.yul\":1058:1060   */\n      dup8\n        /* \"#utility.yul\":1054:1065   */\n      add\n        /* \"#utility.yul\":1050:1070   */\n      add\n        /* \"#utility.yul\":1047:1080   */\n      gt\n        /* \"#utility.yul\":1044:1097   */\n      iszero\n      tag_91\n      jumpi\n        /* \"#utility.yul\":1093:1094   */\n      0x00\n        /* \"#utility.yul\":1090:1091   */\n      dup1\n        /* \"#utility.yul\":1083:1095   */\n      revert\n        /* \"#utility.yul\":1044:1097   */\n    tag_91:\n        /* \"#utility.yul\":1149:1151   */\n      dup3\n        /* \"#utility.yul\":1144:1146   */\n      0x20\n        /* \"#utility.yul\":1140:1142   */\n      dup7\n        /* \"#utility.yul\":1136:1147   */\n      add\n        /* \"#utility.yul\":1131:1133   */\n      0x20\n        /* \"#utility.yul\":1123:1129   */\n      dup4\n        /* \"#utility.yul\":1119:1134   */\n      add\n        /* \"#utility.yul\":1106:1152   */\n      calldatacopy\n        /* \"#utility.yul\":1194:1195   */\n      0x00\n        /* \"#utility.yul\":1172:1187   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":1189:1191   */\n      0x20\n        /* \"#utility.yul\":1168:1192   */\n      add\n        /* \"#utility.yul\":1161:1196   */\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n        /* \"#utility.yul\":1176:1182   */\n      swap6\n        /* \"#utility.yul\":305:1227   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1232:1660   */\n    tag_60:\n        /* \"#utility.yul\":1363:1366   */\n      0x00\n        /* \"#utility.yul\":1401:1407   */\n      dup3\n        /* \"#utility.yul\":1395:1408   */\n      mload\n        /* \"#utility.yul\":1426:1427   */\n      0x00\n        /* \"#utility.yul\":1436:1565   */\n    tag_93:\n        /* \"#utility.yul\":1450:1456   */\n      dup2\n        /* \"#utility.yul\":1447:1448   */\n      dup2\n        /* \"#utility.yul\":1444:1457   */\n      lt\n        /* \"#utility.yul\":1436:1565   */\n      iszero\n      tag_95\n      jumpi\n        /* \"#utility.yul\":1548:1552   */\n      0x20\n        /* \"#utility.yul\":1532:1546   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":1528:1553   */\n      dup2\n      add\n        /* \"#utility.yul\":1522:1554   */\n      mload\n        /* \"#utility.yul\":1509:1520   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":1502:1555   */\n      mstore\n        /* \"#utility.yul\":1465:1477   */\n      add\n        /* \"#utility.yul\":1436:1565   */\n      jump(tag_93)\n    tag_95:\n        /* \"#utility.yul\":1583:1589   */\n      dup2\n        /* \"#utility.yul\":1580:1581   */\n      dup2\n        /* \"#utility.yul\":1577:1590   */\n      gt\n        /* \"#utility.yul\":1574:1622   */\n      iszero\n      tag_96\n      jumpi\n        /* \"#utility.yul\":1618:1619   */\n      0x00\n        /* \"#utility.yul\":1609:1615   */\n      dup3\n        /* \"#utility.yul\":1604:1607   */\n      dup6\n        /* \"#utility.yul\":1600:1616   */\n      add\n        /* \"#utility.yul\":1593:1620   */\n      mstore\n        /* \"#utility.yul\":1574:1622   */\n    tag_96:\n      pop\n        /* \"#utility.yul\":1638:1654   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":1232:1660   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1665:2323   */\n    tag_27:\n        /* \"#utility.yul\":1836:1838   */\n      0x20\n        /* \"#utility.yul\":1888:1909   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1958:1971   */\n      dup3\n      mload\n        /* \"#utility.yul\":1861:1879   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":1980:2002   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1807:1811   */\n      0x00\n      swap2\n        /* \"#utility.yul\":1836:1838   */\n      swap1\n        /* \"#utility.yul\":2059:2074   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":2033:2035   */\n      0x40\n        /* \"#utility.yul\":2018:2036   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":1807:1811   */\n      dup5\n        /* \"#utility.yul\":2102:2297   */\n    tag_98:\n        /* \"#utility.yul\":2116:2122   */\n      dup2\n        /* \"#utility.yul\":2113:2114   */\n      dup2\n        /* \"#utility.yul\":2110:2123   */\n      lt\n        /* \"#utility.yul\":2102:2297   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":2181:2194   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2177:2216   */\n      and\n        /* \"#utility.yul\":2165:2217   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2272:2287   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":2237:2249   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":2213:2214   */\n      0x01\n        /* \"#utility.yul\":2131:2140   */\n      add\n        /* \"#utility.yul\":2102:2297   */\n      jump(tag_98)\n    tag_100:\n      pop\n        /* \"#utility.yul\":2314:2317   */\n      swap1\n      swap7\n        /* \"#utility.yul\":1665:2323   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3445:3572   */\n    tag_49:\n        /* \"#utility.yul\":3506:3516   */\n      0x4e487b71\n        /* \"#utility.yul\":3501:3504   */\n      0xe0\n        /* \"#utility.yul\":3497:3517   */\n      shl\n        /* \"#utility.yul\":3494:3495   */\n      0x00\n        /* \"#utility.yul\":3487:3518   */\n      mstore\n        /* \"#utility.yul\":3537:3541   */\n      0x21\n        /* \"#utility.yul\":3534:3535   */\n      0x04\n        /* \"#utility.yul\":3527:3542   */\n      mstore\n        /* \"#utility.yul\":3561:3565   */\n      0x24\n        /* \"#utility.yul\":3558:3559   */\n      0x00\n        /* \"#utility.yul\":3551:3566   */\n      revert\n        /* \"#utility.yul\":3577:3704   */\n    tag_88:\n        /* \"#utility.yul\":3638:3648   */\n      0x4e487b71\n        /* \"#utility.yul\":3633:3636   */\n      0xe0\n        /* \"#utility.yul\":3629:3649   */\n      shl\n        /* \"#utility.yul\":3626:3627   */\n      0x00\n        /* \"#utility.yul\":3619:3650   */\n      mstore\n        /* \"#utility.yul\":3669:3673   */\n      0x41\n        /* \"#utility.yul\":3666:3667   */\n      0x04\n        /* \"#utility.yul\":3659:3674   */\n      mstore\n        /* \"#utility.yul\":3693:3697   */\n      0x24\n        /* \"#utility.yul\":3690:3691   */\n      0x00\n        /* \"#utility.yul\":3683:3698   */\n      revert\n\n    auxdata: 0xa2646970667358221220164c6e5ad9d9898237cc3c473b233a3aac3385bd7161a112b29f23d7ba21cad064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052632cb41780600255620186a060035534801561001f57600080fd5b5061052e8061002f6000396000f3fe608060405234801561001057600080fd5b50600436106100785760003560e01c80630761c8b91461007d5780632599d6d01461009957806372f0d72b146100c55780637f89128f146100f15780638e4f8c6b14610106578063948942ad14610119578063b06cdc1214610122578063c10e39111461014e575b600080fd5b61008660025481565b6040519081526020015b60405180910390f35b6100866100a7366004610364565b6001600160a01b031660009081526020819052604090206004015490565b6100866100d3366004610364565b6001600160a01b031660009081526020819052604090206006015490565b6100f9610156565b604051610090919061047f565b610086610114366004610394565b610221565b61008660035481565b610086610130366004610364565b6001600160a01b031660009081526020819052604090206005015490565b6100f9610251565b606060003360009081526020819052604090205460ff16600481111561017e5761017e6104cc565b146101c15760405162461bcd60e51b815260206004820152600e60248201526d2cb7bab9103737ba1030b236b4b760911b60448201526064015b60405180910390fd5b600880548060200260200160405190810160405280929190818152602001828054801561021757602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101f9575b5050505050905090565b6000816040516020016102349190610444565b604051602081830303815290604052805190602001209050919050565b606060003360009081526020819052604090205460ff166004811115610279576102796104cc565b14806102a8575060023360009081526020819052604090205460ff1660048111156102a6576102a66104cc565b145b6103065760405162461bcd60e51b815260206004820152602960248201527f596f7520617265206e6f7420746865206f776e6572206f72207072697661746560448201526810383937bb34b232b960b91b60648201526084016101b8565b6007805480602002602001604051908101604052809291908181526020018280548015610217576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116101f9575050505050905090565b60006020828403121561037657600080fd5b81356001600160a01b038116811461038d57600080fd5b9392505050565b6000602082840312156103a657600080fd5b81356001600160401b03808211156103bd57600080fd5b818401915084601f8301126103d157600080fd5b8135818111156103e3576103e36104e2565b604051601f8201601f19908116603f0116810190838211818310171561040b5761040b6104e2565b8160405282815287602084870101111561042457600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000825160005b81811015610465576020818601810151858301520161044b565b81811115610474576000828501525b509190910192915050565b6020808252825182820181905260009190848201906040850190845b818110156104c05783516001600160a01b03168352928401929184019160010161049b565b50909695505050505050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220164c6e5ad9d9898237cc3c473b233a3aac3385bd7161a112b29f23d7ba21cad064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH4 0x2CB41780 PUSH1 0x2 SSTORE PUSH3 0x186A0 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52E DUP1 PUSH2 0x2F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x78 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761C8B9 EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0x2599D6D0 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0x72F0D72B EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x7F89128F EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x8E4F8C6B EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x948942AD EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xB06CDC12 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0xC10E3911 EQ PUSH2 0x14E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x86 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x86 PUSH2 0xA7 CALLDATASIZE PUSH1 0x4 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x86 PUSH2 0xD3 CALLDATASIZE PUSH1 0x4 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x156 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x90 SWAP2 SWAP1 PUSH2 0x47F JUMP JUMPDEST PUSH2 0x86 PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0x394 JUMP JUMPDEST PUSH2 0x221 JUMP JUMPDEST PUSH2 0x86 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x86 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x251 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x17E JUMPI PUSH2 0x17E PUSH2 0x4CC JUMP JUMPDEST EQ PUSH2 0x1C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x2CB7BAB9103737BA1030B236B4B7 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x217 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F9 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x279 JUMPI PUSH2 0x279 PUSH2 0x4CC JUMP JUMPDEST EQ DUP1 PUSH2 0x2A8 JUMPI POP PUSH1 0x2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2A6 JUMPI PUSH2 0x2A6 PUSH2 0x4CC JUMP JUMPDEST EQ JUMPDEST PUSH2 0x306 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420746865206F776E6572206F722070726976617465 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x10383937BB34B232B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1B8 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x217 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F9 JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x38D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3E3 JUMPI PUSH2 0x3E3 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x40B JUMPI PUSH2 0x40B PUSH2 0x4E2 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x424 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x465 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x44B JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x474 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4C0 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x49B JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0x4C PUSH15 0x5AD9D9898237CC3C473B233A3AAC33 DUP6 0xBD PUSH18 0x61A112B29F23D7BA21CAD064736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "104:1394:0:-:0;;;1145:9:2;1116:38;;1376:6;1349:33;;104:1394:0;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getBalancePrivateToken_70": {
									"entryPoint": null,
									"id": 70,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBalancePublicToken_83": {
									"entryPoint": null,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBalanceSeedToken_57": {
									"entryPoint": null,
									"id": 57,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@get_blackList_44": {
									"entryPoint": 342,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@get_keccak256_20": {
									"entryPoint": 545,
									"id": 20,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@get_whiteList_32": {
									"entryPoint": 593,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenAmount__231": {
									"entryPoint": null,
									"id": 231,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenPrice__228": {
									"entryPoint": null,
									"id": 228,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 1151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 1228,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1250,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3706:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:216:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:3"
															},
															"nodeType": "YulIf",
															"src": "94:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "239:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "244:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "248:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:50:3"
															},
															"nodeType": "YulIf",
															"src": "200:70:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:3",
														"type": ""
													}
												],
												"src": "14:286:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "385:842:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "431:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "440:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "443:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "433:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "433:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "433:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "406:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "402:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "402:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "427:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "398:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "398:32:3"
															},
															"nodeType": "YulIf",
															"src": "395:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "483:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "470:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "470:23:3"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "460:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "502:28:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "520:2:3",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "524:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "516:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "516:10:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "512:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "512:18:3"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "506:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "557:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "566:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "569:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "559:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "559:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "559:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "545:6:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "553:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "542:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "542:14:3"
															},
															"nodeType": "YulIf",
															"src": "539:34:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "582:32:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "596:9:3"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "607:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "592:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "592:22:3"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "586:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "662:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "671:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "674:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "664:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "664:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "664:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "641:2:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "645:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "637:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "637:13:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "652:7:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "633:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "633:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:35:3"
															},
															"nodeType": "YulIf",
															"src": "623:55:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "687:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "710:2:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "697:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "697:16:3"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "691:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "736:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "738:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "738:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "738:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "728:2:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "732:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "725:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "725:10:3"
															},
															"nodeType": "YulIf",
															"src": "722:36:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "767:17:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "781:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "777:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "777:7:3"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "771:2:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "793:23:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "813:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "807:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "807:9:3"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "797:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "825:71:3",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "847:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "871:2:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "875:4:3",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "867:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "867:13:3"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "882:2:3"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "863:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "863:22:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "887:2:3",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "859:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "859:31:3"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "892:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "855:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:40:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "843:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "843:53:3"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "829:10:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "955:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "957:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "957:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "957:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "914:10:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "926:2:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "911:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "911:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "934:10:3"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "946:6:3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "931:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "931:22:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "908:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "908:46:3"
															},
															"nodeType": "YulIf",
															"src": "905:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "993:2:3",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "997:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "986:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "986:22:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "986:22:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1024:6:3"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1032:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1017:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1017:18:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1017:18:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1081:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1090:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1093:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1083:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1083:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1083:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1058:2:3"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1062:2:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1054:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1054:11:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1067:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1050:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1050:20:3"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1072:7:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1047:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1047:33:3"
															},
															"nodeType": "YulIf",
															"src": "1044:53:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1123:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1131:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1119:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1119:15:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1140:2:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1144:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1136:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1136:11:3"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1149:2:3"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1106:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1106:46:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1106:46:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:3"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1184:2:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1172:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1172:15:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1189:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1168:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1168:24:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1194:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1161:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1161:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1161:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1205:16:3",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1215:6:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1205:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "351:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "362:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "374:6:3",
														"type": ""
													}
												],
												"src": "305:922:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1371:289:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1381:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1401:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:13:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1385:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1417:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1426:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1421:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1488:77:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1513:3:3"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1518:1:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1509:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1509:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1536:6:3"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1544:1:3"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1532:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1532:14:3"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1548:4:3",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1528:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1528:25:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1522:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1522:32:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1502:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1502:53:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1502:53:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1447:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1450:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1444:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1444:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1458:21:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1460:17:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1469:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1472:4:3",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1465:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1465:12:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1460:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1440:3:3",
																"statements": []
															},
															"src": "1436:129:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1591:31:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1604:3:3"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1609:6:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1600:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1600:16:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1618:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1593:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1593:27:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1593:27:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1580:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1583:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1577:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1577:13:3"
															},
															"nodeType": "YulIf",
															"src": "1574:48:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1631:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1642:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1647:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1638:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1638:16:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1631:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1347:3:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1352:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1363:3:3",
														"type": ""
													}
												],
												"src": "1232:428:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1816:507:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1826:12:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1836:2:3",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1830:2:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1847:32:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1865:9:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1876:2:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1861:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1861:18:3"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "1851:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1895:9:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1906:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1888:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1888:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1888:21:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1918:17:3",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "1929:6:3"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "1922:3:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1944:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1964:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1958:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1958:13:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1948:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "1987:6:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1995:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1980:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1980:22:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1980:22:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2011:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2022:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2033:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2018:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2018:18:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2045:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2063:6:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2071:2:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2059:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2059:15:3"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "2049:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2083:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2092:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2087:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2151:146:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2172:3:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2187:6:3"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "2181:5:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2181:13:3"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2204:3:3",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2209:1:3",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2200:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2200:11:3"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2213:1:3",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "2196:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2196:19:3"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "2177:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2177:39:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2165:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2165:52:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2165:52:3"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2230:19:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2241:3:3"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2246:2:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2237:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2237:12:3"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2230:3:3"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2262:25:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2276:6:3"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2284:2:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2272:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2272:15:3"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2262:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2113:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2116:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2110:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2110:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2124:18:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2126:14:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2135:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2138:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2131:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2131:9:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2126:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2106:3:3",
																"statements": []
															},
															"src": "2102:195:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2306:11:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2314:3:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2306:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1785:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1796:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1807:4:3",
														"type": ""
													}
												],
												"src": "1665:658:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2429:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2439:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2451:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2462:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2447:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2447:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2439:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2481:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2492:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2474:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2474:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2474:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2398:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2409:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2420:4:3",
														"type": ""
													}
												],
												"src": "2328:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2684:231:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2701:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2712:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2694:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2694:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2694:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2735:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2746:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2751:2:3",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2724:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2724:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2724:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2774:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2785:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2770:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2770:18:3"
																	},
																	{
																		"hexValue": "596f7520617265206e6f7420746865206f776e6572206f722070726976617465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2790:34:3",
																		"type": "",
																		"value": "You are not the owner or private"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2763:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2763:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2763:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2845:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2856:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2841:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2841:18:3"
																	},
																	{
																		"hexValue": "2070726f7669646572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2861:11:3",
																		"type": "",
																		"value": " provider"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2834:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2834:39:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2834:39:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2882:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2894:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2905:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2890:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2890:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2882:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2661:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2675:4:3",
														"type": ""
													}
												],
												"src": "2510:405:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3094:164:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3111:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3104:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3104:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3104:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3145:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3156:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3141:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3141:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3161:2:3",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3134:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3134:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3134:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3184:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3195:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3180:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3180:18:3"
																	},
																	{
																		"hexValue": "596f7572206e6f742061646d696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3200:16:3",
																		"type": "",
																		"value": "Your not admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3173:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3173:44:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3173:44:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3226:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3238:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3249:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3234:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3234:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3226:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3071:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3085:4:3",
														"type": ""
													}
												],
												"src": "2920:338:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3364:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3374:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3386:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3397:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3382:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3382:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3374:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3416:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3427:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3409:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3409:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3409:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3333:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3344:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3355:4:3",
														"type": ""
													}
												],
												"src": "3263:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3477:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3494:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3501:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3506:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3497:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3497:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3487:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3487:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3487:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3534:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3537:4:3",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3527:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3527:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3527:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3558:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3561:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3551:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3551:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3551:15:3"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "3445:127:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3609:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3626:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3633:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3638:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3629:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3629:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3619:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3619:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3619:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3666:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3669:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3659:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3659:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3659:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3690:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3693:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3683:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3683:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3683:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3577:127:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"You are not the owner or private\")\n        mstore(add(headStart, 96), \" provider\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Your not admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100785760003560e01c80630761c8b91461007d5780632599d6d01461009957806372f0d72b146100c55780637f89128f146100f15780638e4f8c6b14610106578063948942ad14610119578063b06cdc1214610122578063c10e39111461014e575b600080fd5b61008660025481565b6040519081526020015b60405180910390f35b6100866100a7366004610364565b6001600160a01b031660009081526020819052604090206004015490565b6100866100d3366004610364565b6001600160a01b031660009081526020819052604090206006015490565b6100f9610156565b604051610090919061047f565b610086610114366004610394565b610221565b61008660035481565b610086610130366004610364565b6001600160a01b031660009081526020819052604090206005015490565b6100f9610251565b606060003360009081526020819052604090205460ff16600481111561017e5761017e6104cc565b146101c15760405162461bcd60e51b815260206004820152600e60248201526d2cb7bab9103737ba1030b236b4b760911b60448201526064015b60405180910390fd5b600880548060200260200160405190810160405280929190818152602001828054801561021757602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101f9575b5050505050905090565b6000816040516020016102349190610444565b604051602081830303815290604052805190602001209050919050565b606060003360009081526020819052604090205460ff166004811115610279576102796104cc565b14806102a8575060023360009081526020819052604090205460ff1660048111156102a6576102a66104cc565b145b6103065760405162461bcd60e51b815260206004820152602960248201527f596f7520617265206e6f7420746865206f776e6572206f72207072697661746560448201526810383937bb34b232b960b91b60648201526084016101b8565b6007805480602002602001604051908101604052809291908181526020018280548015610217576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116101f9575050505050905090565b60006020828403121561037657600080fd5b81356001600160a01b038116811461038d57600080fd5b9392505050565b6000602082840312156103a657600080fd5b81356001600160401b03808211156103bd57600080fd5b818401915084601f8301126103d157600080fd5b8135818111156103e3576103e36104e2565b604051601f8201601f19908116603f0116810190838211818310171561040b5761040b6104e2565b8160405282815287602084870101111561042457600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000825160005b81811015610465576020818601810151858301520161044b565b81811115610474576000828501525b509190910192915050565b6020808252825182820181905260009190848201906040850190845b818110156104c05783516001600160a01b03168352928401929184019160010161049b565b50909695505050505050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220164c6e5ad9d9898237cc3c473b233a3aac3385bd7161a112b29f23d7ba21cad064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x78 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761C8B9 EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0x2599D6D0 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0x72F0D72B EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x7F89128F EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x8E4F8C6B EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x948942AD EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xB06CDC12 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0xC10E3911 EQ PUSH2 0x14E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x86 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x86 PUSH2 0xA7 CALLDATASIZE PUSH1 0x4 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x86 PUSH2 0xD3 CALLDATASIZE PUSH1 0x4 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x156 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x90 SWAP2 SWAP1 PUSH2 0x47F JUMP JUMPDEST PUSH2 0x86 PUSH2 0x114 CALLDATASIZE PUSH1 0x4 PUSH2 0x394 JUMP JUMPDEST PUSH2 0x221 JUMP JUMPDEST PUSH2 0x86 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x86 PUSH2 0x130 CALLDATASIZE PUSH1 0x4 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x251 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x17E JUMPI PUSH2 0x17E PUSH2 0x4CC JUMP JUMPDEST EQ PUSH2 0x1C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x2CB7BAB9103737BA1030B236B4B7 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x217 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F9 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x279 JUMPI PUSH2 0x279 PUSH2 0x4CC JUMP JUMPDEST EQ DUP1 PUSH2 0x2A8 JUMPI POP PUSH1 0x2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2A6 JUMPI PUSH2 0x2A6 PUSH2 0x4CC JUMP JUMPDEST EQ JUMPDEST PUSH2 0x306 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420746865206F776E6572206F722070726976617465 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x10383937BB34B232B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1B8 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x217 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F9 JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x38D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3E3 JUMPI PUSH2 0x3E3 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x40B JUMPI PUSH2 0x40B PUSH2 0x4E2 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x424 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x465 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x44B JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x474 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4C0 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x49B JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0x4C PUSH15 0x5AD9D9898237CC3C473B233A3AAC33 DUP6 0xBD PUSH18 0x61A112B29F23D7BA21CAD064736F6C634300 ADDMOD SMOD STOP CALLER ",
							"sourceMap": "104:1394:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1116:38:2;;;;;;;;;2474:25:3;;;2462:2;2447:18;1116:38:2;;;;;;;;849:139:0;;;;;;:::i;:::-;-1:-1:-1;;;;;945:22:0;918:7;945:22;;;;;;;;;;:35;;;;849:139;1352:143;;;;;;:::i;:::-;-1:-1:-1;;;;;1450:22:0;1423:7;1450:22;;;;;;;;;;:37;;;;1352:143;632:110;;;:::i;:::-;;;;;;;:::i;212:138::-;;;;;;:::i;:::-;;:::i;1349:33:2:-;;;;;;1098:145:0;;;;;;:::i;:::-;-1:-1:-1;;;;;1197:22:0;1170:7;1197:22;;;;;;;;;;:38;;;;1098:145;426:128;;;:::i;632:110::-;688:16;320:17:1;300:10;287:12;:24;;;;;;;;;;:29;;;:50;;;;;;;;:::i;:::-;;279:77;;;;-1:-1:-1;;;279:77:1;;3122:2:3;279:77:1;;;3104:21:3;3161:2;3141:18;;;3134:30;-1:-1:-1;;;3180:18:3;;;3173:44;3234:18;;279:77:1;;;;;;;;;724:9:0::1;717:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;717:17:0::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;;;;632:110:::0;:::o;212:138::-;276:7;334:5;317:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;307:34;;;;;;300:42;;212:138;;;:::o;426:128::-;500:16;859:17:1;839:10;826:12;:24;;;;;;;;;;:29;;;:50;;;;;;;;:::i;:::-;;:106;;;-1:-1:-1;913:19:1;893:10;880:12;:24;;;;;;;;;;:29;;;:52;;;;;;;;:::i;:::-;;826:106;818:160;;;;-1:-1:-1;;;818:160:1;;2712:2:3;818:160:1;;;2694:21:3;2751:2;2731:18;;;2724:30;2790:34;2770:18;;;2763:62;-1:-1:-1;;;2841:18:3;;;2834:39;2890:19;;818:160:1;2510:405:3;818:160:1;536:9:0::1;529:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;529:17:0::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;;;426:128:::0;:::o;14:286:3:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:3;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:3:o;305:922::-;374:6;427:2;415:9;406:7;402:23;398:32;395:52;;;443:1;440;433:12;395:52;470:23;;-1:-1:-1;;;;;542:14:3;;;539:34;;;569:1;566;559:12;539:34;607:6;596:9;592:22;582:32;;652:7;645:4;641:2;637:13;633:27;623:55;;674:1;671;664:12;623:55;710:2;697:16;732:2;728;725:10;722:36;;;738:18;;:::i;:::-;813:2;807:9;781:2;867:13;;-1:-1:-1;;863:22:3;;;887:2;859:31;855:40;843:53;;;911:18;;;931:22;;;908:46;905:72;;;957:18;;:::i;:::-;997:10;993:2;986:22;1032:2;1024:6;1017:18;1072:7;1067:2;1062;1058;1054:11;1050:20;1047:33;1044:53;;;1093:1;1090;1083:12;1044:53;1149:2;1144;1140;1136:11;1131:2;1123:6;1119:15;1106:46;1194:1;1172:15;;;1189:2;1168:24;1161:35;;;;-1:-1:-1;1176:6:3;305:922;-1:-1:-1;;;;;305:922:3:o;1232:428::-;1363:3;1401:6;1395:13;1426:1;1436:129;1450:6;1447:1;1444:13;1436:129;;;1548:4;1532:14;;;1528:25;;1522:32;1509:11;;;1502:53;1465:12;1436:129;;;1583:6;1580:1;1577:13;1574:48;;;1618:1;1609:6;1604:3;1600:16;1593:27;1574:48;-1:-1:-1;1638:16:3;;;;;1232:428;-1:-1:-1;;1232:428:3:o;1665:658::-;1836:2;1888:21;;;1958:13;;1861:18;;;1980:22;;;1807:4;;1836:2;2059:15;;;;2033:2;2018:18;;;1807:4;2102:195;2116:6;2113:1;2110:13;2102:195;;;2181:13;;-1:-1:-1;;;;;2177:39:3;2165:52;;2272:15;;;;2237:12;;;;2213:1;2131:9;2102:195;;;-1:-1:-1;2314:3:3;;1665:658;-1:-1:-1;;;;;;1665:658:3:o;3445:127::-;3506:10;3501:3;3497:20;3494:1;3487:31;3537:4;3534:1;3527:15;3561:4;3558:1;3551:15;3577:127;3638:10;3633:3;3629:20;3626:1;3619:31;3669:4;3666:1;3659:15;3693:4;3690:1;3683:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "265200",
								"executionCost": "44518",
								"totalCost": "309718"
							},
							"external": {
								"getBalancePrivateToken(address)": "2610",
								"getBalancePublicToken(address)": "2522",
								"getBalanceSeedToken(address)": "2500",
								"get_blackList()": "infinite",
								"get_keccak256(string)": "infinite",
								"get_whiteList()": "infinite",
								"tokenAmount_()": "2372",
								"tokenPrice_()": "2262"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 104,
									"end": 1498,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1145,
									"end": 1154,
									"name": "PUSH",
									"source": 2,
									"value": "2CB41780"
								},
								{
									"begin": 1116,
									"end": 1154,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1116,
									"end": 1154,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1376,
									"end": 1382,
									"name": "PUSH",
									"source": 2,
									"value": "186A0"
								},
								{
									"begin": 1349,
									"end": 1382,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1349,
									"end": 1382,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220164c6e5ad9d9898237cc3c473b233a3aac3385bd7161a112b29f23d7ba21cad064736f6c63430008070033",
									".code": [
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "761C8B9"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "2599D6D0"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "72F0D72B"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "7F89128F"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "8E4F8C6B"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "948942AD"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "B06CDC12"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "C10E3911"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2474,
											"end": 2499,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2474,
											"end": 2499,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2474,
											"end": 2499,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2462,
											"end": 2464,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2447,
											"end": 2465,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 849,
											"end": 988,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 945,
											"end": 967,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 918,
											"end": 925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 945,
											"end": 967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 945,
											"end": 967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 945,
											"end": 967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 945,
											"end": 967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 945,
											"end": 967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 945,
											"end": 967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 945,
											"end": 967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 945,
											"end": 967,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 945,
											"end": 967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 945,
											"end": 967,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 945,
											"end": 980,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 945,
											"end": 980,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 945,
											"end": 980,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 945,
											"end": 980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1487,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1450,
											"end": 1487,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1487,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1177,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1235,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1197,
											"end": 1235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1235,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 426,
											"end": 554,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 426,
											"end": 554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 426,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 426,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 426,
											"end": 554,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 688,
											"end": 704,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 320,
											"end": 337,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 300,
											"end": 310,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 287,
											"end": 299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 287,
											"end": 311,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 287,
											"end": 311,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 287,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 287,
											"end": 311,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 287,
											"end": 311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 287,
											"end": 311,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 287,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 287,
											"end": 311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 287,
											"end": 311,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 287,
											"end": 316,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 287,
											"end": 316,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 287,
											"end": 316,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 287,
											"end": 337,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 287,
											"end": 337,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 287,
											"end": 337,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 287,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 287,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 287,
											"end": 337,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 279,
											"end": 356,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 279,
											"end": 356,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3124,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 279,
											"end": 356,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 279,
											"end": 356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3125,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3161,
											"end": 3163,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 3141,
											"end": 3159,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3141,
											"end": 3159,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3141,
											"end": 3159,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3164,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CB7BAB9103737BA1030B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3180,
											"end": 3198,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3180,
											"end": 3198,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3180,
											"end": 3198,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3173,
											"end": 3217,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3234,
											"end": 3252,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3234,
											"end": 3252,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 279,
											"end": 356,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 279,
											"end": 356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 279,
											"end": 356,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 279,
											"end": 356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 724,
											"end": 733,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 717,
											"end": 734,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 276,
											"end": 283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 307,
											"end": 341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 341,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 307,
											"end": 341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 341,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 307,
											"end": 341,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 307,
											"end": 341,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 300,
											"end": 342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 426,
											"end": 554,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 426,
											"end": 554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 500,
											"end": 516,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 859,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 839,
											"end": 849,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 826,
											"end": 838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 826,
											"end": 850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 826,
											"end": 850,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 826,
											"end": 850,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 826,
											"end": 850,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 850,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 826,
											"end": 850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 826,
											"end": 850,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 826,
											"end": 850,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 826,
											"end": 850,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 826,
											"end": 855,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 826,
											"end": 855,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 826,
											"end": 855,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 826,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 826,
											"end": 876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 826,
											"end": 876,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 826,
											"end": 876,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 826,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 826,
											"end": 876,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 826,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 826,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 826,
											"end": 876,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 826,
											"end": 876,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 826,
											"end": 876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 826,
											"end": 876,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 826,
											"end": 932,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 826,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 826,
											"end": 932,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 913,
											"end": 932,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 893,
											"end": 903,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 880,
											"end": 892,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 904,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 880,
											"end": 904,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 880,
											"end": 904,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 880,
											"end": 904,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 880,
											"end": 904,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 880,
											"end": 904,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 880,
											"end": 904,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 880,
											"end": 904,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 880,
											"end": 904,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 880,
											"end": 904,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 880,
											"end": 909,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 880,
											"end": 909,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 880,
											"end": 909,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 880,
											"end": 932,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 880,
											"end": 932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 880,
											"end": 932,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 880,
											"end": 932,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 880,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 880,
											"end": 932,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 880,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 880,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 880,
											"end": 932,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 880,
											"end": 932,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 880,
											"end": 932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 880,
											"end": 932,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 826,
											"end": 932,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 826,
											"end": 932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 818,
											"end": 978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 818,
											"end": 978,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 818,
											"end": 978,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 818,
											"end": 978,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 818,
											"end": 978,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2712,
											"end": 2714,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 818,
											"end": 978,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 818,
											"end": 978,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 818,
											"end": 978,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2694,
											"end": 2715,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2751,
											"end": 2753,
											"name": "PUSH",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2731,
											"end": 2749,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2731,
											"end": 2749,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2731,
											"end": 2749,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2790,
											"end": 2824,
											"name": "PUSH",
											"source": 3,
											"value": "596F7520617265206E6F7420746865206F776E6572206F722070726976617465"
										},
										{
											"begin": 2770,
											"end": 2788,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2770,
											"end": 2788,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2770,
											"end": 2788,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2763,
											"end": 2825,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "10383937BB34B232B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2841,
											"end": 2859,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2841,
											"end": 2859,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2841,
											"end": 2859,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2834,
											"end": 2873,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2890,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2890,
											"end": 2909,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 818,
											"end": 978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2510,
											"end": 2915,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 818,
											"end": 978,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 818,
											"end": 978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 536,
											"end": 545,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 529,
											"end": 546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 426,
											"end": 554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 426,
											"end": 554,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 305,
											"end": 1227,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 305,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 374,
											"end": 380,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 429,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 406,
											"end": 413,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 402,
											"end": 425,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 398,
											"end": 430,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 395,
											"end": 447,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 395,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 395,
											"end": 447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 395,
											"end": 447,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 395,
											"end": 447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 470,
											"end": 493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 470,
											"end": 493,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 542,
											"end": 556,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 542,
											"end": 556,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 542,
											"end": 556,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 539,
											"end": 573,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 539,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 539,
											"end": 573,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 569,
											"end": 570,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 567,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 559,
											"end": 571,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 539,
											"end": 573,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 539,
											"end": 573,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 607,
											"end": 613,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 596,
											"end": 605,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 592,
											"end": 614,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 582,
											"end": 614,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 582,
											"end": 614,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 652,
											"end": 659,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 645,
											"end": 649,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 641,
											"end": 643,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 637,
											"end": 650,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 633,
											"end": 660,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 623,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 623,
											"end": 678,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 674,
											"end": 675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 672,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 664,
											"end": 676,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 623,
											"end": 678,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 623,
											"end": 678,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 710,
											"end": 712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 697,
											"end": 713,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 732,
											"end": 734,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 728,
											"end": 730,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 725,
											"end": 735,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 722,
											"end": 758,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 722,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 722,
											"end": 758,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 738,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 813,
											"end": 815,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 816,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 781,
											"end": 783,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 867,
											"end": 880,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 867,
											"end": 880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 863,
											"end": 885,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 863,
											"end": 885,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 863,
											"end": 885,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 887,
											"end": 889,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 859,
											"end": 890,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 855,
											"end": 895,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 843,
											"end": 896,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 843,
											"end": 896,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 843,
											"end": 896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 911,
											"end": 929,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 911,
											"end": 929,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 911,
											"end": 929,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 931,
											"end": 953,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 931,
											"end": 953,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 931,
											"end": 953,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 908,
											"end": 954,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 905,
											"end": 977,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 905,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 905,
											"end": 977,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 957,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 957,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 957,
											"end": 975,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 957,
											"end": 975,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 957,
											"end": 975,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1007,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 993,
											"end": 995,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 986,
											"end": 1008,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1034,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1030,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1035,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1072,
											"end": 1079,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1067,
											"end": 1069,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1064,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1058,
											"end": 1060,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1065,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1070,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1097,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1044,
											"end": 1097,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1093,
											"end": 1094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1090,
											"end": 1091,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1095,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1097,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1044,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1151,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1144,
											"end": 1146,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1147,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1133,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1123,
											"end": 1129,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1134,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1106,
											"end": 1152,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 1194,
											"end": 1195,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1187,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1187,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1187,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1191,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1168,
											"end": 1192,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1196,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1196,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1196,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1196,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1176,
											"end": 1182,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 305,
											"end": 1227,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 305,
											"end": 1227,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1232,
											"end": 1660,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1232,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1363,
											"end": 1366,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 1407,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1395,
											"end": 1408,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1426,
											"end": 1427,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1436,
											"end": 1565,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1436,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1450,
											"end": 1456,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1447,
											"end": 1448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1444,
											"end": 1457,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1436,
											"end": 1565,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1436,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1436,
											"end": 1565,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1548,
											"end": 1552,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1532,
											"end": 1546,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1546,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1532,
											"end": 1546,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1553,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1553,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1554,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1520,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1520,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1520,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1502,
											"end": 1555,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1465,
											"end": 1477,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1436,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1436,
											"end": 1565,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1436,
											"end": 1565,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1436,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1583,
											"end": 1589,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1580,
											"end": 1581,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1577,
											"end": 1590,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1574,
											"end": 1622,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1574,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1574,
											"end": 1622,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1618,
											"end": 1619,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1609,
											"end": 1615,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 1607,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1600,
											"end": 1616,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1593,
											"end": 1620,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1574,
											"end": 1622,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1574,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1638,
											"end": 1654,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1654,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1654,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1654,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1654,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1660,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1232,
											"end": 1660,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1665,
											"end": 2323,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1665,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1838,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 1909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1888,
											"end": 1909,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1888,
											"end": 1909,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1958,
											"end": 1971,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1958,
											"end": 1971,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1861,
											"end": 1879,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1861,
											"end": 1879,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1861,
											"end": 1879,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 2002,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 2002,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 2002,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1807,
											"end": 1811,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1811,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1838,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2059,
											"end": 2074,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2059,
											"end": 2074,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2059,
											"end": 2074,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2059,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2033,
											"end": 2035,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2018,
											"end": 2036,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2018,
											"end": 2036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2018,
											"end": 2036,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1807,
											"end": 1811,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2297,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2102,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2116,
											"end": 2122,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2113,
											"end": 2114,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2123,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2297,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2102,
											"end": 2297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2194,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2194,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2177,
											"end": 2216,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2272,
											"end": 2287,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2272,
											"end": 2287,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2272,
											"end": 2287,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2272,
											"end": 2287,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2213,
											"end": 2214,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2131,
											"end": 2140,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2102,
											"end": 2297,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2297,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2102,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2314,
											"end": 2317,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2317,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 1665,
											"end": 2323,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1665,
											"end": 2323,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3445,
											"end": 3572,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3445,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3506,
											"end": 3516,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 3501,
											"end": 3504,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 3497,
											"end": 3517,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 3494,
											"end": 3495,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3518,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3537,
											"end": 3541,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3534,
											"end": 3535,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3527,
											"end": 3542,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3561,
											"end": 3565,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3558,
											"end": 3559,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3566,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3577,
											"end": 3704,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3577,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3648,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 3633,
											"end": 3636,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 3629,
											"end": 3649,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3627,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3619,
											"end": 3650,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3669,
											"end": 3673,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3666,
											"end": 3667,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3659,
											"end": 3674,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3693,
											"end": 3697,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3690,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3683,
											"end": 3698,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getBalancePrivateToken(address)": "b06cdc12",
							"getBalancePublicToken(address)": "72f0d72b",
							"getBalanceSeedToken(address)": "2599d6d0",
							"get_blackList()": "7f89128f",
							"get_keccak256(string)": "8e4f8c6b",
							"get_whiteList()": "c10e3911",
							"tokenAmount_()": "948942ad",
							"tokenPrice_()": "0761c8b9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAdr\",\"type\":\"address\"}],\"name\":\"getBalancePrivateToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAdr\",\"type\":\"address\"}],\"name\":\"getBalancePublicToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAdr\",\"type\":\"address\"}],\"name\":\"getBalanceSeedToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_blackList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"get_keccak256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_whiteList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAmount_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":\"helpresFunc\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":{\"keccak256\":\"0x5b40e44cf32ee695c9b4a239819bd0a3aec8d89ea027b4705c7fb4d18d631cf1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://355406fc554229b0cc5bdc56bed0dfc105705c6f4a7bc7961a486c46f0a992f3\",\"dweb:/ipfs/QmR41xNEPBJHLWzahATAfMw41E5X4KXkmBNayAKGwUMQxn\"]},\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":{\"keccak256\":\"0x9df7e2dac723ef505e0e57aade89cc466f29ac4a75159d2da2652112557b4395\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://42f7071b429aa53bcd7261f1c596f35490ff6b9b52538b0013a4e97b5fd19bc0\",\"dweb:/ipfs/QmULYvRvj5C1gAL66N85Y6M9tdmiTa8gyF1NjXgPVytncF\"]},\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":{\"keccak256\":\"0xea8efd41e9b10029637121123e94c0106e3164c790f18eb5cb7e938ce7f60005\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b0b229072dd849251d0d9da81ae6294a9f9438844cea581fcce6691fa16ba4bb\",\"dweb:/ipfs/QmNoSWRUbximeoyZQDbWTkAH9zSJZ5qyopyZk5o54x2aqa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 219,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "structUsers_",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(structUser)214_storage)"
							},
							{
								"astId": 225,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "allowed",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 228,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "tokenPrice_",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 231,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "tokenAmount_",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 250,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "structPhases_",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(structPhase)245_storage)"
							},
							{
								"astId": 268,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "strucApplications_",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(structApplication)263_storage)"
							},
							{
								"astId": 271,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "structApplicationsAmountAdr",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 274,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "whiteList",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 277,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "blackList",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(Role)198": {
								"encoding": "inplace",
								"label": "enum structures.Role",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(structApplication)263_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structApplication)",
								"numberOfBytes": "32",
								"value": "t_struct(structApplication)263_storage"
							},
							"t_mapping(t_address,t_struct(structPhase)245_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structPhase)",
								"numberOfBytes": "32",
								"value": "t_struct(structPhase)245_storage"
							},
							"t_mapping(t_address,t_struct(structUser)214_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structUser)",
								"numberOfBytes": "32",
								"value": "t_struct(structUser)214_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(structApplication)263_storage": {
								"encoding": "inplace",
								"label": "struct structures.structApplication",
								"members": [
									{
										"astId": 252,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 254,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "contactForCommunication",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 256,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "userAdr",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 258,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "status",
										"offset": 20,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 260,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "reviewed",
										"offset": 21,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 262,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "exist",
										"offset": 22,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(structPhase)245_storage": {
								"encoding": "inplace",
								"label": "struct structures.structPhase",
								"members": [
									{
										"astId": 242,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "statusPhase",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 244,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "reviewed",
										"offset": 1,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(structUser)214_storage": {
								"encoding": "inplace",
								"label": "struct structures.structUser",
								"members": [
									{
										"astId": 201,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "role",
										"offset": 0,
										"slot": "0",
										"type": "t_enum(Role)198"
									},
									{
										"astId": 203,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "login",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 205,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "password",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									},
									{
										"astId": 207,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "balance_overall",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 209,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "balance_seed",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 211,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "balance_private",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 213,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "balance_public",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol": {
				"modifireFunc": {
					"abi": [
						{
							"inputs": [],
							"name": "tokenAmount_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenPrice_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":107:1522  contract modifireFunc is structures {\r... */\n  mstore(0x40, 0x80)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1145:1154  750000000 */\n  0x2cb41780\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1116:1154  uint256 public tokenPrice_ = 750000000 */\n  0x02\n  sstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1376:1382  100000 */\n  0x0186a0\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1349:1382  uint public tokenAmount_ = 100000 */\n  0x03\n  sstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":107:1522  contract modifireFunc is structures {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":107:1522  contract modifireFunc is structures {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0761c8b9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x948942ad\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1116:1154  uint256 public tokenPrice_ = 750000000 */\n    tag_3:\n      tag_5\n      sload(0x02)\n      dup2\n      jump\n    tag_5:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1116:1154  uint256 public tokenPrice_ = 750000000 */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1349:1382  uint public tokenAmount_ = 100000 */\n    tag_4:\n      tag_5\n      sload(0x03)\n      dup2\n      jump\n\n    auxdata: 0xa2646970667358221220a1d5596fc8728e54d11abafd0ced9aba6c4b149ab865b84ab85badee185f83cb64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052632cb41780600255620186a0600355348015601e57600080fd5b50608f8061002d6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80630761c8b9146037578063948942ad146051575b600080fd5b603f60025481565b60405190815260200160405180910390f35b603f6003548156fea2646970667358221220a1d5596fc8728e54d11abafd0ced9aba6c4b149ab865b84ab85badee185f83cb64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH4 0x2CB41780 PUSH1 0x2 SSTORE PUSH3 0x186A0 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH1 0x1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8F DUP1 PUSH2 0x2D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761C8B9 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x948942AD EQ PUSH1 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3F PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3F PUSH1 0x3 SLOAD DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xD5 MSIZE PUSH16 0xC8728E54D11ABAFD0CED9ABA6C4B149A 0xB8 PUSH6 0xB84AB85BADEE XOR 0x5F DUP4 0xCB PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "107:1415:1:-:0;;;1145:9:2;1116:38;;1376:6;1349:33;;107:1415:1;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@tokenAmount__231": {
									"entryPoint": null,
									"id": 231,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenPrice__228": {
									"entryPoint": null,
									"id": 228,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:193:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:3",
														"type": ""
													}
												],
												"src": "14:177:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060325760003560e01c80630761c8b9146037578063948942ad146051575b600080fd5b603f60025481565b60405190815260200160405180910390f35b603f6003548156fea2646970667358221220a1d5596fc8728e54d11abafd0ced9aba6c4b149ab865b84ab85badee185f83cb64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761C8B9 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x948942AD EQ PUSH1 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3F PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3F PUSH1 0x3 SLOAD DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xD5 MSIZE PUSH16 0xC8728E54D11ABAFD0CED9ABA6C4B149A 0xB8 PUSH6 0xB84AB85BADEE XOR 0x5F DUP4 0xCB PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "107:1415:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1116:38:2;;;;;;;;;160:25:3;;;148:2;133:18;1116:38:2;;;;;;;1349:33;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "28600",
								"executionCost": "44293",
								"totalCost": "72893"
							},
							"external": {
								"tokenAmount_()": "2283",
								"tokenPrice_()": "2261"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 107,
									"end": 1522,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 107,
									"end": 1522,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 107,
									"end": 1522,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1145,
									"end": 1154,
									"name": "PUSH",
									"source": 2,
									"value": "2CB41780"
								},
								{
									"begin": 1116,
									"end": 1154,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1116,
									"end": 1154,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1376,
									"end": 1382,
									"name": "PUSH",
									"source": 2,
									"value": "186A0"
								},
								{
									"begin": 1349,
									"end": 1382,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1349,
									"end": 1382,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 107,
									"end": 1522,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1522,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1522,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1522,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 107,
									"end": 1522,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1522,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 1522,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1522,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1522,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 107,
									"end": 1522,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1522,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 107,
									"end": 1522,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1522,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 107,
									"end": 1522,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 1522,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1522,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 1522,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a1d5596fc8728e54d11abafd0ced9aba6c4b149ab865b84ab85badee185f83cb64736f6c63430008070033",
									".code": [
										{
											"begin": 107,
											"end": 1522,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "PUSH",
											"source": 1,
											"value": "761C8B9"
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "PUSH",
											"source": 1,
											"value": "948942AD"
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1522,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "JUMP",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"tokenAmount_()": "948942ad",
							"tokenPrice_()": "0761c8b9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"tokenAmount_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":\"modifireFunc\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":{\"keccak256\":\"0x9df7e2dac723ef505e0e57aade89cc466f29ac4a75159d2da2652112557b4395\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://42f7071b429aa53bcd7261f1c596f35490ff6b9b52538b0013a4e97b5fd19bc0\",\"dweb:/ipfs/QmULYvRvj5C1gAL66N85Y6M9tdmiTa8gyF1NjXgPVytncF\"]},\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":{\"keccak256\":\"0xea8efd41e9b10029637121123e94c0106e3164c790f18eb5cb7e938ce7f60005\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b0b229072dd849251d0d9da81ae6294a9f9438844cea581fcce6691fa16ba4bb\",\"dweb:/ipfs/QmNoSWRUbximeoyZQDbWTkAH9zSJZ5qyopyZk5o54x2aqa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 219,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "structUsers_",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(structUser)214_storage)"
							},
							{
								"astId": 225,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "allowed",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 228,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "tokenPrice_",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 231,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "tokenAmount_",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 250,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "structPhases_",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(structPhase)245_storage)"
							},
							{
								"astId": 268,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "strucApplications_",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(structApplication)263_storage)"
							},
							{
								"astId": 271,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "structApplicationsAmountAdr",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 274,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "whiteList",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 277,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "blackList",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(Role)198": {
								"encoding": "inplace",
								"label": "enum structures.Role",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(structApplication)263_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structApplication)",
								"numberOfBytes": "32",
								"value": "t_struct(structApplication)263_storage"
							},
							"t_mapping(t_address,t_struct(structPhase)245_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structPhase)",
								"numberOfBytes": "32",
								"value": "t_struct(structPhase)245_storage"
							},
							"t_mapping(t_address,t_struct(structUser)214_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structUser)",
								"numberOfBytes": "32",
								"value": "t_struct(structUser)214_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(structApplication)263_storage": {
								"encoding": "inplace",
								"label": "struct structures.structApplication",
								"members": [
									{
										"astId": 252,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 254,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "contactForCommunication",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 256,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "userAdr",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 258,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "status",
										"offset": 20,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 260,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "reviewed",
										"offset": 21,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 262,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "exist",
										"offset": 22,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(structPhase)245_storage": {
								"encoding": "inplace",
								"label": "struct structures.structPhase",
								"members": [
									{
										"astId": 242,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "statusPhase",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 244,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "reviewed",
										"offset": 1,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(structUser)214_storage": {
								"encoding": "inplace",
								"label": "struct structures.structUser",
								"members": [
									{
										"astId": 201,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "role",
										"offset": 0,
										"slot": "0",
										"type": "t_enum(Role)198"
									},
									{
										"astId": 203,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "login",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 205,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "password",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									},
									{
										"astId": 207,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "balance_overall",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 209,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "balance_seed",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 211,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "balance_private",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 213,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "balance_public",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol": {
				"structures": {
					"abi": [
						{
							"inputs": [],
							"name": "tokenAmount_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenPrice_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":72:3409  contract structures {\r... */\n  mstore(0x40, 0x80)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1145:1154  750000000 */\n  0x2cb41780\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1116:1154  uint256 public tokenPrice_ = 750000000 */\n  0x02\n  sstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1376:1382  100000 */\n  0x0186a0\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1349:1382  uint public tokenAmount_ = 100000 */\n  0x03\n  sstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":72:3409  contract structures {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":72:3409  contract structures {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0761c8b9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x948942ad\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1116:1154  uint256 public tokenPrice_ = 750000000 */\n    tag_3:\n      tag_5\n      sload(0x02)\n      dup2\n      jump\n    tag_5:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1116:1154  uint256 public tokenPrice_ = 750000000 */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1349:1382  uint public tokenAmount_ = 100000 */\n    tag_4:\n      tag_5\n      sload(0x03)\n      dup2\n      jump\n\n    auxdata: 0xa2646970667358221220e93b6dbf466d61b26ab2c7372ba28e2067216e4b34885808ee4a54bdd3936db464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052632cb41780600255620186a0600355348015601e57600080fd5b50608f8061002d6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80630761c8b9146037578063948942ad146051575b600080fd5b603f60025481565b60405190815260200160405180910390f35b603f6003548156fea2646970667358221220e93b6dbf466d61b26ab2c7372ba28e2067216e4b34885808ee4a54bdd3936db464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH4 0x2CB41780 PUSH1 0x2 SSTORE PUSH3 0x186A0 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH1 0x1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8F DUP1 PUSH2 0x2D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761C8B9 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x948942AD EQ PUSH1 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3F PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3F PUSH1 0x3 SLOAD DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 EXTCODESIZE PUSH14 0xBF466D61B26AB2C7372BA28E2067 0x21 PUSH15 0x4B34885808EE4A54BDD3936DB46473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "72:3337:2:-:0;;;1145:9;1116:38;;1376:6;1349:33;;72:3337;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@tokenAmount__231": {
									"entryPoint": null,
									"id": 231,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenPrice__228": {
									"entryPoint": null,
									"id": 228,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:193:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:3",
														"type": ""
													}
												],
												"src": "14:177:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060325760003560e01c80630761c8b9146037578063948942ad146051575b600080fd5b603f60025481565b60405190815260200160405180910390f35b603f6003548156fea2646970667358221220e93b6dbf466d61b26ab2c7372ba28e2067216e4b34885808ee4a54bdd3936db464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761C8B9 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x948942AD EQ PUSH1 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3F PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3F PUSH1 0x3 SLOAD DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 EXTCODESIZE PUSH14 0xBF466D61B26AB2C7372BA28E2067 0x21 PUSH15 0x4B34885808EE4A54BDD3936DB46473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "72:3337:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1116:38;;;;;;;;;160:25:3;;;148:2;133:18;1116:38:2;;;;;;;1349:33;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "28600",
								"executionCost": "44293",
								"totalCost": "72893"
							},
							"external": {
								"tokenAmount_()": "2283",
								"tokenPrice_()": "2261"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 72,
									"end": 3409,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1145,
									"end": 1154,
									"name": "PUSH",
									"source": 2,
									"value": "2CB41780"
								},
								{
									"begin": 1116,
									"end": 1154,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1116,
									"end": 1154,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1376,
									"end": 1382,
									"name": "PUSH",
									"source": 2,
									"value": "186A0"
								},
								{
									"begin": 1349,
									"end": 1382,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1349,
									"end": 1382,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 3409,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e93b6dbf466d61b26ab2c7372ba28e2067216e4b34885808ee4a54bdd3936db464736f6c63430008070033",
									".code": [
										{
											"begin": 72,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "761C8B9"
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "948942AD"
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3409,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1349,
											"end": 1382,
											"name": "JUMP",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"tokenAmount_()": "948942ad",
							"tokenPrice_()": "0761c8b9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"tokenAmount_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":\"structures\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":{\"keccak256\":\"0xea8efd41e9b10029637121123e94c0106e3164c790f18eb5cb7e938ce7f60005\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b0b229072dd849251d0d9da81ae6294a9f9438844cea581fcce6691fa16ba4bb\",\"dweb:/ipfs/QmNoSWRUbximeoyZQDbWTkAH9zSJZ5qyopyZk5o54x2aqa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 219,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "structUsers_",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(structUser)214_storage)"
							},
							{
								"astId": 225,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "allowed",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 228,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "tokenPrice_",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 231,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "tokenAmount_",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 250,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "structPhases_",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(structPhase)245_storage)"
							},
							{
								"astId": 268,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "strucApplications_",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(structApplication)263_storage)"
							},
							{
								"astId": 271,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "structApplicationsAmountAdr",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 274,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "whiteList",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 277,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "blackList",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(Role)198": {
								"encoding": "inplace",
								"label": "enum structures.Role",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(structApplication)263_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structApplication)",
								"numberOfBytes": "32",
								"value": "t_struct(structApplication)263_storage"
							},
							"t_mapping(t_address,t_struct(structPhase)245_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structPhase)",
								"numberOfBytes": "32",
								"value": "t_struct(structPhase)245_storage"
							},
							"t_mapping(t_address,t_struct(structUser)214_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structUser)",
								"numberOfBytes": "32",
								"value": "t_struct(structUser)214_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(structApplication)263_storage": {
								"encoding": "inplace",
								"label": "struct structures.structApplication",
								"members": [
									{
										"astId": 252,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 254,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "contactForCommunication",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 256,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "userAdr",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 258,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "status",
										"offset": 20,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 260,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "reviewed",
										"offset": 21,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 262,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "exist",
										"offset": 22,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(structPhase)245_storage": {
								"encoding": "inplace",
								"label": "struct structures.structPhase",
								"members": [
									{
										"astId": 242,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "statusPhase",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 244,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "reviewed",
										"offset": 1,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(structUser)214_storage": {
								"encoding": "inplace",
								"label": "struct structures.structUser",
								"members": [
									{
										"astId": 201,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "role",
										"offset": 0,
										"slot": "0",
										"type": "t_enum(Role)198"
									},
									{
										"astId": 203,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "login",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 205,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "password",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									},
									{
										"astId": 207,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "balance_overall",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 209,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "balance_seed",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 211,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "balance_private",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 213,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "balance_public",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol": {
				"ast": {
					"absolutePath": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol",
					"exportedSymbols": {
						"helpresFunc": [
							84
						],
						"modifireFunc": [
							190
						],
						"structures": [
							278
						]
					},
					"id": 85,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"absolutePath": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol",
							"file": "./modifireFunc.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 85,
							"sourceUnit": 191,
							"src": "72:28:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "modifireFunc",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 190,
										"src": "128:12:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "128:12:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 84,
							"linearizedBaseContracts": [
								84,
								190,
								278
							],
							"name": "helpresFunc",
							"nameLocation": "113:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "285:65:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 14,
																			"name": "_hash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 6,
																			"src": "334:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"expression": {
																			"id": 12,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "317:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 13,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "317:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 15,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "317:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 11,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "307:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "307:34:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 17,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "306:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 10,
												"id": 18,
												"nodeType": "Return",
												"src": "300:42:0"
											}
										]
									},
									"functionSelector": "8e4f8c6b",
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_keccak256",
									"nameLocation": "221:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "_hash",
												"nameLocation": "249:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "235:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 5,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "235:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "234:21:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "276:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 8,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "275:9:0"
									},
									"scope": 84,
									"src": "212:138:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "518:36:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 28,
															"name": "whiteList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "536:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														}
													],
													"id": 29,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "535:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 27,
												"id": 30,
												"nodeType": "Return",
												"src": "529:17:0"
											}
										]
									},
									"functionSelector": "c10e3911",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 23,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 22,
												"name": "onlyOwnerAndPrivateProvider",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 146,
												"src": "458:27:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "458:27:0"
										}
									],
									"name": "get_whiteList",
									"nameLocation": "435:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "448:2:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "500:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 24,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "500:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 25,
													"nodeType": "ArrayTypeName",
													"src": "500:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:18:0"
									},
									"scope": 84,
									"src": "426:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "706:36:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 40,
															"name": "blackList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "724:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														}
													],
													"id": 41,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "723:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 39,
												"id": 42,
												"nodeType": "Return",
												"src": "717:17:0"
											}
										]
									},
									"functionSelector": "7f89128f",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 35,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 34,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 105,
												"src": "664:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "664:9:0"
										}
									],
									"name": "get_blackList",
									"nameLocation": "641:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "654:2:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "688:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 36,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "688:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 37,
													"nodeType": "ArrayTypeName",
													"src": "688:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "687:18:0"
									},
									"scope": 84,
									"src": "632:110:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "927:61:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 51,
															"name": "structUsers_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "945:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$214_storage_$",
																"typeString": "mapping(address => struct structures.structUser storage ref)"
															}
														},
														"id": 53,
														"indexExpression": {
															"id": 52,
															"name": "_userAdr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "958:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "945:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_structUser_$214_storage",
															"typeString": "struct structures.structUser storage ref"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance_seed",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 209,
													"src": "945:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 50,
												"id": 55,
												"nodeType": "Return",
												"src": "938:42:0"
											}
										]
									},
									"functionSelector": "2599d6d0",
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalanceSeedToken",
									"nameLocation": "858:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "_userAdr",
												"nameLocation": "887:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "879:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:18:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "918:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "918:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "917:9:0"
									},
									"scope": 84,
									"src": "849:139:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "1179:64:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 64,
															"name": "structUsers_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "1197:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$214_storage_$",
																"typeString": "mapping(address => struct structures.structUser storage ref)"
															}
														},
														"id": 66,
														"indexExpression": {
															"id": 65,
															"name": "_userAdr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "1210:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1197:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_structUser_$214_storage",
															"typeString": "struct structures.structUser storage ref"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance_private",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 211,
													"src": "1197:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 63,
												"id": 68,
												"nodeType": "Return",
												"src": "1190:45:0"
											}
										]
									},
									"functionSelector": "b06cdc12",
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalancePrivateToken",
									"nameLocation": "1107:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "_userAdr",
												"nameLocation": "1139:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1131:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1131:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1130:18:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1170:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1170:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1169:9:0"
									},
									"scope": 84,
									"src": "1098:145:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1432:63:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 77,
															"name": "structUsers_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "1450:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$214_storage_$",
																"typeString": "mapping(address => struct structures.structUser storage ref)"
															}
														},
														"id": 79,
														"indexExpression": {
															"id": 78,
															"name": "_userAdr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "1463:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1450:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_structUser_$214_storage",
															"typeString": "struct structures.structUser storage ref"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance_public",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 213,
													"src": "1450:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 76,
												"id": 81,
												"nodeType": "Return",
												"src": "1443:44:0"
											}
										]
									},
									"functionSelector": "72f0d72b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalancePublicToken",
									"nameLocation": "1361:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "_userAdr",
												"nameLocation": "1392:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1384:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1383:18:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1423:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1422:9:0"
									},
									"scope": 84,
									"src": "1352:143:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 85,
							"src": "104:1394:0",
							"usedErrors": []
						}
					],
					"src": "37:1461:0"
				},
				"id": 0
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol": {
				"ast": {
					"absolutePath": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol",
					"exportedSymbols": {
						"modifireFunc": [
							190
						],
						"structures": [
							278
						]
					},
					"id": 191,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 86,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:1"
						},
						{
							"absolutePath": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol",
							"file": "../lib/structures.sol",
							"id": 87,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 191,
							"sourceUnit": 279,
							"src": "72:31:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 88,
										"name": "structures",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 278,
										"src": "132:10:1"
									},
									"id": 89,
									"nodeType": "InheritanceSpecifier",
									"src": "132:10:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 190,
							"linearizedBaseContracts": [
								190,
								278
							],
							"name": "modifireFunc",
							"nameLocation": "116:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "268:108:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Role_$198",
																"typeString": "enum structures.Role"
															},
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 92,
																		"name": "structUsers_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 219,
																		"src": "287:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$214_storage_$",
																			"typeString": "mapping(address => struct structures.structUser storage ref)"
																		}
																	},
																	"id": 95,
																	"indexExpression": {
																		"expression": {
																			"id": 93,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "300:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "300:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "287:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_structUser_$214_storage",
																		"typeString": "struct structures.structUser storage ref"
																	}
																},
																"id": 96,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "role",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 201,
																"src": "287:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$198",
																	"typeString": "enum structures.Role"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 97,
																	"name": "Role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "320:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Role_$198_$",
																		"typeString": "type(enum structures.Role)"
																	}
																},
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "SYSTEM_OWNER",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 193,
																"src": "320:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$198",
																	"typeString": "enum structures.Role"
																}
															},
															"src": "287:50:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7572206e6f742061646d696e",
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "339:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c",
																"typeString": "literal_string \"Your not admin\""
															},
															"value": "Your not admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c",
																"typeString": "literal_string \"Your not admin\""
															}
														],
														"id": 91,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "279:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "279:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 102,
												"nodeType": "ExpressionStatement",
												"src": "279:77:1"
											},
											{
												"id": 103,
												"nodeType": "PlaceholderStatement",
												"src": "367:1:1"
											}
										]
									},
									"id": 105,
									"name": "onlyOwner",
									"nameLocation": "255:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "265:2:1"
									},
									"src": "246:130:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "515:121:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Role_$198",
																"typeString": "enum structures.Role"
															},
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 108,
																		"name": "structUsers_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 219,
																		"src": "534:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$214_storage_$",
																			"typeString": "mapping(address => struct structures.structUser storage ref)"
																		}
																	},
																	"id": 111,
																	"indexExpression": {
																		"expression": {
																			"id": 109,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "547:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "547:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "534:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_structUser_$214_storage",
																		"typeString": "struct structures.structUser storage ref"
																	}
																},
																"id": 112,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "role",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 201,
																"src": "534:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$198",
																	"typeString": "enum structures.Role"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 113,
																	"name": "Role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "567:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Role_$198_$",
																		"typeString": "type(enum structures.Role)"
																	}
																},
																"id": 114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "SYSTEM_PRIVATE",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 195,
																"src": "567:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$198",
																	"typeString": "enum structures.Role"
																}
															},
															"src": "534:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7572206e6f7420507269766174652070726f7669646572",
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "588:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad6ae5da5b217b421ac93ea0fbb3ab0e88f39844155489a92b15ef6af2ad2fc2",
																"typeString": "literal_string \"Your not Private provider\""
															},
															"value": "Your not Private provider"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad6ae5da5b217b421ac93ea0fbb3ab0e88f39844155489a92b15ef6af2ad2fc2",
																"typeString": "literal_string \"Your not Private provider\""
															}
														],
														"id": 107,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "526:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "526:90:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "526:90:1"
											},
											{
												"id": 119,
												"nodeType": "PlaceholderStatement",
												"src": "627:1:1"
											}
										]
									},
									"id": 121,
									"name": "onlyPrivateProvider",
									"nameLocation": "492:19:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:2:1"
									},
									"src": "483:153:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "807:191:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Role_$198",
																	"typeString": "enum structures.Role"
																},
																"id": 131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 124,
																			"name": "structUsers_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 219,
																			"src": "826:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$214_storage_$",
																				"typeString": "mapping(address => struct structures.structUser storage ref)"
																			}
																		},
																		"id": 127,
																		"indexExpression": {
																			"expression": {
																				"id": 125,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "839:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "839:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "826:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_structUser_$214_storage",
																			"typeString": "struct structures.structUser storage ref"
																		}
																	},
																	"id": 128,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "role",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "826:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$198",
																		"typeString": "enum structures.Role"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 129,
																		"name": "Role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 198,
																		"src": "859:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Role_$198_$",
																			"typeString": "type(enum structures.Role)"
																		}
																	},
																	"id": 130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "SYSTEM_OWNER",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 193,
																	"src": "859:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$198",
																		"typeString": "enum structures.Role"
																	}
																},
																"src": "826:50:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Role_$198",
																	"typeString": "enum structures.Role"
																},
																"id": 139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 132,
																			"name": "structUsers_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 219,
																			"src": "880:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$214_storage_$",
																				"typeString": "mapping(address => struct structures.structUser storage ref)"
																			}
																		},
																		"id": 135,
																		"indexExpression": {
																			"expression": {
																				"id": 133,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "893:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 134,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "893:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "880:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_structUser_$214_storage",
																			"typeString": "struct structures.structUser storage ref"
																		}
																	},
																	"id": 136,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "role",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "880:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$198",
																		"typeString": "enum structures.Role"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 137,
																		"name": "Role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 198,
																		"src": "913:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Role_$198_$",
																			"typeString": "type(enum structures.Role)"
																		}
																	},
																	"id": 138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "SYSTEM_PRIVATE",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 195,
																	"src": "913:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$198",
																		"typeString": "enum structures.Role"
																	}
																},
																"src": "880:52:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "826:106:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420746865206f776e6572206f7220707269766174652070726f7669646572",
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "934:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9",
																"typeString": "literal_string \"You are not the owner or private provider\""
															},
															"value": "You are not the owner or private provider"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9",
																"typeString": "literal_string \"You are not the owner or private provider\""
															}
														],
														"id": 123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "818:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "818:160:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "818:160:1"
											},
											{
												"id": 144,
												"nodeType": "PlaceholderStatement",
												"src": "989:1:1"
											}
										]
									},
									"id": 146,
									"name": "onlyOwnerAndPrivateProvider",
									"nameLocation": "776:27:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "804:2:1"
									},
									"src": "767:231:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "1151:368:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_enum$_Role_$198",
																			"typeString": "enum structures.Role"
																		},
																		"id": 156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 149,
																					"name": "structUsers_",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 219,
																					"src": "1184:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$214_storage_$",
																						"typeString": "mapping(address => struct structures.structUser storage ref)"
																					}
																				},
																				"id": 152,
																				"indexExpression": {
																					"expression": {
																						"id": 150,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "1197:3:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 151,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "1197:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1184:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_structUser_$214_storage",
																					"typeString": "struct structures.structUser storage ref"
																				}
																			},
																			"id": 153,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "role",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 201,
																			"src": "1184:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Role_$198",
																				"typeString": "enum structures.Role"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 154,
																				"name": "Role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 198,
																				"src": "1217:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_Role_$198_$",
																					"typeString": "type(enum structures.Role)"
																				}
																			},
																			"id": 155,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "SYSTEM_OWNER",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 193,
																			"src": "1217:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Role_$198",
																				"typeString": "enum structures.Role"
																			}
																		},
																		"src": "1184:50:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_enum$_Role_$198",
																			"typeString": "enum structures.Role"
																		},
																		"id": 164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 157,
																					"name": "structUsers_",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 219,
																					"src": "1251:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$214_storage_$",
																						"typeString": "mapping(address => struct structures.structUser storage ref)"
																					}
																				},
																				"id": 160,
																				"indexExpression": {
																					"expression": {
																						"id": 158,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "1264:3:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 159,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "1264:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1251:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_structUser_$214_storage",
																					"typeString": "struct structures.structUser storage ref"
																				}
																			},
																			"id": 161,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "role",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 201,
																			"src": "1251:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Role_$198",
																				"typeString": "enum structures.Role"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 162,
																				"name": "Role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 198,
																				"src": "1284:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_Role_$198_$",
																					"typeString": "type(enum structures.Role)"
																				}
																			},
																			"id": 163,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "SYSTEM_PUBLIC",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 194,
																			"src": "1284:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Role_$198",
																				"typeString": "enum structures.Role"
																			}
																		},
																		"src": "1251:51:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "1184:118:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_Role_$198",
																		"typeString": "enum structures.Role"
																	},
																	"id": 173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 166,
																				"name": "structUsers_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 219,
																				"src": "1319:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$214_storage_$",
																					"typeString": "mapping(address => struct structures.structUser storage ref)"
																				}
																			},
																			"id": 169,
																			"indexExpression": {
																				"expression": {
																					"id": 167,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "1332:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 168,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "1332:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1319:24:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_structUser_$214_storage",
																				"typeString": "struct structures.structUser storage ref"
																			}
																		},
																		"id": 170,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "role",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 201,
																		"src": "1319:29:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Role_$198",
																			"typeString": "enum structures.Role"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"expression": {
																			"id": 171,
																			"name": "Role",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 198,
																			"src": "1352:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_Role_$198_$",
																				"typeString": "type(enum structures.Role)"
																			}
																		},
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "SYSTEM_PRIVATE",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 195,
																		"src": "1352:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Role_$198",
																			"typeString": "enum structures.Role"
																		}
																	},
																	"src": "1319:52:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1184:187:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Role_$198",
																	"typeString": "enum structures.Role"
																},
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 175,
																			"name": "structUsers_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 219,
																			"src": "1388:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$214_storage_$",
																				"typeString": "mapping(address => struct structures.structUser storage ref)"
																			}
																		},
																		"id": 178,
																		"indexExpression": {
																			"expression": {
																				"id": 176,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1401:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 177,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1401:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1388:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_structUser_$214_storage",
																			"typeString": "struct structures.structUser storage ref"
																		}
																	},
																	"id": 179,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "role",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "1388:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$198",
																		"typeString": "enum structures.Role"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"expression": {
																		"id": 180,
																		"name": "Role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 198,
																		"src": "1421:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Role_$198_$",
																			"typeString": "type(enum structures.Role)"
																		}
																	},
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "INVESTOR",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 196,
																	"src": "1421:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$198",
																		"typeString": "enum structures.Role"
																	}
																},
																"src": "1388:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1184:250:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4170706c69636174696f6e2063616e206f6e6c79206265207375626d697474656420627920726567756c6172207573657273",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1436:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8eee8f3e1b78fc84a03ad9368aed0f5d5ffbe790cbbf5be7c05b10e873c56608",
																"typeString": "literal_string \"Application can only be submitted by regular users\""
															},
															"value": "Application can only be submitted by regular users"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8eee8f3e1b78fc84a03ad9368aed0f5d5ffbe790cbbf5be7c05b10e873c56608",
																"typeString": "literal_string \"Application can only be submitted by regular users\""
															}
														],
														"id": 148,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1162:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1162:337:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1162:337:1"
											},
											{
												"id": 187,
												"nodeType": "PlaceholderStatement",
												"src": "1510:1:1"
											}
										]
									},
									"id": 189,
									"name": "onlyUser",
									"nameLocation": "1139:8:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1148:2:1"
									},
									"src": "1130:389:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 191,
							"src": "107:1415:1",
							"usedErrors": []
						}
					],
					"src": "37:1485:1"
				},
				"id": 1
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol": {
				"ast": {
					"absolutePath": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol",
					"exportedSymbols": {
						"structures": [
							278
						]
					},
					"id": 279,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 192,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 278,
							"linearizedBaseContracts": [
								278
							],
							"name": "structures",
							"nameLocation": "81:10:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "structures.Role",
									"id": 198,
									"members": [
										{
											"id": 193,
											"name": "SYSTEM_OWNER",
											"nameLocation": "200:12:2",
											"nodeType": "EnumValue",
											"src": "200:12:2"
										},
										{
											"id": 194,
											"name": "SYSTEM_PUBLIC",
											"nameLocation": "223:13:2",
											"nodeType": "EnumValue",
											"src": "223:13:2"
										},
										{
											"id": 195,
											"name": "SYSTEM_PRIVATE",
											"nameLocation": "247:14:2",
											"nodeType": "EnumValue",
											"src": "247:14:2"
										},
										{
											"id": 196,
											"name": "INVESTOR",
											"nameLocation": "272:8:2",
											"nodeType": "EnumValue",
											"src": "272:8:2"
										},
										{
											"id": 197,
											"name": "USER",
											"nameLocation": "291:4:2",
											"nodeType": "EnumValue",
											"src": "291:4:2"
										}
									],
									"name": "Role",
									"nameLocation": "184:4:2",
									"nodeType": "EnumDefinition",
									"src": "179:123:2"
								},
								{
									"canonicalName": "structures.structUser",
									"id": 214,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "role",
											"nameLocation": "416:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 214,
											"src": "411:9:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_Role_$198",
												"typeString": "enum structures.Role"
											},
											"typeName": {
												"id": 200,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 199,
													"name": "Role",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 198,
													"src": "411:4:2"
												},
												"referencedDeclaration": 198,
												"src": "411:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Role_$198",
													"typeString": "enum structures.Role"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 203,
											"mutability": "mutable",
											"name": "login",
											"nameLocation": "466:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 214,
											"src": "459:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 202,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "459:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 205,
											"mutability": "mutable",
											"name": "password",
											"nameLocation": "515:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 214,
											"src": "507:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 204,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "507:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 207,
											"mutability": "mutable",
											"name": "balance_overall",
											"nameLocation": "565:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 214,
											"src": "557:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 206,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "557:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 209,
											"mutability": "mutable",
											"name": "balance_seed",
											"nameLocation": "626:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 214,
											"src": "618:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 208,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "618:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 211,
											"mutability": "mutable",
											"name": "balance_private",
											"nameLocation": "696:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 214,
											"src": "688:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 210,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "688:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 213,
											"mutability": "mutable",
											"name": "balance_public",
											"nameLocation": "769:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 214,
											"src": "761:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 212,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "761:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "structUser",
									"nameLocation": "389:10:2",
									"nodeType": "StructDefinition",
									"scope": 278,
									"src": "382:448:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 219,
									"mutability": "mutable",
									"name": "structUsers_",
									"nameLocation": "868:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 278,
									"src": "836:44:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$214_storage_$",
										"typeString": "mapping(address => struct structures.structUser)"
									},
									"typeName": {
										"id": 218,
										"keyType": {
											"id": 215,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "845:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "836:31:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$214_storage_$",
											"typeString": "mapping(address => struct structures.structUser)"
										},
										"valueType": {
											"id": 217,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 216,
												"name": "structUser",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 214,
												"src": "856:10:2"
											},
											"referencedDeclaration": 214,
											"src": "856:10:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_structUser_$214_storage_ptr",
												"typeString": "struct structures.structUser"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 225,
									"mutability": "mutable",
									"name": "allowed",
									"nameLocation": "1000:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 278,
									"src": "951:56:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 224,
										"keyType": {
											"id": 220,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "959:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "951:48:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 223,
											"keyType": {
												"id": 221,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "979:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "970:28:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 222,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "990:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "0761c8b9",
									"id": 228,
									"mutability": "mutable",
									"name": "tokenPrice_",
									"nameLocation": "1131:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 278,
									"src": "1116:38:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 226,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1116:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "373530303030303030",
										"id": 227,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1145:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_750000000_by_1",
											"typeString": "int_const 750000000"
										},
										"value": "750000000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "948942ad",
									"id": 231,
									"mutability": "mutable",
									"name": "tokenAmount_",
									"nameLocation": "1361:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 278,
									"src": "1349:33:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 229,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1349:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030303030",
										"id": 230,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1376:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000_by_1",
											"typeString": "int_const 100000"
										},
										"value": "100000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 234,
									"mutability": "constant",
									"name": "ownerAdr",
									"nameLocation": "1625:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 278,
									"src": "1608:70:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 232,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1608:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307835423338446136613730316335363835343564436663423033466342383735663536626564644334",
										"id": 233,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1636:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x5B38Da6a701c568545dCfcB03FcB875f56beddC4"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 237,
									"mutability": "constant",
									"name": "privateProviderAdr",
									"nameLocation": "1732:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 278,
									"src": "1715:80:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 235,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1715:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307841623834383346363464394336643145634639623834394165363737644433333135383335636232",
										"id": 236,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1753:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 240,
									"mutability": "constant",
									"name": "publicProviderAdr",
									"nameLocation": "1849:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 278,
									"src": "1832:79:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 238,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1832:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307834423230393933426334383131373765633745386635373163654361453841396532324330326462",
										"id": 239,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1869:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "structures.structPhase",
									"id": 245,
									"members": [
										{
											"constant": false,
											"id": 242,
											"mutability": "mutable",
											"name": "statusPhase",
											"nameLocation": "2038:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 245,
											"src": "2033:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 241,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2033:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 244,
											"mutability": "mutable",
											"name": "reviewed",
											"nameLocation": "2090:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 245,
											"src": "2085:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 243,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2085:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "structPhase",
									"nameLocation": "2010:11:2",
									"nodeType": "StructDefinition",
									"scope": 278,
									"src": "2003:157:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 250,
									"mutability": "mutable",
									"name": "structPhases_",
									"nameLocation": "2199:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 278,
									"src": "2166:46:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structPhase_$245_storage_$",
										"typeString": "mapping(address => struct structures.structPhase)"
									},
									"typeName": {
										"id": 249,
										"keyType": {
											"id": 246,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2175:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2166:32:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structPhase_$245_storage_$",
											"typeString": "mapping(address => struct structures.structPhase)"
										},
										"valueType": {
											"id": 248,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 247,
												"name": "structPhase",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "2186:11:2"
											},
											"referencedDeclaration": 245,
											"src": "2186:11:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_structPhase_$245_storage_ptr",
												"typeString": "struct structures.structPhase"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "structures.structApplication",
									"id": 263,
									"members": [
										{
											"constant": false,
											"id": 252,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "2412:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 263,
											"src": "2405:11:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 251,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2405:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 254,
											"mutability": "mutable",
											"name": "contactForCommunication",
											"nameLocation": "2463:23:2",
											"nodeType": "VariableDeclaration",
											"scope": 263,
											"src": "2456:30:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 253,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2456:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 256,
											"mutability": "mutable",
											"name": "userAdr",
											"nameLocation": "2543:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 263,
											"src": "2535:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 255,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2535:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 258,
											"mutability": "mutable",
											"name": "status",
											"nameLocation": "2620:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 263,
											"src": "2615:11:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 257,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2615:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 260,
											"mutability": "mutable",
											"name": "reviewed",
											"nameLocation": "2690:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 263,
											"src": "2685:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 259,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2685:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 262,
											"mutability": "mutable",
											"name": "exist",
											"nameLocation": "2784:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 263,
											"src": "2779:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 261,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2779:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "structApplication",
									"nameLocation": "2376:17:2",
									"nodeType": "StructDefinition",
									"scope": 278,
									"src": "2369:485:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 268,
									"mutability": "mutable",
									"name": "strucApplications_",
									"nameLocation": "2899:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 278,
									"src": "2860:57:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structApplication_$263_storage_$",
										"typeString": "mapping(address => struct structures.structApplication)"
									},
									"typeName": {
										"id": 267,
										"keyType": {
											"id": 264,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2869:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2860:38:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structApplication_$263_storage_$",
											"typeString": "mapping(address => struct structures.structApplication)"
										},
										"valueType": {
											"id": 266,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 265,
												"name": "structApplication",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 263,
												"src": "2880:17:2"
											},
											"referencedDeclaration": 263,
											"src": "2880:17:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_structApplication_$263_storage_ptr",
												"typeString": "struct structures.structApplication"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 271,
									"mutability": "mutable",
									"name": "structApplicationsAmountAdr",
									"nameLocation": "2998:27:2",
									"nodeType": "VariableDeclaration",
									"scope": 278,
									"src": "2988:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 269,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2988:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 270,
										"nodeType": "ArrayTypeName",
										"src": "2988:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 274,
									"mutability": "mutable",
									"name": "whiteList",
									"nameLocation": "3142:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 278,
									"src": "3132:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 272,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3132:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 273,
										"nodeType": "ArrayTypeName",
										"src": "3132:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 277,
									"mutability": "mutable",
									"name": "blackList",
									"nameLocation": "3304:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 278,
									"src": "3294:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 275,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3294:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 276,
										"nodeType": "ArrayTypeName",
										"src": "3294:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								}
							],
							"scope": 279,
							"src": "72:3337:2",
							"usedErrors": []
						}
					],
					"src": "37:3372:2"
				},
				"id": 2
			}
		}
	}
}