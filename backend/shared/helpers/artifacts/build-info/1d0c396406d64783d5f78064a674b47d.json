{
	"id": "1d0c396406d64783d5f78064a674b47d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nimport \"./modifireFunc.sol\";\r\n\r\ncontract helpresFunc is modifireFunc {\r\n\r\n    // COMMENT_FUNC: Получения хэш-пароля.\r\n    function get_keccak256(string memory _hash) public pure returns(bytes32) {\r\n            return(keccak256(abi.encodePacked(_hash)));\r\n    }\r\n\r\n    // COMMENT_FUNC: Получение белого списка.\r\n    function get_whiteList() public onlyOwnerAndPrivateProvider view returns (address[] memory) {\r\n        return(whiteList);\r\n    }\r\n\r\n    // COMMENT_FUNC: Получение черного списка.\r\n    function get_blackList() public onlyOwner view returns (address[] memory) {\r\n        return(blackList);\r\n    }\r\n\r\n    // COMMENT_FUNC: Функция вернет текущий баланс SEED токенов.\r\n    function getBalanceSeedToken (address _userAdr) public view returns (uint256) {\r\n        return structUsers_[_userAdr].balance_seed;\r\n    }\r\n\r\n    // COMMENT_FUNC: Функция вернет текущий баланс PRIVATE токенов.\r\n    function getBalancePrivateToken (address _userAdr) public view returns (uint256) {\r\n        return structUsers_[_userAdr].balance_private;\r\n    }\r\n\r\n    // COMMENT_FUNC: Функция вернет текущий баланс PUBLIC токенов.\r\n    function getBalancePublicToken (address _userAdr) public view returns (uint256) {\r\n        return structUsers_[_userAdr].balance_public;\r\n    }\r\n}"
			},
			"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nimport \"../lib/structures.sol\";\r\n\r\ncontract modifireFunc is structures {\r\n    \r\n    // COMMENT_MOD: Модификатор проверка роли ВЛАДЕЛЬЦА.\r\n    modifier onlyOwner () {\r\n        require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER, \"Your not admin\");\r\n        _;\r\n    }\r\n\r\n    // COMMENT_MOD: Модификатор проверка роли PRIVAT ПРОВАЙДЕРА.\r\n    modifier onlyPrivateProvider () {\r\n        require(structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"Your not Private provider\");\r\n        _;\r\n    }\r\n\r\n    // COMMENT_MOD: Модификатор проверка роли PRIVAT ПРОВАЙДЕРА.\r\n    modifier onlyPublicProvider () {\r\n        require(structUsers_[msg.sender].role == Role.SYSTEM_PUBLIC, \"Your not Public provider\");\r\n        _;\r\n    }\r\n\r\n    // COMMENT_MOD: Модификатор проверки роли ВЛАДЕЛЬЦ или PRIVAT ПРОВАЙДЕРА.\r\n    modifier onlyOwnerAndPrivateProvider () {\r\n        require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER || structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"You are not the owner or private provider\");\r\n        _;\r\n    }\r\n\r\n    // COMMENT_MOD: Модификатор проверка того, что пользователь обычный user.\r\n    modifier onlyUser () {\r\n        require(\r\n            structUsers_[msg.sender].role != Role.SYSTEM_OWNER ||\r\n            structUsers_[msg.sender].role != Role.SYSTEM_PUBLIC ||\r\n            structUsers_[msg.sender].role != Role.SYSTEM_PRIVATE ||\r\n            structUsers_[msg.sender].role != Role.INVESTOR, \"Application can only be submitted by regular users\"\r\n        );\r\n        _;\r\n    }\r\n}"
			},
			"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\ncontract structures {\r\n    // COMMENT: Роли для структуры пользователей.\r\n    enum Role {\r\n        SYSTEM_OWNER,\r\n        SYSTEM_PUBLIC,\r\n        SYSTEM_PRIVATE,\r\n        INVESTOR,\r\n        USER\r\n    }\r\n\r\n    // COMMENT_SCTRUCT: Структура пользователей.\r\n    struct structUser {\r\n        Role role;               // роль  \r\n        string login;            // логин\r\n        bytes32 password;        // пароль\r\n        uint256 balance_overall; // общий баланс\r\n        uint256 balance_seed;    // баланс SEED токенов\r\n        uint256 balance_private; // баланс PRIVATE токенов\r\n        uint256 balance_public;  // баланс PUBLIC токенов\r\n    }\r\n    mapping (address => structUser) structUsers_; // обращение к структуре по АДРЕСАМ\r\n    mapping(address => mapping (address => uint256)) allowed; // делегированные пользоатели\r\n\r\n    // COMMENT: Цена за 1 токен.\r\n    uint256 public tokenPrice_ = 750000000; // 1 токен за 0.00075 ETH => 750000000; 0.001ETH => 1000000000 WEI; 0.002 => 2000000000 WEI | ЗНАЧЕНИЕ УКАЗЫВАЕТСЯ В WEI\r\n    \r\n    // COMMENT: Ограничение цены токена.\r\n    uint public tokenAmount_ = 100000; // кол-во, которое может купить токенов пользователь | private = 100 000 CMON; public = 5 000 CMON\r\n\r\n    // COMMENT: Набор начальних пользователей. \r\n    address constant ownerAdr = 0x8E4c24e134908f2334aeF88556Fc1Daaa075A56c;           // ВЛАДЕЛЕЦ\r\n    address constant privateProviderAdr = 0x4490cf36A8A491800B35140A07b4190b533fFcBf; // PRIVATE ПРОВАЙДЕР\r\n    address constant publicProviderAdr = 0x9699f352bA7A92E7C0Ff6924ED99602cddBA38dB;  // PUBLIC ПРОВАЙДЕР\r\n\r\n    // COMMENT_SCTRUC: Структура фазы.\r\n    struct structPhase {\r\n        bool statusPhase; // статус фазы\r\n        bool reviewed;    // была ли активирована фаза\r\n    }\r\n    mapping (address => structPhase) structPhases_; // обращение к структуре по АДРЕСАМ\r\n\r\n    // COMMENT_STRUCT: Структура заявок пользователей.\r\n    struct structApplication {\r\n        string name;                    // имя\r\n        string contactForCommunication; // контакты для связи\r\n        address userAdr;                // адрес пользователя\r\n        bool status;                    // статус заявки\r\n        bool reviewed;                  // была ли просмотрена заявка\r\n        bool exist;                     // заявка существует\r\n    }\r\n    mapping (address => structApplication) strucApplications_; // обращение к структуре по АДРЕСАМ\r\n    address[] structApplicationsAmountAdr;                     // массив пользователей, подавших заявление\r\n    address[] whiteList;                                       // белый лист прользователей, которым одобрили заявки\r\n    address[] blackList;                                       // черный лист полльзователей\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol": {
				"helpresFunc": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAdr",
									"type": "address"
								}
							],
							"name": "getBalancePrivateToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAdr",
									"type": "address"
								}
							],
							"name": "getBalancePublicToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAdr",
									"type": "address"
								}
							],
							"name": "getBalanceSeedToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_blackList",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_hash",
									"type": "string"
								}
							],
							"name": "get_keccak256",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_whiteList",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAmount_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenPrice_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":104:1498  contract helpresFunc is modifireFunc {\r... */\n  mstore(0x40, 0x80)\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1145:1154  750000000 */\n  0x2cb41780\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1116:1154  uint256 public tokenPrice_ = 750000000 */\n  0x02\n  sstore\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1405:1411  100000 */\n  0x0186a0\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1378:1411  uint public tokenAmount_ = 100000 */\n  0x03\n  sstore\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":104:1498  contract helpresFunc is modifireFunc {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":104:1498  contract helpresFunc is modifireFunc {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8e4f8c6b\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x8e4f8c6b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x948942ad\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb06cdc12\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xc10e3911\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x0761c8b9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2599d6d0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x72f0d72b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x7f89128f\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1116:1154  uint256 public tokenPrice_ = 750000000 */\n    tag_3:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":849:988  function getBalanceSeedToken (address _userAdr) public view returns (uint256) {\r... */\n    tag_4:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1352:1495  function getBalancePublicToken (address _userAdr) public view returns (uint256) {\r... */\n    tag_5:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":632:742  function get_blackList() public onlyOwner view returns (address[] memory) {\r... */\n    tag_6:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":212:350  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n    tag_7:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1378:1411  uint public tokenAmount_ = 100000 */\n    tag_8:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1098:1243  function getBalancePrivateToken (address _userAdr) public view returns (uint256) {\r... */\n    tag_9:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":426:554  function get_whiteList() public onlyOwnerAndPrivateProvider view returns (address[] memory) {\r... */\n    tag_10:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1116:1154  uint256 public tokenPrice_ = 750000000 */\n    tag_13:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":849:988  function getBalanceSeedToken (address _userAdr) public view returns (uint256) {\r... */\n    tag_19:\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":918:925  uint256 */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":945:957  structUsers_ */\n      dup1\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":945:967  structUsers_[_userAdr] */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":958:966  _userAdr */\n      dup4\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":945:967  structUsers_[_userAdr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":945:980  structUsers_[_userAdr].balance_seed */\n      0x04\n      add\n      sload\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":938:980  return structUsers_[_userAdr].balance_seed */\n      swap1\n      pop\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":849:988  function getBalanceSeedToken (address _userAdr) public view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1352:1495  function getBalancePublicToken (address _userAdr) public view returns (uint256) {\r... */\n    tag_23:\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1423:1430  uint256 */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1450:1462  structUsers_ */\n      dup1\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1450:1472  structUsers_[_userAdr] */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1463:1471  _userAdr */\n      dup4\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1450:1472  structUsers_[_userAdr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1450:1487  structUsers_[_userAdr].balance_public */\n      0x06\n      add\n      sload\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1443:1487  return structUsers_[_userAdr].balance_public */\n      swap1\n      pop\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1352:1495  function getBalancePublicToken (address _userAdr) public view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":632:742  function get_blackList() public onlyOwner view returns (address[] memory) {\r... */\n    tag_26:\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":688:704  address[] memory */\n      0x60\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":320:337  Role.SYSTEM_OWNER */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":287:337  structUsers_[msg.sender].role == Role.SYSTEM_OWNER */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_48\n      jumpi\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n    tag_48:\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":287:299  structUsers_ */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":287:311  structUsers_[msg.sender] */\n      dup1\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":300:310  msg.sender */\n      caller\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":287:311  structUsers_[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":287:316  structUsers_[msg.sender].role */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":287:337  structUsers_[msg.sender].role == Role.SYSTEM_OWNER */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_51\n      jumpi\n      tag_52\n      tag_50\n      jump\t// in\n    tag_52:\n    tag_51:\n      eq\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":279:356  require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER, \"Your not admin\") */\n      tag_53\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_53:\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":724:733  blackList */\n      0x08\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":717:734  return(blackList) */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_58:\n      dup2\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_58\n      jumpi\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":632:742  function get_blackList() public onlyOwner view returns (address[] memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":212:350  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n    tag_32:\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":276:283  bytes32 */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":334:339  _hash */\n      dup2\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":317:340  abi.encodePacked(_hash) */\n      add(0x20, mload(0x40))\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":307:341  keccak256(abi.encodePacked(_hash)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":300:342  return(keccak256(abi.encodePacked(_hash))) */\n      swap1\n      pop\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":212:350  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1378:1411  uint public tokenAmount_ = 100000 */\n    tag_36:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1098:1243  function getBalancePrivateToken (address _userAdr) public view returns (uint256) {\r... */\n    tag_40:\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1170:1177  uint256 */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1197:1209  structUsers_ */\n      dup1\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1197:1219  structUsers_[_userAdr] */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1210:1218  _userAdr */\n      dup4\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1197:1219  structUsers_[_userAdr] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1197:1235  structUsers_[_userAdr].balance_private */\n      0x05\n      add\n      sload\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1190:1235  return structUsers_[_userAdr].balance_private */\n      swap1\n      pop\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1098:1243  function getBalancePrivateToken (address _userAdr) public view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":426:554  function get_whiteList() public onlyOwnerAndPrivateProvider view returns (address[] memory) {\r... */\n    tag_43:\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":500:516  address[] memory */\n      0x60\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1116:1133  Role.SYSTEM_OWNER */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1083:1133  structUsers_[msg.sender].role == Role.SYSTEM_OWNER */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_64\n      jumpi\n      tag_65\n      tag_50\n      jump\t// in\n    tag_65:\n    tag_64:\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1083:1095  structUsers_ */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1083:1107  structUsers_[msg.sender] */\n      dup1\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1096:1106  msg.sender */\n      caller\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1083:1107  structUsers_[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1083:1112  structUsers_[msg.sender].role */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1083:1133  structUsers_[msg.sender].role == Role.SYSTEM_OWNER */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_66\n      jumpi\n      tag_67\n      tag_50\n      jump\t// in\n    tag_67:\n    tag_66:\n      eq\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1083:1189  structUsers_[msg.sender].role == Role.SYSTEM_OWNER || structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE */\n      dup1\n      tag_68\n      jumpi\n      pop\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1170:1189  Role.SYSTEM_PRIVATE */\n      0x02\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1137:1189  structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_69\n      jumpi\n      tag_70\n      tag_50\n      jump\t// in\n    tag_70:\n    tag_69:\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1137:1149  structUsers_ */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1137:1161  structUsers_[msg.sender] */\n      dup1\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1150:1160  msg.sender */\n      caller\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1137:1161  structUsers_[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1137:1166  structUsers_[msg.sender].role */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1137:1189  structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_71\n      jumpi\n      tag_72\n      tag_50\n      jump\t// in\n    tag_72:\n    tag_71:\n      eq\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1083:1189  structUsers_[msg.sender].role == Role.SYSTEM_OWNER || structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE */\n    tag_68:\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1075:1235  require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER || structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"You are not the owner or private provider\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_73:\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":536:545  whiteList */\n      0x07\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":529:546  return(whiteList) */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_78:\n      dup2\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_78\n      jumpi\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":426:554  function get_whiteList() public onlyOwnerAndPrivateProvider view returns (address[] memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:419   */\n    tag_80:\n        /* \"#utility.yul\":85:90   */\n      0x00\n        /* \"#utility.yul\":110:176   */\n      tag_82\n        /* \"#utility.yul\":126:175   */\n      tag_83\n        /* \"#utility.yul\":168:174   */\n      dup5\n        /* \"#utility.yul\":126:175   */\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":110:176   */\n      tag_85\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":101:176   */\n      swap1\n      pop\n        /* \"#utility.yul\":199:205   */\n      dup3\n        /* \"#utility.yul\":192:197   */\n      dup2\n        /* \"#utility.yul\":185:206   */\n      mstore\n        /* \"#utility.yul\":237:241   */\n      0x20\n        /* \"#utility.yul\":230:235   */\n      dup2\n        /* \"#utility.yul\":226:242   */\n      add\n        /* \"#utility.yul\":275:278   */\n      dup5\n        /* \"#utility.yul\":266:272   */\n      dup5\n        /* \"#utility.yul\":261:264   */\n      dup5\n        /* \"#utility.yul\":257:273   */\n      add\n        /* \"#utility.yul\":254:279   */\n      gt\n        /* \"#utility.yul\":251:363   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":282:361   */\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":251:363   */\n    tag_86:\n        /* \"#utility.yul\":372:413   */\n      tag_89\n        /* \"#utility.yul\":406:412   */\n      dup5\n        /* \"#utility.yul\":401:404   */\n      dup3\n        /* \"#utility.yul\":396:399   */\n      dup6\n        /* \"#utility.yul\":372:413   */\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":91:419   */\n      pop\n        /* \"#utility.yul\":7:419   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":425:564   */\n    tag_91:\n        /* \"#utility.yul\":471:476   */\n      0x00\n        /* \"#utility.yul\":509:515   */\n      dup2\n        /* \"#utility.yul\":496:516   */\n      calldataload\n        /* \"#utility.yul\":487:516   */\n      swap1\n      pop\n        /* \"#utility.yul\":525:558   */\n      tag_93\n        /* \"#utility.yul\":552:557   */\n      dup2\n        /* \"#utility.yul\":525:558   */\n      tag_94\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":425:564   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":584:924   */\n    tag_95:\n        /* \"#utility.yul\":640:645   */\n      0x00\n        /* \"#utility.yul\":689:692   */\n      dup3\n        /* \"#utility.yul\":682:686   */\n      0x1f\n        /* \"#utility.yul\":674:680   */\n      dup4\n        /* \"#utility.yul\":670:687   */\n      add\n        /* \"#utility.yul\":666:693   */\n      slt\n        /* \"#utility.yul\":656:778   */\n      tag_97\n      jumpi\n        /* \"#utility.yul\":697:776   */\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":656:778   */\n    tag_97:\n        /* \"#utility.yul\":814:820   */\n      dup2\n        /* \"#utility.yul\":801:821   */\n      calldataload\n        /* \"#utility.yul\":839:918   */\n      tag_100\n        /* \"#utility.yul\":914:917   */\n      dup5\n        /* \"#utility.yul\":906:912   */\n      dup3\n        /* \"#utility.yul\":899:903   */\n      0x20\n        /* \"#utility.yul\":891:897   */\n      dup7\n        /* \"#utility.yul\":887:904   */\n      add\n        /* \"#utility.yul\":839:918   */\n      tag_80\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":830:918   */\n      swap2\n      pop\n        /* \"#utility.yul\":646:924   */\n      pop\n        /* \"#utility.yul\":584:924   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":930:1259   */\n    tag_18:\n        /* \"#utility.yul\":989:995   */\n      0x00\n        /* \"#utility.yul\":1038:1040   */\n      0x20\n        /* \"#utility.yul\":1026:1035   */\n      dup3\n        /* \"#utility.yul\":1017:1024   */\n      dup5\n        /* \"#utility.yul\":1013:1036   */\n      sub\n        /* \"#utility.yul\":1009:1041   */\n      slt\n        /* \"#utility.yul\":1006:1125   */\n      iszero\n      tag_102\n      jumpi\n        /* \"#utility.yul\":1044:1123   */\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":1006:1125   */\n    tag_102:\n        /* \"#utility.yul\":1164:1165   */\n      0x00\n        /* \"#utility.yul\":1189:1242   */\n      tag_105\n        /* \"#utility.yul\":1234:1241   */\n      dup5\n        /* \"#utility.yul\":1225:1231   */\n      dup3\n        /* \"#utility.yul\":1214:1223   */\n      dup6\n        /* \"#utility.yul\":1210:1232   */\n      add\n        /* \"#utility.yul\":1189:1242   */\n      tag_91\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":1179:1242   */\n      swap2\n      pop\n        /* \"#utility.yul\":1135:1252   */\n      pop\n        /* \"#utility.yul\":930:1259   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1265:1774   */\n    tag_31:\n        /* \"#utility.yul\":1334:1340   */\n      0x00\n        /* \"#utility.yul\":1383:1385   */\n      0x20\n        /* \"#utility.yul\":1371:1380   */\n      dup3\n        /* \"#utility.yul\":1362:1369   */\n      dup5\n        /* \"#utility.yul\":1358:1381   */\n      sub\n        /* \"#utility.yul\":1354:1386   */\n      slt\n        /* \"#utility.yul\":1351:1470   */\n      iszero\n      tag_107\n      jumpi\n        /* \"#utility.yul\":1389:1468   */\n      tag_108\n      tag_104\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":1351:1470   */\n    tag_107:\n        /* \"#utility.yul\":1537:1538   */\n      0x00\n        /* \"#utility.yul\":1526:1535   */\n      dup3\n        /* \"#utility.yul\":1522:1539   */\n      add\n        /* \"#utility.yul\":1509:1540   */\n      calldataload\n        /* \"#utility.yul\":1567:1585   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1559:1565   */\n      dup2\n        /* \"#utility.yul\":1556:1586   */\n      gt\n        /* \"#utility.yul\":1553:1670   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":1589:1668   */\n      tag_110\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":1553:1670   */\n    tag_109:\n        /* \"#utility.yul\":1694:1757   */\n      tag_112\n        /* \"#utility.yul\":1749:1756   */\n      dup5\n        /* \"#utility.yul\":1740:1746   */\n      dup3\n        /* \"#utility.yul\":1729:1738   */\n      dup6\n        /* \"#utility.yul\":1725:1747   */\n      add\n        /* \"#utility.yul\":1694:1757   */\n      tag_95\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":1684:1757   */\n      swap2\n      pop\n        /* \"#utility.yul\":1480:1767   */\n      pop\n        /* \"#utility.yul\":1265:1774   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1780:1959   */\n    tag_113:\n        /* \"#utility.yul\":1849:1859   */\n      0x00\n        /* \"#utility.yul\":1870:1916   */\n      tag_115\n        /* \"#utility.yul\":1912:1915   */\n      dup4\n        /* \"#utility.yul\":1904:1910   */\n      dup4\n        /* \"#utility.yul\":1870:1916   */\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":1948:1952   */\n      0x20\n        /* \"#utility.yul\":1943:1946   */\n      dup4\n        /* \"#utility.yul\":1939:1953   */\n      add\n        /* \"#utility.yul\":1925:1953   */\n      swap1\n      pop\n        /* \"#utility.yul\":1780:1959   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1965:2073   */\n    tag_116:\n        /* \"#utility.yul\":2042:2066   */\n      tag_118\n        /* \"#utility.yul\":2060:2065   */\n      dup2\n        /* \"#utility.yul\":2042:2066   */\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":2037:2040   */\n      dup3\n        /* \"#utility.yul\":2030:2067   */\n      mstore\n        /* \"#utility.yul\":1965:2073   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2109:2841   */\n    tag_120:\n        /* \"#utility.yul\":2228:2231   */\n      0x00\n        /* \"#utility.yul\":2257:2311   */\n      tag_122\n        /* \"#utility.yul\":2305:2310   */\n      dup3\n        /* \"#utility.yul\":2257:2311   */\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":2327:2413   */\n      tag_124\n        /* \"#utility.yul\":2406:2412   */\n      dup2\n        /* \"#utility.yul\":2401:2404   */\n      dup6\n        /* \"#utility.yul\":2327:2413   */\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":2320:2413   */\n      swap4\n      pop\n        /* \"#utility.yul\":2437:2493   */\n      tag_126\n        /* \"#utility.yul\":2487:2492   */\n      dup4\n        /* \"#utility.yul\":2437:2493   */\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":2516:2523   */\n      dup1\n        /* \"#utility.yul\":2547:2548   */\n      0x00\n        /* \"#utility.yul\":2532:2816   */\n    tag_128:\n        /* \"#utility.yul\":2557:2563   */\n      dup4\n        /* \"#utility.yul\":2554:2555   */\n      dup2\n        /* \"#utility.yul\":2551:2564   */\n      lt\n        /* \"#utility.yul\":2532:2816   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":2633:2639   */\n      dup2\n        /* \"#utility.yul\":2627:2640   */\n      mload\n        /* \"#utility.yul\":2660:2723   */\n      tag_131\n        /* \"#utility.yul\":2719:2722   */\n      dup9\n        /* \"#utility.yul\":2704:2717   */\n      dup3\n        /* \"#utility.yul\":2660:2723   */\n      tag_113\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":2653:2723   */\n      swap8\n      pop\n        /* \"#utility.yul\":2746:2806   */\n      tag_132\n        /* \"#utility.yul\":2799:2805   */\n      dup4\n        /* \"#utility.yul\":2746:2806   */\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":2736:2806   */\n      swap3\n      pop\n        /* \"#utility.yul\":2592:2816   */\n      pop\n        /* \"#utility.yul\":2579:2580   */\n      0x01\n        /* \"#utility.yul\":2576:2577   */\n      dup2\n        /* \"#utility.yul\":2572:2581   */\n      add\n        /* \"#utility.yul\":2567:2581   */\n      swap1\n      pop\n        /* \"#utility.yul\":2532:2816   */\n      jump(tag_128)\n    tag_130:\n        /* \"#utility.yul\":2536:2550   */\n      pop\n        /* \"#utility.yul\":2832:2835   */\n      dup6\n        /* \"#utility.yul\":2825:2835   */\n      swap4\n      pop\n        /* \"#utility.yul\":2233:2841   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2109:2841   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2847:2965   */\n    tag_134:\n        /* \"#utility.yul\":2934:2958   */\n      tag_136\n        /* \"#utility.yul\":2952:2957   */\n      dup2\n        /* \"#utility.yul\":2934:2958   */\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":2929:2932   */\n      dup3\n        /* \"#utility.yul\":2922:2959   */\n      mstore\n        /* \"#utility.yul\":2847:2965   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2971:3348   */\n    tag_138:\n        /* \"#utility.yul\":3077:3080   */\n      0x00\n        /* \"#utility.yul\":3105:3144   */\n      tag_140\n        /* \"#utility.yul\":3138:3143   */\n      dup3\n        /* \"#utility.yul\":3105:3144   */\n      tag_141\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":3160:3249   */\n      tag_142\n        /* \"#utility.yul\":3242:3248   */\n      dup2\n        /* \"#utility.yul\":3237:3240   */\n      dup6\n        /* \"#utility.yul\":3160:3249   */\n      tag_143\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":3153:3249   */\n      swap4\n      pop\n        /* \"#utility.yul\":3258:3310   */\n      tag_144\n        /* \"#utility.yul\":3303:3309   */\n      dup2\n        /* \"#utility.yul\":3298:3301   */\n      dup6\n        /* \"#utility.yul\":3291:3295   */\n      0x20\n        /* \"#utility.yul\":3284:3289   */\n      dup7\n        /* \"#utility.yul\":3280:3296   */\n      add\n        /* \"#utility.yul\":3258:3310   */\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":3335:3341   */\n      dup1\n        /* \"#utility.yul\":3330:3333   */\n      dup5\n        /* \"#utility.yul\":3326:3342   */\n      add\n        /* \"#utility.yul\":3319:3342   */\n      swap2\n      pop\n        /* \"#utility.yul\":3081:3348   */\n      pop\n        /* \"#utility.yul\":2971:3348   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3354:3720   */\n    tag_146:\n        /* \"#utility.yul\":3496:3499   */\n      0x00\n        /* \"#utility.yul\":3517:3584   */\n      tag_148\n        /* \"#utility.yul\":3581:3583   */\n      0x29\n        /* \"#utility.yul\":3576:3579   */\n      dup4\n        /* \"#utility.yul\":3517:3584   */\n      tag_149\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":3510:3584   */\n      swap2\n      pop\n        /* \"#utility.yul\":3593:3686   */\n      tag_150\n        /* \"#utility.yul\":3682:3685   */\n      dup3\n        /* \"#utility.yul\":3593:3686   */\n      tag_151\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":3711:3713   */\n      0x40\n        /* \"#utility.yul\":3706:3709   */\n      dup3\n        /* \"#utility.yul\":3702:3714   */\n      add\n        /* \"#utility.yul\":3695:3714   */\n      swap1\n      pop\n        /* \"#utility.yul\":3354:3720   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3726:4092   */\n    tag_152:\n        /* \"#utility.yul\":3868:3871   */\n      0x00\n        /* \"#utility.yul\":3889:3956   */\n      tag_154\n        /* \"#utility.yul\":3953:3955   */\n      0x0e\n        /* \"#utility.yul\":3948:3951   */\n      dup4\n        /* \"#utility.yul\":3889:3956   */\n      tag_149\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":3882:3956   */\n      swap2\n      pop\n        /* \"#utility.yul\":3965:4058   */\n      tag_155\n        /* \"#utility.yul\":4054:4057   */\n      dup3\n        /* \"#utility.yul\":3965:4058   */\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":4083:4085   */\n      0x20\n        /* \"#utility.yul\":4078:4081   */\n      dup3\n        /* \"#utility.yul\":4074:4086   */\n      add\n        /* \"#utility.yul\":4067:4086   */\n      swap1\n      pop\n        /* \"#utility.yul\":3726:4092   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4098:4216   */\n    tag_157:\n        /* \"#utility.yul\":4185:4209   */\n      tag_159\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4185:4209   */\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":4180:4183   */\n      dup3\n        /* \"#utility.yul\":4173:4210   */\n      mstore\n        /* \"#utility.yul\":4098:4216   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4222:4497   */\n    tag_61:\n        /* \"#utility.yul\":4354:4357   */\n      0x00\n        /* \"#utility.yul\":4376:4471   */\n      tag_162\n        /* \"#utility.yul\":4467:4470   */\n      dup3\n        /* \"#utility.yul\":4458:4464   */\n      dup5\n        /* \"#utility.yul\":4376:4471   */\n      tag_138\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":4369:4471   */\n      swap2\n      pop\n        /* \"#utility.yul\":4488:4491   */\n      dup2\n        /* \"#utility.yul\":4481:4491   */\n      swap1\n      pop\n        /* \"#utility.yul\":4222:4497   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4503:4876   */\n    tag_28:\n        /* \"#utility.yul\":4646:4650   */\n      0x00\n        /* \"#utility.yul\":4684:4686   */\n      0x20\n        /* \"#utility.yul\":4673:4682   */\n      dup3\n        /* \"#utility.yul\":4669:4687   */\n      add\n        /* \"#utility.yul\":4661:4687   */\n      swap1\n      pop\n        /* \"#utility.yul\":4733:4742   */\n      dup2\n        /* \"#utility.yul\":4727:4731   */\n      dup2\n        /* \"#utility.yul\":4723:4743   */\n      sub\n        /* \"#utility.yul\":4719:4720   */\n      0x00\n        /* \"#utility.yul\":4708:4717   */\n      dup4\n        /* \"#utility.yul\":4704:4721   */\n      add\n        /* \"#utility.yul\":4697:4744   */\n      mstore\n        /* \"#utility.yul\":4761:4869   */\n      tag_164\n        /* \"#utility.yul\":4864:4868   */\n      dup2\n        /* \"#utility.yul\":4855:4861   */\n      dup5\n        /* \"#utility.yul\":4761:4869   */\n      tag_120\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":4753:4869   */\n      swap1\n      pop\n        /* \"#utility.yul\":4503:4876   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4882:5104   */\n    tag_34:\n        /* \"#utility.yul\":4975:4979   */\n      0x00\n        /* \"#utility.yul\":5013:5015   */\n      0x20\n        /* \"#utility.yul\":5002:5011   */\n      dup3\n        /* \"#utility.yul\":4998:5016   */\n      add\n        /* \"#utility.yul\":4990:5016   */\n      swap1\n      pop\n        /* \"#utility.yul\":5026:5097   */\n      tag_166\n        /* \"#utility.yul\":5094:5095   */\n      0x00\n        /* \"#utility.yul\":5083:5092   */\n      dup4\n        /* \"#utility.yul\":5079:5096   */\n      add\n        /* \"#utility.yul\":5070:5076   */\n      dup5\n        /* \"#utility.yul\":5026:5097   */\n      tag_134\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":4882:5104   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5110:5529   */\n    tag_75:\n        /* \"#utility.yul\":5276:5280   */\n      0x00\n        /* \"#utility.yul\":5314:5316   */\n      0x20\n        /* \"#utility.yul\":5303:5312   */\n      dup3\n        /* \"#utility.yul\":5299:5317   */\n      add\n        /* \"#utility.yul\":5291:5317   */\n      swap1\n      pop\n        /* \"#utility.yul\":5363:5372   */\n      dup2\n        /* \"#utility.yul\":5357:5361   */\n      dup2\n        /* \"#utility.yul\":5353:5373   */\n      sub\n        /* \"#utility.yul\":5349:5350   */\n      0x00\n        /* \"#utility.yul\":5338:5347   */\n      dup4\n        /* \"#utility.yul\":5334:5351   */\n      add\n        /* \"#utility.yul\":5327:5374   */\n      mstore\n        /* \"#utility.yul\":5391:5522   */\n      tag_168\n        /* \"#utility.yul\":5517:5521   */\n      dup2\n        /* \"#utility.yul\":5391:5522   */\n      tag_146\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":5383:5522   */\n      swap1\n      pop\n        /* \"#utility.yul\":5110:5529   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5535:5954   */\n    tag_55:\n        /* \"#utility.yul\":5701:5705   */\n      0x00\n        /* \"#utility.yul\":5739:5741   */\n      0x20\n        /* \"#utility.yul\":5728:5737   */\n      dup3\n        /* \"#utility.yul\":5724:5742   */\n      add\n        /* \"#utility.yul\":5716:5742   */\n      swap1\n      pop\n        /* \"#utility.yul\":5788:5797   */\n      dup2\n        /* \"#utility.yul\":5782:5786   */\n      dup2\n        /* \"#utility.yul\":5778:5798   */\n      sub\n        /* \"#utility.yul\":5774:5775   */\n      0x00\n        /* \"#utility.yul\":5763:5772   */\n      dup4\n        /* \"#utility.yul\":5759:5776   */\n      add\n        /* \"#utility.yul\":5752:5799   */\n      mstore\n        /* \"#utility.yul\":5816:5947   */\n      tag_170\n        /* \"#utility.yul\":5942:5946   */\n      dup2\n        /* \"#utility.yul\":5816:5947   */\n      tag_152\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":5808:5947   */\n      swap1\n      pop\n        /* \"#utility.yul\":5535:5954   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5960:6182   */\n    tag_15:\n        /* \"#utility.yul\":6053:6057   */\n      0x00\n        /* \"#utility.yul\":6091:6093   */\n      0x20\n        /* \"#utility.yul\":6080:6089   */\n      dup3\n        /* \"#utility.yul\":6076:6094   */\n      add\n        /* \"#utility.yul\":6068:6094   */\n      swap1\n      pop\n        /* \"#utility.yul\":6104:6175   */\n      tag_172\n        /* \"#utility.yul\":6172:6173   */\n      0x00\n        /* \"#utility.yul\":6161:6170   */\n      dup4\n        /* \"#utility.yul\":6157:6174   */\n      add\n        /* \"#utility.yul\":6148:6154   */\n      dup5\n        /* \"#utility.yul\":6104:6175   */\n      tag_157\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":5960:6182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6188:6317   */\n    tag_85:\n        /* \"#utility.yul\":6222:6228   */\n      0x00\n        /* \"#utility.yul\":6249:6269   */\n      tag_174\n      tag_175\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":6239:6269   */\n      swap1\n      pop\n        /* \"#utility.yul\":6278:6311   */\n      tag_176\n        /* \"#utility.yul\":6306:6310   */\n      dup3\n        /* \"#utility.yul\":6298:6304   */\n      dup3\n        /* \"#utility.yul\":6278:6311   */\n      tag_177\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":6188:6317   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6323:6398   */\n    tag_175:\n        /* \"#utility.yul\":6356:6362   */\n      0x00\n        /* \"#utility.yul\":6389:6391   */\n      0x40\n        /* \"#utility.yul\":6383:6392   */\n      mload\n        /* \"#utility.yul\":6373:6392   */\n      swap1\n      pop\n        /* \"#utility.yul\":6323:6398   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":6404:6712   */\n    tag_84:\n        /* \"#utility.yul\":6466:6470   */\n      0x00\n        /* \"#utility.yul\":6556:6574   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6548:6554   */\n      dup3\n        /* \"#utility.yul\":6545:6575   */\n      gt\n        /* \"#utility.yul\":6542:6598   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":6578:6596   */\n      tag_181\n      tag_182\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":6542:6598   */\n    tag_180:\n        /* \"#utility.yul\":6616:6645   */\n      tag_183\n        /* \"#utility.yul\":6638:6644   */\n      dup3\n        /* \"#utility.yul\":6616:6645   */\n      tag_184\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":6608:6645   */\n      swap1\n      pop\n        /* \"#utility.yul\":6700:6704   */\n      0x20\n        /* \"#utility.yul\":6694:6698   */\n      dup2\n        /* \"#utility.yul\":6690:6705   */\n      add\n        /* \"#utility.yul\":6682:6705   */\n      swap1\n      pop\n        /* \"#utility.yul\":6404:6712   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6718:6850   */\n    tag_127:\n        /* \"#utility.yul\":6785:6789   */\n      0x00\n        /* \"#utility.yul\":6808:6811   */\n      dup2\n        /* \"#utility.yul\":6800:6811   */\n      swap1\n      pop\n        /* \"#utility.yul\":6838:6842   */\n      0x20\n        /* \"#utility.yul\":6833:6836   */\n      dup3\n        /* \"#utility.yul\":6829:6843   */\n      add\n        /* \"#utility.yul\":6821:6843   */\n      swap1\n      pop\n        /* \"#utility.yul\":6718:6850   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6856:6970   */\n    tag_123:\n        /* \"#utility.yul\":6923:6929   */\n      0x00\n        /* \"#utility.yul\":6957:6962   */\n      dup2\n        /* \"#utility.yul\":6951:6963   */\n      mload\n        /* \"#utility.yul\":6941:6963   */\n      swap1\n      pop\n        /* \"#utility.yul\":6856:6970   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6976:7075   */\n    tag_141:\n        /* \"#utility.yul\":7028:7034   */\n      0x00\n        /* \"#utility.yul\":7062:7067   */\n      dup2\n        /* \"#utility.yul\":7056:7068   */\n      mload\n        /* \"#utility.yul\":7046:7068   */\n      swap1\n      pop\n        /* \"#utility.yul\":6976:7075   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7081:7194   */\n    tag_133:\n        /* \"#utility.yul\":7151:7155   */\n      0x00\n        /* \"#utility.yul\":7183:7187   */\n      0x20\n        /* \"#utility.yul\":7178:7181   */\n      dup3\n        /* \"#utility.yul\":7174:7188   */\n      add\n        /* \"#utility.yul\":7166:7188   */\n      swap1\n      pop\n        /* \"#utility.yul\":7081:7194   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7200:7384   */\n    tag_125:\n        /* \"#utility.yul\":7299:7310   */\n      0x00\n        /* \"#utility.yul\":7333:7339   */\n      dup3\n        /* \"#utility.yul\":7328:7331   */\n      dup3\n        /* \"#utility.yul\":7321:7340   */\n      mstore\n        /* \"#utility.yul\":7373:7377   */\n      0x20\n        /* \"#utility.yul\":7368:7371   */\n      dup3\n        /* \"#utility.yul\":7364:7378   */\n      add\n        /* \"#utility.yul\":7349:7378   */\n      swap1\n      pop\n        /* \"#utility.yul\":7200:7384   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7390:7559   */\n    tag_149:\n        /* \"#utility.yul\":7474:7485   */\n      0x00\n        /* \"#utility.yul\":7508:7514   */\n      dup3\n        /* \"#utility.yul\":7503:7506   */\n      dup3\n        /* \"#utility.yul\":7496:7515   */\n      mstore\n        /* \"#utility.yul\":7548:7552   */\n      0x20\n        /* \"#utility.yul\":7543:7546   */\n      dup3\n        /* \"#utility.yul\":7539:7553   */\n      add\n        /* \"#utility.yul\":7524:7553   */\n      swap1\n      pop\n        /* \"#utility.yul\":7390:7559   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7565:7713   */\n    tag_143:\n        /* \"#utility.yul\":7667:7678   */\n      0x00\n        /* \"#utility.yul\":7704:7707   */\n      dup2\n        /* \"#utility.yul\":7689:7707   */\n      swap1\n      pop\n        /* \"#utility.yul\":7565:7713   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7719:7815   */\n    tag_119:\n        /* \"#utility.yul\":7756:7763   */\n      0x00\n        /* \"#utility.yul\":7785:7809   */\n      tag_193\n        /* \"#utility.yul\":7803:7808   */\n      dup3\n        /* \"#utility.yul\":7785:7809   */\n      tag_194\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":7774:7809   */\n      swap1\n      pop\n        /* \"#utility.yul\":7719:7815   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7821:7898   */\n    tag_137:\n        /* \"#utility.yul\":7858:7865   */\n      0x00\n        /* \"#utility.yul\":7887:7892   */\n      dup2\n        /* \"#utility.yul\":7876:7892   */\n      swap1\n      pop\n        /* \"#utility.yul\":7821:7898   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7904:8030   */\n    tag_194:\n        /* \"#utility.yul\":7941:7948   */\n      0x00\n        /* \"#utility.yul\":7981:8023   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7974:7979   */\n      dup3\n        /* \"#utility.yul\":7970:8024   */\n      and\n        /* \"#utility.yul\":7959:8024   */\n      swap1\n      pop\n        /* \"#utility.yul\":7904:8030   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8036:8113   */\n    tag_160:\n        /* \"#utility.yul\":8073:8080   */\n      0x00\n        /* \"#utility.yul\":8102:8107   */\n      dup2\n        /* \"#utility.yul\":8091:8107   */\n      swap1\n      pop\n        /* \"#utility.yul\":8036:8113   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8119:8273   */\n    tag_90:\n        /* \"#utility.yul\":8203:8209   */\n      dup3\n        /* \"#utility.yul\":8198:8201   */\n      dup2\n        /* \"#utility.yul\":8193:8196   */\n      dup4\n        /* \"#utility.yul\":8180:8210   */\n      calldatacopy\n        /* \"#utility.yul\":8265:8266   */\n      0x00\n        /* \"#utility.yul\":8256:8262   */\n      dup4\n        /* \"#utility.yul\":8251:8254   */\n      dup4\n        /* \"#utility.yul\":8247:8263   */\n      add\n        /* \"#utility.yul\":8240:8267   */\n      mstore\n        /* \"#utility.yul\":8119:8273   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8279:8586   */\n    tag_145:\n        /* \"#utility.yul\":8347:8348   */\n      0x00\n        /* \"#utility.yul\":8357:8470   */\n    tag_200:\n        /* \"#utility.yul\":8371:8377   */\n      dup4\n        /* \"#utility.yul\":8368:8369   */\n      dup2\n        /* \"#utility.yul\":8365:8378   */\n      lt\n        /* \"#utility.yul\":8357:8470   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":8456:8457   */\n      dup1\n        /* \"#utility.yul\":8451:8454   */\n      dup3\n        /* \"#utility.yul\":8447:8458   */\n      add\n        /* \"#utility.yul\":8441:8459   */\n      mload\n        /* \"#utility.yul\":8437:8438   */\n      dup2\n        /* \"#utility.yul\":8432:8435   */\n      dup5\n        /* \"#utility.yul\":8428:8439   */\n      add\n        /* \"#utility.yul\":8421:8460   */\n      mstore\n        /* \"#utility.yul\":8393:8395   */\n      0x20\n        /* \"#utility.yul\":8390:8391   */\n      dup2\n        /* \"#utility.yul\":8386:8396   */\n      add\n        /* \"#utility.yul\":8381:8396   */\n      swap1\n      pop\n        /* \"#utility.yul\":8357:8470   */\n      jump(tag_200)\n    tag_202:\n        /* \"#utility.yul\":8488:8494   */\n      dup4\n        /* \"#utility.yul\":8485:8486   */\n      dup2\n        /* \"#utility.yul\":8482:8495   */\n      gt\n        /* \"#utility.yul\":8479:8580   */\n      iszero\n      tag_203\n      jumpi\n        /* \"#utility.yul\":8568:8569   */\n      0x00\n        /* \"#utility.yul\":8559:8565   */\n      dup5\n        /* \"#utility.yul\":8554:8557   */\n      dup5\n        /* \"#utility.yul\":8550:8566   */\n      add\n        /* \"#utility.yul\":8543:8570   */\n      mstore\n        /* \"#utility.yul\":8479:8580   */\n    tag_203:\n        /* \"#utility.yul\":8328:8586   */\n      pop\n        /* \"#utility.yul\":8279:8586   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8592:8873   */\n    tag_177:\n        /* \"#utility.yul\":8675:8702   */\n      tag_205\n        /* \"#utility.yul\":8697:8701   */\n      dup3\n        /* \"#utility.yul\":8675:8702   */\n      tag_184\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":8667:8673   */\n      dup2\n        /* \"#utility.yul\":8663:8703   */\n      add\n        /* \"#utility.yul\":8805:8811   */\n      dup2\n        /* \"#utility.yul\":8793:8803   */\n      dup2\n        /* \"#utility.yul\":8790:8812   */\n      lt\n        /* \"#utility.yul\":8769:8787   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8757:8767   */\n      dup3\n        /* \"#utility.yul\":8754:8788   */\n      gt\n        /* \"#utility.yul\":8751:8813   */\n      or\n        /* \"#utility.yul\":8748:8836   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":8816:8834   */\n      tag_207\n      tag_182\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":8748:8836   */\n    tag_206:\n        /* \"#utility.yul\":8856:8866   */\n      dup1\n        /* \"#utility.yul\":8852:8854   */\n      0x40\n        /* \"#utility.yul\":8845:8867   */\n      mstore\n        /* \"#utility.yul\":8635:8873   */\n      pop\n        /* \"#utility.yul\":8592:8873   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8879:9059   */\n    tag_50:\n        /* \"#utility.yul\":8927:9004   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8924:8925   */\n      0x00\n        /* \"#utility.yul\":8917:9005   */\n      mstore\n        /* \"#utility.yul\":9024:9028   */\n      0x21\n        /* \"#utility.yul\":9021:9022   */\n      0x04\n        /* \"#utility.yul\":9014:9029   */\n      mstore\n        /* \"#utility.yul\":9048:9052   */\n      0x24\n        /* \"#utility.yul\":9045:9046   */\n      0x00\n        /* \"#utility.yul\":9038:9053   */\n      revert\n        /* \"#utility.yul\":9065:9245   */\n    tag_182:\n        /* \"#utility.yul\":9113:9190   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9110:9111   */\n      0x00\n        /* \"#utility.yul\":9103:9191   */\n      mstore\n        /* \"#utility.yul\":9210:9214   */\n      0x41\n        /* \"#utility.yul\":9207:9208   */\n      0x04\n        /* \"#utility.yul\":9200:9215   */\n      mstore\n        /* \"#utility.yul\":9234:9238   */\n      0x24\n        /* \"#utility.yul\":9231:9232   */\n      0x00\n        /* \"#utility.yul\":9224:9239   */\n      revert\n        /* \"#utility.yul\":9251:9368   */\n    tag_99:\n        /* \"#utility.yul\":9360:9361   */\n      0x00\n        /* \"#utility.yul\":9357:9358   */\n      dup1\n        /* \"#utility.yul\":9350:9362   */\n      revert\n        /* \"#utility.yul\":9374:9491   */\n    tag_88:\n        /* \"#utility.yul\":9483:9484   */\n      0x00\n        /* \"#utility.yul\":9480:9481   */\n      dup1\n        /* \"#utility.yul\":9473:9485   */\n      revert\n        /* \"#utility.yul\":9497:9614   */\n    tag_111:\n        /* \"#utility.yul\":9606:9607   */\n      0x00\n        /* \"#utility.yul\":9603:9604   */\n      dup1\n        /* \"#utility.yul\":9596:9608   */\n      revert\n        /* \"#utility.yul\":9620:9737   */\n    tag_104:\n        /* \"#utility.yul\":9729:9730   */\n      0x00\n        /* \"#utility.yul\":9726:9727   */\n      dup1\n        /* \"#utility.yul\":9719:9731   */\n      revert\n        /* \"#utility.yul\":9743:9845   */\n    tag_184:\n        /* \"#utility.yul\":9784:9790   */\n      0x00\n        /* \"#utility.yul\":9835:9837   */\n      0x1f\n        /* \"#utility.yul\":9831:9838   */\n      not\n        /* \"#utility.yul\":9826:9828   */\n      0x1f\n        /* \"#utility.yul\":9819:9824   */\n      dup4\n        /* \"#utility.yul\":9815:9829   */\n      add\n        /* \"#utility.yul\":9811:9839   */\n      and\n        /* \"#utility.yul\":9801:9839   */\n      swap1\n      pop\n        /* \"#utility.yul\":9743:9845   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9851:10079   */\n    tag_151:\n        /* \"#utility.yul\":9991:10025   */\n      0x596f7520617265206e6f7420746865206f776e6572206f722070726976617465\n        /* \"#utility.yul\":9987:9988   */\n      0x00\n        /* \"#utility.yul\":9979:9985   */\n      dup3\n        /* \"#utility.yul\":9975:9989   */\n      add\n        /* \"#utility.yul\":9968:10026   */\n      mstore\n        /* \"#utility.yul\":10060:10071   */\n      0x2070726f76696465720000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10055:10057   */\n      0x20\n        /* \"#utility.yul\":10047:10053   */\n      dup3\n        /* \"#utility.yul\":10043:10058   */\n      add\n        /* \"#utility.yul\":10036:10072   */\n      mstore\n        /* \"#utility.yul\":9851:10079   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10085:10249   */\n    tag_156:\n        /* \"#utility.yul\":10225:10241   */\n      0x596f7572206e6f742061646d696e000000000000000000000000000000000000\n        /* \"#utility.yul\":10221:10222   */\n      0x00\n        /* \"#utility.yul\":10213:10219   */\n      dup3\n        /* \"#utility.yul\":10209:10223   */\n      add\n        /* \"#utility.yul\":10202:10242   */\n      mstore\n        /* \"#utility.yul\":10085:10249   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10255:10377   */\n    tag_94:\n        /* \"#utility.yul\":10328:10352   */\n      tag_218\n        /* \"#utility.yul\":10346:10351   */\n      dup2\n        /* \"#utility.yul\":10328:10352   */\n      tag_119\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":10321:10326   */\n      dup2\n        /* \"#utility.yul\":10318:10353   */\n      eq\n        /* \"#utility.yul\":10308:10371   */\n      tag_219\n      jumpi\n        /* \"#utility.yul\":10367:10368   */\n      0x00\n        /* \"#utility.yul\":10364:10365   */\n      dup1\n        /* \"#utility.yul\":10357:10369   */\n      revert\n        /* \"#utility.yul\":10308:10371   */\n    tag_219:\n        /* \"#utility.yul\":10255:10377   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203b021c840f1362465e55f25d37bc43e2642acf2332d2beefc020100482bc034a64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052632cb41780600255620186a060035534801561001f57600080fd5b50610b608061002f6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638e4f8c6b1161005b5780638e4f8c6b14610129578063948942ad14610159578063b06cdc1214610177578063c10e3911146101a757610088565b80630761c8b91461008d5780632599d6d0146100ab57806372f0d72b146100db5780637f89128f1461010b575b600080fd5b6100956101c5565b6040516100a2919061088e565b60405180910390f35b6100c560048036038101906100c0919061066a565b6101cb565b6040516100d2919061088e565b60405180910390f35b6100f560048036038101906100f0919061066a565b610216565b604051610102919061088e565b60405180910390f35b610113610261565b6040516101209190610811565b60405180910390f35b610143600480360381019061013e9190610697565b6103a4565b6040516101509190610833565b60405180910390f35b6101616103d4565b60405161016e919061088e565b60405180910390f35b610191600480360381019061018c919061066a565b6103da565b60405161019e919061088e565b60405180910390f35b6101af610425565b6040516101bc9190610811565b60405180910390f35b60025481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401549050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601549050919050565b60606000600481111561027757610276610a18565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1660048111156102d8576102d7610a18565b5b14610318576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030f9061086e565b60405180910390fd5b600880548060200260200160405190810160405280929190818152602001828054801561039a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610350575b5050505050905090565b6000816040516020016103b791906107fa565b604051602081830303815290604052805190602001209050919050565b60035481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501549050919050565b60606000600481111561043b5761043a610a18565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16600481111561049c5761049b610a18565b5b148061051a5750600260048111156104b7576104b6610a18565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16600481111561051857610517610a18565b5b145b610559576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105509061084e565b60405180910390fd5b60078054806020026020016040519081016040528092919081815260200182805480156105db57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610591575b5050505050905090565b60006105f86105f3846108ce565b6108a9565b90508281526020810184848401111561061457610613610a7b565b5b61061f8482856109a5565b509392505050565b60008135905061063681610b13565b92915050565b600082601f83011261065157610650610a76565b5b81356106618482602086016105e5565b91505092915050565b6000602082840312156106805761067f610a85565b5b600061068e84828501610627565b91505092915050565b6000602082840312156106ad576106ac610a85565b5b600082013567ffffffffffffffff8111156106cb576106ca610a80565b5b6106d78482850161063c565b91505092915050565b60006106ec83836106f8565b60208301905092915050565b6107018161095f565b82525050565b60006107128261090f565b61071c8185610932565b9350610727836108ff565b8060005b8381101561075857815161073f88826106e0565b975061074a83610925565b92505060018101905061072b565b5085935050505092915050565b61076e81610971565b82525050565b600061077f8261091a565b6107898185610954565b93506107998185602086016109b4565b80840191505092915050565b60006107b2602983610943565b91506107bd82610a9b565b604082019050919050565b60006107d5600e83610943565b91506107e082610aea565b602082019050919050565b6107f48161099b565b82525050565b60006108068284610774565b915081905092915050565b6000602082019050818103600083015261082b8184610707565b905092915050565b60006020820190506108486000830184610765565b92915050565b60006020820190508181036000830152610867816107a5565b9050919050565b60006020820190508181036000830152610887816107c8565b9050919050565b60006020820190506108a360008301846107eb565b92915050565b60006108b36108c4565b90506108bf82826109e7565b919050565b6000604051905090565b600067ffffffffffffffff8211156108e9576108e8610a47565b5b6108f282610a8a565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061096a8261097b565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156109d25780820151818401526020810190506109b7565b838111156109e1576000848401525b50505050565b6109f082610a8a565b810181811067ffffffffffffffff82111715610a0f57610a0e610a47565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f596f7520617265206e6f7420746865206f776e6572206f72207072697661746560008201527f2070726f76696465720000000000000000000000000000000000000000000000602082015250565b7f596f7572206e6f742061646d696e000000000000000000000000000000000000600082015250565b610b1c8161095f565b8114610b2757600080fd5b5056fea26469706673582212203b021c840f1362465e55f25d37bc43e2642acf2332d2beefc020100482bc034a64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH4 0x2CB41780 PUSH1 0x2 SSTORE PUSH3 0x186A0 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB60 DUP1 PUSH2 0x2F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E4F8C6B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8E4F8C6B EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x948942AD EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0xB06CDC12 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0xC10E3911 EQ PUSH2 0x1A7 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x761C8B9 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x2599D6D0 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x72F0D72B EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x7F89128F EQ PUSH2 0x10B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x1C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x66A JUMP JUMPDEST PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x66A JUMP JUMPDEST PUSH2 0x216 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x113 PUSH2 0x261 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x811 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x143 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x697 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x191 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x66A JUMP JUMPDEST PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AF PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x811 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x277 JUMPI PUSH2 0x276 PUSH2 0xA18 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2D8 JUMPI PUSH2 0x2D7 PUSH2 0xA18 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x318 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30F SWAP1 PUSH2 0x86E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x350 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x43B JUMPI PUSH2 0x43A PUSH2 0xA18 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x49C JUMPI PUSH2 0x49B PUSH2 0xA18 JUMP JUMPDEST JUMPDEST EQ DUP1 PUSH2 0x51A JUMPI POP PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x4B7 JUMPI PUSH2 0x4B6 PUSH2 0xA18 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x518 JUMPI PUSH2 0x517 PUSH2 0xA18 JUMP JUMPDEST JUMPDEST EQ JUMPDEST PUSH2 0x559 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x550 SWAP1 PUSH2 0x84E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x5DB JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x591 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F8 PUSH2 0x5F3 DUP5 PUSH2 0x8CE JUMP JUMPDEST PUSH2 0x8A9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x614 JUMPI PUSH2 0x613 PUSH2 0xA7B JUMP JUMPDEST JUMPDEST PUSH2 0x61F DUP5 DUP3 DUP6 PUSH2 0x9A5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x636 DUP2 PUSH2 0xB13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x651 JUMPI PUSH2 0x650 PUSH2 0xA76 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x661 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x5E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x680 JUMPI PUSH2 0x67F PUSH2 0xA85 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x68E DUP5 DUP3 DUP6 ADD PUSH2 0x627 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6AD JUMPI PUSH2 0x6AC PUSH2 0xA85 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CB JUMPI PUSH2 0x6CA PUSH2 0xA80 JUMP JUMPDEST JUMPDEST PUSH2 0x6D7 DUP5 DUP3 DUP6 ADD PUSH2 0x63C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6EC DUP4 DUP4 PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x701 DUP2 PUSH2 0x95F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x712 DUP3 PUSH2 0x90F JUMP JUMPDEST PUSH2 0x71C DUP2 DUP6 PUSH2 0x932 JUMP JUMPDEST SWAP4 POP PUSH2 0x727 DUP4 PUSH2 0x8FF JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x758 JUMPI DUP2 MLOAD PUSH2 0x73F DUP9 DUP3 PUSH2 0x6E0 JUMP JUMPDEST SWAP8 POP PUSH2 0x74A DUP4 PUSH2 0x925 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x72B JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x76E DUP2 PUSH2 0x971 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77F DUP3 PUSH2 0x91A JUMP JUMPDEST PUSH2 0x789 DUP2 DUP6 PUSH2 0x954 JUMP JUMPDEST SWAP4 POP PUSH2 0x799 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x9B4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B2 PUSH1 0x29 DUP4 PUSH2 0x943 JUMP JUMPDEST SWAP2 POP PUSH2 0x7BD DUP3 PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D5 PUSH1 0xE DUP4 PUSH2 0x943 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E0 DUP3 PUSH2 0xAEA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7F4 DUP2 PUSH2 0x99B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x806 DUP3 DUP5 PUSH2 0x774 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x82B DUP2 DUP5 PUSH2 0x707 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x848 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x765 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x867 DUP2 PUSH2 0x7A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x887 DUP2 PUSH2 0x7C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B3 PUSH2 0x8C4 JUMP JUMPDEST SWAP1 POP PUSH2 0x8BF DUP3 DUP3 PUSH2 0x9E7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x8E9 JUMPI PUSH2 0x8E8 PUSH2 0xA47 JUMP JUMPDEST JUMPDEST PUSH2 0x8F2 DUP3 PUSH2 0xA8A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x96A DUP3 PUSH2 0x97B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9D2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x9B7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x9E1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x9F0 DUP3 PUSH2 0xA8A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xA0F JUMPI PUSH2 0xA0E PUSH2 0xA47 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420746865206F776E6572206F722070726976617465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2070726F76696465720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F7572206E6F742061646D696E000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xB1C DUP2 PUSH2 0x95F JUMP JUMPDEST DUP2 EQ PUSH2 0xB27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE MUL SHR DUP5 0xF SGT PUSH3 0x465E55 CALLCODE 0x5D CALLDATACOPY 0xBC NUMBER 0xE2 PUSH5 0x2ACF2332D2 0xBE 0xEF 0xC0 KECCAK256 LT DIV DUP3 0xBC SUB 0x4A PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "104:1394:0:-:0;;;1145:9:2;1116:38;;1405:6;1378:33;;104:1394:0;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getBalancePrivateToken_70": {
									"entryPoint": 986,
									"id": 70,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBalancePublicToken_83": {
									"entryPoint": 534,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBalanceSeedToken_57": {
									"entryPoint": 459,
									"id": 57,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@get_blackList_44": {
									"entryPoint": 609,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@get_keccak256_20": {
									"entryPoint": 932,
									"id": 20,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@get_whiteList_32": {
									"entryPoint": 1061,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenAmount__247": {
									"entryPoint": 980,
									"id": 247,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenPrice__244": {
									"entryPoint": 453,
									"id": 244,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 1509,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 1596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 1687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 1760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 1784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 1799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 1893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 1908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 2065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 2099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 2244,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 2254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 2303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 2319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 2341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 2354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 2469,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 2484,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 2535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 2584,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2631,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2678,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 2683,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2688,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2693,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9": {
									"entryPoint": 2715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c": {
									"entryPoint": 2794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10380:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "91:328:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "101:75:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "168:6:3"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "126:41:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "126:49:3"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "110:15:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "110:66:3"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "101:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "192:5:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "199:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "185:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "185:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "185:21:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "215:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "230:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "237:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "226:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "226:16:3"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "219:3:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "280:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "282:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "282:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "282:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "261:3:3"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "266:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "257:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "257:16:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "275:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "254:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "254:25:3"
															},
															"nodeType": "YulIf",
															"src": "251:112:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "396:3:3"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "401:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "406:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "372:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "372:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "372:41:3"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "64:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "69:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "77:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "85:5:3",
														"type": ""
													}
												],
												"src": "7:412:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "477:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "487:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "509:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "496:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "496:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "487:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "552:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "525:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "525:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "525:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "455:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "463:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "471:5:3",
														"type": ""
													}
												],
												"src": "425:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "646:278:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "695:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "697:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "697:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "697:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "674:6:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "682:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "670:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "670:17:3"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "689:3:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "666:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "666:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "659:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "659:35:3"
															},
															"nodeType": "YulIf",
															"src": "656:122:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "787:34:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "814:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "801:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "801:20:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "791:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "830:88:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "891:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "899:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "887:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "887:17:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "906:6:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "914:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "839:47:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "839:79:3"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "830:5:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "624:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "632:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "640:5:3",
														"type": ""
													}
												],
												"src": "584:340:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "996:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1042:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1044:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1044:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1044:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1017:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1026:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1013:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1013:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1038:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1009:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1009:32:3"
															},
															"nodeType": "YulIf",
															"src": "1006:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1135:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1150:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1164:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1154:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1179:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1214:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1210:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1210:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1234:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1189:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1189:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1179:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "966:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "977:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "989:6:3",
														"type": ""
													}
												],
												"src": "930:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1341:433:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1387:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1389:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1389:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1389:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1362:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1371:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1358:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1358:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1383:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1354:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:32:3"
															},
															"nodeType": "YulIf",
															"src": "1351:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1480:287:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1495:45:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1526:9:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1537:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1522:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1522:17:3"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1509:12:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1509:31:3"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1499:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1587:83:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1589:77:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1589:79:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1589:79:3"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1559:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1567:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1556:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1556:30:3"
																	},
																	"nodeType": "YulIf",
																	"src": "1553:117:3"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1684:73:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1729:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1740:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1725:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1725:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1749:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1694:30:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1694:63:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1684:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1311:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1322:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1334:6:3",
														"type": ""
													}
												],
												"src": "1265:509:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:99:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1904:6:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1912:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1870:33:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1870:46:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1870:46:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1925:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1943:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1948:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1939:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1939:14:3"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "1925:10:3"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1833:6:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1841:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "1849:10:3",
														"type": ""
													}
												],
												"src": "1780:179:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2020:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2037:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2060:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2042:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2042:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2030:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2030:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2030:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2008:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2015:3:3",
														"type": ""
													}
												],
												"src": "1965:108:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2233:608:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2243:68:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2305:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2257:47:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2257:54:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2247:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2320:93:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2401:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2406:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2327:73:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2327:86:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2320:3:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2422:71:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2487:5:3"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2437:49:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2437:56:3"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "2426:7:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2502:21:3",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "2516:7:3"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "2506:6:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2592:224:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2606:34:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2633:6:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2627:5:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2627:13:3"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "2610:13:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2653:70:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "2704:13:3"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2719:3:3"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "2660:43:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2660:63:3"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2653:3:3"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2736:70:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2799:6:3"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "2746:52:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2746:60:3"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2736:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2554:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2557:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2551:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2551:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2565:18:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2567:14:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2576:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2579:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2572:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2572:9:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2567:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2536:14:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2538:10:3",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2547:1:3",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "2542:1:3",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "2532:284:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2825:10:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2832:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2825:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2212:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2219:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2228:3:3",
														"type": ""
													}
												],
												"src": "2109:732:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2912:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2929:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2952:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "2934:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2934:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2922:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2922:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2922:37:3"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2900:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2907:3:3",
														"type": ""
													}
												],
												"src": "2847:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3081:267:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3091:53:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3138:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3105:32:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3105:39:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3095:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3153:96:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3237:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3242:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3160:76:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3160:89:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3153:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3284:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3291:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3280:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3280:16:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3298:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3303:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3258:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3258:52:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3258:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3319:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3330:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3335:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3326:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3326:16:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3319:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3062:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3069:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3077:3:3",
														"type": ""
													}
												],
												"src": "2971:377:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3500:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3510:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3576:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3581:2:3",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3517:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3517:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3682:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9",
																	"nodeType": "YulIdentifier",
																	"src": "3593:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3593:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3593:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3695:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3706:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3711:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3702:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3702:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3695:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3488:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3496:3:3",
														"type": ""
													}
												],
												"src": "3354:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3872:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3882:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3948:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3953:2:3",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3889:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3889:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3882:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4054:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c",
																	"nodeType": "YulIdentifier",
																	"src": "3965:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3965:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3965:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4067:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4078:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4083:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4074:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4074:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4067:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3860:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3868:3:3",
														"type": ""
													}
												],
												"src": "3726:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4163:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4180:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4185:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4185:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4173:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4173:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4173:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4151:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4158:3:3",
														"type": ""
													}
												],
												"src": "4098:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4358:139:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4369:102:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4458:6:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4467:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4376:81:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4376:95:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4369:3:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4481:10:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4488:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4481:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4337:3:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4343:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4354:3:3",
														"type": ""
													}
												],
												"src": "4222:275:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4651:225:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4661:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4684:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4669:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4669:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4661:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4708:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4719:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4704:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4704:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4727:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4733:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4723:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4723:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4697:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4697:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4697:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4753:116:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4855:6:3"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4864:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4761:93:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4761:108:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4753:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4623:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4635:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4646:4:3",
														"type": ""
													}
												],
												"src": "4503:373:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4980:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4990:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5002:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5013:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4998:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4998:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4990:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5070:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5083:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5094:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5079:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5079:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5026:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5026:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5026:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4952:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4964:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4975:4:3",
														"type": ""
													}
												],
												"src": "4882:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5281:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5291:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5303:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5314:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5299:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5299:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5291:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5338:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5349:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5334:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5334:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5357:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5363:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5353:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5353:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5327:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5327:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5327:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5383:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5517:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5391:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5391:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5383:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5261:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5276:4:3",
														"type": ""
													}
												],
												"src": "5110:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5706:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5716:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5728:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5739:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5724:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5724:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5716:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5763:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5774:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5759:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5759:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5782:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5788:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5778:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5778:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5752:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5752:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5752:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5808:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5942:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5816:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5816:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5808:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5686:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5701:4:3",
														"type": ""
													}
												],
												"src": "5535:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6058:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6068:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6080:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6091:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6076:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6076:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6068:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6148:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6161:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6172:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6157:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6157:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6104:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6104:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6104:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6030:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6042:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6053:4:3",
														"type": ""
													}
												],
												"src": "5960:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6229:88:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6239:30:3",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "6249:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6249:20:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6239:6:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6298:6:3"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6306:4:3"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "6278:19:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6278:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6278:33:3"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6213:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6222:6:3",
														"type": ""
													}
												],
												"src": "6188:129:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6363:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6373:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6389:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6383:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6383:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6373:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6356:6:3",
														"type": ""
													}
												],
												"src": "6323:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6471:241:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6576:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6578:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6578:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6578:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6548:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6556:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6545:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6545:30:3"
															},
															"nodeType": "YulIf",
															"src": "6542:56:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6608:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6638:6:3"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "6616:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6616:29:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6608:4:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6682:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6694:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6700:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6690:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6690:15:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6682:4:3"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6455:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6466:4:3",
														"type": ""
													}
												],
												"src": "6404:308:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6790:60:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6800:11:3",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "6808:3:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6800:4:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6821:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "6833:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6838:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6829:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6829:14:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6821:4:3"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "6777:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6785:4:3",
														"type": ""
													}
												],
												"src": "6718:132:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6930:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6941:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6957:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6951:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6951:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6941:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6913:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6923:6:3",
														"type": ""
													}
												],
												"src": "6856:114:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7035:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7046:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7062:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7056:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7056:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7046:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7018:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7028:6:3",
														"type": ""
													}
												],
												"src": "6976:99:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7156:38:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7166:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "7178:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7183:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7174:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7174:14:3"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "7166:4:3"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "7143:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "7151:4:3",
														"type": ""
													}
												],
												"src": "7081:113:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7311:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7328:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7333:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7321:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7321:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7321:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7349:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7368:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7373:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7364:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7364:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7349:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7283:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7288:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7299:11:3",
														"type": ""
													}
												],
												"src": "7200:184:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7486:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7503:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7508:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7496:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7496:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7496:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7524:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7543:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7548:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7539:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7539:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7524:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7458:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7463:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7474:11:3",
														"type": ""
													}
												],
												"src": "7390:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7679:34:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7689:18:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7704:3:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7689:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7651:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7656:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7667:11:3",
														"type": ""
													}
												],
												"src": "7565:148:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7764:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7774:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7803:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "7785:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7785:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7774:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7746:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7756:7:3",
														"type": ""
													}
												],
												"src": "7719:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7866:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7876:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7887:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7876:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7848:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7858:7:3",
														"type": ""
													}
												],
												"src": "7821:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7949:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7959:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7974:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7981:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7970:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7970:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7959:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7931:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7941:7:3",
														"type": ""
													}
												],
												"src": "7904:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8081:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8091:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8102:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8091:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8063:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8073:7:3",
														"type": ""
													}
												],
												"src": "8036:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8170:103:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8193:3:3"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8198:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8203:6:3"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8180:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8180:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8180:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8251:3:3"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8256:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8247:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8247:16:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8265:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8240:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8240:27:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8240:27:3"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8152:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8157:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8162:6:3",
														"type": ""
													}
												],
												"src": "8119:154:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8328:258:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8338:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8347:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "8342:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8407:63:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "8432:3:3"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "8437:1:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8428:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8428:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "8451:3:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "8456:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8447:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8447:11:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "8441:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8441:18:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8421:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8421:39:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8421:39:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8368:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8371:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8365:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8365:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8379:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8381:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "8390:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8393:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8386:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8386:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "8381:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8361:3:3",
																"statements": []
															},
															"src": "8357:113:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8504:76:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "8554:3:3"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "8559:6:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8550:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8550:16:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8568:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8543:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8543:27:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8543:27:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8485:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8488:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8482:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8482:13:3"
															},
															"nodeType": "YulIf",
															"src": "8479:101:3"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8310:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8315:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8320:6:3",
														"type": ""
													}
												],
												"src": "8279:307:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8635:238:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8645:58:3",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "8667:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "8697:4:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "8675:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8675:27:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8663:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8663:40:3"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "8649:10:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8814:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8816:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8816:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8816:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8757:10:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8769:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8754:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8754:34:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8793:10:3"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8805:6:3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8790:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8790:22:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8751:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8751:62:3"
															},
															"nodeType": "YulIf",
															"src": "8748:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8852:2:3",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "8856:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8845:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8845:22:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8845:22:3"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8621:6:3",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "8629:4:3",
														"type": ""
													}
												],
												"src": "8592:281:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8907:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8924:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8927:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8917:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8917:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8917:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9021:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9024:4:3",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9014:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9014:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9014:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9045:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9048:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9038:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9038:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9038:15:3"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "8879:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9093:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9110:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9113:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9103:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9103:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9103:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9207:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9210:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9200:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9200:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9200:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9231:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9234:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9224:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9224:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9224:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "9065:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9340:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9357:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9360:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9350:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9350:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9350:12:3"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "9251:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9463:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9480:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9483:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9473:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9473:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9473:12:3"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "9374:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9586:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9603:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9606:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9596:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9596:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9596:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "9497:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9709:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9726:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9729:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9719:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9719:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9719:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "9620:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9791:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9801:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9819:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9826:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9815:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9815:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9835:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9831:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9831:7:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9811:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9811:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "9801:6:3"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9774:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "9784:6:3",
														"type": ""
													}
												],
												"src": "9743:102:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9957:122:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9979:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9987:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9975:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9975:14:3"
																	},
																	{
																		"hexValue": "596f7520617265206e6f7420746865206f776e6572206f722070726976617465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9991:34:3",
																		"type": "",
																		"value": "You are not the owner or private"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9968:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9968:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9968:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10047:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10055:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10043:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10043:15:3"
																	},
																	{
																		"hexValue": "2070726f7669646572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10060:11:3",
																		"type": "",
																		"value": " provider"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10036:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10036:36:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10036:36:3"
														}
													]
												},
												"name": "store_literal_in_memory_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9949:6:3",
														"type": ""
													}
												],
												"src": "9851:228:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10191:58:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10213:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10221:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10209:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10209:14:3"
																	},
																	{
																		"hexValue": "596f7572206e6f742061646d696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10225:16:3",
																		"type": "",
																		"value": "Your not admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10202:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10202:40:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10202:40:3"
														}
													]
												},
												"name": "store_literal_in_memory_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10183:6:3",
														"type": ""
													}
												],
												"src": "10085:164:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10298:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10355:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10364:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10367:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10357:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10357:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10357:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10321:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10346:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "10328:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10328:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10318:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10318:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10311:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10311:43:3"
															},
															"nodeType": "YulIf",
															"src": "10308:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10291:5:3",
														"type": ""
													}
												],
												"src": "10255:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_stringliteral_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9(memPtr) {\n\n        mstore(add(memPtr, 0), \"You are not the owner or private\")\n\n        mstore(add(memPtr, 32), \" provider\")\n\n    }\n\n    function store_literal_in_memory_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Your not admin\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c80638e4f8c6b1161005b5780638e4f8c6b14610129578063948942ad14610159578063b06cdc1214610177578063c10e3911146101a757610088565b80630761c8b91461008d5780632599d6d0146100ab57806372f0d72b146100db5780637f89128f1461010b575b600080fd5b6100956101c5565b6040516100a2919061088e565b60405180910390f35b6100c560048036038101906100c0919061066a565b6101cb565b6040516100d2919061088e565b60405180910390f35b6100f560048036038101906100f0919061066a565b610216565b604051610102919061088e565b60405180910390f35b610113610261565b6040516101209190610811565b60405180910390f35b610143600480360381019061013e9190610697565b6103a4565b6040516101509190610833565b60405180910390f35b6101616103d4565b60405161016e919061088e565b60405180910390f35b610191600480360381019061018c919061066a565b6103da565b60405161019e919061088e565b60405180910390f35b6101af610425565b6040516101bc9190610811565b60405180910390f35b60025481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401549050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601549050919050565b60606000600481111561027757610276610a18565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1660048111156102d8576102d7610a18565b5b14610318576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030f9061086e565b60405180910390fd5b600880548060200260200160405190810160405280929190818152602001828054801561039a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610350575b5050505050905090565b6000816040516020016103b791906107fa565b604051602081830303815290604052805190602001209050919050565b60035481565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501549050919050565b60606000600481111561043b5761043a610a18565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16600481111561049c5761049b610a18565b5b148061051a5750600260048111156104b7576104b6610a18565b5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16600481111561051857610517610a18565b5b145b610559576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105509061084e565b60405180910390fd5b60078054806020026020016040519081016040528092919081815260200182805480156105db57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610591575b5050505050905090565b60006105f86105f3846108ce565b6108a9565b90508281526020810184848401111561061457610613610a7b565b5b61061f8482856109a5565b509392505050565b60008135905061063681610b13565b92915050565b600082601f83011261065157610650610a76565b5b81356106618482602086016105e5565b91505092915050565b6000602082840312156106805761067f610a85565b5b600061068e84828501610627565b91505092915050565b6000602082840312156106ad576106ac610a85565b5b600082013567ffffffffffffffff8111156106cb576106ca610a80565b5b6106d78482850161063c565b91505092915050565b60006106ec83836106f8565b60208301905092915050565b6107018161095f565b82525050565b60006107128261090f565b61071c8185610932565b9350610727836108ff565b8060005b8381101561075857815161073f88826106e0565b975061074a83610925565b92505060018101905061072b565b5085935050505092915050565b61076e81610971565b82525050565b600061077f8261091a565b6107898185610954565b93506107998185602086016109b4565b80840191505092915050565b60006107b2602983610943565b91506107bd82610a9b565b604082019050919050565b60006107d5600e83610943565b91506107e082610aea565b602082019050919050565b6107f48161099b565b82525050565b60006108068284610774565b915081905092915050565b6000602082019050818103600083015261082b8184610707565b905092915050565b60006020820190506108486000830184610765565b92915050565b60006020820190508181036000830152610867816107a5565b9050919050565b60006020820190508181036000830152610887816107c8565b9050919050565b60006020820190506108a360008301846107eb565b92915050565b60006108b36108c4565b90506108bf82826109e7565b919050565b6000604051905090565b600067ffffffffffffffff8211156108e9576108e8610a47565b5b6108f282610a8a565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600061096a8261097b565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156109d25780820151818401526020810190506109b7565b838111156109e1576000848401525b50505050565b6109f082610a8a565b810181811067ffffffffffffffff82111715610a0f57610a0e610a47565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f596f7520617265206e6f7420746865206f776e6572206f72207072697661746560008201527f2070726f76696465720000000000000000000000000000000000000000000000602082015250565b7f596f7572206e6f742061646d696e000000000000000000000000000000000000600082015250565b610b1c8161095f565b8114610b2757600080fd5b5056fea26469706673582212203b021c840f1362465e55f25d37bc43e2642acf2332d2beefc020100482bc034a64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E4F8C6B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8E4F8C6B EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x948942AD EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0xB06CDC12 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0xC10E3911 EQ PUSH2 0x1A7 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x761C8B9 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x2599D6D0 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x72F0D72B EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x7F89128F EQ PUSH2 0x10B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x1C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x66A JUMP JUMPDEST PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x66A JUMP JUMPDEST PUSH2 0x216 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x113 PUSH2 0x261 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x811 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x143 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x697 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x191 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x66A JUMP JUMPDEST PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AF PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x811 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x277 JUMPI PUSH2 0x276 PUSH2 0xA18 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2D8 JUMPI PUSH2 0x2D7 PUSH2 0xA18 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x318 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30F SWAP1 PUSH2 0x86E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x350 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x43B JUMPI PUSH2 0x43A PUSH2 0xA18 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x49C JUMPI PUSH2 0x49B PUSH2 0xA18 JUMP JUMPDEST JUMPDEST EQ DUP1 PUSH2 0x51A JUMPI POP PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x4B7 JUMPI PUSH2 0x4B6 PUSH2 0xA18 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x518 JUMPI PUSH2 0x517 PUSH2 0xA18 JUMP JUMPDEST JUMPDEST EQ JUMPDEST PUSH2 0x559 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x550 SWAP1 PUSH2 0x84E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x5DB JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x591 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F8 PUSH2 0x5F3 DUP5 PUSH2 0x8CE JUMP JUMPDEST PUSH2 0x8A9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x614 JUMPI PUSH2 0x613 PUSH2 0xA7B JUMP JUMPDEST JUMPDEST PUSH2 0x61F DUP5 DUP3 DUP6 PUSH2 0x9A5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x636 DUP2 PUSH2 0xB13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x651 JUMPI PUSH2 0x650 PUSH2 0xA76 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x661 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x5E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x680 JUMPI PUSH2 0x67F PUSH2 0xA85 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x68E DUP5 DUP3 DUP6 ADD PUSH2 0x627 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6AD JUMPI PUSH2 0x6AC PUSH2 0xA85 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CB JUMPI PUSH2 0x6CA PUSH2 0xA80 JUMP JUMPDEST JUMPDEST PUSH2 0x6D7 DUP5 DUP3 DUP6 ADD PUSH2 0x63C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6EC DUP4 DUP4 PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x701 DUP2 PUSH2 0x95F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x712 DUP3 PUSH2 0x90F JUMP JUMPDEST PUSH2 0x71C DUP2 DUP6 PUSH2 0x932 JUMP JUMPDEST SWAP4 POP PUSH2 0x727 DUP4 PUSH2 0x8FF JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x758 JUMPI DUP2 MLOAD PUSH2 0x73F DUP9 DUP3 PUSH2 0x6E0 JUMP JUMPDEST SWAP8 POP PUSH2 0x74A DUP4 PUSH2 0x925 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x72B JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x76E DUP2 PUSH2 0x971 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77F DUP3 PUSH2 0x91A JUMP JUMPDEST PUSH2 0x789 DUP2 DUP6 PUSH2 0x954 JUMP JUMPDEST SWAP4 POP PUSH2 0x799 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x9B4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B2 PUSH1 0x29 DUP4 PUSH2 0x943 JUMP JUMPDEST SWAP2 POP PUSH2 0x7BD DUP3 PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D5 PUSH1 0xE DUP4 PUSH2 0x943 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E0 DUP3 PUSH2 0xAEA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7F4 DUP2 PUSH2 0x99B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x806 DUP3 DUP5 PUSH2 0x774 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x82B DUP2 DUP5 PUSH2 0x707 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x848 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x765 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x867 DUP2 PUSH2 0x7A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x887 DUP2 PUSH2 0x7C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B3 PUSH2 0x8C4 JUMP JUMPDEST SWAP1 POP PUSH2 0x8BF DUP3 DUP3 PUSH2 0x9E7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x8E9 JUMPI PUSH2 0x8E8 PUSH2 0xA47 JUMP JUMPDEST JUMPDEST PUSH2 0x8F2 DUP3 PUSH2 0xA8A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x96A DUP3 PUSH2 0x97B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9D2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x9B7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x9E1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x9F0 DUP3 PUSH2 0xA8A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xA0F JUMPI PUSH2 0xA0E PUSH2 0xA47 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420746865206F776E6572206F722070726976617465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2070726F76696465720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x596F7572206E6F742061646D696E000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xB1C DUP2 PUSH2 0x95F JUMP JUMPDEST DUP2 EQ PUSH2 0xB27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE MUL SHR DUP5 0xF SGT PUSH3 0x465E55 CALLCODE 0x5D CALLDATACOPY 0xBC NUMBER 0xE2 PUSH5 0x2ACF2332D2 0xBE 0xEF 0xC0 KECCAK256 LT DIV DUP3 0xBC SUB 0x4A PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "104:1394:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1116:38:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;849:139:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1352:143;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;632:110;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;212:138;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1378:33:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1098:145:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;426:128;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1116:38:2;;;;:::o;849:139:0:-;918:7;945:12;:22;958:8;945:22;;;;;;;;;;;;;;;:35;;;938:42;;849:139;;;:::o;1352:143::-;1423:7;1450:12;:22;1463:8;1450:22;;;;;;;;;;;;;;;:37;;;1443:44;;1352:143;;;:::o;632:110::-;688:16;320:17:1;287:50;;;;;;;;:::i;:::-;;:12;:24;300:10;287:24;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:50;;;;;;;;:::i;:::-;;;279:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;724:9:0::1;717:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;632:110:::0;:::o;212:138::-;276:7;334:5;317:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;307:34;;;;;;300:42;;212:138;;;:::o;1378:33:2:-;;;;:::o;1098:145:0:-;1170:7;1197:12;:22;1210:8;1197:22;;;;;;;;;;;;;;;:38;;;1190:45;;1098:145;;;:::o;426:128::-;500:16;1116:17:1;1083:50;;;;;;;;:::i;:::-;;:12;:24;1096:10;1083:24;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:50;;;;;;;;:::i;:::-;;;:106;;;;1170:19;1137:52;;;;;;;;:::i;:::-;;:12;:24;1150:10;1137:24;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:52;;;;;;;;:::i;:::-;;;1083:106;1075:160;;;;;;;;;;;;:::i;:::-;;;;;;;;;536:9:0::1;529:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;426:128:::0;:::o;7:412:3:-;85:5;110:66;126:49;168:6;126:49;:::i;:::-;110:66;:::i;:::-;101:75;;199:6;192:5;185:21;237:4;230:5;226:16;275:3;266:6;261:3;257:16;254:25;251:112;;;282:79;;:::i;:::-;251:112;372:41;406:6;401:3;396;372:41;:::i;:::-;91:328;7:412;;;;;:::o;425:139::-;471:5;509:6;496:20;487:29;;525:33;552:5;525:33;:::i;:::-;425:139;;;;:::o;584:340::-;640:5;689:3;682:4;674:6;670:17;666:27;656:122;;697:79;;:::i;:::-;656:122;814:6;801:20;839:79;914:3;906:6;899:4;891:6;887:17;839:79;:::i;:::-;830:88;;646:278;584:340;;;;:::o;930:329::-;989:6;1038:2;1026:9;1017:7;1013:23;1009:32;1006:119;;;1044:79;;:::i;:::-;1006:119;1164:1;1189:53;1234:7;1225:6;1214:9;1210:22;1189:53;:::i;:::-;1179:63;;1135:117;930:329;;;;:::o;1265:509::-;1334:6;1383:2;1371:9;1362:7;1358:23;1354:32;1351:119;;;1389:79;;:::i;:::-;1351:119;1537:1;1526:9;1522:17;1509:31;1567:18;1559:6;1556:30;1553:117;;;1589:79;;:::i;:::-;1553:117;1694:63;1749:7;1740:6;1729:9;1725:22;1694:63;:::i;:::-;1684:73;;1480:287;1265:509;;;;:::o;1780:179::-;1849:10;1870:46;1912:3;1904:6;1870:46;:::i;:::-;1948:4;1943:3;1939:14;1925:28;;1780:179;;;;:::o;1965:108::-;2042:24;2060:5;2042:24;:::i;:::-;2037:3;2030:37;1965:108;;:::o;2109:732::-;2228:3;2257:54;2305:5;2257:54;:::i;:::-;2327:86;2406:6;2401:3;2327:86;:::i;:::-;2320:93;;2437:56;2487:5;2437:56;:::i;:::-;2516:7;2547:1;2532:284;2557:6;2554:1;2551:13;2532:284;;;2633:6;2627:13;2660:63;2719:3;2704:13;2660:63;:::i;:::-;2653:70;;2746:60;2799:6;2746:60;:::i;:::-;2736:70;;2592:224;2579:1;2576;2572:9;2567:14;;2532:284;;;2536:14;2832:3;2825:10;;2233:608;;;2109:732;;;;:::o;2847:118::-;2934:24;2952:5;2934:24;:::i;:::-;2929:3;2922:37;2847:118;;:::o;2971:377::-;3077:3;3105:39;3138:5;3105:39;:::i;:::-;3160:89;3242:6;3237:3;3160:89;:::i;:::-;3153:96;;3258:52;3303:6;3298:3;3291:4;3284:5;3280:16;3258:52;:::i;:::-;3335:6;3330:3;3326:16;3319:23;;3081:267;2971:377;;;;:::o;3354:366::-;3496:3;3517:67;3581:2;3576:3;3517:67;:::i;:::-;3510:74;;3593:93;3682:3;3593:93;:::i;:::-;3711:2;3706:3;3702:12;3695:19;;3354:366;;;:::o;3726:::-;3868:3;3889:67;3953:2;3948:3;3889:67;:::i;:::-;3882:74;;3965:93;4054:3;3965:93;:::i;:::-;4083:2;4078:3;4074:12;4067:19;;3726:366;;;:::o;4098:118::-;4185:24;4203:5;4185:24;:::i;:::-;4180:3;4173:37;4098:118;;:::o;4222:275::-;4354:3;4376:95;4467:3;4458:6;4376:95;:::i;:::-;4369:102;;4488:3;4481:10;;4222:275;;;;:::o;4503:373::-;4646:4;4684:2;4673:9;4669:18;4661:26;;4733:9;4727:4;4723:20;4719:1;4708:9;4704:17;4697:47;4761:108;4864:4;4855:6;4761:108;:::i;:::-;4753:116;;4503:373;;;;:::o;4882:222::-;4975:4;5013:2;5002:9;4998:18;4990:26;;5026:71;5094:1;5083:9;5079:17;5070:6;5026:71;:::i;:::-;4882:222;;;;:::o;5110:419::-;5276:4;5314:2;5303:9;5299:18;5291:26;;5363:9;5357:4;5353:20;5349:1;5338:9;5334:17;5327:47;5391:131;5517:4;5391:131;:::i;:::-;5383:139;;5110:419;;;:::o;5535:::-;5701:4;5739:2;5728:9;5724:18;5716:26;;5788:9;5782:4;5778:20;5774:1;5763:9;5759:17;5752:47;5816:131;5942:4;5816:131;:::i;:::-;5808:139;;5535:419;;;:::o;5960:222::-;6053:4;6091:2;6080:9;6076:18;6068:26;;6104:71;6172:1;6161:9;6157:17;6148:6;6104:71;:::i;:::-;5960:222;;;;:::o;6188:129::-;6222:6;6249:20;;:::i;:::-;6239:30;;6278:33;6306:4;6298:6;6278:33;:::i;:::-;6188:129;;;:::o;6323:75::-;6356:6;6389:2;6383:9;6373:19;;6323:75;:::o;6404:308::-;6466:4;6556:18;6548:6;6545:30;6542:56;;;6578:18;;:::i;:::-;6542:56;6616:29;6638:6;6616:29;:::i;:::-;6608:37;;6700:4;6694;6690:15;6682:23;;6404:308;;;:::o;6718:132::-;6785:4;6808:3;6800:11;;6838:4;6833:3;6829:14;6821:22;;6718:132;;;:::o;6856:114::-;6923:6;6957:5;6951:12;6941:22;;6856:114;;;:::o;6976:99::-;7028:6;7062:5;7056:12;7046:22;;6976:99;;;:::o;7081:113::-;7151:4;7183;7178:3;7174:14;7166:22;;7081:113;;;:::o;7200:184::-;7299:11;7333:6;7328:3;7321:19;7373:4;7368:3;7364:14;7349:29;;7200:184;;;;:::o;7390:169::-;7474:11;7508:6;7503:3;7496:19;7548:4;7543:3;7539:14;7524:29;;7390:169;;;;:::o;7565:148::-;7667:11;7704:3;7689:18;;7565:148;;;;:::o;7719:96::-;7756:7;7785:24;7803:5;7785:24;:::i;:::-;7774:35;;7719:96;;;:::o;7821:77::-;7858:7;7887:5;7876:16;;7821:77;;;:::o;7904:126::-;7941:7;7981:42;7974:5;7970:54;7959:65;;7904:126;;;:::o;8036:77::-;8073:7;8102:5;8091:16;;8036:77;;;:::o;8119:154::-;8203:6;8198:3;8193;8180:30;8265:1;8256:6;8251:3;8247:16;8240:27;8119:154;;;:::o;8279:307::-;8347:1;8357:113;8371:6;8368:1;8365:13;8357:113;;;8456:1;8451:3;8447:11;8441:18;8437:1;8432:3;8428:11;8421:39;8393:2;8390:1;8386:10;8381:15;;8357:113;;;8488:6;8485:1;8482:13;8479:101;;;8568:1;8559:6;8554:3;8550:16;8543:27;8479:101;8328:258;8279:307;;;:::o;8592:281::-;8675:27;8697:4;8675:27;:::i;:::-;8667:6;8663:40;8805:6;8793:10;8790:22;8769:18;8757:10;8754:34;8751:62;8748:88;;;8816:18;;:::i;:::-;8748:88;8856:10;8852:2;8845:22;8635:238;8592:281;;:::o;8879:180::-;8927:77;8924:1;8917:88;9024:4;9021:1;9014:15;9048:4;9045:1;9038:15;9065:180;9113:77;9110:1;9103:88;9210:4;9207:1;9200:15;9234:4;9231:1;9224:15;9251:117;9360:1;9357;9350:12;9374:117;9483:1;9480;9473:12;9497:117;9606:1;9603;9596:12;9620:117;9729:1;9726;9719:12;9743:102;9784:6;9835:2;9831:7;9826:2;9819:5;9815:14;9811:28;9801:38;;9743:102;;;:::o;9851:228::-;9991:34;9987:1;9979:6;9975:14;9968:58;10060:11;10055:2;10047:6;10043:15;10036:36;9851:228;:::o;10085:164::-;10225:16;10221:1;10213:6;10209:14;10202:40;10085:164;:::o;10255:122::-;10328:24;10346:5;10328:24;:::i;:::-;10321:5;10318:35;10308:63;;10367:1;10364;10357:12;10308:63;10255:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "582400",
								"executionCost": "44825",
								"totalCost": "627225"
							},
							"external": {
								"getBalancePrivateToken(address)": "2891",
								"getBalancePublicToken(address)": "2892",
								"getBalanceSeedToken(address)": "2870",
								"get_blackList()": "infinite",
								"get_keccak256(string)": "infinite",
								"get_whiteList()": "infinite",
								"tokenAmount_()": "2451",
								"tokenPrice_()": "2430"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 104,
									"end": 1498,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1145,
									"end": 1154,
									"name": "PUSH",
									"source": 2,
									"value": "2CB41780"
								},
								{
									"begin": 1116,
									"end": 1154,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1116,
									"end": 1154,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1405,
									"end": 1411,
									"name": "PUSH",
									"source": 2,
									"value": "186A0"
								},
								{
									"begin": 1378,
									"end": 1411,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1378,
									"end": 1411,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 104,
									"end": 1498,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203b021c840f1362465e55f25d37bc43e2642acf2332d2beefc020100482bc034a64736f6c63430008070033",
									".code": [
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "8E4F8C6B"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "8E4F8C6B"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "948942AD"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "B06CDC12"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "C10E3911"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "761C8B9"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "2599D6D0"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "72F0D72B"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "7F89128F"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1498,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 849,
											"end": 988,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 426,
											"end": 554,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 426,
											"end": 554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 426,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 426,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 426,
											"end": 554,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 426,
											"end": 554,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 426,
											"end": 554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 426,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 426,
											"end": 554,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 426,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 426,
											"end": 554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 426,
											"end": 554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 426,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 426,
											"end": 554,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 426,
											"end": 554,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 426,
											"end": 554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 426,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 426,
											"end": 554,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 426,
											"end": 554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 426,
											"end": 554,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 426,
											"end": 554,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 426,
											"end": 554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 426,
											"end": 554,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 918,
											"end": 925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 945,
											"end": 957,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 945,
											"end": 967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 958,
											"end": 966,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 945,
											"end": 967,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 945,
											"end": 967,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 945,
											"end": 967,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 945,
											"end": 967,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 945,
											"end": 967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 945,
											"end": 967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 945,
											"end": 967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 945,
											"end": 967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 945,
											"end": 967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 945,
											"end": 967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 945,
											"end": 967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 945,
											"end": 967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 945,
											"end": 967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 945,
											"end": 967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 945,
											"end": 967,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 945,
											"end": 980,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 945,
											"end": 980,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 945,
											"end": 980,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 938,
											"end": 980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 938,
											"end": 980,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1450,
											"end": 1462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1471,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1487,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1450,
											"end": 1487,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1487,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 688,
											"end": 704,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 320,
											"end": 337,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 287,
											"end": 337,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 287,
											"end": 337,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 287,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 287,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 287,
											"end": 337,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 287,
											"end": 299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 311,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 300,
											"end": 310,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 287,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 287,
											"end": 311,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 287,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 287,
											"end": 311,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 287,
											"end": 311,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 287,
											"end": 311,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 287,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 287,
											"end": 311,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 287,
											"end": 311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 287,
											"end": 311,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 287,
											"end": 311,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 287,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 287,
											"end": 311,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 287,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 311,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 287,
											"end": 316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 316,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 287,
											"end": 316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 316,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 287,
											"end": 316,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 287,
											"end": 316,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 287,
											"end": 316,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 287,
											"end": 316,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 316,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 287,
											"end": 316,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 287,
											"end": 316,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 287,
											"end": 316,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 287,
											"end": 337,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 287,
											"end": 337,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 287,
											"end": 337,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 287,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 287,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 287,
											"end": 337,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 287,
											"end": 337,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 279,
											"end": 356,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 279,
											"end": 356,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 279,
											"end": 356,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 279,
											"end": 356,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 279,
											"end": 356,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 279,
											"end": 356,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 279,
											"end": 356,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 279,
											"end": 356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 279,
											"end": 356,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 279,
											"end": 356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 724,
											"end": 733,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 276,
											"end": 283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 307,
											"end": 341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 341,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 307,
											"end": 341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 341,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 307,
											"end": 341,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 307,
											"end": 341,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 300,
											"end": 342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1177,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1210,
											"end": 1218,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1235,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1197,
											"end": 1235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1235,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1190,
											"end": 1235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 426,
											"end": 554,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 426,
											"end": 554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 500,
											"end": 516,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1116,
											"end": 1133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1096,
											"end": 1106,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1112,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1083,
											"end": 1112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1112,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1083,
											"end": 1112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1112,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1112,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1083,
											"end": 1112,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1112,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1112,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1083,
											"end": 1112,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1083,
											"end": 1189,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1189,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1150,
											"end": 1160,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1137,
											"end": 1166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1137,
											"end": 1166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1166,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1166,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1137,
											"end": 1166,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1166,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1166,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1137,
											"end": 1166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1189,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1083,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 536,
											"end": 545,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 426,
											"end": 554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 426,
											"end": 554,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 419,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 7,
											"end": 419,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 85,
											"end": 90,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 110,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 126,
											"end": 175,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 168,
											"end": 174,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 126,
											"end": 175,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 126,
											"end": 175,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 126,
											"end": 175,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 126,
											"end": 175,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 110,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 110,
											"end": 176,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 110,
											"end": 176,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 110,
											"end": 176,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 101,
											"end": 176,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 101,
											"end": 176,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 199,
											"end": 205,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 192,
											"end": 197,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 185,
											"end": 206,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 237,
											"end": 241,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 230,
											"end": 235,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 226,
											"end": 242,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 275,
											"end": 278,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 266,
											"end": 272,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 261,
											"end": 264,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 257,
											"end": 273,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 254,
											"end": 279,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 251,
											"end": 363,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 251,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 251,
											"end": 363,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 282,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 282,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 282,
											"end": 361,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 282,
											"end": 361,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 282,
											"end": 361,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 251,
											"end": 363,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 251,
											"end": 363,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 372,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 406,
											"end": 412,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 401,
											"end": 404,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 396,
											"end": 399,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 372,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 372,
											"end": 413,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 372,
											"end": 413,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 372,
											"end": 413,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 91,
											"end": 419,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 419,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7,
											"end": 419,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7,
											"end": 419,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 419,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 419,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 419,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 425,
											"end": 564,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 425,
											"end": 564,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 471,
											"end": 476,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 509,
											"end": 515,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 496,
											"end": 516,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 487,
											"end": 516,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 487,
											"end": 516,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 525,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 552,
											"end": 557,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 525,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 525,
											"end": 558,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 525,
											"end": 558,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 525,
											"end": 558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 425,
											"end": 564,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 425,
											"end": 564,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 425,
											"end": 564,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 425,
											"end": 564,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 425,
											"end": 564,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 584,
											"end": 924,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 584,
											"end": 924,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 640,
											"end": 645,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 689,
											"end": 692,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 682,
											"end": 686,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 674,
											"end": 680,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 670,
											"end": 687,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 666,
											"end": 693,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 656,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 656,
											"end": 778,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 697,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 697,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 697,
											"end": 776,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 697,
											"end": 776,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 697,
											"end": 776,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 656,
											"end": 778,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 656,
											"end": 778,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 814,
											"end": 820,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 801,
											"end": 821,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 914,
											"end": 917,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 906,
											"end": 912,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 899,
											"end": 903,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 891,
											"end": 897,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 887,
											"end": 904,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 839,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 839,
											"end": 918,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 839,
											"end": 918,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 839,
											"end": 918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 830,
											"end": 918,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 830,
											"end": 918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 646,
											"end": 924,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 584,
											"end": 924,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 584,
											"end": 924,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 584,
											"end": 924,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 584,
											"end": 924,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 584,
											"end": 924,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 930,
											"end": 1259,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 930,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 989,
											"end": 995,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1026,
											"end": 1035,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1024,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1013,
											"end": 1036,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1009,
											"end": 1041,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1006,
											"end": 1125,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1006,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1006,
											"end": 1125,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1044,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1044,
											"end": 1123,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1044,
											"end": 1123,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1044,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1006,
											"end": 1125,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1006,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1164,
											"end": 1165,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1234,
											"end": 1241,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1225,
											"end": 1231,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1214,
											"end": 1223,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1232,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1189,
											"end": 1242,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1189,
											"end": 1242,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1189,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1179,
											"end": 1242,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1179,
											"end": 1242,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1135,
											"end": 1252,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 930,
											"end": 1259,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 930,
											"end": 1259,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 930,
											"end": 1259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 930,
											"end": 1259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 930,
											"end": 1259,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1265,
											"end": 1774,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1265,
											"end": 1774,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1383,
											"end": 1385,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1362,
											"end": 1369,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1381,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1354,
											"end": 1386,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1389,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1351,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1526,
											"end": 1535,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1539,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1509,
											"end": 1540,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1567,
											"end": 1585,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1559,
											"end": 1565,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1556,
											"end": 1586,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1553,
											"end": 1670,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1553,
											"end": 1670,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1553,
											"end": 1670,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1589,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1589,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1589,
											"end": 1668,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1589,
											"end": 1668,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1589,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1553,
											"end": 1670,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1553,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1694,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1749,
											"end": 1756,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1740,
											"end": 1746,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1729,
											"end": 1738,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1725,
											"end": 1747,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1694,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 1694,
											"end": 1757,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1694,
											"end": 1757,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1694,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1757,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1757,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1480,
											"end": 1767,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1774,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1774,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1774,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1774,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1265,
											"end": 1774,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1780,
											"end": 1959,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1780,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1859,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1870,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1912,
											"end": 1915,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1870,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1870,
											"end": 1916,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1870,
											"end": 1916,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1870,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1948,
											"end": 1952,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1943,
											"end": 1946,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1939,
											"end": 1953,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1925,
											"end": 1953,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1925,
											"end": 1953,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1780,
											"end": 1959,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1780,
											"end": 1959,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1780,
											"end": 1959,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1780,
											"end": 1959,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1780,
											"end": 1959,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1965,
											"end": 2073,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1965,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2060,
											"end": 2065,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2042,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2042,
											"end": 2066,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2042,
											"end": 2066,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2042,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2037,
											"end": 2040,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2030,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1965,
											"end": 2073,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1965,
											"end": 2073,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1965,
											"end": 2073,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2109,
											"end": 2841,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2109,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2228,
											"end": 2231,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2257,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2305,
											"end": 2310,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2257,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 2257,
											"end": 2311,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2257,
											"end": 2311,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 2257,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2327,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2406,
											"end": 2412,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2404,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2327,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 2327,
											"end": 2413,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2327,
											"end": 2413,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 2327,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2413,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2413,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2437,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2487,
											"end": 2492,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2437,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 2437,
											"end": 2493,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2437,
											"end": 2493,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 2437,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2523,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2547,
											"end": 2548,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2532,
											"end": 2816,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2532,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2557,
											"end": 2563,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2554,
											"end": 2555,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2551,
											"end": 2564,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2532,
											"end": 2816,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2532,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2532,
											"end": 2816,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2633,
											"end": 2639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2640,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2719,
											"end": 2722,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 2704,
											"end": 2717,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2660,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2653,
											"end": 2723,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 2653,
											"end": 2723,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2799,
											"end": 2805,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2746,
											"end": 2806,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2746,
											"end": 2806,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2746,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2736,
											"end": 2806,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2736,
											"end": 2806,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2592,
											"end": 2816,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2579,
											"end": 2580,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2576,
											"end": 2577,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2572,
											"end": 2581,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2581,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2567,
											"end": 2581,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2532,
											"end": 2816,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 2532,
											"end": 2816,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2532,
											"end": 2816,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 2532,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2536,
											"end": 2550,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2832,
											"end": 2835,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2825,
											"end": 2835,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2825,
											"end": 2835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2841,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2841,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2841,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2841,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2841,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2841,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2841,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2109,
											"end": 2841,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2847,
											"end": 2965,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2847,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2934,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2952,
											"end": 2957,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2934,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 2934,
											"end": 2958,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2934,
											"end": 2958,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2934,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2929,
											"end": 2932,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2922,
											"end": 2959,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2847,
											"end": 2965,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2847,
											"end": 2965,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2847,
											"end": 2965,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2971,
											"end": 3348,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 2971,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3077,
											"end": 3080,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3138,
											"end": 3143,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3105,
											"end": 3144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 3105,
											"end": 3144,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3105,
											"end": 3144,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 3105,
											"end": 3144,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3160,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 3242,
											"end": 3248,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3237,
											"end": 3240,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3160,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 3160,
											"end": 3249,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3160,
											"end": 3249,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 3160,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3153,
											"end": 3249,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3153,
											"end": 3249,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 3303,
											"end": 3309,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3298,
											"end": 3301,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3291,
											"end": 3295,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3284,
											"end": 3289,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3296,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 3258,
											"end": 3310,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3258,
											"end": 3310,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 3258,
											"end": 3310,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3335,
											"end": 3341,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3330,
											"end": 3333,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3326,
											"end": 3342,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3319,
											"end": 3342,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3319,
											"end": 3342,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2971,
											"end": 3348,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2971,
											"end": 3348,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2971,
											"end": 3348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2971,
											"end": 3348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2971,
											"end": 3348,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3354,
											"end": 3720,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 3354,
											"end": 3720,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3496,
											"end": 3499,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3517,
											"end": 3584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3581,
											"end": 3583,
											"name": "PUSH",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3576,
											"end": 3579,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3517,
											"end": 3584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3517,
											"end": 3584,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3517,
											"end": 3584,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3517,
											"end": 3584,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3584,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3510,
											"end": 3584,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3593,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3682,
											"end": 3685,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3593,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3593,
											"end": 3686,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3593,
											"end": 3686,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 3593,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 3713,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3706,
											"end": 3709,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3702,
											"end": 3714,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3714,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3714,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3354,
											"end": 3720,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3354,
											"end": 3720,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3354,
											"end": 3720,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3354,
											"end": 3720,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3726,
											"end": 4092,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 3726,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3868,
											"end": 3871,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3889,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 3953,
											"end": 3955,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 3948,
											"end": 3951,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3889,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 3889,
											"end": 3956,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3889,
											"end": 3956,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 3889,
											"end": 3956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3882,
											"end": 3956,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3882,
											"end": 3956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3965,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 4054,
											"end": 4057,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3965,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 3965,
											"end": 4058,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3965,
											"end": 4058,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3965,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4083,
											"end": 4085,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4078,
											"end": 4081,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4074,
											"end": 4086,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4067,
											"end": 4086,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4067,
											"end": 4086,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3726,
											"end": 4092,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3726,
											"end": 4092,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3726,
											"end": 4092,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3726,
											"end": 4092,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4098,
											"end": 4216,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 4098,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4185,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4185,
											"end": 4209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 4185,
											"end": 4209,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4185,
											"end": 4209,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 4185,
											"end": 4209,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4180,
											"end": 4183,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4210,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4098,
											"end": 4216,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4098,
											"end": 4216,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4098,
											"end": 4216,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4222,
											"end": 4497,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 4222,
											"end": 4497,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4354,
											"end": 4357,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4376,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 4467,
											"end": 4470,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4464,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4376,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 4376,
											"end": 4471,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4376,
											"end": 4471,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 4376,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4369,
											"end": 4471,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4369,
											"end": 4471,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4488,
											"end": 4491,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4481,
											"end": 4491,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4481,
											"end": 4491,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4222,
											"end": 4497,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4222,
											"end": 4497,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4222,
											"end": 4497,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4222,
											"end": 4497,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4222,
											"end": 4497,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4503,
											"end": 4876,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4503,
											"end": 4876,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4646,
											"end": 4650,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4684,
											"end": 4686,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4673,
											"end": 4682,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4669,
											"end": 4687,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4661,
											"end": 4687,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4661,
											"end": 4687,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4733,
											"end": 4742,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4727,
											"end": 4731,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4723,
											"end": 4743,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4719,
											"end": 4720,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4708,
											"end": 4717,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4704,
											"end": 4721,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4697,
											"end": 4744,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4761,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 4864,
											"end": 4868,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4855,
											"end": 4861,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4761,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4761,
											"end": 4869,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4761,
											"end": 4869,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 4761,
											"end": 4869,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4753,
											"end": 4869,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4753,
											"end": 4869,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4503,
											"end": 4876,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4503,
											"end": 4876,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4503,
											"end": 4876,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4503,
											"end": 4876,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4503,
											"end": 4876,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4882,
											"end": 5104,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 4882,
											"end": 5104,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4975,
											"end": 4979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5015,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5002,
											"end": 5011,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4998,
											"end": 5016,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 5016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 5016,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5026,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 5094,
											"end": 5095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5083,
											"end": 5092,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5079,
											"end": 5096,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5070,
											"end": 5076,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5026,
											"end": 5097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 5026,
											"end": 5097,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5026,
											"end": 5097,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 5026,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4882,
											"end": 5104,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4882,
											"end": 5104,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4882,
											"end": 5104,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4882,
											"end": 5104,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4882,
											"end": 5104,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5110,
											"end": 5529,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 5110,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5276,
											"end": 5280,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5316,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5303,
											"end": 5312,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5317,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5291,
											"end": 5317,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5291,
											"end": 5317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5363,
											"end": 5372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5357,
											"end": 5361,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5353,
											"end": 5373,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5349,
											"end": 5350,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5338,
											"end": 5347,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5334,
											"end": 5351,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5327,
											"end": 5374,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5391,
											"end": 5522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 5517,
											"end": 5521,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5391,
											"end": 5522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 5391,
											"end": 5522,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5391,
											"end": 5522,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 5391,
											"end": 5522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5383,
											"end": 5522,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5383,
											"end": 5522,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5110,
											"end": 5529,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5110,
											"end": 5529,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5110,
											"end": 5529,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5110,
											"end": 5529,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5535,
											"end": 5954,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 5535,
											"end": 5954,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5701,
											"end": 5705,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5741,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5728,
											"end": 5737,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5724,
											"end": 5742,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5716,
											"end": 5742,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5716,
											"end": 5742,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5788,
											"end": 5797,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5782,
											"end": 5786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5778,
											"end": 5798,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5774,
											"end": 5775,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5763,
											"end": 5772,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5759,
											"end": 5776,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5752,
											"end": 5799,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5816,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5816,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 5816,
											"end": 5947,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5816,
											"end": 5947,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 5816,
											"end": 5947,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5808,
											"end": 5947,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5808,
											"end": 5947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5535,
											"end": 5954,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5535,
											"end": 5954,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5535,
											"end": 5954,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5535,
											"end": 5954,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5960,
											"end": 6182,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 5960,
											"end": 6182,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6053,
											"end": 6057,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6091,
											"end": 6093,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6080,
											"end": 6089,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6076,
											"end": 6094,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6104,
											"end": 6175,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 6172,
											"end": 6173,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6161,
											"end": 6170,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6157,
											"end": 6174,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6148,
											"end": 6154,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6104,
											"end": 6175,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 6104,
											"end": 6175,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6104,
											"end": 6175,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 6104,
											"end": 6175,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5960,
											"end": 6182,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5960,
											"end": 6182,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5960,
											"end": 6182,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5960,
											"end": 6182,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5960,
											"end": 6182,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6188,
											"end": 6317,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 6188,
											"end": 6317,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6222,
											"end": 6228,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6249,
											"end": 6269,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 6249,
											"end": 6269,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 6249,
											"end": 6269,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6249,
											"end": 6269,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 6249,
											"end": 6269,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6239,
											"end": 6269,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6239,
											"end": 6269,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6278,
											"end": 6311,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 6306,
											"end": 6310,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6298,
											"end": 6304,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6278,
											"end": 6311,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 6278,
											"end": 6311,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6278,
											"end": 6311,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 6278,
											"end": 6311,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6188,
											"end": 6317,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6188,
											"end": 6317,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6188,
											"end": 6317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6188,
											"end": 6317,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6323,
											"end": 6398,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 6323,
											"end": 6398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6389,
											"end": 6391,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6383,
											"end": 6392,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6373,
											"end": 6392,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6373,
											"end": 6392,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6323,
											"end": 6398,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6323,
											"end": 6398,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6404,
											"end": 6712,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 6404,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6466,
											"end": 6470,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6556,
											"end": 6574,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6548,
											"end": 6554,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6575,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6542,
											"end": 6598,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6542,
											"end": 6598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 6542,
											"end": 6598,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6578,
											"end": 6596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 6578,
											"end": 6596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 6578,
											"end": 6596,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6578,
											"end": 6596,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 6578,
											"end": 6596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6542,
											"end": 6598,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 6542,
											"end": 6598,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6616,
											"end": 6645,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 6638,
											"end": 6644,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6616,
											"end": 6645,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 6616,
											"end": 6645,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6616,
											"end": 6645,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 6616,
											"end": 6645,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6645,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6608,
											"end": 6645,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6700,
											"end": 6704,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6694,
											"end": 6698,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6690,
											"end": 6705,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6682,
											"end": 6705,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6682,
											"end": 6705,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6404,
											"end": 6712,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6404,
											"end": 6712,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6404,
											"end": 6712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6404,
											"end": 6712,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6718,
											"end": 6850,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 6718,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6785,
											"end": 6789,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6808,
											"end": 6811,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6800,
											"end": 6811,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6800,
											"end": 6811,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6838,
											"end": 6842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6833,
											"end": 6836,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6829,
											"end": 6843,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6821,
											"end": 6843,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6821,
											"end": 6843,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6718,
											"end": 6850,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6718,
											"end": 6850,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6718,
											"end": 6850,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6718,
											"end": 6850,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6856,
											"end": 6970,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 6856,
											"end": 6970,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6923,
											"end": 6929,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6957,
											"end": 6962,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6951,
											"end": 6963,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6941,
											"end": 6963,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6941,
											"end": 6963,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6856,
											"end": 6970,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6856,
											"end": 6970,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6856,
											"end": 6970,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6856,
											"end": 6970,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6976,
											"end": 7075,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 6976,
											"end": 7075,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7028,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7062,
											"end": 7067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7056,
											"end": 7068,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7046,
											"end": 7068,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7046,
											"end": 7068,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6976,
											"end": 7075,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6976,
											"end": 7075,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6976,
											"end": 7075,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6976,
											"end": 7075,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7081,
											"end": 7194,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 7081,
											"end": 7194,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7151,
											"end": 7155,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7183,
											"end": 7187,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7178,
											"end": 7181,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7174,
											"end": 7188,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7166,
											"end": 7188,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7166,
											"end": 7188,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7081,
											"end": 7194,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7081,
											"end": 7194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7081,
											"end": 7194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7081,
											"end": 7194,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7200,
											"end": 7384,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 7200,
											"end": 7384,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7299,
											"end": 7310,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7333,
											"end": 7339,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7328,
											"end": 7331,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7321,
											"end": 7340,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7373,
											"end": 7377,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7371,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7364,
											"end": 7378,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7349,
											"end": 7378,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7349,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7200,
											"end": 7384,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7200,
											"end": 7384,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7200,
											"end": 7384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7200,
											"end": 7384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7200,
											"end": 7384,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7390,
											"end": 7559,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 7390,
											"end": 7559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7474,
											"end": 7485,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7508,
											"end": 7514,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7503,
											"end": 7506,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7496,
											"end": 7515,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7548,
											"end": 7552,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7543,
											"end": 7546,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7539,
											"end": 7553,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7553,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7553,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7390,
											"end": 7559,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7390,
											"end": 7559,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7390,
											"end": 7559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7390,
											"end": 7559,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7390,
											"end": 7559,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7565,
											"end": 7713,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 7565,
											"end": 7713,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7667,
											"end": 7678,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7704,
											"end": 7707,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7689,
											"end": 7707,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7689,
											"end": 7707,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7565,
											"end": 7713,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7565,
											"end": 7713,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7565,
											"end": 7713,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7565,
											"end": 7713,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7565,
											"end": 7713,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7719,
											"end": 7815,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 7719,
											"end": 7815,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7756,
											"end": 7763,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7785,
											"end": 7809,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 7803,
											"end": 7808,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7785,
											"end": 7809,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 7785,
											"end": 7809,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7785,
											"end": 7809,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 7785,
											"end": 7809,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7774,
											"end": 7809,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7774,
											"end": 7809,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7815,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7815,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7815,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7719,
											"end": 7815,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7821,
											"end": 7898,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 7821,
											"end": 7898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7858,
											"end": 7865,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7887,
											"end": 7892,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7876,
											"end": 7892,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7876,
											"end": 7892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7898,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7898,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7898,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7821,
											"end": 7898,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7904,
											"end": 8030,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 7904,
											"end": 8030,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7941,
											"end": 7948,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7981,
											"end": 8023,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7974,
											"end": 7979,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7970,
											"end": 8024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7959,
											"end": 8024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7959,
											"end": 8024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7904,
											"end": 8030,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7904,
											"end": 8030,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7904,
											"end": 8030,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7904,
											"end": 8030,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8036,
											"end": 8113,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 8036,
											"end": 8113,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8073,
											"end": 8080,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8102,
											"end": 8107,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8091,
											"end": 8107,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8091,
											"end": 8107,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8036,
											"end": 8113,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8036,
											"end": 8113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8036,
											"end": 8113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8036,
											"end": 8113,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8119,
											"end": 8273,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 8119,
											"end": 8273,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8203,
											"end": 8209,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8198,
											"end": 8201,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8193,
											"end": 8196,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8180,
											"end": 8210,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 8265,
											"end": 8266,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8256,
											"end": 8262,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8251,
											"end": 8254,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8247,
											"end": 8263,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8240,
											"end": 8267,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8119,
											"end": 8273,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8119,
											"end": 8273,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8119,
											"end": 8273,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8119,
											"end": 8273,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8279,
											"end": 8586,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 8279,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8347,
											"end": 8348,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8357,
											"end": 8470,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 8357,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8371,
											"end": 8377,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8368,
											"end": 8369,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8365,
											"end": 8378,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 8357,
											"end": 8470,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8357,
											"end": 8470,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 8357,
											"end": 8470,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8456,
											"end": 8457,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8451,
											"end": 8454,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8447,
											"end": 8458,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8441,
											"end": 8459,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8437,
											"end": 8438,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8432,
											"end": 8435,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8428,
											"end": 8439,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8421,
											"end": 8460,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8393,
											"end": 8395,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8390,
											"end": 8391,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8386,
											"end": 8396,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8381,
											"end": 8396,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8381,
											"end": 8396,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8357,
											"end": 8470,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 8357,
											"end": 8470,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8357,
											"end": 8470,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 8357,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8488,
											"end": 8494,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8485,
											"end": 8486,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8482,
											"end": 8495,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 8479,
											"end": 8580,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8479,
											"end": 8580,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 8479,
											"end": 8580,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8568,
											"end": 8569,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8559,
											"end": 8565,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8554,
											"end": 8557,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8550,
											"end": 8566,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8543,
											"end": 8570,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8479,
											"end": 8580,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 8479,
											"end": 8580,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8328,
											"end": 8586,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8279,
											"end": 8586,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8279,
											"end": 8586,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8279,
											"end": 8586,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8279,
											"end": 8586,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8592,
											"end": 8873,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 8592,
											"end": 8873,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8675,
											"end": 8702,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 8697,
											"end": 8701,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8675,
											"end": 8702,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 8675,
											"end": 8702,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8675,
											"end": 8702,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 8675,
											"end": 8702,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8667,
											"end": 8673,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8663,
											"end": 8703,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8805,
											"end": 8811,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8793,
											"end": 8803,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8790,
											"end": 8812,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 8769,
											"end": 8787,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8757,
											"end": 8767,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8754,
											"end": 8788,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 8751,
											"end": 8813,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 8748,
											"end": 8836,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8748,
											"end": 8836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 8748,
											"end": 8836,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8816,
											"end": 8834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 8816,
											"end": 8834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 8816,
											"end": 8834,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8816,
											"end": 8834,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 8816,
											"end": 8834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8748,
											"end": 8836,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 8748,
											"end": 8836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8856,
											"end": 8866,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8852,
											"end": 8854,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8845,
											"end": 8867,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8635,
											"end": 8873,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8592,
											"end": 8873,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8592,
											"end": 8873,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8592,
											"end": 8873,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8879,
											"end": 9059,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 8879,
											"end": 9059,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8927,
											"end": 9004,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8924,
											"end": 8925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8917,
											"end": 9005,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9024,
											"end": 9028,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 9021,
											"end": 9022,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9014,
											"end": 9029,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9048,
											"end": 9052,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9045,
											"end": 9046,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9038,
											"end": 9053,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9065,
											"end": 9245,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 9065,
											"end": 9245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9113,
											"end": 9190,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9110,
											"end": 9111,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9103,
											"end": 9191,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9210,
											"end": 9214,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 9207,
											"end": 9208,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9200,
											"end": 9215,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9234,
											"end": 9238,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9231,
											"end": 9232,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9224,
											"end": 9239,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9251,
											"end": 9368,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 9251,
											"end": 9368,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9360,
											"end": 9361,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9357,
											"end": 9358,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9350,
											"end": 9362,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9374,
											"end": 9491,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 9374,
											"end": 9491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9483,
											"end": 9484,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9480,
											"end": 9481,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9473,
											"end": 9485,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9497,
											"end": 9614,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 9497,
											"end": 9614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9606,
											"end": 9607,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9603,
											"end": 9604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9596,
											"end": 9608,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9620,
											"end": 9737,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 9620,
											"end": 9737,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9729,
											"end": 9730,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9726,
											"end": 9727,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9719,
											"end": 9731,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9743,
											"end": 9845,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 9743,
											"end": 9845,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9784,
											"end": 9790,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9835,
											"end": 9837,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 9831,
											"end": 9838,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 9826,
											"end": 9828,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 9819,
											"end": 9824,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9815,
											"end": 9829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9811,
											"end": 9839,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9801,
											"end": 9839,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9801,
											"end": 9839,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9743,
											"end": 9845,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9743,
											"end": 9845,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9743,
											"end": 9845,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9743,
											"end": 9845,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9851,
											"end": 10079,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 9851,
											"end": 10079,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9991,
											"end": 10025,
											"name": "PUSH",
											"source": 3,
											"value": "596F7520617265206E6F7420746865206F776E6572206F722070726976617465"
										},
										{
											"begin": 9987,
											"end": 9988,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9979,
											"end": 9985,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9975,
											"end": 9989,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9968,
											"end": 10026,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10060,
											"end": 10071,
											"name": "PUSH",
											"source": 3,
											"value": "2070726F76696465720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10055,
											"end": 10057,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10047,
											"end": 10053,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10043,
											"end": 10058,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10036,
											"end": 10072,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9851,
											"end": 10079,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9851,
											"end": 10079,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10085,
											"end": 10249,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 10085,
											"end": 10249,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10225,
											"end": 10241,
											"name": "PUSH",
											"source": 3,
											"value": "596F7572206E6F742061646D696E000000000000000000000000000000000000"
										},
										{
											"begin": 10221,
											"end": 10222,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10213,
											"end": 10219,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10209,
											"end": 10223,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10202,
											"end": 10242,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10249,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10249,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10255,
											"end": 10377,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 10255,
											"end": 10377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10328,
											"end": 10352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 10346,
											"end": 10351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10328,
											"end": 10352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 10328,
											"end": 10352,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10328,
											"end": 10352,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 10328,
											"end": 10352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10321,
											"end": 10326,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10318,
											"end": 10353,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10308,
											"end": 10371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 10308,
											"end": 10371,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10367,
											"end": 10368,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10364,
											"end": 10365,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10357,
											"end": 10369,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10308,
											"end": 10371,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 10308,
											"end": 10371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10255,
											"end": 10377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10255,
											"end": 10377,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getBalancePrivateToken(address)": "b06cdc12",
							"getBalancePublicToken(address)": "72f0d72b",
							"getBalanceSeedToken(address)": "2599d6d0",
							"get_blackList()": "7f89128f",
							"get_keccak256(string)": "8e4f8c6b",
							"get_whiteList()": "c10e3911",
							"tokenAmount_()": "948942ad",
							"tokenPrice_()": "0761c8b9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAdr\",\"type\":\"address\"}],\"name\":\"getBalancePrivateToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAdr\",\"type\":\"address\"}],\"name\":\"getBalancePublicToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAdr\",\"type\":\"address\"}],\"name\":\"getBalanceSeedToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_blackList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"get_keccak256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_whiteList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAmount_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":\"helpresFunc\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":{\"keccak256\":\"0x5b40e44cf32ee695c9b4a239819bd0a3aec8d89ea027b4705c7fb4d18d631cf1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://355406fc554229b0cc5bdc56bed0dfc105705c6f4a7bc7961a486c46f0a992f3\",\"dweb:/ipfs/QmR41xNEPBJHLWzahATAfMw41E5X4KXkmBNayAKGwUMQxn\"]},\"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":{\"keccak256\":\"0x791815edf6d8d205da15be693b57ddde64d7cf3bf65ad29c748e9e98c1f675ac\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://de960745a1c9cf451cc7401bef8c7090fec7892241a55138c64740527bc9e11c\",\"dweb:/ipfs/QmNdesY61PZkUX2jpu1FqgUURAPcFWybkSCLG98zrHtsFG\"]},\"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":{\"keccak256\":\"0x87081b6cc48e4607deb8b7a7e9207f75f9fb0b7c026a5204371b6cf039d75ac7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://fcd34ca51a5bdde5acd7ecd9ee6e967b9ddc11883e09424d3f3c199ced53247b\",\"dweb:/ipfs/QmUfRiqzBP8iQwRHDkiKEyM72KoxaBuNRsw7nvCFLhfwA1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 235,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "structUsers_",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(structUser)230_storage)"
							},
							{
								"astId": 241,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "allowed",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 244,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "tokenPrice_",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 247,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "tokenAmount_",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 266,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "structPhases_",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(structPhase)261_storage)"
							},
							{
								"astId": 284,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "strucApplications_",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(structApplication)279_storage)"
							},
							{
								"astId": 287,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "structApplicationsAmountAdr",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 290,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "whiteList",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 293,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "blackList",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(Role)214": {
								"encoding": "inplace",
								"label": "enum structures.Role",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(structApplication)279_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structApplication)",
								"numberOfBytes": "32",
								"value": "t_struct(structApplication)279_storage"
							},
							"t_mapping(t_address,t_struct(structPhase)261_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structPhase)",
								"numberOfBytes": "32",
								"value": "t_struct(structPhase)261_storage"
							},
							"t_mapping(t_address,t_struct(structUser)230_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structUser)",
								"numberOfBytes": "32",
								"value": "t_struct(structUser)230_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(structApplication)279_storage": {
								"encoding": "inplace",
								"label": "struct structures.structApplication",
								"members": [
									{
										"astId": 268,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 270,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "contactForCommunication",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 272,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "userAdr",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 274,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "status",
										"offset": 20,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 276,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "reviewed",
										"offset": 21,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 278,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "exist",
										"offset": 22,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(structPhase)261_storage": {
								"encoding": "inplace",
								"label": "struct structures.structPhase",
								"members": [
									{
										"astId": 258,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "statusPhase",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 260,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "reviewed",
										"offset": 1,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(structUser)230_storage": {
								"encoding": "inplace",
								"label": "struct structures.structUser",
								"members": [
									{
										"astId": 217,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "role",
										"offset": 0,
										"slot": "0",
										"type": "t_enum(Role)214"
									},
									{
										"astId": 219,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "login",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 221,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "password",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									},
									{
										"astId": 223,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "balance_overall",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 225,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "balance_seed",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 227,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "balance_private",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 229,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "balance_public",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol": {
				"modifireFunc": {
					"abi": [
						{
							"inputs": [],
							"name": "tokenAmount_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenPrice_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":107:1779  contract modifireFunc is structures {\r... */\n  mstore(0x40, 0x80)\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1145:1154  750000000 */\n  0x2cb41780\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1116:1154  uint256 public tokenPrice_ = 750000000 */\n  0x02\n  sstore\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1405:1411  100000 */\n  0x0186a0\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1378:1411  uint public tokenAmount_ = 100000 */\n  0x03\n  sstore\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":107:1779  contract modifireFunc is structures {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":107:1779  contract modifireFunc is structures {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0761c8b9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x948942ad\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1116:1154  uint256 public tokenPrice_ = 750000000 */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1378:1411  uint public tokenAmount_ = 100000 */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1116:1154  uint256 public tokenPrice_ = 750000000 */\n    tag_6:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1378:1411  uint public tokenAmount_ = 100000 */\n    tag_10:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:125   */\n    tag_13:\n        /* \"#utility.yul\":94:118   */\n      tag_15\n        /* \"#utility.yul\":112:117   */\n      dup2\n        /* \"#utility.yul\":94:118   */\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"#utility.yul\":89:92   */\n      dup3\n        /* \"#utility.yul\":82:119   */\n      mstore\n        /* \"#utility.yul\":7:125   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":131:353   */\n    tag_8:\n        /* \"#utility.yul\":224:228   */\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":251:260   */\n      dup3\n        /* \"#utility.yul\":247:265   */\n      add\n        /* \"#utility.yul\":239:265   */\n      swap1\n      pop\n        /* \"#utility.yul\":275:346   */\n      tag_18\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":332:341   */\n      dup4\n        /* \"#utility.yul\":328:345   */\n      add\n        /* \"#utility.yul\":319:325   */\n      dup5\n        /* \"#utility.yul\":275:346   */\n      tag_13\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":131:353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":359:436   */\n    tag_16:\n        /* \"#utility.yul\":396:403   */\n      0x00\n        /* \"#utility.yul\":425:430   */\n      dup2\n        /* \"#utility.yul\":414:430   */\n      swap1\n      pop\n        /* \"#utility.yul\":359:436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206076519ef6d1d42f7bf0ec858de41b7939b7a62d25b7563b9725f1da6730905d64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052632cb41780600255620186a060035534801561001f57600080fd5b5060dd8061002e6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80630761c8b9146037578063948942ad146051575b600080fd5b603d606b565b604051604891906084565b60405180910390f35b60576071565b604051606291906084565b60405180910390f35b60025481565b60035481565b607e81609d565b82525050565b6000602082019050609760008301846077565b92915050565b600081905091905056fea26469706673582212206076519ef6d1d42f7bf0ec858de41b7939b7a62d25b7563b9725f1da6730905d64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH4 0x2CB41780 PUSH1 0x2 SSTORE PUSH3 0x186A0 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xDD DUP1 PUSH2 0x2E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761C8B9 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x948942AD EQ PUSH1 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x48 SWAP2 SWAP1 PUSH1 0x84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x57 PUSH1 0x71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x62 SWAP2 SWAP1 PUSH1 0x84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7E DUP2 PUSH1 0x9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x97 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x76 MLOAD SWAP15 0xF6 0xD1 0xD4 0x2F PUSH28 0xF0EC858DE41B7939B7A62D25B7563B9725F1DA6730905D64736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "107:1672:1:-:0;;;1145:9:2;1116:38;;1405:6;1378:33;;107:1672:1;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@tokenAmount__247": {
									"entryPoint": 113,
									"id": 247,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenPrice__244": {
									"entryPoint": 107,
									"id": 244,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:439:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:3",
														"type": ""
													}
												],
												"src": "7:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "229:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "239:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "251:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "239:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "319:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "332:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "343:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "275:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "275:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "201:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "213:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "224:4:3",
														"type": ""
													}
												],
												"src": "131:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "404:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "414:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "425:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "414:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "386:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "396:7:3",
														"type": ""
													}
												],
												"src": "359:77:3"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060325760003560e01c80630761c8b9146037578063948942ad146051575b600080fd5b603d606b565b604051604891906084565b60405180910390f35b60576071565b604051606291906084565b60405180910390f35b60025481565b60035481565b607e81609d565b82525050565b6000602082019050609760008301846077565b92915050565b600081905091905056fea26469706673582212206076519ef6d1d42f7bf0ec858de41b7939b7a62d25b7563b9725f1da6730905d64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761C8B9 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x948942AD EQ PUSH1 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x48 SWAP2 SWAP1 PUSH1 0x84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x57 PUSH1 0x71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x62 SWAP2 SWAP1 PUSH1 0x84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7E DUP2 PUSH1 0x9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x97 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x76 MLOAD SWAP15 0xF6 0xD1 0xD4 0x2F PUSH28 0xF0EC858DE41B7939B7A62D25B7563B9725F1DA6730905D64736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "107:1672:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1116:38:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1378:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1116:38;;;;:::o;1378:33::-;;;;:::o;7:118:3:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;7:118;;:::o;131:222::-;224:4;262:2;251:9;247:18;239:26;;275:71;343:1;332:9;328:17;319:6;275:71;:::i;:::-;131:222;;;;:::o;359:77::-;396:7;425:5;414:16;;359:77;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "44200",
								"executionCost": "44305",
								"totalCost": "88505"
							},
							"external": {
								"tokenAmount_()": "2429",
								"tokenPrice_()": "2407"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 107,
									"end": 1779,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1145,
									"end": 1154,
									"name": "PUSH",
									"source": 2,
									"value": "2CB41780"
								},
								{
									"begin": 1116,
									"end": 1154,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1116,
									"end": 1154,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1405,
									"end": 1411,
									"name": "PUSH",
									"source": 2,
									"value": "186A0"
								},
								{
									"begin": 1378,
									"end": 1411,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1378,
									"end": 1411,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206076519ef6d1d42f7bf0ec858de41b7939b7a62d25b7563b9725f1da6730905d64736f6c63430008070033",
									".code": [
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "761C8B9"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "948942AD"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 112,
											"end": 117,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 89,
											"end": 92,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 82,
											"end": 119,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 224,
											"end": 228,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 251,
											"end": 260,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 247,
											"end": 265,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 239,
											"end": 265,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 239,
											"end": 265,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 328,
											"end": 345,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 131,
											"end": 353,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 131,
											"end": 353,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 131,
											"end": 353,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 131,
											"end": 353,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 396,
											"end": 403,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 414,
											"end": 430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 414,
											"end": 430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 359,
											"end": 436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 359,
											"end": 436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 359,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 359,
											"end": 436,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"tokenAmount_()": "948942ad",
							"tokenPrice_()": "0761c8b9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"tokenAmount_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":\"modifireFunc\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":{\"keccak256\":\"0x791815edf6d8d205da15be693b57ddde64d7cf3bf65ad29c748e9e98c1f675ac\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://de960745a1c9cf451cc7401bef8c7090fec7892241a55138c64740527bc9e11c\",\"dweb:/ipfs/QmNdesY61PZkUX2jpu1FqgUURAPcFWybkSCLG98zrHtsFG\"]},\"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":{\"keccak256\":\"0x87081b6cc48e4607deb8b7a7e9207f75f9fb0b7c026a5204371b6cf039d75ac7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://fcd34ca51a5bdde5acd7ecd9ee6e967b9ddc11883e09424d3f3c199ced53247b\",\"dweb:/ipfs/QmUfRiqzBP8iQwRHDkiKEyM72KoxaBuNRsw7nvCFLhfwA1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 235,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "structUsers_",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(structUser)230_storage)"
							},
							{
								"astId": 241,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "allowed",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 244,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "tokenPrice_",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 247,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "tokenAmount_",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 266,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "structPhases_",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(structPhase)261_storage)"
							},
							{
								"astId": 284,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "strucApplications_",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(structApplication)279_storage)"
							},
							{
								"astId": 287,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "structApplicationsAmountAdr",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 290,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "whiteList",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 293,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "blackList",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(Role)214": {
								"encoding": "inplace",
								"label": "enum structures.Role",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(structApplication)279_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structApplication)",
								"numberOfBytes": "32",
								"value": "t_struct(structApplication)279_storage"
							},
							"t_mapping(t_address,t_struct(structPhase)261_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structPhase)",
								"numberOfBytes": "32",
								"value": "t_struct(structPhase)261_storage"
							},
							"t_mapping(t_address,t_struct(structUser)230_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structUser)",
								"numberOfBytes": "32",
								"value": "t_struct(structUser)230_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(structApplication)279_storage": {
								"encoding": "inplace",
								"label": "struct structures.structApplication",
								"members": [
									{
										"astId": 268,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 270,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "contactForCommunication",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 272,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "userAdr",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 274,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "status",
										"offset": 20,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 276,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "reviewed",
										"offset": 21,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 278,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "exist",
										"offset": 22,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(structPhase)261_storage": {
								"encoding": "inplace",
								"label": "struct structures.structPhase",
								"members": [
									{
										"astId": 258,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "statusPhase",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 260,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "reviewed",
										"offset": 1,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(structUser)230_storage": {
								"encoding": "inplace",
								"label": "struct structures.structUser",
								"members": [
									{
										"astId": 217,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "role",
										"offset": 0,
										"slot": "0",
										"type": "t_enum(Role)214"
									},
									{
										"astId": 219,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "login",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 221,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "password",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									},
									{
										"astId": 223,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "balance_overall",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 225,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "balance_seed",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 227,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "balance_private",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 229,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "balance_public",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol": {
				"structures": {
					"abi": [
						{
							"inputs": [],
							"name": "tokenAmount_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenPrice_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":72:3438  contract structures {\r... */\n  mstore(0x40, 0x80)\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1145:1154  750000000 */\n  0x2cb41780\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1116:1154  uint256 public tokenPrice_ = 750000000 */\n  0x02\n  sstore\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1405:1411  100000 */\n  0x0186a0\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1378:1411  uint public tokenAmount_ = 100000 */\n  0x03\n  sstore\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":72:3438  contract structures {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":72:3438  contract structures {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0761c8b9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x948942ad\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1116:1154  uint256 public tokenPrice_ = 750000000 */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1378:1411  uint public tokenAmount_ = 100000 */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1116:1154  uint256 public tokenPrice_ = 750000000 */\n    tag_6:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1378:1411  uint public tokenAmount_ = 100000 */\n    tag_10:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:125   */\n    tag_13:\n        /* \"#utility.yul\":94:118   */\n      tag_15\n        /* \"#utility.yul\":112:117   */\n      dup2\n        /* \"#utility.yul\":94:118   */\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"#utility.yul\":89:92   */\n      dup3\n        /* \"#utility.yul\":82:119   */\n      mstore\n        /* \"#utility.yul\":7:125   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":131:353   */\n    tag_8:\n        /* \"#utility.yul\":224:228   */\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":251:260   */\n      dup3\n        /* \"#utility.yul\":247:265   */\n      add\n        /* \"#utility.yul\":239:265   */\n      swap1\n      pop\n        /* \"#utility.yul\":275:346   */\n      tag_18\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":332:341   */\n      dup4\n        /* \"#utility.yul\":328:345   */\n      add\n        /* \"#utility.yul\":319:325   */\n      dup5\n        /* \"#utility.yul\":275:346   */\n      tag_13\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":131:353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":359:436   */\n    tag_16:\n        /* \"#utility.yul\":396:403   */\n      0x00\n        /* \"#utility.yul\":425:430   */\n      dup2\n        /* \"#utility.yul\":414:430   */\n      swap1\n      pop\n        /* \"#utility.yul\":359:436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d3e55478ddebceec50da342fee7f1e385a09d81f329d0b5f5e8a5f5edaedb83564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052632cb41780600255620186a060035534801561001f57600080fd5b5060dd8061002e6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80630761c8b9146037578063948942ad146051575b600080fd5b603d606b565b604051604891906084565b60405180910390f35b60576071565b604051606291906084565b60405180910390f35b60025481565b60035481565b607e81609d565b82525050565b6000602082019050609760008301846077565b92915050565b600081905091905056fea2646970667358221220d3e55478ddebceec50da342fee7f1e385a09d81f329d0b5f5e8a5f5edaedb83564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH4 0x2CB41780 PUSH1 0x2 SSTORE PUSH3 0x186A0 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xDD DUP1 PUSH2 0x2E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761C8B9 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x948942AD EQ PUSH1 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x48 SWAP2 SWAP1 PUSH1 0x84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x57 PUSH1 0x71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x62 SWAP2 SWAP1 PUSH1 0x84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7E DUP2 PUSH1 0x9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x97 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xE5 SLOAD PUSH25 0xDDEBCEEC50DA342FEE7F1E385A09D81F329D0B5F5E8A5F5EDA 0xED 0xB8 CALLDATALOAD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "72:3366:2:-:0;;;1145:9;1116:38;;1405:6;1378:33;;72:3366;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@tokenAmount__247": {
									"entryPoint": 113,
									"id": 247,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenPrice__244": {
									"entryPoint": 107,
									"id": 244,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:439:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:3",
														"type": ""
													}
												],
												"src": "7:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "229:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "239:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "251:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "239:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "319:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "332:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "343:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "275:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "275:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "201:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "213:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "224:4:3",
														"type": ""
													}
												],
												"src": "131:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "404:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "414:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "425:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "414:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "386:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "396:7:3",
														"type": ""
													}
												],
												"src": "359:77:3"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060325760003560e01c80630761c8b9146037578063948942ad146051575b600080fd5b603d606b565b604051604891906084565b60405180910390f35b60576071565b604051606291906084565b60405180910390f35b60025481565b60035481565b607e81609d565b82525050565b6000602082019050609760008301846077565b92915050565b600081905091905056fea2646970667358221220d3e55478ddebceec50da342fee7f1e385a09d81f329d0b5f5e8a5f5edaedb83564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761C8B9 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x948942AD EQ PUSH1 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x48 SWAP2 SWAP1 PUSH1 0x84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x57 PUSH1 0x71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x62 SWAP2 SWAP1 PUSH1 0x84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7E DUP2 PUSH1 0x9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x97 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xE5 SLOAD PUSH25 0xDDEBCEEC50DA342FEE7F1E385A09D81F329D0B5F5E8A5F5EDA 0xED 0xB8 CALLDATALOAD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "72:3366:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1116:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1378:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1116:38;;;;:::o;1378:33::-;;;;:::o;7:118:3:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;7:118;;:::o;131:222::-;224:4;262:2;251:9;247:18;239:26;;275:71;343:1;332:9;328:17;319:6;275:71;:::i;:::-;131:222;;;;:::o;359:77::-;396:7;425:5;414:16;;359:77;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "44200",
								"executionCost": "44305",
								"totalCost": "88505"
							},
							"external": {
								"tokenAmount_()": "2429",
								"tokenPrice_()": "2407"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 72,
									"end": 3438,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 72,
									"end": 3438,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 72,
									"end": 3438,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1145,
									"end": 1154,
									"name": "PUSH",
									"source": 2,
									"value": "2CB41780"
								},
								{
									"begin": 1116,
									"end": 1154,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1116,
									"end": 1154,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1405,
									"end": 1411,
									"name": "PUSH",
									"source": 2,
									"value": "186A0"
								},
								{
									"begin": 1378,
									"end": 1411,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1378,
									"end": 1411,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3438,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3438,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3438,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3438,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 72,
									"end": 3438,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3438,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 3438,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3438,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3438,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 72,
									"end": 3438,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3438,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3438,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 3438,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3438,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 3438,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 3438,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3438,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 3438,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d3e55478ddebceec50da342fee7f1e385a09d81f329d0b5f5e8a5f5edaedb83564736f6c63430008070033",
									".code": [
										{
											"begin": 72,
											"end": 3438,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "PUSH",
											"source": 2,
											"value": "761C8B9"
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "PUSH",
											"source": 2,
											"value": "948942AD"
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3438,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1154,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1378,
											"end": 1411,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 112,
											"end": 117,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 89,
											"end": 92,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 82,
											"end": 119,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 224,
											"end": 228,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 251,
											"end": 260,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 247,
											"end": 265,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 239,
											"end": 265,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 239,
											"end": 265,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 328,
											"end": 345,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 131,
											"end": 353,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 131,
											"end": 353,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 131,
											"end": 353,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 131,
											"end": 353,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 396,
											"end": 403,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 414,
											"end": 430,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 414,
											"end": 430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 359,
											"end": 436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 359,
											"end": 436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 359,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 359,
											"end": 436,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"tokenAmount_()": "948942ad",
							"tokenPrice_()": "0761c8b9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"tokenAmount_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":\"structures\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":{\"keccak256\":\"0x87081b6cc48e4607deb8b7a7e9207f75f9fb0b7c026a5204371b6cf039d75ac7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://fcd34ca51a5bdde5acd7ecd9ee6e967b9ddc11883e09424d3f3c199ced53247b\",\"dweb:/ipfs/QmUfRiqzBP8iQwRHDkiKEyM72KoxaBuNRsw7nvCFLhfwA1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 235,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "structUsers_",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(structUser)230_storage)"
							},
							{
								"astId": 241,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "allowed",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 244,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "tokenPrice_",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 247,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "tokenAmount_",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 266,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "structPhases_",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(structPhase)261_storage)"
							},
							{
								"astId": 284,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "strucApplications_",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(structApplication)279_storage)"
							},
							{
								"astId": 287,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "structApplicationsAmountAdr",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 290,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "whiteList",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 293,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "blackList",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(Role)214": {
								"encoding": "inplace",
								"label": "enum structures.Role",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(structApplication)279_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structApplication)",
								"numberOfBytes": "32",
								"value": "t_struct(structApplication)279_storage"
							},
							"t_mapping(t_address,t_struct(structPhase)261_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structPhase)",
								"numberOfBytes": "32",
								"value": "t_struct(structPhase)261_storage"
							},
							"t_mapping(t_address,t_struct(structUser)230_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structUser)",
								"numberOfBytes": "32",
								"value": "t_struct(structUser)230_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(structApplication)279_storage": {
								"encoding": "inplace",
								"label": "struct structures.structApplication",
								"members": [
									{
										"astId": 268,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 270,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "contactForCommunication",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 272,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "userAdr",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 274,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "status",
										"offset": 20,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 276,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "reviewed",
										"offset": 21,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 278,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "exist",
										"offset": 22,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(structPhase)261_storage": {
								"encoding": "inplace",
								"label": "struct structures.structPhase",
								"members": [
									{
										"astId": 258,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "statusPhase",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 260,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "reviewed",
										"offset": 1,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(structUser)230_storage": {
								"encoding": "inplace",
								"label": "struct structures.structUser",
								"members": [
									{
										"astId": 217,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "role",
										"offset": 0,
										"slot": "0",
										"type": "t_enum(Role)214"
									},
									{
										"astId": 219,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "login",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 221,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "password",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									},
									{
										"astId": 223,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "balance_overall",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 225,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "balance_seed",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 227,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "balance_private",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 229,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "balance_public",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol": {
				"ast": {
					"absolutePath": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol",
					"exportedSymbols": {
						"helpresFunc": [
							84
						],
						"modifireFunc": [
							206
						],
						"structures": [
							294
						]
					},
					"id": 85,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"absolutePath": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol",
							"file": "./modifireFunc.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 85,
							"sourceUnit": 207,
							"src": "72:28:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "modifireFunc",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 206,
										"src": "128:12:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "128:12:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 84,
							"linearizedBaseContracts": [
								84,
								206,
								294
							],
							"name": "helpresFunc",
							"nameLocation": "113:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "285:65:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 14,
																			"name": "_hash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 6,
																			"src": "334:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"expression": {
																			"id": 12,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "317:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 13,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "317:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 15,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "317:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 11,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "307:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "307:34:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 17,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "306:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 10,
												"id": 18,
												"nodeType": "Return",
												"src": "300:42:0"
											}
										]
									},
									"functionSelector": "8e4f8c6b",
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_keccak256",
									"nameLocation": "221:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "_hash",
												"nameLocation": "249:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "235:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 5,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "235:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "234:21:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "276:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 8,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "275:9:0"
									},
									"scope": 84,
									"src": "212:138:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "518:36:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 28,
															"name": "whiteList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "536:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														}
													],
													"id": 29,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "535:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 27,
												"id": 30,
												"nodeType": "Return",
												"src": "529:17:0"
											}
										]
									},
									"functionSelector": "c10e3911",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 23,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 22,
												"name": "onlyOwnerAndPrivateProvider",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "458:27:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "458:27:0"
										}
									],
									"name": "get_whiteList",
									"nameLocation": "435:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "448:2:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "500:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 24,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "500:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 25,
													"nodeType": "ArrayTypeName",
													"src": "500:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:18:0"
									},
									"scope": 84,
									"src": "426:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "706:36:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 40,
															"name": "blackList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "724:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														}
													],
													"id": 41,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "723:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 39,
												"id": 42,
												"nodeType": "Return",
												"src": "717:17:0"
											}
										]
									},
									"functionSelector": "7f89128f",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 35,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 34,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 105,
												"src": "664:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "664:9:0"
										}
									],
									"name": "get_blackList",
									"nameLocation": "641:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "654:2:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "688:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 36,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "688:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 37,
													"nodeType": "ArrayTypeName",
													"src": "688:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "687:18:0"
									},
									"scope": 84,
									"src": "632:110:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "927:61:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 51,
															"name": "structUsers_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "945:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$230_storage_$",
																"typeString": "mapping(address => struct structures.structUser storage ref)"
															}
														},
														"id": 53,
														"indexExpression": {
															"id": 52,
															"name": "_userAdr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "958:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "945:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_structUser_$230_storage",
															"typeString": "struct structures.structUser storage ref"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance_seed",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 225,
													"src": "945:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 50,
												"id": 55,
												"nodeType": "Return",
												"src": "938:42:0"
											}
										]
									},
									"functionSelector": "2599d6d0",
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalanceSeedToken",
									"nameLocation": "858:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "_userAdr",
												"nameLocation": "887:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "879:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:18:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "918:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "918:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "917:9:0"
									},
									"scope": 84,
									"src": "849:139:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "1179:64:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 64,
															"name": "structUsers_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "1197:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$230_storage_$",
																"typeString": "mapping(address => struct structures.structUser storage ref)"
															}
														},
														"id": 66,
														"indexExpression": {
															"id": 65,
															"name": "_userAdr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "1210:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1197:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_structUser_$230_storage",
															"typeString": "struct structures.structUser storage ref"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance_private",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 227,
													"src": "1197:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 63,
												"id": 68,
												"nodeType": "Return",
												"src": "1190:45:0"
											}
										]
									},
									"functionSelector": "b06cdc12",
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalancePrivateToken",
									"nameLocation": "1107:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "_userAdr",
												"nameLocation": "1139:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1131:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1131:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1130:18:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1170:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1170:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1169:9:0"
									},
									"scope": 84,
									"src": "1098:145:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1432:63:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 77,
															"name": "structUsers_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "1450:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$230_storage_$",
																"typeString": "mapping(address => struct structures.structUser storage ref)"
															}
														},
														"id": 79,
														"indexExpression": {
															"id": 78,
															"name": "_userAdr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "1463:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1450:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_structUser_$230_storage",
															"typeString": "struct structures.structUser storage ref"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance_public",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 229,
													"src": "1450:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 76,
												"id": 81,
												"nodeType": "Return",
												"src": "1443:44:0"
											}
										]
									},
									"functionSelector": "72f0d72b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalancePublicToken",
									"nameLocation": "1361:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "_userAdr",
												"nameLocation": "1392:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1384:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1383:18:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1423:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1422:9:0"
									},
									"scope": 84,
									"src": "1352:143:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 85,
							"src": "104:1394:0",
							"usedErrors": []
						}
					],
					"src": "37:1461:0"
				},
				"id": 0
			},
			"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol": {
				"ast": {
					"absolutePath": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol",
					"exportedSymbols": {
						"modifireFunc": [
							206
						],
						"structures": [
							294
						]
					},
					"id": 207,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 86,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:1"
						},
						{
							"absolutePath": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol",
							"file": "../lib/structures.sol",
							"id": 87,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 207,
							"sourceUnit": 295,
							"src": "72:31:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 88,
										"name": "structures",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 294,
										"src": "132:10:1"
									},
									"id": 89,
									"nodeType": "InheritanceSpecifier",
									"src": "132:10:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 206,
							"linearizedBaseContracts": [
								206,
								294
							],
							"name": "modifireFunc",
							"nameLocation": "116:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "268:108:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Role_$214",
																"typeString": "enum structures.Role"
															},
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 92,
																		"name": "structUsers_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "287:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$230_storage_$",
																			"typeString": "mapping(address => struct structures.structUser storage ref)"
																		}
																	},
																	"id": 95,
																	"indexExpression": {
																		"expression": {
																			"id": 93,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "300:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "300:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "287:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_structUser_$230_storage",
																		"typeString": "struct structures.structUser storage ref"
																	}
																},
																"id": 96,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "role",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 217,
																"src": "287:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$214",
																	"typeString": "enum structures.Role"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 97,
																	"name": "Role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "320:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Role_$214_$",
																		"typeString": "type(enum structures.Role)"
																	}
																},
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "SYSTEM_OWNER",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 209,
																"src": "320:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$214",
																	"typeString": "enum structures.Role"
																}
															},
															"src": "287:50:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7572206e6f742061646d696e",
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "339:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c",
																"typeString": "literal_string \"Your not admin\""
															},
															"value": "Your not admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c",
																"typeString": "literal_string \"Your not admin\""
															}
														],
														"id": 91,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "279:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "279:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 102,
												"nodeType": "ExpressionStatement",
												"src": "279:77:1"
											},
											{
												"id": 103,
												"nodeType": "PlaceholderStatement",
												"src": "367:1:1"
											}
										]
									},
									"id": 105,
									"name": "onlyOwner",
									"nameLocation": "255:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "265:2:1"
									},
									"src": "246:130:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "515:121:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Role_$214",
																"typeString": "enum structures.Role"
															},
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 108,
																		"name": "structUsers_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "534:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$230_storage_$",
																			"typeString": "mapping(address => struct structures.structUser storage ref)"
																		}
																	},
																	"id": 111,
																	"indexExpression": {
																		"expression": {
																			"id": 109,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "547:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "547:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "534:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_structUser_$230_storage",
																		"typeString": "struct structures.structUser storage ref"
																	}
																},
																"id": 112,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "role",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 217,
																"src": "534:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$214",
																	"typeString": "enum structures.Role"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 113,
																	"name": "Role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "567:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Role_$214_$",
																		"typeString": "type(enum structures.Role)"
																	}
																},
																"id": 114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "SYSTEM_PRIVATE",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 211,
																"src": "567:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$214",
																	"typeString": "enum structures.Role"
																}
															},
															"src": "534:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7572206e6f7420507269766174652070726f7669646572",
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "588:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad6ae5da5b217b421ac93ea0fbb3ab0e88f39844155489a92b15ef6af2ad2fc2",
																"typeString": "literal_string \"Your not Private provider\""
															},
															"value": "Your not Private provider"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad6ae5da5b217b421ac93ea0fbb3ab0e88f39844155489a92b15ef6af2ad2fc2",
																"typeString": "literal_string \"Your not Private provider\""
															}
														],
														"id": 107,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "526:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "526:90:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "526:90:1"
											},
											{
												"id": 119,
												"nodeType": "PlaceholderStatement",
												"src": "627:1:1"
											}
										]
									},
									"id": 121,
									"name": "onlyPrivateProvider",
									"nameLocation": "492:19:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:2:1"
									},
									"src": "483:153:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "774:119:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Role_$214",
																"typeString": "enum structures.Role"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 124,
																		"name": "structUsers_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "793:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$230_storage_$",
																			"typeString": "mapping(address => struct structures.structUser storage ref)"
																		}
																	},
																	"id": 127,
																	"indexExpression": {
																		"expression": {
																			"id": 125,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "806:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "806:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "793:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_structUser_$230_storage",
																		"typeString": "struct structures.structUser storage ref"
																	}
																},
																"id": 128,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "role",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 217,
																"src": "793:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$214",
																	"typeString": "enum structures.Role"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 129,
																	"name": "Role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "826:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Role_$214_$",
																		"typeString": "type(enum structures.Role)"
																	}
																},
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "SYSTEM_PUBLIC",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 210,
																"src": "826:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$214",
																	"typeString": "enum structures.Role"
																}
															},
															"src": "793:51:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7572206e6f74205075626c69632070726f7669646572",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "846:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_05f2418b58e7bb30fbad3c3b3cb0109a11446f25f5b2b9d17a61bb07228bb0e1",
																"typeString": "literal_string \"Your not Public provider\""
															},
															"value": "Your not Public provider"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_05f2418b58e7bb30fbad3c3b3cb0109a11446f25f5b2b9d17a61bb07228bb0e1",
																"typeString": "literal_string \"Your not Public provider\""
															}
														],
														"id": 123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "785:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "785:88:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "785:88:1"
											},
											{
												"id": 135,
												"nodeType": "PlaceholderStatement",
												"src": "884:1:1"
											}
										]
									},
									"id": 137,
									"name": "onlyPublicProvider",
									"nameLocation": "752:18:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:1"
									},
									"src": "743:150:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "1064:191:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Role_$214",
																	"typeString": "enum structures.Role"
																},
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 140,
																			"name": "structUsers_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 235,
																			"src": "1083:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$230_storage_$",
																				"typeString": "mapping(address => struct structures.structUser storage ref)"
																			}
																		},
																		"id": 143,
																		"indexExpression": {
																			"expression": {
																				"id": 141,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1096:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1096:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1083:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_structUser_$230_storage",
																			"typeString": "struct structures.structUser storage ref"
																		}
																	},
																	"id": 144,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "role",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 217,
																	"src": "1083:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$214",
																		"typeString": "enum structures.Role"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 145,
																		"name": "Role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 214,
																		"src": "1116:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Role_$214_$",
																			"typeString": "type(enum structures.Role)"
																		}
																	},
																	"id": 146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "SYSTEM_OWNER",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 209,
																	"src": "1116:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$214",
																		"typeString": "enum structures.Role"
																	}
																},
																"src": "1083:50:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Role_$214",
																	"typeString": "enum structures.Role"
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 148,
																			"name": "structUsers_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 235,
																			"src": "1137:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$230_storage_$",
																				"typeString": "mapping(address => struct structures.structUser storage ref)"
																			}
																		},
																		"id": 151,
																		"indexExpression": {
																			"expression": {
																				"id": 149,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1150:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1150:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1137:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_structUser_$230_storage",
																			"typeString": "struct structures.structUser storage ref"
																		}
																	},
																	"id": 152,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "role",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 217,
																	"src": "1137:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$214",
																		"typeString": "enum structures.Role"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 153,
																		"name": "Role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 214,
																		"src": "1170:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Role_$214_$",
																			"typeString": "type(enum structures.Role)"
																		}
																	},
																	"id": 154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "SYSTEM_PRIVATE",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 211,
																	"src": "1170:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$214",
																		"typeString": "enum structures.Role"
																	}
																},
																"src": "1137:52:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1083:106:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420746865206f776e6572206f7220707269766174652070726f7669646572",
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1191:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9",
																"typeString": "literal_string \"You are not the owner or private provider\""
															},
															"value": "You are not the owner or private provider"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9",
																"typeString": "literal_string \"You are not the owner or private provider\""
															}
														],
														"id": 139,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1075:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1075:160:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "1075:160:1"
											},
											{
												"id": 160,
												"nodeType": "PlaceholderStatement",
												"src": "1246:1:1"
											}
										]
									},
									"id": 162,
									"name": "onlyOwnerAndPrivateProvider",
									"nameLocation": "1033:27:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1061:2:1"
									},
									"src": "1024:231:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "1408:368:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_enum$_Role_$214",
																			"typeString": "enum structures.Role"
																		},
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 165,
																					"name": "structUsers_",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 235,
																					"src": "1441:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$230_storage_$",
																						"typeString": "mapping(address => struct structures.structUser storage ref)"
																					}
																				},
																				"id": 168,
																				"indexExpression": {
																					"expression": {
																						"id": 166,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "1454:3:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 167,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "1454:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1441:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_structUser_$230_storage",
																					"typeString": "struct structures.structUser storage ref"
																				}
																			},
																			"id": 169,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "role",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 217,
																			"src": "1441:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Role_$214",
																				"typeString": "enum structures.Role"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 170,
																				"name": "Role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 214,
																				"src": "1474:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_Role_$214_$",
																					"typeString": "type(enum structures.Role)"
																				}
																			},
																			"id": 171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "SYSTEM_OWNER",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 209,
																			"src": "1474:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Role_$214",
																				"typeString": "enum structures.Role"
																			}
																		},
																		"src": "1441:50:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_enum$_Role_$214",
																			"typeString": "enum structures.Role"
																		},
																		"id": 180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 173,
																					"name": "structUsers_",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 235,
																					"src": "1508:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$230_storage_$",
																						"typeString": "mapping(address => struct structures.structUser storage ref)"
																					}
																				},
																				"id": 176,
																				"indexExpression": {
																					"expression": {
																						"id": 174,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "1521:3:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 175,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "1521:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1508:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_structUser_$230_storage",
																					"typeString": "struct structures.structUser storage ref"
																				}
																			},
																			"id": 177,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "role",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 217,
																			"src": "1508:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Role_$214",
																				"typeString": "enum structures.Role"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 178,
																				"name": "Role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 214,
																				"src": "1541:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_Role_$214_$",
																					"typeString": "type(enum structures.Role)"
																				}
																			},
																			"id": 179,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "SYSTEM_PUBLIC",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 210,
																			"src": "1541:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Role_$214",
																				"typeString": "enum structures.Role"
																			}
																		},
																		"src": "1508:51:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "1441:118:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_Role_$214",
																		"typeString": "enum structures.Role"
																	},
																	"id": 189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 182,
																				"name": "structUsers_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 235,
																				"src": "1576:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$230_storage_$",
																					"typeString": "mapping(address => struct structures.structUser storage ref)"
																				}
																			},
																			"id": 185,
																			"indexExpression": {
																				"expression": {
																					"id": 183,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "1589:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 184,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "1589:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1576:24:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_structUser_$230_storage",
																				"typeString": "struct structures.structUser storage ref"
																			}
																		},
																		"id": 186,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "role",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 217,
																		"src": "1576:29:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Role_$214",
																			"typeString": "enum structures.Role"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"expression": {
																			"id": 187,
																			"name": "Role",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "1609:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_Role_$214_$",
																				"typeString": "type(enum structures.Role)"
																			}
																		},
																		"id": 188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "SYSTEM_PRIVATE",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 211,
																		"src": "1609:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Role_$214",
																			"typeString": "enum structures.Role"
																		}
																	},
																	"src": "1576:52:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1441:187:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Role_$214",
																	"typeString": "enum structures.Role"
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 191,
																			"name": "structUsers_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 235,
																			"src": "1645:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$230_storage_$",
																				"typeString": "mapping(address => struct structures.structUser storage ref)"
																			}
																		},
																		"id": 194,
																		"indexExpression": {
																			"expression": {
																				"id": 192,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1658:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1658:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1645:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_structUser_$230_storage",
																			"typeString": "struct structures.structUser storage ref"
																		}
																	},
																	"id": 195,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "role",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 217,
																	"src": "1645:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$214",
																		"typeString": "enum structures.Role"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"expression": {
																		"id": 196,
																		"name": "Role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 214,
																		"src": "1678:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Role_$214_$",
																			"typeString": "type(enum structures.Role)"
																		}
																	},
																	"id": 197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "INVESTOR",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 212,
																	"src": "1678:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$214",
																		"typeString": "enum structures.Role"
																	}
																},
																"src": "1645:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1441:250:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4170706c69636174696f6e2063616e206f6e6c79206265207375626d697474656420627920726567756c6172207573657273",
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1693:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8eee8f3e1b78fc84a03ad9368aed0f5d5ffbe790cbbf5be7c05b10e873c56608",
																"typeString": "literal_string \"Application can only be submitted by regular users\""
															},
															"value": "Application can only be submitted by regular users"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8eee8f3e1b78fc84a03ad9368aed0f5d5ffbe790cbbf5be7c05b10e873c56608",
																"typeString": "literal_string \"Application can only be submitted by regular users\""
															}
														],
														"id": 164,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1419:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1419:337:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "1419:337:1"
											},
											{
												"id": 203,
												"nodeType": "PlaceholderStatement",
												"src": "1767:1:1"
											}
										]
									},
									"id": 205,
									"name": "onlyUser",
									"nameLocation": "1396:8:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1405:2:1"
									},
									"src": "1387:389:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 207,
							"src": "107:1672:1",
							"usedErrors": []
						}
					],
					"src": "37:1742:1"
				},
				"id": 1
			},
			"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol": {
				"ast": {
					"absolutePath": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol",
					"exportedSymbols": {
						"structures": [
							294
						]
					},
					"id": 295,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 208,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 294,
							"linearizedBaseContracts": [
								294
							],
							"name": "structures",
							"nameLocation": "81:10:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "structures.Role",
									"id": 214,
									"members": [
										{
											"id": 209,
											"name": "SYSTEM_OWNER",
											"nameLocation": "200:12:2",
											"nodeType": "EnumValue",
											"src": "200:12:2"
										},
										{
											"id": 210,
											"name": "SYSTEM_PUBLIC",
											"nameLocation": "223:13:2",
											"nodeType": "EnumValue",
											"src": "223:13:2"
										},
										{
											"id": 211,
											"name": "SYSTEM_PRIVATE",
											"nameLocation": "247:14:2",
											"nodeType": "EnumValue",
											"src": "247:14:2"
										},
										{
											"id": 212,
											"name": "INVESTOR",
											"nameLocation": "272:8:2",
											"nodeType": "EnumValue",
											"src": "272:8:2"
										},
										{
											"id": 213,
											"name": "USER",
											"nameLocation": "291:4:2",
											"nodeType": "EnumValue",
											"src": "291:4:2"
										}
									],
									"name": "Role",
									"nameLocation": "184:4:2",
									"nodeType": "EnumDefinition",
									"src": "179:123:2"
								},
								{
									"canonicalName": "structures.structUser",
									"id": 230,
									"members": [
										{
											"constant": false,
											"id": 217,
											"mutability": "mutable",
											"name": "role",
											"nameLocation": "416:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 230,
											"src": "411:9:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_Role_$214",
												"typeString": "enum structures.Role"
											},
											"typeName": {
												"id": 216,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 215,
													"name": "Role",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 214,
													"src": "411:4:2"
												},
												"referencedDeclaration": 214,
												"src": "411:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Role_$214",
													"typeString": "enum structures.Role"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 219,
											"mutability": "mutable",
											"name": "login",
											"nameLocation": "466:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 230,
											"src": "459:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 218,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "459:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 221,
											"mutability": "mutable",
											"name": "password",
											"nameLocation": "515:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 230,
											"src": "507:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 220,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "507:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 223,
											"mutability": "mutable",
											"name": "balance_overall",
											"nameLocation": "565:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 230,
											"src": "557:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 222,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "557:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 225,
											"mutability": "mutable",
											"name": "balance_seed",
											"nameLocation": "626:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 230,
											"src": "618:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 224,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "618:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 227,
											"mutability": "mutable",
											"name": "balance_private",
											"nameLocation": "696:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 230,
											"src": "688:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 226,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "688:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 229,
											"mutability": "mutable",
											"name": "balance_public",
											"nameLocation": "769:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 230,
											"src": "761:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 228,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "761:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "structUser",
									"nameLocation": "389:10:2",
									"nodeType": "StructDefinition",
									"scope": 294,
									"src": "382:448:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 235,
									"mutability": "mutable",
									"name": "structUsers_",
									"nameLocation": "868:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 294,
									"src": "836:44:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$230_storage_$",
										"typeString": "mapping(address => struct structures.structUser)"
									},
									"typeName": {
										"id": 234,
										"keyType": {
											"id": 231,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "845:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "836:31:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$230_storage_$",
											"typeString": "mapping(address => struct structures.structUser)"
										},
										"valueType": {
											"id": 233,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 232,
												"name": "structUser",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 230,
												"src": "856:10:2"
											},
											"referencedDeclaration": 230,
											"src": "856:10:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_structUser_$230_storage_ptr",
												"typeString": "struct structures.structUser"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 241,
									"mutability": "mutable",
									"name": "allowed",
									"nameLocation": "1000:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 294,
									"src": "951:56:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 240,
										"keyType": {
											"id": 236,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "959:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "951:48:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 239,
											"keyType": {
												"id": 237,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "979:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "970:28:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 238,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "990:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "0761c8b9",
									"id": 244,
									"mutability": "mutable",
									"name": "tokenPrice_",
									"nameLocation": "1131:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 294,
									"src": "1116:38:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 242,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1116:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "373530303030303030",
										"id": 243,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1145:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_750000000_by_1",
											"typeString": "int_const 750000000"
										},
										"value": "750000000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "948942ad",
									"id": 247,
									"mutability": "mutable",
									"name": "tokenAmount_",
									"nameLocation": "1390:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 294,
									"src": "1378:33:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 245,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1378:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030303030",
										"id": 246,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1405:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000_by_1",
											"typeString": "int_const 100000"
										},
										"value": "100000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 250,
									"mutability": "constant",
									"name": "ownerAdr",
									"nameLocation": "1654:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 294,
									"src": "1637:70:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 248,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1637:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307838453463323465313334393038663233333461654638383535364663314461616130373541353663",
										"id": 249,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1665:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x8E4c24e134908f2334aeF88556Fc1Daaa075A56c"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 253,
									"mutability": "constant",
									"name": "privateProviderAdr",
									"nameLocation": "1761:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 294,
									"src": "1744:80:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 251,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1744:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307834343930636633364138413439313830304233353134304130376234313930623533336646634266",
										"id": 252,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1782:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x4490cf36A8A491800B35140A07b4190b533fFcBf"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 256,
									"mutability": "constant",
									"name": "publicProviderAdr",
									"nameLocation": "1878:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 294,
									"src": "1861:79:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 254,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1861:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307839363939663335326241374139324537433046663639323445443939363032636464424133386442",
										"id": 255,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1898:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x9699f352bA7A92E7C0Ff6924ED99602cddBA38dB"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "structures.structPhase",
									"id": 261,
									"members": [
										{
											"constant": false,
											"id": 258,
											"mutability": "mutable",
											"name": "statusPhase",
											"nameLocation": "2067:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 261,
											"src": "2062:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 257,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2062:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 260,
											"mutability": "mutable",
											"name": "reviewed",
											"nameLocation": "2119:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 261,
											"src": "2114:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 259,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2114:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "structPhase",
									"nameLocation": "2039:11:2",
									"nodeType": "StructDefinition",
									"scope": 294,
									"src": "2032:157:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 266,
									"mutability": "mutable",
									"name": "structPhases_",
									"nameLocation": "2228:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 294,
									"src": "2195:46:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structPhase_$261_storage_$",
										"typeString": "mapping(address => struct structures.structPhase)"
									},
									"typeName": {
										"id": 265,
										"keyType": {
											"id": 262,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2204:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2195:32:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structPhase_$261_storage_$",
											"typeString": "mapping(address => struct structures.structPhase)"
										},
										"valueType": {
											"id": 264,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 263,
												"name": "structPhase",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 261,
												"src": "2215:11:2"
											},
											"referencedDeclaration": 261,
											"src": "2215:11:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_structPhase_$261_storage_ptr",
												"typeString": "struct structures.structPhase"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "structures.structApplication",
									"id": 279,
									"members": [
										{
											"constant": false,
											"id": 268,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "2441:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 279,
											"src": "2434:11:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 267,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2434:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 270,
											"mutability": "mutable",
											"name": "contactForCommunication",
											"nameLocation": "2492:23:2",
											"nodeType": "VariableDeclaration",
											"scope": 279,
											"src": "2485:30:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 269,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2485:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 272,
											"mutability": "mutable",
											"name": "userAdr",
											"nameLocation": "2572:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 279,
											"src": "2564:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 271,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2564:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 274,
											"mutability": "mutable",
											"name": "status",
											"nameLocation": "2649:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 279,
											"src": "2644:11:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 273,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2644:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 276,
											"mutability": "mutable",
											"name": "reviewed",
											"nameLocation": "2719:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 279,
											"src": "2714:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 275,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2714:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 278,
											"mutability": "mutable",
											"name": "exist",
											"nameLocation": "2813:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 279,
											"src": "2808:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 277,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2808:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "structApplication",
									"nameLocation": "2405:17:2",
									"nodeType": "StructDefinition",
									"scope": 294,
									"src": "2398:485:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 284,
									"mutability": "mutable",
									"name": "strucApplications_",
									"nameLocation": "2928:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 294,
									"src": "2889:57:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structApplication_$279_storage_$",
										"typeString": "mapping(address => struct structures.structApplication)"
									},
									"typeName": {
										"id": 283,
										"keyType": {
											"id": 280,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2898:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2889:38:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structApplication_$279_storage_$",
											"typeString": "mapping(address => struct structures.structApplication)"
										},
										"valueType": {
											"id": 282,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 281,
												"name": "structApplication",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 279,
												"src": "2909:17:2"
											},
											"referencedDeclaration": 279,
											"src": "2909:17:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_structApplication_$279_storage_ptr",
												"typeString": "struct structures.structApplication"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 287,
									"mutability": "mutable",
									"name": "structApplicationsAmountAdr",
									"nameLocation": "3027:27:2",
									"nodeType": "VariableDeclaration",
									"scope": 294,
									"src": "3017:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 285,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3017:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 286,
										"nodeType": "ArrayTypeName",
										"src": "3017:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 290,
									"mutability": "mutable",
									"name": "whiteList",
									"nameLocation": "3171:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 294,
									"src": "3161:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 288,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3161:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 289,
										"nodeType": "ArrayTypeName",
										"src": "3161:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 293,
									"mutability": "mutable",
									"name": "blackList",
									"nameLocation": "3333:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 294,
									"src": "3323:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 291,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3323:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 292,
										"nodeType": "ArrayTypeName",
										"src": "3323:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								}
							],
							"scope": 295,
							"src": "72:3366:2",
							"usedErrors": []
						}
					],
					"src": "37:3401:2"
				},
				"id": 2
			}
		}
	}
}