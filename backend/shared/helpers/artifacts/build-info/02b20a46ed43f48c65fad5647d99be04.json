{
	"id": "02b20a46ed43f48c65fad5647d99be04",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nimport \"./modifireFunc.sol\";\r\n\r\ncontract helpresFunc is modifireFunc {\r\n\r\n    // COMMENT_FUNC: Получения хэш-пароля.\r\n    function get_keccak256(string memory _hash) public pure returns(bytes32) {\r\n            return(keccak256(abi.encodePacked(_hash)));\r\n    }\r\n\r\n    // COMMENT_FUNC: Получение белого списка.\r\n    function get_whiteList() public onlyOwnerAndPrivateProvider view returns (address[] memory) {\r\n        return(whiteList);\r\n    }\r\n\r\n    // COMMENT_FUNC: Получение черного списка.\r\n    function get_blackList() public onlyOwner view returns (address[] memory) {\r\n        return(blackList);\r\n    }\r\n\r\n    // COMMENT_FUNC: Функция вернет текущий баланс SEED токенов.\r\n    function getBalanceSeedToken (address _userAdr) public view returns (uint256) {\r\n        return structUsers_[_userAdr].balance_seed;\r\n    }\r\n\r\n    // COMMENT_FUNC: Функция вернет текущий баланс PRIVATE токенов.\r\n    function getBalancePrivateToken (address _userAdr) public view returns (uint256) {\r\n        return structUsers_[_userAdr].balance_private;\r\n    }\r\n\r\n    // COMMENT_FUNC: Функция вернет текущий баланс PUBLIC токенов.\r\n    function getBalancePublicToken (address _userAdr) public view returns (uint256) {\r\n        return structUsers_[_userAdr].balance_public;\r\n    }\r\n\r\n    // COMMENT_FUNC: Функция вернет текущий баланс эфиров.\r\n    function getBalanceEth(address adr) public view returns(uint256) {\r\n        return address(adr).balance;\r\n    }\r\n}"
			},
			"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nimport \"../lib/structures.sol\";\r\n\r\ncontract modifireFunc is structures {\r\n    \r\n    // COMMENT_MOD: Модификатор проверка роли ВЛАДЕЛЬЦА.\r\n    modifier onlyOwner () {\r\n        require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER, \"Your not admin\");\r\n        _;\r\n    }\r\n\r\n    // COMMENT_MOD: Модификатор проверка роли PRIVAT ПРОВАЙДЕРА.\r\n    modifier onlyPrivateProvider () {\r\n        require(structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"Your not Private provider\");\r\n        _;\r\n    }\r\n\r\n    // COMMENT_MOD: Модификатор проверка роли PRIVAT ПРОВАЙДЕРА.\r\n    modifier onlyPublicProvider () {\r\n        require(structUsers_[msg.sender].role == Role.SYSTEM_PUBLIC, \"Your not Public provider\");\r\n        _;\r\n    }\r\n\r\n    // COMMENT_MOD: Модификатор проверки роли ВЛАДЕЛЬЦ или PRIVAT ПРОВАЙДЕРА.\r\n    modifier onlyOwnerAndPrivateProvider () {\r\n        require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER || structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"You are not the owner or private provider\");\r\n        _;\r\n    }\r\n\r\n    // COMMENT_MOD: Модификатор проверка того, что пользователь обычный user.\r\n    modifier onlyUser () {\r\n        require(\r\n            structUsers_[msg.sender].role != Role.SYSTEM_OWNER ||\r\n            structUsers_[msg.sender].role != Role.SYSTEM_PUBLIC ||\r\n            structUsers_[msg.sender].role != Role.SYSTEM_PRIVATE ||\r\n            structUsers_[msg.sender].role != Role.INVESTOR, \"Application can only be submitted by regular users\"\r\n        );\r\n        _;\r\n    }\r\n}"
			},
			"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\ncontract structures {\r\n    // COMMENT: Роли для структуры пользователей.\r\n    enum Role {\r\n        SYSTEM_OWNER,\r\n        SYSTEM_PUBLIC,\r\n        SYSTEM_PRIVATE,\r\n        INVESTOR,\r\n        USER\r\n    }\r\n\r\n    // COMMENT_SCTRUCT: Структура пользователей.\r\n    struct structUser {\r\n        Role role;               // роль  \r\n        string login;            // логин\r\n        bytes32 password;        // пароль\r\n        uint256 balance_overall; // общий баланс\r\n        uint256 balance_seed;    // баланс SEED токенов\r\n        uint256 balance_private; // баланс PRIVATE токенов\r\n        uint256 balance_public;  // баланс PUBLIC токенов\r\n    }\r\n    mapping (address => structUser) public structUsers_; // обращение к структуре по АДРЕСАМ\r\n    mapping(address => mapping (address => uint256)) allowed; // делегированные пользоатели\r\n\r\n    // COMMENT: Цена за 1 токен.\r\n    uint256 public tokenPrice_ = 750000000; // 1 токен за 0.00075 ETH => 750000000; 0.001ETH => 1000000000 WEI; 0.002 => 2000000000 WEI | ЗНАЧЕНИЕ УКАЗЫВАЕТСЯ В WEI\r\n    \r\n    // COMMENT: Ограничение цены токена.\r\n    uint public tokenAmount_ = 100000; // кол-во, которое может купить токенов пользователь | private = 100 000 CMON; public = 5 000 CMON\r\n\r\n    // COMMENT: Набор начальних пользователей. \r\n    address constant ownerAdr = 0x8E4c24e134908f2334aeF88556Fc1Daaa075A56c;           // ВЛАДЕЛЕЦ\r\n    address constant privateProviderAdr = 0x4490cf36A8A491800B35140A07b4190b533fFcBf; // PRIVATE ПРОВАЙДЕР\r\n    address constant publicProviderAdr = 0x9699f352bA7A92E7C0Ff6924ED99602cddBA38dB;  // PUBLIC ПРОВАЙДЕР\r\n\r\n    // COMMENT_SCTRUC: Структура фазы.\r\n    struct structPhase {\r\n        bool statusPhase; // статус фазы\r\n        bool reviewed;    // была ли активирована фаза\r\n    }\r\n    mapping (address => structPhase) structPhases_; // обращение к структуре по АДРЕСАМ\r\n\r\n    // COMMENT_STRUCT: Структура заявок пользователей.\r\n    struct structApplication {\r\n        string name;                    // имя\r\n        string contactForCommunication; // контакты для связи\r\n        address userAdr;                // адрес пользователя\r\n        bool status;                    // статус заявки\r\n        bool exist;                     // заявка существует\r\n    }\r\n    mapping (address => structApplication) strucApplications_; // обращение к структуре по АДРЕСАМ\r\n    address[] structApplicationsAmountAdr;                     // массив пользователей, подавших заявление\r\n    address[] whiteList;                                       // белый лист прользователей, которым одобрили заявки\r\n    address[] blackList;                                       // черный лист полльзователей\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol": {
				"helpresFunc": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "adr",
									"type": "address"
								}
							],
							"name": "getBalanceEth",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAdr",
									"type": "address"
								}
							],
							"name": "getBalancePrivateToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAdr",
									"type": "address"
								}
							],
							"name": "getBalancePublicToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAdr",
									"type": "address"
								}
							],
							"name": "getBalanceSeedToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_blackList",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_hash",
									"type": "string"
								}
							],
							"name": "get_keccak256",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get_whiteList",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "structUsers_",
							"outputs": [
								{
									"internalType": "enum structures.Role",
									"name": "role",
									"type": "uint8"
								},
								{
									"internalType": "string",
									"name": "login",
									"type": "string"
								},
								{
									"internalType": "bytes32",
									"name": "password",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "balance_overall",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balance_seed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balance_private",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balance_public",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAmount_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenPrice_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":104:1709  contract helpresFunc is modifireFunc {\r... */\n  mstore(0x40, 0x80)\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1152:1161  750000000 */\n  0x2cb41780\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1123:1161  uint256 public tokenPrice_ = 750000000 */\n  0x02\n  sstore\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1412:1418  100000 */\n  0x0186a0\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1385:1418  uint public tokenAmount_ = 100000 */\n  0x03\n  sstore\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":104:1709  contract helpresFunc is modifireFunc {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":104:1709  contract helpresFunc is modifireFunc {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0761c8b9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2599d6d0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x72f0d72b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x7f89128f\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8e4f8c6b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x948942ad\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x99067ede\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xb06cdc12\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xc10e3911\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xfc837259\n      eq\n      tag_12\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1123:1161  uint256 public tokenPrice_ = 750000000 */\n    tag_3:\n      tag_13\n      sload(0x02)\n      dup2\n      jump\n    tag_13:\n      mload(0x40)\n        /* \"#utility.yul\":2322:2347   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2310:2312   */\n      0x20\n        /* \"#utility.yul\":2295:2313   */\n      add\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1123:1161  uint256 public tokenPrice_ = 750000000 */\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":849:988  function getBalanceSeedToken (address _userAdr) public view returns (uint256) {\r... */\n    tag_4:\n      tag_13\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":945:967  structUsers_[_userAdr] */\n      and\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":918:925  uint256 */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":945:967  structUsers_[_userAdr] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":945:980  structUsers_[_userAdr].balance_seed */\n      0x04\n      add\n      sload\n      swap1\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":849:988  function getBalanceSeedToken (address _userAdr) public view returns (uint256) {\r... */\n      jump\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1352:1495  function getBalancePublicToken (address _userAdr) public view returns (uint256) {\r... */\n    tag_5:\n      tag_13\n      tag_23\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_23:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1450:1472  structUsers_[_userAdr] */\n      and\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1423:1430  uint256 */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1450:1472  structUsers_[_userAdr] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1450:1487  structUsers_[_userAdr].balance_public */\n      0x06\n      add\n      sload\n      swap1\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1352:1495  function getBalancePublicToken (address _userAdr) public view returns (uint256) {\r... */\n      jump\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":632:742  function get_blackList() public onlyOwner view returns (address[] memory) {\r... */\n    tag_6:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":212:350  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n    tag_7:\n      tag_13\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1385:1418  uint public tokenAmount_ = 100000 */\n    tag_8:\n      tag_13\n      sload(0x03)\n      dup2\n      jump\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1595:1706  function getBalanceEth(address adr) public view returns(uint256) {\r... */\n    tag_9:\n      tag_13\n      tag_40\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_40:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1678:1698  address(adr).balance */\n      and\n      balance\n      swap1\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1595:1706  function getBalanceEth(address adr) public view returns(uint256) {\r... */\n      jump\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1098:1243  function getBalancePrivateToken (address _userAdr) public view returns (uint256) {\r... */\n    tag_10:\n      tag_13\n      tag_44\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_44:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1197:1219  structUsers_[_userAdr] */\n      and\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1170:1177  uint256 */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1197:1219  structUsers_[_userAdr] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1197:1235  structUsers_[_userAdr].balance_private */\n      0x05\n      add\n      sload\n      swap1\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":1098:1243  function getBalancePrivateToken (address _userAdr) public view returns (uint256) {\r... */\n      jump\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":426:554  function get_whiteList() public onlyOwnerAndPrivateProvider view returns (address[] memory) {\r... */\n    tag_11:\n      tag_26\n      tag_48\n      jump\t// in\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":836:887  mapping (address => structUser) public structUsers_ */\n    tag_12:\n      tag_50\n      tag_51\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_15\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":632:742  function get_blackList() public onlyOwner view returns (address[] memory) {\r... */\n    tag_27:\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":688:704  address[] memory */\n      0x60\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":320:337  Role.SYSTEM_OWNER */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":300:310  msg.sender */\n      caller\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":287:299  structUsers_ */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":287:311  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":287:316  structUsers_[msg.sender].role */\n      sload\n      0xff\n      and\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":287:337  structUsers_[msg.sender].role == Role.SYSTEM_OWNER */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_62\n      jumpi\n      tag_62\n      tag_60\n      jump\t// in\n    tag_62:\n      eq\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":279:356  require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER, \"Your not admin\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3970:3972   */\n      0x20\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":279:356  require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER, \"Your not admin\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3952:3973   */\n      mstore\n        /* \"#utility.yul\":4009:4011   */\n      0x0e\n        /* \"#utility.yul\":3989:4007   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3982:4012   */\n      mstore\n      shl(0x91, 0x2cb7bab9103737ba1030b236b4b7)\n        /* \"#utility.yul\":4028:4046   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4021:4065   */\n      mstore\n        /* \"#utility.yul\":4082:4100   */\n      0x64\n      add\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":279:356  require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER, \"Your not admin\") */\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_63:\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":724:733  blackList */\n      0x08\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":717:734  return(blackList) */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":632:742  function get_blackList() public onlyOwner view returns (address[] memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":212:350  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n    tag_33:\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":276:283  bytes32 */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":334:339  _hash */\n      dup2\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":317:340  abi.encodePacked(_hash) */\n      add(0x20, mload(0x40))\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":307:341  keccak256(abi.encodePacked(_hash)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":300:342  return(keccak256(abi.encodePacked(_hash))) */\n      swap1\n      pop\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":212:350  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":426:554  function get_whiteList() public onlyOwnerAndPrivateProvider view returns (address[] memory) {\r... */\n    tag_48:\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":500:516  address[] memory */\n      0x60\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1116:1133  Role.SYSTEM_OWNER */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1096:1106  msg.sender */\n      caller\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1083:1095  structUsers_ */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1083:1107  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1083:1112  structUsers_[msg.sender].role */\n      sload\n      0xff\n      and\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1083:1133  structUsers_[msg.sender].role == Role.SYSTEM_OWNER */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_78\n      jumpi\n      tag_78\n      tag_60\n      jump\t// in\n    tag_78:\n      eq\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1083:1189  structUsers_[msg.sender].role == Role.SYSTEM_OWNER || structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE */\n      dup1\n      tag_79\n      jumpi\n      pop\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1170:1189  Role.SYSTEM_PRIVATE */\n      0x02\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1150:1160  msg.sender */\n      caller\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1137:1149  structUsers_ */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1137:1161  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1137:1166  structUsers_[msg.sender].role */\n      sload\n      0xff\n      and\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1137:1189  structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_83\n      jumpi\n      tag_83\n      tag_60\n      jump\t// in\n    tag_83:\n      eq\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1083:1189  structUsers_[msg.sender].role == Role.SYSTEM_OWNER || structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE */\n    tag_79:\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1075:1235  require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER || structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"You are not the owner or private provider\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3560:3562   */\n      0x20\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1075:1235  require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER || structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"You are not the owner or private provider\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3542:3563   */\n      mstore\n        /* \"#utility.yul\":3599:3601   */\n      0x29\n        /* \"#utility.yul\":3579:3597   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3572:3602   */\n      mstore\n        /* \"#utility.yul\":3638:3672   */\n      0x596f7520617265206e6f7420746865206f776e6572206f722070726976617465\n        /* \"#utility.yul\":3618:3636   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3611:3673   */\n      mstore\n      shl(0xb9, 0x10383937bb34b232b9)\n        /* \"#utility.yul\":3689:3707   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3682:3721   */\n      mstore\n        /* \"#utility.yul\":3738:3757   */\n      0x84\n      add\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1075:1235  require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER || structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"You are not the owner or private provider\") */\n      tag_64\n        /* \"#utility.yul\":3358:3763   */\n      jump\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":1075:1235  require(structUsers_[msg.sender].role == Role.SYSTEM_OWNER || structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"You are not the owner or private provider\") */\n    tag_84:\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":536:545  whiteList */\n      0x07\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":529:546  return(whiteList) */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":426:554  function get_whiteList() public onlyOwnerAndPrivateProvider view returns (address[] memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":836:887  mapping (address => structUser) public structUsers_ */\n    tag_52:\n      0x00\n      0x20\n      dup2\n      swap1\n      mstore\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      0xff\n      swap1\n      swap3\n      and\n      swap3\n      swap2\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_91\n      jump\t// in\n    tag_92:\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      sload\n      swap1\n      pop\n      dup8\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_19:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_98:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_99\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_99:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":305:1227   */\n    tag_32:\n        /* \"#utility.yul\":374:380   */\n      0x00\n        /* \"#utility.yul\":427:429   */\n      0x20\n        /* \"#utility.yul\":415:424   */\n      dup3\n        /* \"#utility.yul\":406:413   */\n      dup5\n        /* \"#utility.yul\":402:425   */\n      sub\n        /* \"#utility.yul\":398:430   */\n      slt\n        /* \"#utility.yul\":395:447   */\n      iszero\n      tag_101\n      jumpi\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      dup1\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":395:447   */\n    tag_101:\n        /* \"#utility.yul\":470:493   */\n      dup2\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":542:556   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":539:573   */\n      iszero\n      tag_102\n      jumpi\n        /* \"#utility.yul\":569:570   */\n      0x00\n        /* \"#utility.yul\":566:567   */\n      dup1\n        /* \"#utility.yul\":559:571   */\n      revert\n        /* \"#utility.yul\":539:573   */\n    tag_102:\n        /* \"#utility.yul\":607:613   */\n      dup2\n        /* \"#utility.yul\":596:605   */\n      dup5\n        /* \"#utility.yul\":592:614   */\n      add\n        /* \"#utility.yul\":582:614   */\n      swap2\n      pop\n        /* \"#utility.yul\":652:659   */\n      dup5\n        /* \"#utility.yul\":645:649   */\n      0x1f\n        /* \"#utility.yul\":641:643   */\n      dup4\n        /* \"#utility.yul\":637:650   */\n      add\n        /* \"#utility.yul\":633:660   */\n      slt\n        /* \"#utility.yul\":623:678   */\n      tag_103\n      jumpi\n        /* \"#utility.yul\":674:675   */\n      0x00\n        /* \"#utility.yul\":671:672   */\n      dup1\n        /* \"#utility.yul\":664:676   */\n      revert\n        /* \"#utility.yul\":623:678   */\n    tag_103:\n        /* \"#utility.yul\":710:712   */\n      dup2\n        /* \"#utility.yul\":697:713   */\n      calldataload\n        /* \"#utility.yul\":732:734   */\n      dup2\n        /* \"#utility.yul\":728:730   */\n      dup2\n        /* \"#utility.yul\":725:735   */\n      gt\n        /* \"#utility.yul\":722:758   */\n      iszero\n      tag_105\n      jumpi\n        /* \"#utility.yul\":738:756   */\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":813:815   */\n      0x40\n        /* \"#utility.yul\":807:816   */\n      mload\n        /* \"#utility.yul\":781:783   */\n      0x1f\n        /* \"#utility.yul\":867:880   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":863:885   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":887:889   */\n      0x3f\n        /* \"#utility.yul\":859:890   */\n      add\n        /* \"#utility.yul\":855:895   */\n      and\n        /* \"#utility.yul\":843:896   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":911:929   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":931:953   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":908:954   */\n      or\n        /* \"#utility.yul\":905:977   */\n      iszero\n      tag_108\n      jumpi\n        /* \"#utility.yul\":957:975   */\n      tag_108\n      tag_106\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":997:1007   */\n      dup2\n        /* \"#utility.yul\":993:995   */\n      0x40\n        /* \"#utility.yul\":986:1008   */\n      mstore\n        /* \"#utility.yul\":1032:1034   */\n      dup3\n        /* \"#utility.yul\":1024:1030   */\n      dup2\n        /* \"#utility.yul\":1017:1035   */\n      mstore\n        /* \"#utility.yul\":1072:1079   */\n      dup8\n        /* \"#utility.yul\":1067:1069   */\n      0x20\n        /* \"#utility.yul\":1062:1064   */\n      dup5\n        /* \"#utility.yul\":1058:1060   */\n      dup8\n        /* \"#utility.yul\":1054:1065   */\n      add\n        /* \"#utility.yul\":1050:1070   */\n      add\n        /* \"#utility.yul\":1047:1080   */\n      gt\n        /* \"#utility.yul\":1044:1097   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":1093:1094   */\n      0x00\n        /* \"#utility.yul\":1090:1091   */\n      dup1\n        /* \"#utility.yul\":1083:1095   */\n      revert\n        /* \"#utility.yul\":1044:1097   */\n    tag_109:\n        /* \"#utility.yul\":1149:1151   */\n      dup3\n        /* \"#utility.yul\":1144:1146   */\n      0x20\n        /* \"#utility.yul\":1140:1142   */\n      dup7\n        /* \"#utility.yul\":1136:1147   */\n      add\n        /* \"#utility.yul\":1131:1133   */\n      0x20\n        /* \"#utility.yul\":1123:1129   */\n      dup4\n        /* \"#utility.yul\":1119:1134   */\n      add\n        /* \"#utility.yul\":1106:1152   */\n      calldatacopy\n        /* \"#utility.yul\":1194:1195   */\n      0x00\n        /* \"#utility.yul\":1172:1187   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":1189:1191   */\n      0x20\n        /* \"#utility.yul\":1168:1192   */\n      add\n        /* \"#utility.yul\":1161:1196   */\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n        /* \"#utility.yul\":1176:1182   */\n      swap6\n        /* \"#utility.yul\":305:1227   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1232:1508   */\n    tag_71:\n        /* \"#utility.yul\":1363:1366   */\n      0x00\n        /* \"#utility.yul\":1401:1407   */\n      dup3\n        /* \"#utility.yul\":1395:1408   */\n      mload\n        /* \"#utility.yul\":1417:1470   */\n      tag_111\n        /* \"#utility.yul\":1463:1469   */\n      dup2\n        /* \"#utility.yul\":1458:1461   */\n      dup5\n        /* \"#utility.yul\":1451:1455   */\n      0x20\n        /* \"#utility.yul\":1443:1449   */\n      dup8\n        /* \"#utility.yul\":1439:1456   */\n      add\n        /* \"#utility.yul\":1417:1470   */\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":1486:1502   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":1232:1508   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1513:2171   */\n    tag_29:\n        /* \"#utility.yul\":1684:1686   */\n      0x20\n        /* \"#utility.yul\":1736:1757   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1806:1819   */\n      dup3\n      mload\n        /* \"#utility.yul\":1709:1727   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":1828:1850   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1655:1659   */\n      0x00\n      swap2\n        /* \"#utility.yul\":1684:1686   */\n      swap1\n        /* \"#utility.yul\":1907:1922   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":1881:1883   */\n      0x40\n        /* \"#utility.yul\":1866:1884   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":1655:1659   */\n      dup5\n        /* \"#utility.yul\":1950:2145   */\n    tag_114:\n        /* \"#utility.yul\":1964:1970   */\n      dup2\n        /* \"#utility.yul\":1961:1962   */\n      dup2\n        /* \"#utility.yul\":1958:1971   */\n      lt\n        /* \"#utility.yul\":1950:2145   */\n      iszero\n      tag_116\n      jumpi\n        /* \"#utility.yul\":2029:2042   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2025:2064   */\n      and\n        /* \"#utility.yul\":2013:2065   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2120:2135   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":2085:2097   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":2061:2062   */\n      0x01\n        /* \"#utility.yul\":1979:1988   */\n      add\n        /* \"#utility.yul\":1950:2145   */\n      jump(tag_114)\n    tag_116:\n      pop\n        /* \"#utility.yul\":2162:2165   */\n      swap1\n      swap7\n        /* \"#utility.yul\":1513:2171   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2358:3353   */\n    tag_54:\n        /* \"#utility.yul\":2644:2648   */\n      0x00\n        /* \"#utility.yul\":2684:2685   */\n      0x05\n        /* \"#utility.yul\":2676:2682   */\n      dup10\n        /* \"#utility.yul\":2673:2686   */\n      lt\n        /* \"#utility.yul\":2663:2807   */\n      tag_119\n      jumpi\n        /* \"#utility.yul\":2729:2739   */\n      0x4e487b71\n        /* \"#utility.yul\":2724:2727   */\n      0xe0\n        /* \"#utility.yul\":2720:2740   */\n      shl\n        /* \"#utility.yul\":2717:2718   */\n      0x00\n        /* \"#utility.yul\":2710:2741   */\n      mstore\n        /* \"#utility.yul\":2764:2768   */\n      0x21\n        /* \"#utility.yul\":2761:2762   */\n      0x04\n        /* \"#utility.yul\":2754:2769   */\n      mstore\n        /* \"#utility.yul\":2792:2796   */\n      0x24\n        /* \"#utility.yul\":2789:2790   */\n      0x00\n        /* \"#utility.yul\":2782:2797   */\n      revert\n        /* \"#utility.yul\":2663:2807   */\n    tag_119:\n        /* \"#utility.yul\":2834:2840   */\n      dup9\n        /* \"#utility.yul\":2823:2832   */\n      dup3\n        /* \"#utility.yul\":2816:2841   */\n      mstore\n        /* \"#utility.yul\":2877:2880   */\n      0xe0\n        /* \"#utility.yul\":2872:2874   */\n      0x20\n        /* \"#utility.yul\":2861:2870   */\n      dup4\n        /* \"#utility.yul\":2857:2875   */\n      add\n        /* \"#utility.yul\":2850:2881   */\n      mstore\n        /* \"#utility.yul\":2910:2916   */\n      dup8\n        /* \"#utility.yul\":2904:2917   */\n      mload\n        /* \"#utility.yul\":2954:2960   */\n      dup1\n        /* \"#utility.yul\":2948:2951   */\n      0xe0\n        /* \"#utility.yul\":2937:2946   */\n      dup5\n        /* \"#utility.yul\":2933:2952   */\n      add\n        /* \"#utility.yul\":2926:2961   */\n      mstore\n        /* \"#utility.yul\":2980:2983   */\n      0x0100\n        /* \"#utility.yul\":2992:3058   */\n      tag_120\n        /* \"#utility.yul\":3051:3057   */\n      dup3\n        /* \"#utility.yul\":3046:3048   */\n      dup3\n        /* \"#utility.yul\":3035:3044   */\n      dup7\n        /* \"#utility.yul\":3031:3049   */\n      add\n        /* \"#utility.yul\":3026:3028   */\n      0x20\n        /* \"#utility.yul\":3018:3024   */\n      dup14\n        /* \"#utility.yul\":3014:3029   */\n      add\n        /* \"#utility.yul\":2992:3058   */\n      tag_112\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":3160:3162   */\n      0x40\n        /* \"#utility.yul\":3145:3163   */\n      dup5\n      add\n        /* \"#utility.yul\":3138:3172   */\n      swap9\n      swap1\n      swap9\n      mstore\n        /* \"#utility.yul\":3203:3205   */\n      0x60\n        /* \"#utility.yul\":3188:3206   */\n      dup4\n      add\n        /* \"#utility.yul\":3181:3215   */\n      swap7\n      swap1\n      swap7\n      mstore\n      pop\n        /* \"#utility.yul\":3246:3249   */\n      0x80\n        /* \"#utility.yul\":3231:3250   */\n      dup2\n      add\n        /* \"#utility.yul\":3224:3259   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":3290:3293   */\n      0xa0\n        /* \"#utility.yul\":3275:3294   */\n      dup4\n      add\n        /* \"#utility.yul\":3268:3303   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3334:3337   */\n      0xc0\n        /* \"#utility.yul\":3319:3338   */\n      dup3\n      add\n        /* \"#utility.yul\":3312:3347   */\n      mstore\n        /* \"#utility.yul\":3119:3121   */\n      0x1f\n        /* \"#utility.yul\":3098:3113   */\n      swap1\n      swap2\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3094:3123   */\n      and\n        /* \"#utility.yul\":3079:3124   */\n      add\n        /* \"#utility.yul\":3075:3129   */\n      add\n      swap3\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2358:3353   */\n      jump\t// out\n        /* \"#utility.yul\":4293:4551   */\n    tag_112:\n        /* \"#utility.yul\":4365:4366   */\n      0x00\n        /* \"#utility.yul\":4375:4488   */\n    tag_125:\n        /* \"#utility.yul\":4389:4395   */\n      dup4\n        /* \"#utility.yul\":4386:4387   */\n      dup2\n        /* \"#utility.yul\":4383:4396   */\n      lt\n        /* \"#utility.yul\":4375:4488   */\n      iszero\n      tag_127\n      jumpi\n        /* \"#utility.yul\":4465:4476   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":4459:4477   */\n      mload\n        /* \"#utility.yul\":4446:4457   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":4439:4478   */\n      mstore\n        /* \"#utility.yul\":4411:4413   */\n      0x20\n        /* \"#utility.yul\":4404:4414   */\n      add\n        /* \"#utility.yul\":4375:4488   */\n      jump(tag_125)\n    tag_127:\n        /* \"#utility.yul\":4506:4512   */\n      dup4\n        /* \"#utility.yul\":4503:4504   */\n      dup2\n        /* \"#utility.yul\":4500:4513   */\n      gt\n        /* \"#utility.yul\":4497:4545   */\n      iszero\n      tag_128\n      jumpi\n        /* \"#utility.yul\":4541:4542   */\n      0x00\n        /* \"#utility.yul\":4532:4538   */\n      dup5\n        /* \"#utility.yul\":4527:4530   */\n      dup5\n        /* \"#utility.yul\":4523:4539   */\n      add\n        /* \"#utility.yul\":4516:4543   */\n      mstore\n        /* \"#utility.yul\":4497:4545   */\n    tag_128:\n      pop\n        /* \"#utility.yul\":4293:4551   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4556:4936   */\n    tag_91:\n        /* \"#utility.yul\":4635:4636   */\n      0x01\n        /* \"#utility.yul\":4631:4643   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4678:4690   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4699:4760   */\n      tag_130\n      jumpi\n        /* \"#utility.yul\":4753:4757   */\n      0x7f\n        /* \"#utility.yul\":4745:4751   */\n      dup3\n        /* \"#utility.yul\":4741:4758   */\n      and\n        /* \"#utility.yul\":4731:4758   */\n      swap2\n      pop\n        /* \"#utility.yul\":4699:4760   */\n    tag_130:\n        /* \"#utility.yul\":4806:4808   */\n      0x20\n        /* \"#utility.yul\":4798:4804   */\n      dup3\n        /* \"#utility.yul\":4795:4809   */\n      lt\n        /* \"#utility.yul\":4775:4793   */\n      dup2\n        /* \"#utility.yul\":4772:4810   */\n      eq\n        /* \"#utility.yul\":4769:4930   */\n      iszero\n      tag_131\n      jumpi\n        /* \"#utility.yul\":4852:4862   */\n      0x4e487b71\n        /* \"#utility.yul\":4847:4850   */\n      0xe0\n        /* \"#utility.yul\":4843:4863   */\n      shl\n        /* \"#utility.yul\":4840:4841   */\n      0x00\n        /* \"#utility.yul\":4833:4864   */\n      mstore\n        /* \"#utility.yul\":4887:4891   */\n      0x22\n        /* \"#utility.yul\":4884:4885   */\n      0x04\n        /* \"#utility.yul\":4877:4892   */\n      mstore\n        /* \"#utility.yul\":4915:4919   */\n      0x24\n        /* \"#utility.yul\":4912:4913   */\n      0x00\n        /* \"#utility.yul\":4905:4920   */\n      revert\n        /* \"#utility.yul\":4769:4930   */\n    tag_131:\n      pop\n        /* \"#utility.yul\":4556:4936   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4941:5068   */\n    tag_60:\n        /* \"#utility.yul\":5002:5012   */\n      0x4e487b71\n        /* \"#utility.yul\":4997:5000   */\n      0xe0\n        /* \"#utility.yul\":4993:5013   */\n      shl\n        /* \"#utility.yul\":4990:4991   */\n      0x00\n        /* \"#utility.yul\":4983:5014   */\n      mstore\n        /* \"#utility.yul\":5033:5037   */\n      0x21\n        /* \"#utility.yul\":5030:5031   */\n      0x04\n        /* \"#utility.yul\":5023:5038   */\n      mstore\n        /* \"#utility.yul\":5057:5061   */\n      0x24\n        /* \"#utility.yul\":5054:5055   */\n      0x00\n        /* \"#utility.yul\":5047:5062   */\n      revert\n        /* \"#utility.yul\":5073:5200   */\n    tag_106:\n        /* \"#utility.yul\":5134:5144   */\n      0x4e487b71\n        /* \"#utility.yul\":5129:5132   */\n      0xe0\n        /* \"#utility.yul\":5125:5145   */\n      shl\n        /* \"#utility.yul\":5122:5123   */\n      0x00\n        /* \"#utility.yul\":5115:5146   */\n      mstore\n        /* \"#utility.yul\":5165:5169   */\n      0x41\n        /* \"#utility.yul\":5162:5163   */\n      0x04\n        /* \"#utility.yul\":5155:5170   */\n      mstore\n        /* \"#utility.yul\":5189:5193   */\n      0x24\n        /* \"#utility.yul\":5186:5187   */\n      0x00\n        /* \"#utility.yul\":5179:5194   */\n      revert\n\n    auxdata: 0xa2646970667358221220e25d434c0e48b3860483a0c37e2dedd5771d74979f6a5f016a93798afcc62b6a64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052632cb41780600255620186a060035534801561001f57600080fd5b506107148061002f6000396000f3fe608060405234801561001057600080fd5b506004361061008e5760003560e01c80630761c8b9146100935780632599d6d0146100af57806372f0d72b146100db5780637f89128f146101075780638e4f8c6b1461011c578063948942ad1461012f57806399067ede14610138578063b06cdc1214610153578063c10e39111461017f578063fc83725914610187575b600080fd5b61009c60025481565b6040519081526020015b60405180910390f35b61009c6100bd366004610482565b6001600160a01b031660009081526020819052604090206004015490565b61009c6100e9366004610482565b6001600160a01b031660009081526020819052604090206006015490565b61010f6101ad565b6040516100a6919061057e565b61009c61012a3660046104b2565b610278565b61009c60035481565b61009c610146366004610482565b6001600160a01b03163190565b61009c610161366004610482565b6001600160a01b031660009081526020819052604090206005015490565b61010f6102a8565b61019a610195366004610482565b6103bb565b6040516100a697969594939291906105cb565b606060003360009081526020819052604090205460ff1660048111156101d5576101d56106b2565b146102185760405162461bcd60e51b815260206004820152600e60248201526d2cb7bab9103737ba1030b236b4b760911b60448201526064015b60405180910390fd5b600880548060200260200160405190810160405280929190818152602001828054801561026e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610250575b5050505050905090565b60008160405160200161028b9190610562565b604051602081830303815290604052805190602001209050919050565b606060003360009081526020819052604090205460ff1660048111156102d0576102d06106b2565b14806102ff575060023360009081526020819052604090205460ff1660048111156102fd576102fd6106b2565b145b61035d5760405162461bcd60e51b815260206004820152602960248201527f596f7520617265206e6f7420746865206f776e6572206f72207072697661746560448201526810383937bb34b232b960b91b606482015260840161020f565b600780548060200260200160405190810160405280929190818152602001828054801561026e576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610250575050505050905090565b6000602081905290815260409020805460018201805460ff90921692916103e190610677565b80601f016020809104026020016040519081016040528092919081815260200182805461040d90610677565b801561045a5780601f1061042f5761010080835404028352916020019161045a565b820191906000526020600020905b81548152906001019060200180831161043d57829003601f168201915b5050505050908060020154908060030154908060040154908060050154908060060154905087565b60006020828403121561049457600080fd5b81356001600160a01b03811681146104ab57600080fd5b9392505050565b6000602082840312156104c457600080fd5b81356001600160401b03808211156104db57600080fd5b818401915084601f8301126104ef57600080fd5b813581811115610501576105016106c8565b604051601f8201601f19908116603f01168101908382118183101715610529576105296106c8565b8160405282815287602084870101111561054257600080fd5b826020860160208301376000928101602001929092525095945050505050565b60008251610574818460208701610647565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b818110156105bf5783516001600160a01b03168352928401929184019160010161059a565b50909695505050505050565b6000600589106105eb57634e487b7160e01b600052602160045260246000fd5b88825260e0602083015287518060e08401526101006106108282860160208d01610647565b6040840198909852606083019690965250608081019390935260a083019190915260c0820152601f909101601f1916010192915050565b60005b8381101561066257818101518382015260200161064a565b83811115610671576000848401525b50505050565b600181811c9082168061068b57607f821691505b602082108114156106ac57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220e25d434c0e48b3860483a0c37e2dedd5771d74979f6a5f016a93798afcc62b6a64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH4 0x2CB41780 PUSH1 0x2 SSTORE PUSH3 0x186A0 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x714 DUP1 PUSH2 0x2F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761C8B9 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x2599D6D0 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x72F0D72B EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x7F89128F EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x8E4F8C6B EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x948942AD EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x99067EDE EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xB06CDC12 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0xC10E3911 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xFC837259 EQ PUSH2 0x187 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0xBD CALLDATASIZE PUSH1 0x4 PUSH2 0x482 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9C PUSH2 0xE9 CALLDATASIZE PUSH1 0x4 PUSH2 0x482 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x10F PUSH2 0x1AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x57E JUMP JUMPDEST PUSH2 0x9C PUSH2 0x12A CALLDATASIZE PUSH1 0x4 PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x278 JUMP JUMPDEST PUSH2 0x9C PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x9C PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0x482 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE SWAP1 JUMP JUMPDEST PUSH2 0x9C PUSH2 0x161 CALLDATASIZE PUSH1 0x4 PUSH2 0x482 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x10F PUSH2 0x2A8 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x482 JUMP JUMPDEST PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1D5 JUMPI PUSH2 0x1D5 PUSH2 0x6B2 JUMP JUMPDEST EQ PUSH2 0x218 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x2CB7BAB9103737BA1030B236B4B7 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x26E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x250 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x562 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2D0 JUMPI PUSH2 0x2D0 PUSH2 0x6B2 JUMP JUMPDEST EQ DUP1 PUSH2 0x2FF JUMPI POP PUSH1 0x2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2FD JUMPI PUSH2 0x2FD PUSH2 0x6B2 JUMP JUMPDEST EQ JUMPDEST PUSH2 0x35D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420746865206F776E6572206F722070726976617465 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x10383937BB34B232B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x20F JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x26E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x250 JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH2 0x3E1 SWAP1 PUSH2 0x677 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x40D SWAP1 PUSH2 0x677 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x45A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x42F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x45A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x43D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x501 JUMPI PUSH2 0x501 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x529 JUMPI PUSH2 0x529 PUSH2 0x6C8 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x574 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x647 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5BF JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x59A JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP10 LT PUSH2 0x5EB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP9 DUP3 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP4 ADD MSTORE DUP8 MLOAD DUP1 PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 PUSH2 0x610 DUP3 DUP3 DUP7 ADD PUSH1 0x20 DUP14 ADD PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x60 DUP4 ADD SWAP7 SWAP1 SWAP7 MSTORE POP PUSH1 0x80 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xA0 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x662 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x64A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x671 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x68B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x6AC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 0x5D NUMBER 0x4C 0xE BASEFEE 0xB3 DUP7 DIV DUP4 LOG0 0xC3 PUSH31 0x2DEDD5771D74979F6A5F016A93798AFCC62B6A64736F6C6343000807003300 ",
							"sourceMap": "104:1605:0:-:0;;;1152:9:2;1123:38;;1412:6;1385:33;;104:1605:0;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getBalanceEth_97": {
									"entryPoint": null,
									"id": 97,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBalancePrivateToken_70": {
									"entryPoint": null,
									"id": 70,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBalancePublicToken_83": {
									"entryPoint": null,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBalanceSeedToken_57": {
									"entryPoint": null,
									"id": 57,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@get_blackList_44": {
									"entryPoint": 429,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@get_keccak256_20": {
									"entryPoint": 632,
									"id": 20,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@get_whiteList_32": {
									"entryPoint": 680,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@structUsers__249": {
									"entryPoint": 955,
									"id": 249,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenAmount__261": {
									"entryPoint": null,
									"id": 261,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenPrice__258": {
									"entryPoint": null,
									"id": 258,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1154,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 1202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 1406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_Role_$228_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint8_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 1483,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 1607,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 1714,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1736,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5202:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:216:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:3"
															},
															"nodeType": "YulIf",
															"src": "94:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "239:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "244:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "248:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:50:3"
															},
															"nodeType": "YulIf",
															"src": "200:70:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:3",
														"type": ""
													}
												],
												"src": "14:286:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "385:842:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "431:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "440:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "443:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "433:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "433:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "433:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "406:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "402:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "402:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "427:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "398:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "398:32:3"
															},
															"nodeType": "YulIf",
															"src": "395:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "483:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "470:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "470:23:3"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "460:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "502:28:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "520:2:3",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "524:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "516:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "516:10:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "512:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "512:18:3"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "506:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "557:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "566:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "569:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "559:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "559:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "559:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "545:6:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "553:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "542:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "542:14:3"
															},
															"nodeType": "YulIf",
															"src": "539:34:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "582:32:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "596:9:3"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "607:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "592:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "592:22:3"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "586:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "662:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "671:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "674:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "664:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "664:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "664:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "641:2:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "645:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "637:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "637:13:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "652:7:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "633:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "633:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:35:3"
															},
															"nodeType": "YulIf",
															"src": "623:55:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "687:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "710:2:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "697:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "697:16:3"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "691:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "736:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "738:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "738:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "738:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "728:2:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "732:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "725:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "725:10:3"
															},
															"nodeType": "YulIf",
															"src": "722:36:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "767:17:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "781:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "777:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "777:7:3"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "771:2:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "793:23:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "813:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "807:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "807:9:3"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "797:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "825:71:3",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "847:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "871:2:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "875:4:3",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "867:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "867:13:3"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "882:2:3"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "863:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "863:22:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "887:2:3",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "859:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "859:31:3"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "892:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "855:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:40:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "843:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "843:53:3"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "829:10:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "955:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "957:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "957:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "957:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "914:10:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "926:2:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "911:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "911:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "934:10:3"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "946:6:3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "931:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "931:22:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "908:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "908:46:3"
															},
															"nodeType": "YulIf",
															"src": "905:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "993:2:3",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "997:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "986:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "986:22:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "986:22:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1024:6:3"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1032:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1017:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1017:18:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1017:18:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1081:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1090:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1093:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1083:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1083:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1083:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1058:2:3"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1062:2:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1054:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1054:11:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1067:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1050:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1050:20:3"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1072:7:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1047:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1047:33:3"
															},
															"nodeType": "YulIf",
															"src": "1044:53:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1123:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1131:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1119:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1119:15:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1140:2:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1144:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1136:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1136:11:3"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1149:2:3"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1106:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1106:46:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1106:46:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:3"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1184:2:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1172:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1172:15:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1189:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1168:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1168:24:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1194:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1161:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1161:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1161:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1205:16:3",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1215:6:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1205:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "351:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "362:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "374:6:3",
														"type": ""
													}
												],
												"src": "305:922:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1371:137:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1381:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1401:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:13:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1385:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1443:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1451:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1439:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1439:17:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1458:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1463:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1417:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1417:53:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1417:53:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1479:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1490:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1495:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1486:16:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1479:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1347:3:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1352:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1363:3:3",
														"type": ""
													}
												],
												"src": "1232:276:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1664:507:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1674:12:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1684:2:3",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1678:2:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1695:32:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1713:9:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1724:2:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1709:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:18:3"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "1699:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1743:9:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1754:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1736:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1736:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1736:21:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1766:17:3",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "1777:6:3"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "1770:3:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1792:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1812:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1806:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1806:13:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1796:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "1835:6:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1843:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1828:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1828:22:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1828:22:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1859:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1870:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1881:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1866:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1866:18:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1859:3:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1893:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1911:6:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1919:2:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1907:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1907:15:3"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "1897:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1931:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1940:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1935:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1999:146:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2020:3:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2035:6:3"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "2029:5:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2029:13:3"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2052:3:3",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2057:1:3",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2048:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2048:11:3"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2061:1:3",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "2044:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2044:19:3"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "2025:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2025:39:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2013:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2013:52:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2013:52:3"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2078:19:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2089:3:3"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2094:2:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2085:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2085:12:3"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2078:3:3"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2110:25:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2124:6:3"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2132:2:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2120:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2120:15:3"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2110:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1961:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1964:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1958:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1958:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1972:18:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1974:14:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1983:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1986:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1979:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1979:9:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1974:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1954:3:3",
																"statements": []
															},
															"src": "1950:195:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2154:11:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2162:3:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2154:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1633:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1644:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1655:4:3",
														"type": ""
													}
												],
												"src": "1513:658:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2277:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2287:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2299:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2310:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2295:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2295:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2287:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2329:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2340:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2322:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2246:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2257:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2268:4:3",
														"type": ""
													}
												],
												"src": "2176:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2653:700:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2696:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2717:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2724:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2729:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2720:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2720:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2710:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2710:31:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2710:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2761:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2764:4:3",
																					"type": "",
																					"value": "0x21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2754:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2754:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2754:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2789:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2792:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2782:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2782:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2782:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2676:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2684:1:3",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2673:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2673:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2666:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2666:21:3"
															},
															"nodeType": "YulIf",
															"src": "2663:144:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2823:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2834:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2816:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2816:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2816:25:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2861:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2872:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2857:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2857:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2877:3:3",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2850:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2850:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2850:31:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2890:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2910:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2904:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2904:13:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2894:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2937:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2948:3:3",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2933:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2933:19:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2954:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2926:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2926:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2926:35:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2970:13:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2980:3:3",
																"type": "",
																"value": "256"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2974:2:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3018:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3026:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3014:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3014:15:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3035:9:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3046:2:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3031:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3031:18:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3051:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2992:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2992:66:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2992:66:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3067:62:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3083:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3102:6:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3110:2:3",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3098:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3098:15:3"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3119:2:3",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3115:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3115:7:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3094:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3094:29:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3079:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3079:45:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3126:2:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3075:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3075:54:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3067:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3149:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3160:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3145:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3145:18:3"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3165:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3138:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3138:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3138:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3192:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3203:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3188:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3188:18:3"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "3208:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3181:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3181:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3181:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3235:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3246:3:3",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3231:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3231:19:3"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "3252:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3224:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3224:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3224:35:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3279:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3290:3:3",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3275:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3275:19:3"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "3296:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3268:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3268:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3268:35:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3323:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3334:3:3",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3319:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3319:19:3"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "3340:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3312:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3312:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3312:35:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Role_$228_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint8_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2574:9:3",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "2585:6:3",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2593:6:3",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2601:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2609:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2617:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2625:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2633:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2644:4:3",
														"type": ""
													}
												],
												"src": "2358:995:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3532:231:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3549:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3560:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3542:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3542:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3542:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3583:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3594:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3579:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3579:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3599:2:3",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3572:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3572:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3572:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3622:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3633:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3618:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3618:18:3"
																	},
																	{
																		"hexValue": "596f7520617265206e6f7420746865206f776e6572206f722070726976617465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3638:34:3",
																		"type": "",
																		"value": "You are not the owner or private"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3611:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3611:62:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3611:62:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3693:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3704:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3689:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3689:18:3"
																	},
																	{
																		"hexValue": "2070726f7669646572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3709:11:3",
																		"type": "",
																		"value": " provider"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3682:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3682:39:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3682:39:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3730:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3742:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3753:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3738:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3738:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3730:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3509:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3523:4:3",
														"type": ""
													}
												],
												"src": "3358:405:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3942:164:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3959:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3970:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3952:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3952:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3952:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3993:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4004:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3989:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3989:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4009:2:3",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3982:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3982:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3982:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4032:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4043:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4028:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4028:18:3"
																	},
																	{
																		"hexValue": "596f7572206e6f742061646d696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4048:16:3",
																		"type": "",
																		"value": "Your not admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4021:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4021:44:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4021:44:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4074:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4086:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4097:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4082:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4082:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4074:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3919:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3933:4:3",
														"type": ""
													}
												],
												"src": "3768:338:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4212:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4222:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4234:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4245:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4230:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4230:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4222:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4264:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4275:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4257:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4257:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4257:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4181:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4192:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4203:4:3",
														"type": ""
													}
												],
												"src": "4111:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4346:205:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4356:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4365:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4360:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4425:63:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "4450:3:3"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4455:1:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4446:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4446:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "4469:3:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4474:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4465:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4465:11:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4459:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4459:18:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4439:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4439:39:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4439:39:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4386:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4389:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4383:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4383:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4397:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4399:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4408:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4411:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4404:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4404:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4399:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4379:3:3",
																"statements": []
															},
															"src": "4375:113:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4514:31:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "4527:3:3"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "4532:6:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4523:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4523:16:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4541:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4516:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4516:27:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4516:27:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4503:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4506:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4500:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4500:13:3"
															},
															"nodeType": "YulIf",
															"src": "4497:48:3"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4324:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "4329:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4334:6:3",
														"type": ""
													}
												],
												"src": "4293:258:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4611:325:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4621:22:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4635:1:3",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4638:4:3"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4631:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4631:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4621:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4652:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4682:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4688:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4678:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4678:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4656:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4729:31:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4731:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4745:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4753:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4741:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4741:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4731:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4709:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4702:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4702:26:3"
															},
															"nodeType": "YulIf",
															"src": "4699:61:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4819:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4840:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4847:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4852:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4843:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4843:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4833:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4833:31:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4833:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4884:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4887:4:3",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4877:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4877:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4877:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4912:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4915:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4905:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4905:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4905:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4775:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4798:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4806:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4795:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4795:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4772:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:38:3"
															},
															"nodeType": "YulIf",
															"src": "4769:161:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4591:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4600:6:3",
														"type": ""
													}
												],
												"src": "4556:380:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4973:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4990:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4997:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5002:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4993:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4993:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4983:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4983:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4983:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5030:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5033:4:3",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5023:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5023:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5023:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5054:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5057:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5047:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5047:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5047:15:3"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "4941:127:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5105:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5122:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5129:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5134:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5125:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5125:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5115:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5115:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5115:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5162:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5165:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5155:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5155:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5155:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5186:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5189:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5179:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5179:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5179:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5073:127:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_enum$_Role_$228_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint8_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        if iszero(lt(value0, 5))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 224)\n        let length := mload(value1)\n        mstore(add(headStart, 224), length)\n        let _1 := 256\n        copy_memory_to_memory(add(value1, 32), add(headStart, _1), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), _1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_encode_tuple_t_stringliteral_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"You are not the owner or private\")\n        mstore(add(headStart, 96), \" provider\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Your not admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061008e5760003560e01c80630761c8b9146100935780632599d6d0146100af57806372f0d72b146100db5780637f89128f146101075780638e4f8c6b1461011c578063948942ad1461012f57806399067ede14610138578063b06cdc1214610153578063c10e39111461017f578063fc83725914610187575b600080fd5b61009c60025481565b6040519081526020015b60405180910390f35b61009c6100bd366004610482565b6001600160a01b031660009081526020819052604090206004015490565b61009c6100e9366004610482565b6001600160a01b031660009081526020819052604090206006015490565b61010f6101ad565b6040516100a6919061057e565b61009c61012a3660046104b2565b610278565b61009c60035481565b61009c610146366004610482565b6001600160a01b03163190565b61009c610161366004610482565b6001600160a01b031660009081526020819052604090206005015490565b61010f6102a8565b61019a610195366004610482565b6103bb565b6040516100a697969594939291906105cb565b606060003360009081526020819052604090205460ff1660048111156101d5576101d56106b2565b146102185760405162461bcd60e51b815260206004820152600e60248201526d2cb7bab9103737ba1030b236b4b760911b60448201526064015b60405180910390fd5b600880548060200260200160405190810160405280929190818152602001828054801561026e57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610250575b5050505050905090565b60008160405160200161028b9190610562565b604051602081830303815290604052805190602001209050919050565b606060003360009081526020819052604090205460ff1660048111156102d0576102d06106b2565b14806102ff575060023360009081526020819052604090205460ff1660048111156102fd576102fd6106b2565b145b61035d5760405162461bcd60e51b815260206004820152602960248201527f596f7520617265206e6f7420746865206f776e6572206f72207072697661746560448201526810383937bb34b232b960b91b606482015260840161020f565b600780548060200260200160405190810160405280929190818152602001828054801561026e576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610250575050505050905090565b6000602081905290815260409020805460018201805460ff90921692916103e190610677565b80601f016020809104026020016040519081016040528092919081815260200182805461040d90610677565b801561045a5780601f1061042f5761010080835404028352916020019161045a565b820191906000526020600020905b81548152906001019060200180831161043d57829003601f168201915b5050505050908060020154908060030154908060040154908060050154908060060154905087565b60006020828403121561049457600080fd5b81356001600160a01b03811681146104ab57600080fd5b9392505050565b6000602082840312156104c457600080fd5b81356001600160401b03808211156104db57600080fd5b818401915084601f8301126104ef57600080fd5b813581811115610501576105016106c8565b604051601f8201601f19908116603f01168101908382118183101715610529576105296106c8565b8160405282815287602084870101111561054257600080fd5b826020860160208301376000928101602001929092525095945050505050565b60008251610574818460208701610647565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b818110156105bf5783516001600160a01b03168352928401929184019160010161059a565b50909695505050505050565b6000600589106105eb57634e487b7160e01b600052602160045260246000fd5b88825260e0602083015287518060e08401526101006106108282860160208d01610647565b6040840198909852606083019690965250608081019390935260a083019190915260c0820152601f909101601f1916010192915050565b60005b8381101561066257818101518382015260200161064a565b83811115610671576000848401525b50505050565b600181811c9082168061068b57607f821691505b602082108114156106ac57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220e25d434c0e48b3860483a0c37e2dedd5771d74979f6a5f016a93798afcc62b6a64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761C8B9 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x2599D6D0 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x72F0D72B EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x7F89128F EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x8E4F8C6B EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x948942AD EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x99067EDE EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xB06CDC12 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0xC10E3911 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xFC837259 EQ PUSH2 0x187 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH2 0xBD CALLDATASIZE PUSH1 0x4 PUSH2 0x482 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x9C PUSH2 0xE9 CALLDATASIZE PUSH1 0x4 PUSH2 0x482 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x10F PUSH2 0x1AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x57E JUMP JUMPDEST PUSH2 0x9C PUSH2 0x12A CALLDATASIZE PUSH1 0x4 PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x278 JUMP JUMPDEST PUSH2 0x9C PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x9C PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0x482 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE SWAP1 JUMP JUMPDEST PUSH2 0x9C PUSH2 0x161 CALLDATASIZE PUSH1 0x4 PUSH2 0x482 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x10F PUSH2 0x2A8 JUMP JUMPDEST PUSH2 0x19A PUSH2 0x195 CALLDATASIZE PUSH1 0x4 PUSH2 0x482 JUMP JUMPDEST PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1D5 JUMPI PUSH2 0x1D5 PUSH2 0x6B2 JUMP JUMPDEST EQ PUSH2 0x218 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x2CB7BAB9103737BA1030B236B4B7 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x26E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x250 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x562 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2D0 JUMPI PUSH2 0x2D0 PUSH2 0x6B2 JUMP JUMPDEST EQ DUP1 PUSH2 0x2FF JUMPI POP PUSH1 0x2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2FD JUMPI PUSH2 0x2FD PUSH2 0x6B2 JUMP JUMPDEST EQ JUMPDEST PUSH2 0x35D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F7420746865206F776E6572206F722070726976617465 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x10383937BB34B232B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x20F JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x26E JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x250 JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH2 0x3E1 SWAP1 PUSH2 0x677 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x40D SWAP1 PUSH2 0x677 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x45A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x42F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x45A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x43D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x4DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x501 JUMPI PUSH2 0x501 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x529 JUMPI PUSH2 0x529 PUSH2 0x6C8 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x574 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x647 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5BF JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x59A JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP10 LT PUSH2 0x5EB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP9 DUP3 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP4 ADD MSTORE DUP8 MLOAD DUP1 PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 PUSH2 0x610 DUP3 DUP3 DUP7 ADD PUSH1 0x20 DUP14 ADD PUSH2 0x647 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x60 DUP4 ADD SWAP7 SWAP1 SWAP7 MSTORE POP PUSH1 0x80 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xA0 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x662 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x64A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x671 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x68B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x6AC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 0x5D NUMBER 0x4C 0xE BASEFEE 0xB3 DUP7 DIV DUP4 LOG0 0xC3 PUSH31 0x2DEDD5771D74979F6A5F016A93798AFCC62B6A64736F6C6343000807003300 ",
							"sourceMap": "104:1605:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1123:38:2;;;;;;;;;2322:25:3;;;2310:2;2295:18;1123:38:2;;;;;;;;849:139:0;;;;;;:::i;:::-;-1:-1:-1;;;;;945:22:0;918:7;945:22;;;;;;;;;;:35;;;;849:139;1352:143;;;;;;:::i;:::-;-1:-1:-1;;;;;1450:22:0;1423:7;1450:22;;;;;;;;;;:37;;;;1352:143;632:110;;;:::i;:::-;;;;;;;:::i;212:138::-;;;;;;:::i;:::-;;:::i;1385:33:2:-;;;;;;1595:111:0;;;;;;:::i;:::-;-1:-1:-1;;;;;1678:20:0;;;1595:111;1098:145;;;;;;:::i;:::-;-1:-1:-1;;;;;1197:22:0;1170:7;1197:22;;;;;;;;;;:38;;;;1098:145;426:128;;;:::i;836:51:2:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;632:110:0:-;688:16;320:17:1;300:10;287:12;:24;;;;;;;;;;:29;;;:50;;;;;;;;:::i;:::-;;279:77;;;;-1:-1:-1;;;279:77:1;;3970:2:3;279:77:1;;;3952:21:3;4009:2;3989:18;;;3982:30;-1:-1:-1;;;4028:18:3;;;4021:44;4082:18;;279:77:1;;;;;;;;;724:9:0::1;717:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;717:17:0::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;;;;632:110:::0;:::o;212:138::-;276:7;334:5;317:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;307:34;;;;;;300:42;;212:138;;;:::o;426:128::-;500:16;1116:17:1;1096:10;1083:12;:24;;;;;;;;;;:29;;;:50;;;;;;;;:::i;:::-;;:106;;;-1:-1:-1;1170:19:1;1150:10;1137:12;:24;;;;;;;;;;:29;;;:52;;;;;;;;:::i;:::-;;1083:106;1075:160;;;;-1:-1:-1;;;1075:160:1;;3560:2:3;1075:160:1;;;3542:21:3;3599:2;3579:18;;;3572:30;3638:34;3618:18;;;3611:62;-1:-1:-1;;;3689:18:3;;;3682:39;3738:19;;1075:160:1;3358:405:3;1075:160:1;536:9:0::1;529:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;529:17:0::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;;;426:128:::0;:::o;836:51:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:286:3:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:3;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:3:o;305:922::-;374:6;427:2;415:9;406:7;402:23;398:32;395:52;;;443:1;440;433:12;395:52;470:23;;-1:-1:-1;;;;;542:14:3;;;539:34;;;569:1;566;559:12;539:34;607:6;596:9;592:22;582:32;;652:7;645:4;641:2;637:13;633:27;623:55;;674:1;671;664:12;623:55;710:2;697:16;732:2;728;725:10;722:36;;;738:18;;:::i;:::-;813:2;807:9;781:2;867:13;;-1:-1:-1;;863:22:3;;;887:2;859:31;855:40;843:53;;;911:18;;;931:22;;;908:46;905:72;;;957:18;;:::i;:::-;997:10;993:2;986:22;1032:2;1024:6;1017:18;1072:7;1067:2;1062;1058;1054:11;1050:20;1047:33;1044:53;;;1093:1;1090;1083:12;1044:53;1149:2;1144;1140;1136:11;1131:2;1123:6;1119:15;1106:46;1194:1;1172:15;;;1189:2;1168:24;1161:35;;;;-1:-1:-1;1176:6:3;305:922;-1:-1:-1;;;;;305:922:3:o;1232:276::-;1363:3;1401:6;1395:13;1417:53;1463:6;1458:3;1451:4;1443:6;1439:17;1417:53;:::i;:::-;1486:16;;;;;1232:276;-1:-1:-1;;1232:276:3:o;1513:658::-;1684:2;1736:21;;;1806:13;;1709:18;;;1828:22;;;1655:4;;1684:2;1907:15;;;;1881:2;1866:18;;;1655:4;1950:195;1964:6;1961:1;1958:13;1950:195;;;2029:13;;-1:-1:-1;;;;;2025:39:3;2013:52;;2120:15;;;;2085:12;;;;2061:1;1979:9;1950:195;;;-1:-1:-1;2162:3:3;;1513:658;-1:-1:-1;;;;;;1513:658:3:o;2358:995::-;2644:4;2684:1;2676:6;2673:13;2663:144;;2729:10;2724:3;2720:20;2717:1;2710:31;2764:4;2761:1;2754:15;2792:4;2789:1;2782:15;2663:144;2834:6;2823:9;2816:25;2877:3;2872:2;2861:9;2857:18;2850:31;2910:6;2904:13;2954:6;2948:3;2937:9;2933:19;2926:35;2980:3;2992:66;3051:6;3046:2;3035:9;3031:18;3026:2;3018:6;3014:15;2992:66;:::i;:::-;3160:2;3145:18;;3138:34;;;;3203:2;3188:18;;3181:34;;;;-1:-1:-1;3246:3:3;3231:19;;3224:35;;;;3290:3;3275:19;;3268:35;;;;3334:3;3319:19;;3312:35;3119:2;3098:15;;;-1:-1:-1;;3094:29:3;3079:45;3075:54;;;-1:-1:-1;;2358:995:3:o;4293:258::-;4365:1;4375:113;4389:6;4386:1;4383:13;4375:113;;;4465:11;;;4459:18;4446:11;;;4439:39;4411:2;4404:10;4375:113;;;4506:6;4503:1;4500:13;4497:48;;;4541:1;4532:6;4527:3;4523:16;4516:27;4497:48;;4293:258;;;:::o;4556:380::-;4635:1;4631:12;;;;4678;;;4699:61;;4753:4;4745:6;4741:17;4731:27;;4699:61;4806:2;4798:6;4795:14;4775:18;4772:38;4769:161;;;4852:10;4847:3;4843:20;4840:1;4833:31;4887:4;4884:1;4877:15;4915:4;4912:1;4905:15;4769:161;;4556:380;;;:::o;4941:127::-;5002:10;4997:3;4993:20;4990:1;4983:31;5033:4;5030:1;5023:15;5057:4;5054:1;5047:15;5073:127;5134:10;5129:3;5125:20;5122:1;5115:31;5165:4;5162:1;5155:15;5189:4;5186:1;5179:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "362400",
								"executionCost": "44611",
								"totalCost": "407011"
							},
							"external": {
								"getBalanceEth(address)": "3032",
								"getBalancePrivateToken(address)": "2632",
								"getBalancePublicToken(address)": "2522",
								"getBalanceSeedToken(address)": "2500",
								"get_blackList()": "infinite",
								"get_keccak256(string)": "infinite",
								"get_whiteList()": "infinite",
								"structUsers_(address)": "infinite",
								"tokenAmount_()": "2372",
								"tokenPrice_()": "2262"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 104,
									"end": 1709,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1152,
									"end": 1161,
									"name": "PUSH",
									"source": 2,
									"value": "2CB41780"
								},
								{
									"begin": 1123,
									"end": 1161,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1123,
									"end": 1161,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1412,
									"end": 1418,
									"name": "PUSH",
									"source": 2,
									"value": "186A0"
								},
								{
									"begin": 1385,
									"end": 1418,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1385,
									"end": 1418,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 104,
									"end": 1709,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e25d434c0e48b3860483a0c37e2dedd5771d74979f6a5f016a93798afcc62b6a64736f6c63430008070033",
									".code": [
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "761C8B9"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "2599D6D0"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "72F0D72B"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "7F89128F"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "8E4F8C6B"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "948942AD"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "99067EDE"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "B06CDC12"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "C10E3911"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "FC837259"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 104,
											"end": 1709,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2347,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2322,
											"end": 2347,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2322,
											"end": 2347,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2310,
											"end": 2312,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2295,
											"end": 2313,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 849,
											"end": 988,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 849,
											"end": 988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 945,
											"end": 967,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 918,
											"end": 925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 945,
											"end": 967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 945,
											"end": 967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 945,
											"end": 967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 945,
											"end": 967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 945,
											"end": 967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 945,
											"end": 967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 945,
											"end": 967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 945,
											"end": 967,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 945,
											"end": 967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 945,
											"end": 967,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 945,
											"end": 980,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 945,
											"end": 980,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 945,
											"end": 980,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 945,
											"end": 980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 849,
											"end": 988,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1423,
											"end": 1430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1472,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1487,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1450,
											"end": 1487,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1487,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1495,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1595,
											"end": 1706,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1595,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1595,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1595,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1595,
											"end": 1706,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1595,
											"end": 1706,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1595,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1595,
											"end": 1706,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1595,
											"end": 1706,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1595,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1678,
											"end": 1698,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1698,
											"name": "BALANCE",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1595,
											"end": 1706,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1177,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1219,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1235,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1197,
											"end": 1235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1235,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1197,
											"end": 1235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1243,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 426,
											"end": 554,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 426,
											"end": 554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 426,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 426,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 426,
											"end": 554,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 632,
											"end": 742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 688,
											"end": 704,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 320,
											"end": 337,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 300,
											"end": 310,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 287,
											"end": 299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 287,
											"end": 311,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 287,
											"end": 311,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 287,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 287,
											"end": 311,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 287,
											"end": 311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 287,
											"end": 311,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 287,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 287,
											"end": 311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 287,
											"end": 311,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 287,
											"end": 316,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 287,
											"end": 316,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 287,
											"end": 316,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 287,
											"end": 337,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 287,
											"end": 337,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 287,
											"end": 337,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 287,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 287,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 287,
											"end": 337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 287,
											"end": 337,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 279,
											"end": 356,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 279,
											"end": 356,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3970,
											"end": 3972,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 279,
											"end": 356,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 279,
											"end": 356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3973,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4009,
											"end": 4011,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 3989,
											"end": 4007,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3989,
											"end": 4007,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3989,
											"end": 4007,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3982,
											"end": 4012,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CB7BAB9103737BA1030B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4028,
											"end": 4046,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4028,
											"end": 4046,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4028,
											"end": 4046,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4021,
											"end": 4065,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4082,
											"end": 4100,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4082,
											"end": 4100,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 279,
											"end": 356,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 279,
											"end": 356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 279,
											"end": 356,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 279,
											"end": 356,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 279,
											"end": 356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 724,
											"end": 733,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 717,
											"end": 734,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 717,
											"end": 734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 742,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 212,
											"end": 350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 276,
											"end": 283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 317,
											"end": 340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 317,
											"end": 340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 307,
											"end": 341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 341,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 307,
											"end": 341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 341,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 307,
											"end": 341,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 307,
											"end": 341,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 300,
											"end": 342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 300,
											"end": 342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 350,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 426,
											"end": 554,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 426,
											"end": 554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 500,
											"end": 516,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1116,
											"end": 1133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1096,
											"end": 1106,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1107,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1112,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1112,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1083,
											"end": 1112,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1133,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1083,
											"end": 1189,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1170,
											"end": 1189,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1150,
											"end": 1160,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1166,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1166,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1137,
											"end": 1166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1137,
											"end": 1189,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1189,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1083,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3560,
											"end": 3562,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3563,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3599,
											"end": 3601,
											"name": "PUSH",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3572,
											"end": 3602,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3672,
											"name": "PUSH",
											"source": 3,
											"value": "596F7520617265206E6F7420746865206F776E6572206F722070726976617465"
										},
										{
											"begin": 3618,
											"end": 3636,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3618,
											"end": 3636,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3618,
											"end": 3636,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3611,
											"end": 3673,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "10383937BB34B232B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3689,
											"end": 3707,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3689,
											"end": 3707,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3689,
											"end": 3707,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3682,
											"end": 3721,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3738,
											"end": 3757,
											"name": "PUSH",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3738,
											"end": 3757,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3358,
											"end": 3763,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1075,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 536,
											"end": 545,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 529,
											"end": 546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 529,
											"end": 546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 426,
											"end": 554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 426,
											"end": 554,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 305,
											"end": 1227,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 305,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 374,
											"end": 380,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 427,
											"end": 429,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 406,
											"end": 413,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 402,
											"end": 425,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 398,
											"end": 430,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 395,
											"end": 447,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 395,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 395,
											"end": 447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 395,
											"end": 447,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 395,
											"end": 447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 470,
											"end": 493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 470,
											"end": 493,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 542,
											"end": 556,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 542,
											"end": 556,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 542,
											"end": 556,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 539,
											"end": 573,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 539,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 539,
											"end": 573,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 569,
											"end": 570,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 567,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 559,
											"end": 571,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 539,
											"end": 573,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 539,
											"end": 573,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 607,
											"end": 613,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 596,
											"end": 605,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 592,
											"end": 614,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 582,
											"end": 614,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 582,
											"end": 614,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 652,
											"end": 659,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 645,
											"end": 649,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 641,
											"end": 643,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 637,
											"end": 650,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 633,
											"end": 660,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 623,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 623,
											"end": 678,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 674,
											"end": 675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 672,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 664,
											"end": 676,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 623,
											"end": 678,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 623,
											"end": 678,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 710,
											"end": 712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 697,
											"end": 713,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 732,
											"end": 734,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 728,
											"end": 730,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 725,
											"end": 735,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 722,
											"end": 758,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 722,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 722,
											"end": 758,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 738,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 738,
											"end": 756,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 813,
											"end": 815,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 816,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 781,
											"end": 783,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 867,
											"end": 880,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 867,
											"end": 880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 863,
											"end": 885,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 863,
											"end": 885,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 863,
											"end": 885,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 887,
											"end": 889,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 859,
											"end": 890,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 855,
											"end": 895,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 843,
											"end": 896,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 843,
											"end": 896,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 843,
											"end": 896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 911,
											"end": 929,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 911,
											"end": 929,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 911,
											"end": 929,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 931,
											"end": 953,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 931,
											"end": 953,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 931,
											"end": 953,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 908,
											"end": 954,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 905,
											"end": 977,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 905,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 905,
											"end": 977,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 957,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 957,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 957,
											"end": 975,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 957,
											"end": 975,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 957,
											"end": 975,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1007,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 993,
											"end": 995,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 986,
											"end": 1008,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1034,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1030,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1017,
											"end": 1035,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1072,
											"end": 1079,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1067,
											"end": 1069,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1064,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1058,
											"end": 1060,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1054,
											"end": 1065,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1050,
											"end": 1070,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1047,
											"end": 1080,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1097,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1044,
											"end": 1097,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1093,
											"end": 1094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1090,
											"end": 1091,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1083,
											"end": 1095,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1044,
											"end": 1097,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1044,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1149,
											"end": 1151,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1144,
											"end": 1146,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1147,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1131,
											"end": 1133,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1123,
											"end": 1129,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1134,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1106,
											"end": 1152,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 1194,
											"end": 1195,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1187,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1187,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1187,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1191,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1168,
											"end": 1192,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1196,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1196,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1196,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1196,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1176,
											"end": 1182,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 305,
											"end": 1227,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 305,
											"end": 1227,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1232,
											"end": 1508,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 1232,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1363,
											"end": 1366,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 1407,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1395,
											"end": 1408,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1417,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1458,
											"end": 1461,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1451,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1443,
											"end": 1449,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1439,
											"end": 1456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1417,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1417,
											"end": 1470,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1417,
											"end": 1470,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1417,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1508,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1232,
											"end": 1508,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1513,
											"end": 2171,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1513,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1686,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1736,
											"end": 1757,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1736,
											"end": 1757,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1736,
											"end": 1757,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1806,
											"end": 1819,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1806,
											"end": 1819,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1727,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1727,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1709,
											"end": 1727,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1850,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1850,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1828,
											"end": 1850,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1655,
											"end": 1659,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1655,
											"end": 1659,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1686,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1907,
											"end": 1922,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1907,
											"end": 1922,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1907,
											"end": 1922,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1907,
											"end": 1922,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 1883,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1866,
											"end": 1884,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1866,
											"end": 1884,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1866,
											"end": 1884,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1655,
											"end": 1659,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2145,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1950,
											"end": 2145,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1961,
											"end": 1962,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1958,
											"end": 1971,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2145,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1950,
											"end": 2145,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2029,
											"end": 2042,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2029,
											"end": 2042,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2025,
											"end": 2064,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2013,
											"end": 2065,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2013,
											"end": 2065,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2120,
											"end": 2135,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2120,
											"end": 2135,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2120,
											"end": 2135,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2120,
											"end": 2135,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2085,
											"end": 2097,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2085,
											"end": 2097,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2085,
											"end": 2097,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2085,
											"end": 2097,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2061,
											"end": 2062,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1979,
											"end": 1988,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1950,
											"end": 2145,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1950,
											"end": 2145,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1950,
											"end": 2145,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2162,
											"end": 2165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2165,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 2171,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 2171,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2358,
											"end": 3353,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2358,
											"end": 3353,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2644,
											"end": 2648,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2676,
											"end": 2682,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 2673,
											"end": 2686,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2663,
											"end": 2807,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2729,
											"end": 2739,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 2724,
											"end": 2727,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2720,
											"end": 2740,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2717,
											"end": 2718,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2764,
											"end": 2768,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2754,
											"end": 2769,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2792,
											"end": 2796,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2789,
											"end": 2790,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2782,
											"end": 2797,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2807,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2663,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2834,
											"end": 2840,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 2823,
											"end": 2832,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2816,
											"end": 2841,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 2880,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2872,
											"end": 2874,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2857,
											"end": 2875,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2881,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2910,
											"end": 2916,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2904,
											"end": 2917,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2948,
											"end": 2951,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2937,
											"end": 2946,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2933,
											"end": 2952,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2926,
											"end": 2961,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2980,
											"end": 2983,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2992,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3051,
											"end": 3057,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3046,
											"end": 3048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3035,
											"end": 3044,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3031,
											"end": 3049,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3026,
											"end": 3028,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "DUP14",
											"source": 3
										},
										{
											"begin": 3014,
											"end": 3029,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2992,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2992,
											"end": 3058,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2992,
											"end": 3058,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2992,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3160,
											"end": 3162,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3145,
											"end": 3163,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3145,
											"end": 3163,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3203,
											"end": 3205,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3188,
											"end": 3206,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3188,
											"end": 3206,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3215,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3215,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3215,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 3181,
											"end": 3215,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3246,
											"end": 3249,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3231,
											"end": 3250,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3231,
											"end": 3250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3224,
											"end": 3259,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3224,
											"end": 3259,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3224,
											"end": 3259,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3224,
											"end": 3259,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3290,
											"end": 3293,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 3275,
											"end": 3294,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3275,
											"end": 3294,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3303,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3303,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3303,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3334,
											"end": 3337,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 3319,
											"end": 3338,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3319,
											"end": 3338,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3312,
											"end": 3347,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3119,
											"end": 3121,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3098,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3113,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3094,
											"end": 3123,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3124,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3075,
											"end": 3129,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3075,
											"end": 3129,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3075,
											"end": 3129,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2358,
											"end": 3353,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4293,
											"end": 4551,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4293,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4365,
											"end": 4366,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4375,
											"end": 4488,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 4375,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4389,
											"end": 4395,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4386,
											"end": 4387,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4383,
											"end": 4396,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4488,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4375,
											"end": 4488,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4465,
											"end": 4476,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4465,
											"end": 4476,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4465,
											"end": 4476,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4459,
											"end": 4477,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4446,
											"end": 4457,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4446,
											"end": 4457,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4446,
											"end": 4457,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4439,
											"end": 4478,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4411,
											"end": 4413,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4404,
											"end": 4414,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 4375,
											"end": 4488,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4488,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4375,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4506,
											"end": 4512,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4503,
											"end": 4504,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4500,
											"end": 4513,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4497,
											"end": 4545,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4497,
											"end": 4545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 4497,
											"end": 4545,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4541,
											"end": 4542,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4532,
											"end": 4538,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4527,
											"end": 4530,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4539,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4516,
											"end": 4543,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4497,
											"end": 4545,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 4497,
											"end": 4545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4497,
											"end": 4545,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4551,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4551,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4551,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4551,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4556,
											"end": 4936,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 4556,
											"end": 4936,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4635,
											"end": 4636,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4631,
											"end": 4643,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4643,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4643,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4643,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4678,
											"end": 4690,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4678,
											"end": 4690,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4678,
											"end": 4690,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4699,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 4699,
											"end": 4760,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4753,
											"end": 4757,
											"name": "PUSH",
											"source": 3,
											"value": "7F"
										},
										{
											"begin": 4745,
											"end": 4751,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4741,
											"end": 4758,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4731,
											"end": 4758,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4731,
											"end": 4758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4699,
											"end": 4760,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 4699,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4806,
											"end": 4808,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4798,
											"end": 4804,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4795,
											"end": 4809,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4775,
											"end": 4793,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4772,
											"end": 4810,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4930,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 4769,
											"end": 4930,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4852,
											"end": 4862,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 4847,
											"end": 4850,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 4843,
											"end": 4863,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 4840,
											"end": 4841,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4833,
											"end": 4864,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4887,
											"end": 4891,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 4884,
											"end": 4885,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4877,
											"end": 4892,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4915,
											"end": 4919,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4912,
											"end": 4913,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4905,
											"end": 4920,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4930,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 4769,
											"end": 4930,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4769,
											"end": 4930,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4556,
											"end": 4936,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4556,
											"end": 4936,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4556,
											"end": 4936,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4556,
											"end": 4936,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4941,
											"end": 5068,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4941,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5012,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 4997,
											"end": 5000,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 4993,
											"end": 5013,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 4991,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4983,
											"end": 5014,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5033,
											"end": 5037,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 5030,
											"end": 5031,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5023,
											"end": 5038,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5057,
											"end": 5061,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5054,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5047,
											"end": 5062,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5073,
											"end": 5200,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 5073,
											"end": 5200,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5134,
											"end": 5144,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 5129,
											"end": 5132,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 5125,
											"end": 5145,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 5122,
											"end": 5123,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5115,
											"end": 5146,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5165,
											"end": 5169,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 5162,
											"end": 5163,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5155,
											"end": 5170,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5189,
											"end": 5193,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5186,
											"end": 5187,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5179,
											"end": 5194,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getBalanceEth(address)": "99067ede",
							"getBalancePrivateToken(address)": "b06cdc12",
							"getBalancePublicToken(address)": "72f0d72b",
							"getBalanceSeedToken(address)": "2599d6d0",
							"get_blackList()": "7f89128f",
							"get_keccak256(string)": "8e4f8c6b",
							"get_whiteList()": "c10e3911",
							"structUsers_(address)": "fc837259",
							"tokenAmount_()": "948942ad",
							"tokenPrice_()": "0761c8b9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"getBalanceEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAdr\",\"type\":\"address\"}],\"name\":\"getBalancePrivateToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAdr\",\"type\":\"address\"}],\"name\":\"getBalancePublicToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAdr\",\"type\":\"address\"}],\"name\":\"getBalanceSeedToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_blackList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"get_keccak256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_whiteList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"structUsers_\",\"outputs\":[{\"internalType\":\"enum structures.Role\",\"name\":\"role\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"login\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"password\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"balance_overall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance_seed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance_private\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance_public\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAmount_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":\"helpresFunc\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol\":{\"keccak256\":\"0x3ddbddb851b15da5ec8f16c56887cf73d7f4357c7121b35680c335fe17b3810e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://67e0c2995856ad3955ca0230b92cfbdea7e8efdee28de165f6e2f206666250cd\",\"dweb:/ipfs/QmRq59xFmiH4iDQFfkUZgeow2Khgeeh2qPRG8SEao3SUEC\"]},\"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":{\"keccak256\":\"0x791815edf6d8d205da15be693b57ddde64d7cf3bf65ad29c748e9e98c1f675ac\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://de960745a1c9cf451cc7401bef8c7090fec7892241a55138c64740527bc9e11c\",\"dweb:/ipfs/QmNdesY61PZkUX2jpu1FqgUURAPcFWybkSCLG98zrHtsFG\"]},\"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":{\"keccak256\":\"0xb7e1ff8a289e5c363e3e72f6a72d2cfb8f2292fab11020fa270a3f192df9a512\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d1dcc0b7802d1d7b612433cf525e945e62862710c1bdb1e6c77ad6d870571a8b\",\"dweb:/ipfs/QmRnaJJqfNpRWWxvhsDPpd8LYqpzNmxjaVqmbXpSp4mUQE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 249,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "structUsers_",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(structUser)244_storage)"
							},
							{
								"astId": 255,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "allowed",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 258,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "tokenPrice_",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 261,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "tokenAmount_",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 280,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "structPhases_",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(structPhase)275_storage)"
							},
							{
								"astId": 296,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "strucApplications_",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(structApplication)291_storage)"
							},
							{
								"astId": 299,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "structApplicationsAmountAdr",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 302,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "whiteList",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 305,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
								"label": "blackList",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(Role)228": {
								"encoding": "inplace",
								"label": "enum structures.Role",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(structApplication)291_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structApplication)",
								"numberOfBytes": "32",
								"value": "t_struct(structApplication)291_storage"
							},
							"t_mapping(t_address,t_struct(structPhase)275_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structPhase)",
								"numberOfBytes": "32",
								"value": "t_struct(structPhase)275_storage"
							},
							"t_mapping(t_address,t_struct(structUser)244_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structUser)",
								"numberOfBytes": "32",
								"value": "t_struct(structUser)244_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(structApplication)291_storage": {
								"encoding": "inplace",
								"label": "struct structures.structApplication",
								"members": [
									{
										"astId": 282,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 284,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "contactForCommunication",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 286,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "userAdr",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 288,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "status",
										"offset": 20,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 290,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "exist",
										"offset": 21,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(structPhase)275_storage": {
								"encoding": "inplace",
								"label": "struct structures.structPhase",
								"members": [
									{
										"astId": 272,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "statusPhase",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 274,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "reviewed",
										"offset": 1,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(structUser)244_storage": {
								"encoding": "inplace",
								"label": "struct structures.structUser",
								"members": [
									{
										"astId": 231,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "role",
										"offset": 0,
										"slot": "0",
										"type": "t_enum(Role)228"
									},
									{
										"astId": 233,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "login",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 235,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "password",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									},
									{
										"astId": 237,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "balance_overall",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 239,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "balance_seed",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 241,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "balance_private",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 243,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol:helpresFunc",
										"label": "balance_public",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol": {
				"modifireFunc": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "structUsers_",
							"outputs": [
								{
									"internalType": "enum structures.Role",
									"name": "role",
									"type": "uint8"
								},
								{
									"internalType": "string",
									"name": "login",
									"type": "string"
								},
								{
									"internalType": "bytes32",
									"name": "password",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "balance_overall",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balance_seed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balance_private",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balance_public",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAmount_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenPrice_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":107:1779  contract modifireFunc is structures {\r... */\n  mstore(0x40, 0x80)\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1152:1161  750000000 */\n  0x2cb41780\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1123:1161  uint256 public tokenPrice_ = 750000000 */\n  0x02\n  sstore\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1412:1418  100000 */\n  0x0186a0\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1385:1418  uint public tokenAmount_ = 100000 */\n  0x03\n  sstore\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":107:1779  contract modifireFunc is structures {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":107:1779  contract modifireFunc is structures {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0761c8b9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x948942ad\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xfc837259\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1123:1161  uint256 public tokenPrice_ = 750000000 */\n    tag_3:\n      tag_6\n      sload(0x02)\n      dup2\n      jump\n    tag_6:\n      mload(0x40)\n        /* \"#utility.yul\":1646:1671   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1634:1636   */\n      0x20\n        /* \"#utility.yul\":1619:1637   */\n      add\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1123:1161  uint256 public tokenPrice_ = 750000000 */\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1385:1418  uint public tokenAmount_ = 100000 */\n    tag_4:\n      tag_6\n      sload(0x03)\n      dup2\n      jump\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":836:887  mapping (address => structUser) public structUsers_ */\n    tag_5:\n      tag_13\n      tag_14\n      calldatasize\n      0x04\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_8\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_16:\n      0x00\n      0x20\n      dup2\n      swap1\n      mstore\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      0xff\n      swap1\n      swap3\n      and\n      swap3\n      swap2\n      tag_19\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_21\n      swap1\n      tag_20\n      jump\t// in\n    tag_21:\n      dup1\n      iszero\n      tag_22\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_23\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_22)\n    tag_23:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_24:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_24\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_22:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      sload\n      swap1\n      pop\n      dup8\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_15:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_27\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_27:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_28\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_28:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":305:1495   */\n    tag_18:\n        /* \"#utility.yul\":591:595   */\n      0x00\n        /* \"#utility.yul\":631:632   */\n      0x05\n        /* \"#utility.yul\":623:629   */\n      dup10\n        /* \"#utility.yul\":620:633   */\n      lt\n        /* \"#utility.yul\":610:754   */\n      tag_30\n      jumpi\n        /* \"#utility.yul\":676:686   */\n      0x4e487b71\n        /* \"#utility.yul\":671:674   */\n      0xe0\n        /* \"#utility.yul\":667:687   */\n      shl\n        /* \"#utility.yul\":664:665   */\n      0x00\n        /* \"#utility.yul\":657:688   */\n      mstore\n        /* \"#utility.yul\":711:715   */\n      0x21\n        /* \"#utility.yul\":708:709   */\n      0x04\n        /* \"#utility.yul\":701:716   */\n      mstore\n        /* \"#utility.yul\":739:743   */\n      0x24\n        /* \"#utility.yul\":736:737   */\n      0x00\n        /* \"#utility.yul\":729:744   */\n      revert\n        /* \"#utility.yul\":610:754   */\n    tag_30:\n        /* \"#utility.yul\":781:787   */\n      dup9\n        /* \"#utility.yul\":770:779   */\n      dup3\n        /* \"#utility.yul\":763:788   */\n      mstore\n        /* \"#utility.yul\":807:809   */\n      0x20\n        /* \"#utility.yul\":845:848   */\n      0xe0\n        /* \"#utility.yul\":840:842   */\n      dup2\n        /* \"#utility.yul\":829:838   */\n      dup5\n        /* \"#utility.yul\":825:843   */\n      add\n        /* \"#utility.yul\":818:849   */\n      mstore\n        /* \"#utility.yul\":878:884   */\n      dup9\n        /* \"#utility.yul\":872:885   */\n      mload\n        /* \"#utility.yul\":922:928   */\n      dup1\n        /* \"#utility.yul\":916:919   */\n      0xe0\n        /* \"#utility.yul\":905:914   */\n      dup6\n        /* \"#utility.yul\":901:920   */\n      add\n        /* \"#utility.yul\":894:929   */\n      mstore\n        /* \"#utility.yul\":947:948   */\n      0x00\n        /* \"#utility.yul\":957:1098   */\n    tag_31:\n        /* \"#utility.yul\":971:977   */\n      dup2\n        /* \"#utility.yul\":968:969   */\n      dup2\n        /* \"#utility.yul\":965:978   */\n      lt\n        /* \"#utility.yul\":957:1098   */\n      iszero\n      tag_33\n      jumpi\n        /* \"#utility.yul\":1067:1081   */\n      dup11\n      dup2\n      add\n        /* \"#utility.yul\":1063:1086   */\n      dup4\n      add\n        /* \"#utility.yul\":1057:1087   */\n      mload\n        /* \"#utility.yul\":1032:1049   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1051:1054   */\n      0x0100\n        /* \"#utility.yul\":1028:1055   */\n      add\n        /* \"#utility.yul\":1021:1088   */\n      mstore\n        /* \"#utility.yul\":986:996   */\n      dup3\n      add\n        /* \"#utility.yul\":957:1098   */\n      jump(tag_31)\n    tag_33:\n        /* \"#utility.yul\":1116:1122   */\n      dup2\n        /* \"#utility.yul\":1113:1114   */\n      dup2\n        /* \"#utility.yul\":1110:1123   */\n      gt\n        /* \"#utility.yul\":1107:1199   */\n      iszero\n      tag_34\n      jumpi\n        /* \"#utility.yul\":1187:1188   */\n      0x00\n        /* \"#utility.yul\":1181:1184   */\n      0x0100\n        /* \"#utility.yul\":1172:1178   */\n      dup4\n        /* \"#utility.yul\":1161:1170   */\n      dup8\n        /* \"#utility.yul\":1157:1179   */\n      add\n        /* \"#utility.yul\":1153:1185   */\n      add\n        /* \"#utility.yul\":1146:1189   */\n      mstore\n        /* \"#utility.yul\":1107:1199   */\n    tag_34:\n      pop\n        /* \"#utility.yul\":1302:1304   */\n      0x40\n        /* \"#utility.yul\":1287:1305   */\n      dup5\n      add\n        /* \"#utility.yul\":1280:1314   */\n      swap9\n      swap1\n      swap9\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":1345:1347   */\n      0x60\n        /* \"#utility.yul\":1330:1348   */\n      dup2\n      add\n        /* \"#utility.yul\":1323:1357   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":1388:1391   */\n      0x80\n        /* \"#utility.yul\":1373:1392   */\n      dup5\n      add\n        /* \"#utility.yul\":1366:1401   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":1432:1435   */\n      0xa0\n        /* \"#utility.yul\":1417:1436   */\n      dup4\n      add\n        /* \"#utility.yul\":1410:1445   */\n      mstore\n        /* \"#utility.yul\":1476:1479   */\n      0xc0\n        /* \"#utility.yul\":1461:1480   */\n      dup3\n      add\n        /* \"#utility.yul\":1454:1489   */\n      mstore\n        /* \"#utility.yul\":1267:1270   */\n      0x0100\n        /* \"#utility.yul\":1260:1262   */\n      0x1f\n        /* \"#utility.yul\":1239:1254   */\n      swap1\n      swap3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1235:1264   */\n      and\n        /* \"#utility.yul\":1220:1265   */\n      add\n        /* \"#utility.yul\":1216:1271   */\n      add\n      swap3\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":305:1495   */\n      jump\t// out\n        /* \"#utility.yul\":1682:2062   */\n    tag_20:\n        /* \"#utility.yul\":1761:1762   */\n      0x01\n        /* \"#utility.yul\":1757:1769   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":1804:1816   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":1825:1886   */\n      tag_37\n      jumpi\n        /* \"#utility.yul\":1879:1883   */\n      0x7f\n        /* \"#utility.yul\":1871:1877   */\n      dup3\n        /* \"#utility.yul\":1867:1884   */\n      and\n        /* \"#utility.yul\":1857:1884   */\n      swap2\n      pop\n        /* \"#utility.yul\":1825:1886   */\n    tag_37:\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1924:1930   */\n      dup3\n        /* \"#utility.yul\":1921:1935   */\n      lt\n        /* \"#utility.yul\":1901:1919   */\n      dup2\n        /* \"#utility.yul\":1898:1936   */\n      eq\n        /* \"#utility.yul\":1895:2056   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":1978:1988   */\n      0x4e487b71\n        /* \"#utility.yul\":1973:1976   */\n      0xe0\n        /* \"#utility.yul\":1969:1989   */\n      shl\n        /* \"#utility.yul\":1966:1967   */\n      0x00\n        /* \"#utility.yul\":1959:1990   */\n      mstore\n        /* \"#utility.yul\":2013:2017   */\n      0x22\n        /* \"#utility.yul\":2010:2011   */\n      0x04\n        /* \"#utility.yul\":2003:2018   */\n      mstore\n        /* \"#utility.yul\":2041:2045   */\n      0x24\n        /* \"#utility.yul\":2038:2039   */\n      0x00\n        /* \"#utility.yul\":2031:2046   */\n      revert\n        /* \"#utility.yul\":1895:2056   */\n    tag_38:\n      pop\n        /* \"#utility.yul\":1682:2062   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ca23a1f39f06c5f42573bc7a872d83584198264e0f12570daf8e9c1430ccceee64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052632cb41780600255620186a060035534801561001f57600080fd5b506102988061002f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630761c8b914610046578063948942ad14610062578063fc8372591461006b575b600080fd5b61004f60025481565b6040519081526020015b60405180910390f35b61004f60035481565b61007e610079366004610158565b610091565b6040516100599796959493929190610188565b6000602081905290815260409020805460018201805460ff90921692916100b790610227565b80601f01602080910402602001604051908101604052809291908181526020018280546100e390610227565b80156101305780601f1061010557610100808354040283529160200191610130565b820191906000526020600020905b81548152906001019060200180831161011357829003601f168201915b5050505050908060020154908060030154908060040154908060050154908060060154905087565b60006020828403121561016a57600080fd5b81356001600160a01b038116811461018157600080fd5b9392505050565b6000600589106101a857634e487b7160e01b600052602160045260246000fd5b888252602060e08184015288518060e085015260005b818110156101db578a8101830151858201610100015282016101be565b818111156101ee57600061010083870101525b50604084019890985250506060810194909452608084019290925260a083015260c0820152610100601f909201601f1916010192915050565b600181811c9082168061023b57607f821691505b6020821081141561025c57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220ca23a1f39f06c5f42573bc7a872d83584198264e0f12570daf8e9c1430ccceee64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH4 0x2CB41780 PUSH1 0x2 SSTORE PUSH3 0x186A0 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x298 DUP1 PUSH2 0x2F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761C8B9 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x948942AD EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xFC837259 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4F PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7E PUSH2 0x79 CALLDATASIZE PUSH1 0x4 PUSH2 0x158 JUMP JUMPDEST PUSH2 0x91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x188 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH2 0xB7 SWAP1 PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE3 SWAP1 PUSH2 0x227 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x130 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x105 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x130 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x113 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP10 LT PUSH2 0x1A8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP9 DUP3 MSTORE PUSH1 0x20 PUSH1 0xE0 DUP2 DUP5 ADD MSTORE DUP9 MLOAD DUP1 PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1DB JUMPI DUP11 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH2 0x100 ADD MSTORE DUP3 ADD PUSH2 0x1BE JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1EE JUMPI PUSH1 0x0 PUSH2 0x100 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x40 DUP5 ADD SWAP9 SWAP1 SWAP9 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x100 PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x23B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x25C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0x23 LOG1 RETURN SWAP16 MOD 0xC5 DELEGATECALL 0x25 PUSH20 0xBC7A872D83584198264E0F12570DAF8E9C1430CC 0xCE 0xEE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "107:1672:1:-:0;;;1152:9:2;1123:38;;1412:6;1385:33;;107:1672:1;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@structUsers__249": {
									"entryPoint": 145,
									"id": 249,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenAmount__261": {
									"entryPoint": null,
									"id": 261,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenPrice__258": {
									"entryPoint": null,
									"id": 258,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_Role_$228_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint8_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 392,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2064:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:216:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:3"
															},
															"nodeType": "YulIf",
															"src": "94:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "239:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "244:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "248:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:50:3"
															},
															"nodeType": "YulIf",
															"src": "200:70:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:3",
														"type": ""
													}
												],
												"src": "14:286:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "600:895:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "643:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "664:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "671:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "676:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "667:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "667:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "657:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "657:31:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "657:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "708:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "711:4:3",
																					"type": "",
																					"value": "0x21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "701:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "701:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "701:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "736:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "739:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "729:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "729:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "729:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "623:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:1:3",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "620:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "620:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "613:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "613:21:3"
															},
															"nodeType": "YulIf",
															"src": "610:144:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "770:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "781:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "763:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "763:25:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "797:12:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "807:2:3",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "801:2:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "829:9:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "840:2:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "825:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "825:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "845:3:3",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "818:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "818:31:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "858:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "878:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "872:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "872:13:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "862:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "905:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "916:3:3",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "901:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "901:19:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "922:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "894:35:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "938:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "947:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "942:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1007:91:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1036:9:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1047:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1032:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1032:17:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1051:3:3",
																							"type": "",
																							"value": "256"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1028:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1028:27:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value1",
																											"nodeType": "YulIdentifier",
																											"src": "1071:6:3"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1079:1:3"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1067:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1067:14:3"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1083:2:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1063:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1063:23:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1057:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1057:30:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1021:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1021:67:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1021:67:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "968:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "971:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "965:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "965:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "979:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "981:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "990:1:3"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "993:2:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "986:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "986:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "981:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "961:3:3",
																"statements": []
															},
															"src": "957:141:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1132:67:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1161:9:3"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1172:6:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1157:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1157:22:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1181:3:3",
																							"type": "",
																							"value": "256"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1153:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1153:32:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1187:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1146:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1146:43:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1146:43:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1113:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1116:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1110:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1110:13:3"
															},
															"nodeType": "YulIf",
															"src": "1107:92:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1208:63:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1224:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1243:6:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1251:2:3",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1239:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1239:15:3"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1260:2:3",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1256:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1256:7:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1235:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1235:29:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:45:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1267:3:3",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1216:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1216:55:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1208:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1291:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1302:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1287:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1287:18:3"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1280:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1280:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1280:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1334:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1345:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1330:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1330:18:3"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "1350:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1323:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1323:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1323:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1377:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1388:3:3",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1373:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1373:19:3"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "1394:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1366:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1366:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1366:35:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1421:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1432:3:3",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1417:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1417:19:3"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "1438:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1410:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1410:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1410:35:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1465:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1476:3:3",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1461:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1461:19:3"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "1482:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1454:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1454:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1454:35:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Role_$228_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint8_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "521:9:3",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "532:6:3",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "540:6:3",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "548:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "556:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "564:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "572:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "580:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "591:4:3",
														"type": ""
													}
												],
												"src": "305:1190:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1601:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1611:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1623:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1634:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1619:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1619:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1611:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1653:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1664:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1646:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1646:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1646:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1570:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1581:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1592:4:3",
														"type": ""
													}
												],
												"src": "1500:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1737:325:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1747:22:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1761:1:3",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1764:4:3"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1757:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1757:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1747:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1778:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1808:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1814:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1804:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1804:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1782:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1855:31:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1857:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1871:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1879:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1867:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1867:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1857:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1835:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1828:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1828:26:3"
															},
															"nodeType": "YulIf",
															"src": "1825:61:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1945:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1966:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1973:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1978:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1969:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1969:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1959:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1959:31:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1959:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2010:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2013:4:3",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2003:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2003:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2003:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2038:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2041:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2031:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2031:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2031:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1901:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1921:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1921:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1898:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:38:3"
															},
															"nodeType": "YulIf",
															"src": "1895:161:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1717:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1726:6:3",
														"type": ""
													}
												],
												"src": "1682:380:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_enum$_Role_$228_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint8_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        if iszero(lt(value0, 5))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n        let _1 := 32\n        mstore(add(headStart, _1), 224)\n        let length := mload(value1)\n        mstore(add(headStart, 224), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 256), mload(add(add(value1, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 256), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 256)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80630761c8b914610046578063948942ad14610062578063fc8372591461006b575b600080fd5b61004f60025481565b6040519081526020015b60405180910390f35b61004f60035481565b61007e610079366004610158565b610091565b6040516100599796959493929190610188565b6000602081905290815260409020805460018201805460ff90921692916100b790610227565b80601f01602080910402602001604051908101604052809291908181526020018280546100e390610227565b80156101305780601f1061010557610100808354040283529160200191610130565b820191906000526020600020905b81548152906001019060200180831161011357829003601f168201915b5050505050908060020154908060030154908060040154908060050154908060060154905087565b60006020828403121561016a57600080fd5b81356001600160a01b038116811461018157600080fd5b9392505050565b6000600589106101a857634e487b7160e01b600052602160045260246000fd5b888252602060e08184015288518060e085015260005b818110156101db578a8101830151858201610100015282016101be565b818111156101ee57600061010083870101525b50604084019890985250506060810194909452608084019290925260a083015260c0820152610100601f909201601f1916010192915050565b600181811c9082168061023b57607f821691505b6020821081141561025c57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220ca23a1f39f06c5f42573bc7a872d83584198264e0f12570daf8e9c1430ccceee64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761C8B9 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x948942AD EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xFC837259 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4F PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7E PUSH2 0x79 CALLDATASIZE PUSH1 0x4 PUSH2 0x158 JUMP JUMPDEST PUSH2 0x91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x188 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH2 0xB7 SWAP1 PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE3 SWAP1 PUSH2 0x227 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x130 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x105 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x130 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x113 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP10 LT PUSH2 0x1A8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP9 DUP3 MSTORE PUSH1 0x20 PUSH1 0xE0 DUP2 DUP5 ADD MSTORE DUP9 MLOAD DUP1 PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1DB JUMPI DUP11 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH2 0x100 ADD MSTORE DUP3 ADD PUSH2 0x1BE JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1EE JUMPI PUSH1 0x0 PUSH2 0x100 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x40 DUP5 ADD SWAP9 SWAP1 SWAP9 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x100 PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x23B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x25C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0x23 LOG1 RETURN SWAP16 MOD 0xC5 DELEGATECALL 0x25 PUSH20 0xBC7A872D83584198264E0F12570DAF8E9C1430CC 0xCE 0xEE PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "107:1672:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1123:38:2;;;;;;;;;1646:25:3;;;1634:2;1619:18;1123:38:2;;;;;;;;1385:33;;;;;;836:51;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:286:3:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:3;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:3:o;305:1190::-;591:4;631:1;623:6;620:13;610:144;;676:10;671:3;667:20;664:1;657:31;711:4;708:1;701:15;739:4;736:1;729:15;610:144;781:6;770:9;763:25;807:2;845:3;840:2;829:9;825:18;818:31;878:6;872:13;922:6;916:3;905:9;901:19;894:35;947:1;957:141;971:6;968:1;965:13;957:141;;;1067:14;;;1063:23;;1057:30;1032:17;;;1051:3;1028:27;1021:67;986:10;;957:141;;;1116:6;1113:1;1110:13;1107:92;;;1187:1;1181:3;1172:6;1161:9;1157:22;1153:32;1146:43;1107:92;-1:-1:-1;1302:2:3;1287:18;;1280:34;;;;-1:-1:-1;;1345:2:3;1330:18;;1323:34;;;;1388:3;1373:19;;1366:35;;;;1432:3;1417:19;;1410:35;1476:3;1461:19;;1454:35;1267:3;1260:2;1239:15;;;-1:-1:-1;;1235:29:3;1220:45;1216:55;;;-1:-1:-1;;305:1190:3:o;1682:380::-;1761:1;1757:12;;;;1804;;;1825:61;;1879:4;1871:6;1867:17;1857:27;;1825:61;1932:2;1924:6;1921:14;1901:18;1898:38;1895:161;;;1978:10;1973:3;1969:20;1966:1;1959:31;2013:4;2010:1;2003:15;2041:4;2038:1;2031:15;1895:161;;1682:380;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "132800",
								"executionCost": "44389",
								"totalCost": "177189"
							},
							"external": {
								"structUsers_(address)": "infinite",
								"tokenAmount_()": "2284",
								"tokenPrice_()": "2262"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 107,
									"end": 1779,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1152,
									"end": 1161,
									"name": "PUSH",
									"source": 2,
									"value": "2CB41780"
								},
								{
									"begin": 1123,
									"end": 1161,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1123,
									"end": 1161,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1412,
									"end": 1418,
									"name": "PUSH",
									"source": 2,
									"value": "186A0"
								},
								{
									"begin": 1385,
									"end": 1418,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1385,
									"end": 1418,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 1779,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ca23a1f39f06c5f42573bc7a872d83584198264e0f12570daf8e9c1430ccceee64736f6c63430008070033",
									".code": [
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "761C8B9"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "948942AD"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "FC837259"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 107,
											"end": 1779,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1646,
											"end": 1671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1646,
											"end": 1671,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1646,
											"end": 1671,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1634,
											"end": 1636,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 305,
											"end": 1495,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 305,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 591,
											"end": 595,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 632,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 623,
											"end": 629,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 620,
											"end": 633,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 610,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 610,
											"end": 754,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 676,
											"end": 686,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 671,
											"end": 674,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 667,
											"end": 687,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 664,
											"end": 665,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 688,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 711,
											"end": 715,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 708,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 701,
											"end": 716,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 739,
											"end": 743,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 736,
											"end": 737,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 744,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 610,
											"end": 754,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 610,
											"end": 754,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 781,
											"end": 787,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 770,
											"end": 779,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 763,
											"end": 788,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 807,
											"end": 809,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 848,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 840,
											"end": 842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 829,
											"end": 838,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 825,
											"end": 843,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 818,
											"end": 849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 878,
											"end": 884,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 872,
											"end": 885,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 922,
											"end": 928,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 916,
											"end": 919,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 905,
											"end": 914,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 901,
											"end": 920,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 894,
											"end": 929,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 947,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 971,
											"end": 977,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 968,
											"end": 969,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 965,
											"end": 978,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1067,
											"end": 1081,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 1067,
											"end": 1081,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1067,
											"end": 1081,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1063,
											"end": 1086,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1063,
											"end": 1086,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1057,
											"end": 1087,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1049,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1049,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1049,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1054,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1028,
											"end": 1055,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1088,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 986,
											"end": 996,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 986,
											"end": 996,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1116,
											"end": 1122,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1113,
											"end": 1114,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1110,
											"end": 1123,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1199,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1107,
											"end": 1199,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1188,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1184,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1172,
											"end": 1178,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1170,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1157,
											"end": 1179,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1153,
											"end": 1185,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1199,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1107,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1302,
											"end": 1304,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1305,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1287,
											"end": 1305,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1280,
											"end": 1314,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 1280,
											"end": 1314,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1280,
											"end": 1314,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 1280,
											"end": 1314,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1345,
											"end": 1347,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1330,
											"end": 1348,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1330,
											"end": 1348,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1323,
											"end": 1357,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1323,
											"end": 1357,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1323,
											"end": 1357,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1323,
											"end": 1357,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1391,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1373,
											"end": 1392,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1373,
											"end": 1392,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1401,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1401,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1401,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1401,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1435,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1417,
											"end": 1436,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1417,
											"end": 1436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1410,
											"end": 1445,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1476,
											"end": 1479,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 1461,
											"end": 1480,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1480,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1267,
											"end": 1270,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1260,
											"end": 1262,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1220,
											"end": 1265,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1216,
											"end": 1271,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1216,
											"end": 1271,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1216,
											"end": 1271,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 305,
											"end": 1495,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1682,
											"end": 2062,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1682,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1762,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1825,
											"end": 1886,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1883,
											"name": "PUSH",
											"source": 3,
											"value": "7F"
										},
										{
											"begin": 1871,
											"end": 1877,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1884,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1884,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1884,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1886,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1825,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1924,
											"end": 1930,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1921,
											"end": 1935,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1919,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1898,
											"end": 1936,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1895,
											"end": 2056,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1895,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1895,
											"end": 2056,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 1988,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 1973,
											"end": 1976,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1966,
											"end": 1967,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 1990,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2013,
											"end": 2017,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2010,
											"end": 2011,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2018,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2041,
											"end": 2045,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2038,
											"end": 2039,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2031,
											"end": 2046,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1895,
											"end": 2056,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1895,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1895,
											"end": 2056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 2062,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 2062,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 2062,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 2062,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"structUsers_(address)": "fc837259",
							"tokenAmount_()": "948942ad",
							"tokenPrice_()": "0761c8b9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"structUsers_\",\"outputs\":[{\"internalType\":\"enum structures.Role\",\"name\":\"role\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"login\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"password\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"balance_overall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance_seed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance_private\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance_public\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAmount_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":\"modifireFunc\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol\":{\"keccak256\":\"0x791815edf6d8d205da15be693b57ddde64d7cf3bf65ad29c748e9e98c1f675ac\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://de960745a1c9cf451cc7401bef8c7090fec7892241a55138c64740527bc9e11c\",\"dweb:/ipfs/QmNdesY61PZkUX2jpu1FqgUURAPcFWybkSCLG98zrHtsFG\"]},\"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":{\"keccak256\":\"0xb7e1ff8a289e5c363e3e72f6a72d2cfb8f2292fab11020fa270a3f192df9a512\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d1dcc0b7802d1d7b612433cf525e945e62862710c1bdb1e6c77ad6d870571a8b\",\"dweb:/ipfs/QmRnaJJqfNpRWWxvhsDPpd8LYqpzNmxjaVqmbXpSp4mUQE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 249,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "structUsers_",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(structUser)244_storage)"
							},
							{
								"astId": 255,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "allowed",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 258,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "tokenPrice_",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 261,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "tokenAmount_",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 280,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "structPhases_",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(structPhase)275_storage)"
							},
							{
								"astId": 296,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "strucApplications_",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(structApplication)291_storage)"
							},
							{
								"astId": 299,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "structApplicationsAmountAdr",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 302,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "whiteList",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 305,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
								"label": "blackList",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(Role)228": {
								"encoding": "inplace",
								"label": "enum structures.Role",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(structApplication)291_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structApplication)",
								"numberOfBytes": "32",
								"value": "t_struct(structApplication)291_storage"
							},
							"t_mapping(t_address,t_struct(structPhase)275_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structPhase)",
								"numberOfBytes": "32",
								"value": "t_struct(structPhase)275_storage"
							},
							"t_mapping(t_address,t_struct(structUser)244_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structUser)",
								"numberOfBytes": "32",
								"value": "t_struct(structUser)244_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(structApplication)291_storage": {
								"encoding": "inplace",
								"label": "struct structures.structApplication",
								"members": [
									{
										"astId": 282,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 284,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "contactForCommunication",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 286,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "userAdr",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 288,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "status",
										"offset": 20,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 290,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "exist",
										"offset": 21,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(structPhase)275_storage": {
								"encoding": "inplace",
								"label": "struct structures.structPhase",
								"members": [
									{
										"astId": 272,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "statusPhase",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 274,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "reviewed",
										"offset": 1,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(structUser)244_storage": {
								"encoding": "inplace",
								"label": "struct structures.structUser",
								"members": [
									{
										"astId": 231,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "role",
										"offset": 0,
										"slot": "0",
										"type": "t_enum(Role)228"
									},
									{
										"astId": 233,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "login",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 235,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "password",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									},
									{
										"astId": 237,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "balance_overall",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 239,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "balance_seed",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 241,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "balance_private",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 243,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol:modifireFunc",
										"label": "balance_public",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol": {
				"structures": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "structUsers_",
							"outputs": [
								{
									"internalType": "enum structures.Role",
									"name": "role",
									"type": "uint8"
								},
								{
									"internalType": "string",
									"name": "login",
									"type": "string"
								},
								{
									"internalType": "bytes32",
									"name": "password",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "balance_overall",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balance_seed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balance_private",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "balance_public",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAmount_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenPrice_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":72:3351  contract structures {\r... */\n  mstore(0x40, 0x80)\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1152:1161  750000000 */\n  0x2cb41780\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1123:1161  uint256 public tokenPrice_ = 750000000 */\n  0x02\n  sstore\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1412:1418  100000 */\n  0x0186a0\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1385:1418  uint public tokenAmount_ = 100000 */\n  0x03\n  sstore\n    /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":72:3351  contract structures {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":72:3351  contract structures {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0761c8b9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x948942ad\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xfc837259\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1123:1161  uint256 public tokenPrice_ = 750000000 */\n    tag_3:\n      tag_6\n      sload(0x02)\n      dup2\n      jump\n    tag_6:\n      mload(0x40)\n        /* \"#utility.yul\":1646:1671   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1634:1636   */\n      0x20\n        /* \"#utility.yul\":1619:1637   */\n      add\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1123:1161  uint256 public tokenPrice_ = 750000000 */\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":1385:1418  uint public tokenAmount_ = 100000 */\n    tag_4:\n      tag_6\n      sload(0x03)\n      dup2\n      jump\n        /* \"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":836:887  mapping (address => structUser) public structUsers_ */\n    tag_5:\n      tag_13\n      tag_14\n      calldatasize\n      0x04\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_8\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_16:\n      0x00\n      0x20\n      dup2\n      swap1\n      mstore\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      0xff\n      swap1\n      swap3\n      and\n      swap3\n      swap2\n      tag_19\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_21\n      swap1\n      tag_20\n      jump\t// in\n    tag_21:\n      dup1\n      iszero\n      tag_22\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_23\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_22)\n    tag_23:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_24:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_24\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_22:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      sload\n      swap1\n      pop\n      dup8\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_15:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_27\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_27:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_28\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_28:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":305:1495   */\n    tag_18:\n        /* \"#utility.yul\":591:595   */\n      0x00\n        /* \"#utility.yul\":631:632   */\n      0x05\n        /* \"#utility.yul\":623:629   */\n      dup10\n        /* \"#utility.yul\":620:633   */\n      lt\n        /* \"#utility.yul\":610:754   */\n      tag_30\n      jumpi\n        /* \"#utility.yul\":676:686   */\n      0x4e487b71\n        /* \"#utility.yul\":671:674   */\n      0xe0\n        /* \"#utility.yul\":667:687   */\n      shl\n        /* \"#utility.yul\":664:665   */\n      0x00\n        /* \"#utility.yul\":657:688   */\n      mstore\n        /* \"#utility.yul\":711:715   */\n      0x21\n        /* \"#utility.yul\":708:709   */\n      0x04\n        /* \"#utility.yul\":701:716   */\n      mstore\n        /* \"#utility.yul\":739:743   */\n      0x24\n        /* \"#utility.yul\":736:737   */\n      0x00\n        /* \"#utility.yul\":729:744   */\n      revert\n        /* \"#utility.yul\":610:754   */\n    tag_30:\n        /* \"#utility.yul\":781:787   */\n      dup9\n        /* \"#utility.yul\":770:779   */\n      dup3\n        /* \"#utility.yul\":763:788   */\n      mstore\n        /* \"#utility.yul\":807:809   */\n      0x20\n        /* \"#utility.yul\":845:848   */\n      0xe0\n        /* \"#utility.yul\":840:842   */\n      dup2\n        /* \"#utility.yul\":829:838   */\n      dup5\n        /* \"#utility.yul\":825:843   */\n      add\n        /* \"#utility.yul\":818:849   */\n      mstore\n        /* \"#utility.yul\":878:884   */\n      dup9\n        /* \"#utility.yul\":872:885   */\n      mload\n        /* \"#utility.yul\":922:928   */\n      dup1\n        /* \"#utility.yul\":916:919   */\n      0xe0\n        /* \"#utility.yul\":905:914   */\n      dup6\n        /* \"#utility.yul\":901:920   */\n      add\n        /* \"#utility.yul\":894:929   */\n      mstore\n        /* \"#utility.yul\":947:948   */\n      0x00\n        /* \"#utility.yul\":957:1098   */\n    tag_31:\n        /* \"#utility.yul\":971:977   */\n      dup2\n        /* \"#utility.yul\":968:969   */\n      dup2\n        /* \"#utility.yul\":965:978   */\n      lt\n        /* \"#utility.yul\":957:1098   */\n      iszero\n      tag_33\n      jumpi\n        /* \"#utility.yul\":1067:1081   */\n      dup11\n      dup2\n      add\n        /* \"#utility.yul\":1063:1086   */\n      dup4\n      add\n        /* \"#utility.yul\":1057:1087   */\n      mload\n        /* \"#utility.yul\":1032:1049   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1051:1054   */\n      0x0100\n        /* \"#utility.yul\":1028:1055   */\n      add\n        /* \"#utility.yul\":1021:1088   */\n      mstore\n        /* \"#utility.yul\":986:996   */\n      dup3\n      add\n        /* \"#utility.yul\":957:1098   */\n      jump(tag_31)\n    tag_33:\n        /* \"#utility.yul\":1116:1122   */\n      dup2\n        /* \"#utility.yul\":1113:1114   */\n      dup2\n        /* \"#utility.yul\":1110:1123   */\n      gt\n        /* \"#utility.yul\":1107:1199   */\n      iszero\n      tag_34\n      jumpi\n        /* \"#utility.yul\":1187:1188   */\n      0x00\n        /* \"#utility.yul\":1181:1184   */\n      0x0100\n        /* \"#utility.yul\":1172:1178   */\n      dup4\n        /* \"#utility.yul\":1161:1170   */\n      dup8\n        /* \"#utility.yul\":1157:1179   */\n      add\n        /* \"#utility.yul\":1153:1185   */\n      add\n        /* \"#utility.yul\":1146:1189   */\n      mstore\n        /* \"#utility.yul\":1107:1199   */\n    tag_34:\n      pop\n        /* \"#utility.yul\":1302:1304   */\n      0x40\n        /* \"#utility.yul\":1287:1305   */\n      dup5\n      add\n        /* \"#utility.yul\":1280:1314   */\n      swap9\n      swap1\n      swap9\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":1345:1347   */\n      0x60\n        /* \"#utility.yul\":1330:1348   */\n      dup2\n      add\n        /* \"#utility.yul\":1323:1357   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":1388:1391   */\n      0x80\n        /* \"#utility.yul\":1373:1392   */\n      dup5\n      add\n        /* \"#utility.yul\":1366:1401   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":1432:1435   */\n      0xa0\n        /* \"#utility.yul\":1417:1436   */\n      dup4\n      add\n        /* \"#utility.yul\":1410:1445   */\n      mstore\n        /* \"#utility.yul\":1476:1479   */\n      0xc0\n        /* \"#utility.yul\":1461:1480   */\n      dup3\n      add\n        /* \"#utility.yul\":1454:1489   */\n      mstore\n        /* \"#utility.yul\":1267:1270   */\n      0x0100\n        /* \"#utility.yul\":1260:1262   */\n      0x1f\n        /* \"#utility.yul\":1239:1254   */\n      swap1\n      swap3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1235:1264   */\n      and\n        /* \"#utility.yul\":1220:1265   */\n      add\n        /* \"#utility.yul\":1216:1271   */\n      add\n      swap3\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":305:1495   */\n      jump\t// out\n        /* \"#utility.yul\":1682:2062   */\n    tag_20:\n        /* \"#utility.yul\":1761:1762   */\n      0x01\n        /* \"#utility.yul\":1757:1769   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":1804:1816   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":1825:1886   */\n      tag_37\n      jumpi\n        /* \"#utility.yul\":1879:1883   */\n      0x7f\n        /* \"#utility.yul\":1871:1877   */\n      dup3\n        /* \"#utility.yul\":1867:1884   */\n      and\n        /* \"#utility.yul\":1857:1884   */\n      swap2\n      pop\n        /* \"#utility.yul\":1825:1886   */\n    tag_37:\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1924:1930   */\n      dup3\n        /* \"#utility.yul\":1921:1935   */\n      lt\n        /* \"#utility.yul\":1901:1919   */\n      dup2\n        /* \"#utility.yul\":1898:1936   */\n      eq\n        /* \"#utility.yul\":1895:2056   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":1978:1988   */\n      0x4e487b71\n        /* \"#utility.yul\":1973:1976   */\n      0xe0\n        /* \"#utility.yul\":1969:1989   */\n      shl\n        /* \"#utility.yul\":1966:1967   */\n      0x00\n        /* \"#utility.yul\":1959:1990   */\n      mstore\n        /* \"#utility.yul\":2013:2017   */\n      0x22\n        /* \"#utility.yul\":2010:2011   */\n      0x04\n        /* \"#utility.yul\":2003:2018   */\n      mstore\n        /* \"#utility.yul\":2041:2045   */\n      0x24\n        /* \"#utility.yul\":2038:2039   */\n      0x00\n        /* \"#utility.yul\":2031:2046   */\n      revert\n        /* \"#utility.yul\":1895:2056   */\n    tag_38:\n      pop\n        /* \"#utility.yul\":1682:2062   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f06475f8b07b9c170d6f1a52f3246579987c4fe9dbd800d83d121f20bc3fb08464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052632cb41780600255620186a060035534801561001f57600080fd5b506102988061002f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630761c8b914610046578063948942ad14610062578063fc8372591461006b575b600080fd5b61004f60025481565b6040519081526020015b60405180910390f35b61004f60035481565b61007e610079366004610158565b610091565b6040516100599796959493929190610188565b6000602081905290815260409020805460018201805460ff90921692916100b790610227565b80601f01602080910402602001604051908101604052809291908181526020018280546100e390610227565b80156101305780601f1061010557610100808354040283529160200191610130565b820191906000526020600020905b81548152906001019060200180831161011357829003601f168201915b5050505050908060020154908060030154908060040154908060050154908060060154905087565b60006020828403121561016a57600080fd5b81356001600160a01b038116811461018157600080fd5b9392505050565b6000600589106101a857634e487b7160e01b600052602160045260246000fd5b888252602060e08184015288518060e085015260005b818110156101db578a8101830151858201610100015282016101be565b818111156101ee57600061010083870101525b50604084019890985250506060810194909452608084019290925260a083015260c0820152610100601f909201601f1916010192915050565b600181811c9082168061023b57607f821691505b6020821081141561025c57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220f06475f8b07b9c170d6f1a52f3246579987c4fe9dbd800d83d121f20bc3fb08464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH4 0x2CB41780 PUSH1 0x2 SSTORE PUSH3 0x186A0 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x298 DUP1 PUSH2 0x2F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761C8B9 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x948942AD EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xFC837259 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4F PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7E PUSH2 0x79 CALLDATASIZE PUSH1 0x4 PUSH2 0x158 JUMP JUMPDEST PUSH2 0x91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x188 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH2 0xB7 SWAP1 PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE3 SWAP1 PUSH2 0x227 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x130 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x105 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x130 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x113 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP10 LT PUSH2 0x1A8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP9 DUP3 MSTORE PUSH1 0x20 PUSH1 0xE0 DUP2 DUP5 ADD MSTORE DUP9 MLOAD DUP1 PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1DB JUMPI DUP11 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH2 0x100 ADD MSTORE DUP3 ADD PUSH2 0x1BE JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1EE JUMPI PUSH1 0x0 PUSH2 0x100 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x40 DUP5 ADD SWAP9 SWAP1 SWAP9 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x100 PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x23B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x25C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE PUSH5 0x75F8B07B9C OR 0xD PUSH16 0x1A52F3246579987C4FE9DBD800D83D12 0x1F KECCAK256 0xBC EXTCODEHASH 0xB0 DUP5 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "72:3279:2:-:0;;;1152:9;1123:38;;1412:6;1385:33;;72:3279;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@structUsers__249": {
									"entryPoint": 145,
									"id": 249,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenAmount__261": {
									"entryPoint": null,
									"id": 261,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenPrice__258": {
									"entryPoint": null,
									"id": 258,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_Role_$228_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint8_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 392,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2064:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:216:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:3"
															},
															"nodeType": "YulIf",
															"src": "94:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:3"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "239:3:3",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "244:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "248:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:50:3"
															},
															"nodeType": "YulIf",
															"src": "200:70:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:3",
														"type": ""
													}
												],
												"src": "14:286:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "600:895:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "643:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "664:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "671:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "676:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "667:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "667:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "657:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "657:31:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "657:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "708:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "711:4:3",
																					"type": "",
																					"value": "0x21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "701:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "701:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "701:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "736:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "739:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "729:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "729:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "729:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "623:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:1:3",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "620:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "620:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "613:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "613:21:3"
															},
															"nodeType": "YulIf",
															"src": "610:144:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "770:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "781:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "763:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "763:25:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "797:12:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "807:2:3",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "801:2:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "829:9:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "840:2:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "825:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "825:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "845:3:3",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "818:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "818:31:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "858:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "878:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "872:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "872:13:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "862:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "905:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "916:3:3",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "901:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "901:19:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "922:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "894:35:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "938:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "947:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "942:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1007:91:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1036:9:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1047:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1032:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1032:17:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1051:3:3",
																							"type": "",
																							"value": "256"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1028:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1028:27:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value1",
																											"nodeType": "YulIdentifier",
																											"src": "1071:6:3"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1079:1:3"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1067:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1067:14:3"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1083:2:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1063:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1063:23:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1057:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1057:30:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1021:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1021:67:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1021:67:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "968:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "971:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "965:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "965:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "979:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "981:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "990:1:3"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "993:2:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "986:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "986:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "981:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "961:3:3",
																"statements": []
															},
															"src": "957:141:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1132:67:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1161:9:3"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1172:6:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1157:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1157:22:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1181:3:3",
																							"type": "",
																							"value": "256"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1153:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1153:32:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1187:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1146:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1146:43:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1146:43:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1113:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1116:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1110:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1110:13:3"
															},
															"nodeType": "YulIf",
															"src": "1107:92:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1208:63:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1224:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1243:6:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1251:2:3",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1239:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1239:15:3"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1260:2:3",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1256:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1256:7:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1235:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1235:29:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:45:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1267:3:3",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1216:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1216:55:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1208:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1291:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1302:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1287:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1287:18:3"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1280:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1280:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1280:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1334:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1345:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1330:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1330:18:3"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "1350:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1323:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1323:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1323:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1377:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1388:3:3",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1373:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1373:19:3"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "1394:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1366:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1366:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1366:35:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1421:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1432:3:3",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1417:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1417:19:3"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "1438:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1410:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1410:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1410:35:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1465:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1476:3:3",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1461:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1461:19:3"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "1482:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1454:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1454:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1454:35:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Role_$228_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint8_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "521:9:3",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "532:6:3",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "540:6:3",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "548:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "556:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "564:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "572:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "580:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "591:4:3",
														"type": ""
													}
												],
												"src": "305:1190:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1601:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1611:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1623:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1634:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1619:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1619:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1611:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1653:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1664:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1646:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1646:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1646:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1570:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1581:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1592:4:3",
														"type": ""
													}
												],
												"src": "1500:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1737:325:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1747:22:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1761:1:3",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1764:4:3"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1757:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1757:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1747:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1778:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1808:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1814:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1804:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1804:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1782:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1855:31:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1857:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1871:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1879:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1867:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1867:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1857:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1835:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1828:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1828:26:3"
															},
															"nodeType": "YulIf",
															"src": "1825:61:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1945:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1966:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1973:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1978:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1969:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1969:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1959:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1959:31:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1959:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2010:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2013:4:3",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2003:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2003:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2003:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2038:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2041:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2031:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2031:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2031:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1901:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1921:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1921:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1898:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:38:3"
															},
															"nodeType": "YulIf",
															"src": "1895:161:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1717:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1726:6:3",
														"type": ""
													}
												],
												"src": "1682:380:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_enum$_Role_$228_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint8_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        if iszero(lt(value0, 5))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n        let _1 := 32\n        mstore(add(headStart, _1), 224)\n        let length := mload(value1)\n        mstore(add(headStart, 224), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 256), mload(add(add(value1, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 256), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 256)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80630761c8b914610046578063948942ad14610062578063fc8372591461006b575b600080fd5b61004f60025481565b6040519081526020015b60405180910390f35b61004f60035481565b61007e610079366004610158565b610091565b6040516100599796959493929190610188565b6000602081905290815260409020805460018201805460ff90921692916100b790610227565b80601f01602080910402602001604051908101604052809291908181526020018280546100e390610227565b80156101305780601f1061010557610100808354040283529160200191610130565b820191906000526020600020905b81548152906001019060200180831161011357829003601f168201915b5050505050908060020154908060030154908060040154908060050154908060060154905087565b60006020828403121561016a57600080fd5b81356001600160a01b038116811461018157600080fd5b9392505050565b6000600589106101a857634e487b7160e01b600052602160045260246000fd5b888252602060e08184015288518060e085015260005b818110156101db578a8101830151858201610100015282016101be565b818111156101ee57600061010083870101525b50604084019890985250506060810194909452608084019290925260a083015260c0820152610100601f909201601f1916010192915050565b600181811c9082168061023b57607f821691505b6020821081141561025c57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220f06475f8b07b9c170d6f1a52f3246579987c4fe9dbd800d83d121f20bc3fb08464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761C8B9 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x948942AD EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0xFC837259 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4F PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7E PUSH2 0x79 CALLDATASIZE PUSH1 0x4 PUSH2 0x158 JUMP JUMPDEST PUSH2 0x91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x188 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH2 0xB7 SWAP1 PUSH2 0x227 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE3 SWAP1 PUSH2 0x227 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x130 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x105 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x130 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x113 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 POP DUP8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP10 LT PUSH2 0x1A8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP9 DUP3 MSTORE PUSH1 0x20 PUSH1 0xE0 DUP2 DUP5 ADD MSTORE DUP9 MLOAD DUP1 PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1DB JUMPI DUP11 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH2 0x100 ADD MSTORE DUP3 ADD PUSH2 0x1BE JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1EE JUMPI PUSH1 0x0 PUSH2 0x100 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x40 DUP5 ADD SWAP9 SWAP1 SWAP9 MSTORE POP POP PUSH1 0x60 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x100 PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x23B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x25C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE PUSH5 0x75F8B07B9C OR 0xD PUSH16 0x1A52F3246579987C4FE9DBD800D83D12 0x1F KECCAK256 0xBC EXTCODEHASH 0xB0 DUP5 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "72:3279:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1123:38;;;;;;;;;1646:25:3;;;1634:2;1619:18;1123:38:2;;;;;;;;1385:33;;;;;;836:51;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:286:3:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:3;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:3:o;305:1190::-;591:4;631:1;623:6;620:13;610:144;;676:10;671:3;667:20;664:1;657:31;711:4;708:1;701:15;739:4;736:1;729:15;610:144;781:6;770:9;763:25;807:2;845:3;840:2;829:9;825:18;818:31;878:6;872:13;922:6;916:3;905:9;901:19;894:35;947:1;957:141;971:6;968:1;965:13;957:141;;;1067:14;;;1063:23;;1057:30;1032:17;;;1051:3;1028:27;1021:67;986:10;;957:141;;;1116:6;1113:1;1110:13;1107:92;;;1187:1;1181:3;1172:6;1161:9;1157:22;1153:32;1146:43;1107:92;-1:-1:-1;1302:2:3;1287:18;;1280:34;;;;-1:-1:-1;;1345:2:3;1330:18;;1323:34;;;;1388:3;1373:19;;1366:35;;;;1432:3;1417:19;;1410:35;1476:3;1461:19;;1454:35;1267:3;1260:2;1239:15;;;-1:-1:-1;;1235:29:3;1220:45;1216:55;;;-1:-1:-1;;305:1190:3:o;1682:380::-;1761:1;1757:12;;;;1804;;;1825:61;;1879:4;1871:6;1867:17;1857:27;;1825:61;1932:2;1924:6;1921:14;1901:18;1898:38;1895:161;;;1978:10;1973:3;1969:20;1966:1;1959:31;2013:4;2010:1;2003:15;2041:4;2038:1;2031:15;1895:161;;1682:380;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "132800",
								"executionCost": "44389",
								"totalCost": "177189"
							},
							"external": {
								"structUsers_(address)": "infinite",
								"tokenAmount_()": "2284",
								"tokenPrice_()": "2262"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 72,
									"end": 3351,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1152,
									"end": 1161,
									"name": "PUSH",
									"source": 2,
									"value": "2CB41780"
								},
								{
									"begin": 1123,
									"end": 1161,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1123,
									"end": 1161,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1412,
									"end": 1418,
									"name": "PUSH",
									"source": 2,
									"value": "186A0"
								},
								{
									"begin": 1385,
									"end": 1418,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1385,
									"end": 1418,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 3351,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f06475f8b07b9c170d6f1a52f3246579987c4fe9dbd800d83d121f20bc3fb08464736f6c63430008070033",
									".code": [
										{
											"begin": 72,
											"end": 3351,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "PUSH",
											"source": 2,
											"value": "761C8B9"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "PUSH",
											"source": 2,
											"value": "948942AD"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "PUSH",
											"source": 2,
											"value": "FC837259"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 72,
											"end": 3351,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1646,
											"end": 1671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1646,
											"end": 1671,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1646,
											"end": 1671,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1634,
											"end": 1636,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1161,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1385,
											"end": 1418,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 836,
											"end": 887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 836,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 305,
											"end": 1495,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 305,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 591,
											"end": 595,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 632,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 623,
											"end": 629,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 620,
											"end": 633,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 610,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 610,
											"end": 754,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 676,
											"end": 686,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 671,
											"end": 674,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 667,
											"end": 687,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 664,
											"end": 665,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 688,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 711,
											"end": 715,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 708,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 701,
											"end": 716,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 739,
											"end": 743,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 736,
											"end": 737,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 744,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 610,
											"end": 754,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 610,
											"end": 754,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 781,
											"end": 787,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 770,
											"end": 779,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 763,
											"end": 788,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 807,
											"end": 809,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 848,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 840,
											"end": 842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 829,
											"end": 838,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 825,
											"end": 843,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 818,
											"end": 849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 878,
											"end": 884,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 872,
											"end": 885,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 922,
											"end": 928,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 916,
											"end": 919,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 905,
											"end": 914,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 901,
											"end": 920,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 894,
											"end": 929,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 947,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 971,
											"end": 977,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 968,
											"end": 969,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 965,
											"end": 978,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1067,
											"end": 1081,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 1067,
											"end": 1081,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1067,
											"end": 1081,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1063,
											"end": 1086,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1063,
											"end": 1086,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1057,
											"end": 1087,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1049,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1049,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1032,
											"end": 1049,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1054,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1028,
											"end": 1055,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1088,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 986,
											"end": 996,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 986,
											"end": 996,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 957,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1116,
											"end": 1122,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1113,
											"end": 1114,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1110,
											"end": 1123,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1199,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1107,
											"end": 1199,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1188,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1184,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1172,
											"end": 1178,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1170,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1157,
											"end": 1179,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1153,
											"end": 1185,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1146,
											"end": 1189,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1107,
											"end": 1199,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1107,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1302,
											"end": 1304,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1287,
											"end": 1305,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1287,
											"end": 1305,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1280,
											"end": 1314,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 1280,
											"end": 1314,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1280,
											"end": 1314,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 1280,
											"end": 1314,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1345,
											"end": 1347,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1330,
											"end": 1348,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1330,
											"end": 1348,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1323,
											"end": 1357,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1323,
											"end": 1357,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1323,
											"end": 1357,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1323,
											"end": 1357,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1388,
											"end": 1391,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1373,
											"end": 1392,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1373,
											"end": 1392,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1401,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1401,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1401,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1366,
											"end": 1401,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1432,
											"end": 1435,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 1417,
											"end": 1436,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1417,
											"end": 1436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1410,
											"end": 1445,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1476,
											"end": 1479,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 1461,
											"end": 1480,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1461,
											"end": 1480,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1267,
											"end": 1270,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1260,
											"end": 1262,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1254,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1235,
											"end": 1264,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1220,
											"end": 1265,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1216,
											"end": 1271,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1216,
											"end": 1271,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1216,
											"end": 1271,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 305,
											"end": 1495,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1682,
											"end": 2062,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1682,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1761,
											"end": 1762,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 1757,
											"end": 1769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 1816,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1825,
											"end": 1886,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1883,
											"name": "PUSH",
											"source": 3,
											"value": "7F"
										},
										{
											"begin": 1871,
											"end": 1877,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1884,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1884,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1884,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1825,
											"end": 1886,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1825,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1924,
											"end": 1930,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1921,
											"end": 1935,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1919,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1898,
											"end": 1936,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1895,
											"end": 2056,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1895,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1895,
											"end": 2056,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1978,
											"end": 1988,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 1973,
											"end": 1976,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1969,
											"end": 1989,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1966,
											"end": 1967,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 1990,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2013,
											"end": 2017,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2010,
											"end": 2011,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2018,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2041,
											"end": 2045,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2038,
											"end": 2039,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2031,
											"end": 2046,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1895,
											"end": 2056,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1895,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1895,
											"end": 2056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 2062,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 2062,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 2062,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 2062,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"structUsers_(address)": "fc837259",
							"tokenAmount_()": "948942ad",
							"tokenPrice_()": "0761c8b9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"structUsers_\",\"outputs\":[{\"internalType\":\"enum structures.Role\",\"name\":\"role\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"login\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"password\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"balance_overall\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance_seed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance_private\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance_public\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAmount_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":\"structures\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":{\"keccak256\":\"0xb7e1ff8a289e5c363e3e72f6a72d2cfb8f2292fab11020fa270a3f192df9a512\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d1dcc0b7802d1d7b612433cf525e945e62862710c1bdb1e6c77ad6d870571a8b\",\"dweb:/ipfs/QmRnaJJqfNpRWWxvhsDPpd8LYqpzNmxjaVqmbXpSp4mUQE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 249,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "structUsers_",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(structUser)244_storage)"
							},
							{
								"astId": 255,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "allowed",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 258,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "tokenPrice_",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 261,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "tokenAmount_",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 280,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "structPhases_",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(structPhase)275_storage)"
							},
							{
								"astId": 296,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "strucApplications_",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(structApplication)291_storage)"
							},
							{
								"astId": 299,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "structApplicationsAmountAdr",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 302,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "whiteList",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 305,
								"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "blackList",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(Role)228": {
								"encoding": "inplace",
								"label": "enum structures.Role",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(structApplication)291_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structApplication)",
								"numberOfBytes": "32",
								"value": "t_struct(structApplication)291_storage"
							},
							"t_mapping(t_address,t_struct(structPhase)275_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structPhase)",
								"numberOfBytes": "32",
								"value": "t_struct(structPhase)275_storage"
							},
							"t_mapping(t_address,t_struct(structUser)244_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structUser)",
								"numberOfBytes": "32",
								"value": "t_struct(structUser)244_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(structApplication)291_storage": {
								"encoding": "inplace",
								"label": "struct structures.structApplication",
								"members": [
									{
										"astId": 282,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 284,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "contactForCommunication",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 286,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "userAdr",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 288,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "status",
										"offset": 20,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 290,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "exist",
										"offset": 21,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(structPhase)275_storage": {
								"encoding": "inplace",
								"label": "struct structures.structPhase",
								"members": [
									{
										"astId": 272,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "statusPhase",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 274,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "reviewed",
										"offset": 1,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(structUser)244_storage": {
								"encoding": "inplace",
								"label": "struct structures.structUser",
								"members": [
									{
										"astId": 231,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "role",
										"offset": 0,
										"slot": "0",
										"type": "t_enum(Role)228"
									},
									{
										"astId": 233,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "login",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 235,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "password",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									},
									{
										"astId": 237,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "balance_overall",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 239,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "balance_seed",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 241,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "balance_private",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 243,
										"contract": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "balance_public",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol": {
				"ast": {
					"absolutePath": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/helpresFunc.sol",
					"exportedSymbols": {
						"helpresFunc": [
							98
						],
						"modifireFunc": [
							220
						],
						"structures": [
							306
						]
					},
					"id": 99,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"absolutePath": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol",
							"file": "./modifireFunc.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 99,
							"sourceUnit": 221,
							"src": "72:28:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "modifireFunc",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 220,
										"src": "128:12:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "128:12:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 98,
							"linearizedBaseContracts": [
								98,
								220,
								306
							],
							"name": "helpresFunc",
							"nameLocation": "113:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "285:65:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 14,
																			"name": "_hash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 6,
																			"src": "334:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"expression": {
																			"id": 12,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "317:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 13,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "317:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 15,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "317:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 11,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "307:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "307:34:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 17,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "306:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 10,
												"id": 18,
												"nodeType": "Return",
												"src": "300:42:0"
											}
										]
									},
									"functionSelector": "8e4f8c6b",
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_keccak256",
									"nameLocation": "221:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "_hash",
												"nameLocation": "249:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "235:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 5,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "235:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "234:21:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "276:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 8,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "275:9:0"
									},
									"scope": 98,
									"src": "212:138:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "518:36:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 28,
															"name": "whiteList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "536:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														}
													],
													"id": 29,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "535:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 27,
												"id": 30,
												"nodeType": "Return",
												"src": "529:17:0"
											}
										]
									},
									"functionSelector": "c10e3911",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 23,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 22,
												"name": "onlyOwnerAndPrivateProvider",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 176,
												"src": "458:27:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "458:27:0"
										}
									],
									"name": "get_whiteList",
									"nameLocation": "435:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "448:2:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "500:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 24,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "500:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 25,
													"nodeType": "ArrayTypeName",
													"src": "500:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:18:0"
									},
									"scope": 98,
									"src": "426:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "706:36:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 40,
															"name": "blackList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "724:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														}
													],
													"id": 41,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "723:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 39,
												"id": 42,
												"nodeType": "Return",
												"src": "717:17:0"
											}
										]
									},
									"functionSelector": "7f89128f",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 35,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 34,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 119,
												"src": "664:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "664:9:0"
										}
									],
									"name": "get_blackList",
									"nameLocation": "641:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "654:2:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "688:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 36,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "688:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 37,
													"nodeType": "ArrayTypeName",
													"src": "688:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "687:18:0"
									},
									"scope": 98,
									"src": "632:110:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "927:61:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 51,
															"name": "structUsers_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "945:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$244_storage_$",
																"typeString": "mapping(address => struct structures.structUser storage ref)"
															}
														},
														"id": 53,
														"indexExpression": {
															"id": 52,
															"name": "_userAdr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "958:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "945:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_structUser_$244_storage",
															"typeString": "struct structures.structUser storage ref"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance_seed",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 239,
													"src": "945:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 50,
												"id": 55,
												"nodeType": "Return",
												"src": "938:42:0"
											}
										]
									},
									"functionSelector": "2599d6d0",
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalanceSeedToken",
									"nameLocation": "858:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "_userAdr",
												"nameLocation": "887:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "879:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:18:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "918:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "918:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "917:9:0"
									},
									"scope": 98,
									"src": "849:139:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "1179:64:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 64,
															"name": "structUsers_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "1197:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$244_storage_$",
																"typeString": "mapping(address => struct structures.structUser storage ref)"
															}
														},
														"id": 66,
														"indexExpression": {
															"id": 65,
															"name": "_userAdr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "1210:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1197:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_structUser_$244_storage",
															"typeString": "struct structures.structUser storage ref"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance_private",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 241,
													"src": "1197:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 63,
												"id": 68,
												"nodeType": "Return",
												"src": "1190:45:0"
											}
										]
									},
									"functionSelector": "b06cdc12",
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalancePrivateToken",
									"nameLocation": "1107:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "_userAdr",
												"nameLocation": "1139:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1131:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1131:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1130:18:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1170:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1170:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1169:9:0"
									},
									"scope": 98,
									"src": "1098:145:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1432:63:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 77,
															"name": "structUsers_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "1450:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$244_storage_$",
																"typeString": "mapping(address => struct structures.structUser storage ref)"
															}
														},
														"id": 79,
														"indexExpression": {
															"id": 78,
															"name": "_userAdr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "1463:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1450:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_structUser_$244_storage",
															"typeString": "struct structures.structUser storage ref"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance_public",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 243,
													"src": "1450:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 76,
												"id": 81,
												"nodeType": "Return",
												"src": "1443:44:0"
											}
										]
									},
									"functionSelector": "72f0d72b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalancePublicToken",
									"nameLocation": "1361:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "_userAdr",
												"nameLocation": "1392:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1384:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1383:18:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1423:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1422:9:0"
									},
									"scope": 98,
									"src": "1352:143:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "1660:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 92,
																"name": "adr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "1686:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1678:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 90,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1678:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 93,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1678:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "1678:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 89,
												"id": 95,
												"nodeType": "Return",
												"src": "1671:27:0"
											}
										]
									},
									"functionSelector": "99067ede",
									"id": 97,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalanceEth",
									"nameLocation": "1604:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "adr",
												"nameLocation": "1626:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1618:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1618:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1617:13:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1651:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1651:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1650:9:0"
									},
									"scope": 98,
									"src": "1595:111:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 99,
							"src": "104:1605:0",
							"usedErrors": []
						}
					],
					"src": "37:1672:0"
				},
				"id": 0
			},
			"GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol": {
				"ast": {
					"absolutePath": "GitHub/contract-token-cryptoMonster/backend/shared/helpers/modifireFunc.sol",
					"exportedSymbols": {
						"modifireFunc": [
							220
						],
						"structures": [
							306
						]
					},
					"id": 221,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 100,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:1"
						},
						{
							"absolutePath": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol",
							"file": "../lib/structures.sol",
							"id": 101,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 221,
							"sourceUnit": 307,
							"src": "72:31:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 102,
										"name": "structures",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 306,
										"src": "132:10:1"
									},
									"id": 103,
									"nodeType": "InheritanceSpecifier",
									"src": "132:10:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 220,
							"linearizedBaseContracts": [
								220,
								306
							],
							"name": "modifireFunc",
							"nameLocation": "116:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "268:108:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Role_$228",
																"typeString": "enum structures.Role"
															},
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 106,
																		"name": "structUsers_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 249,
																		"src": "287:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$244_storage_$",
																			"typeString": "mapping(address => struct structures.structUser storage ref)"
																		}
																	},
																	"id": 109,
																	"indexExpression": {
																		"expression": {
																			"id": 107,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "300:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "300:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "287:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_structUser_$244_storage",
																		"typeString": "struct structures.structUser storage ref"
																	}
																},
																"id": 110,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "role",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 231,
																"src": "287:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$228",
																	"typeString": "enum structures.Role"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 111,
																	"name": "Role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 228,
																	"src": "320:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Role_$228_$",
																		"typeString": "type(enum structures.Role)"
																	}
																},
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "SYSTEM_OWNER",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 223,
																"src": "320:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$228",
																	"typeString": "enum structures.Role"
																}
															},
															"src": "287:50:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7572206e6f742061646d696e",
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "339:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c",
																"typeString": "literal_string \"Your not admin\""
															},
															"value": "Your not admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a932f301c93f5824a78253bcc4a642e34e8bac693fd8471e5905940e7776b09c",
																"typeString": "literal_string \"Your not admin\""
															}
														],
														"id": 105,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "279:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "279:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "279:77:1"
											},
											{
												"id": 117,
												"nodeType": "PlaceholderStatement",
												"src": "367:1:1"
											}
										]
									},
									"id": 119,
									"name": "onlyOwner",
									"nameLocation": "255:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "265:2:1"
									},
									"src": "246:130:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "515:121:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Role_$228",
																"typeString": "enum structures.Role"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 122,
																		"name": "structUsers_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 249,
																		"src": "534:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$244_storage_$",
																			"typeString": "mapping(address => struct structures.structUser storage ref)"
																		}
																	},
																	"id": 125,
																	"indexExpression": {
																		"expression": {
																			"id": 123,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "547:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "547:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "534:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_structUser_$244_storage",
																		"typeString": "struct structures.structUser storage ref"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "role",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 231,
																"src": "534:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$228",
																	"typeString": "enum structures.Role"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 127,
																	"name": "Role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 228,
																	"src": "567:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Role_$228_$",
																		"typeString": "type(enum structures.Role)"
																	}
																},
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "SYSTEM_PRIVATE",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 225,
																"src": "567:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$228",
																	"typeString": "enum structures.Role"
																}
															},
															"src": "534:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7572206e6f7420507269766174652070726f7669646572",
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "588:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad6ae5da5b217b421ac93ea0fbb3ab0e88f39844155489a92b15ef6af2ad2fc2",
																"typeString": "literal_string \"Your not Private provider\""
															},
															"value": "Your not Private provider"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad6ae5da5b217b421ac93ea0fbb3ab0e88f39844155489a92b15ef6af2ad2fc2",
																"typeString": "literal_string \"Your not Private provider\""
															}
														],
														"id": 121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "526:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "526:90:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "526:90:1"
											},
											{
												"id": 133,
												"nodeType": "PlaceholderStatement",
												"src": "627:1:1"
											}
										]
									},
									"id": 135,
									"name": "onlyPrivateProvider",
									"nameLocation": "492:19:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:2:1"
									},
									"src": "483:153:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "774:119:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Role_$228",
																"typeString": "enum structures.Role"
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 138,
																		"name": "structUsers_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 249,
																		"src": "793:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$244_storage_$",
																			"typeString": "mapping(address => struct structures.structUser storage ref)"
																		}
																	},
																	"id": 141,
																	"indexExpression": {
																		"expression": {
																			"id": 139,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "806:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "806:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "793:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_structUser_$244_storage",
																		"typeString": "struct structures.structUser storage ref"
																	}
																},
																"id": 142,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "role",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 231,
																"src": "793:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$228",
																	"typeString": "enum structures.Role"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 143,
																	"name": "Role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 228,
																	"src": "826:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Role_$228_$",
																		"typeString": "type(enum structures.Role)"
																	}
																},
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "SYSTEM_PUBLIC",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 224,
																"src": "826:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$228",
																	"typeString": "enum structures.Role"
																}
															},
															"src": "793:51:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7572206e6f74205075626c69632070726f7669646572",
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "846:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_05f2418b58e7bb30fbad3c3b3cb0109a11446f25f5b2b9d17a61bb07228bb0e1",
																"typeString": "literal_string \"Your not Public provider\""
															},
															"value": "Your not Public provider"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_05f2418b58e7bb30fbad3c3b3cb0109a11446f25f5b2b9d17a61bb07228bb0e1",
																"typeString": "literal_string \"Your not Public provider\""
															}
														],
														"id": 137,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "785:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "785:88:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "785:88:1"
											},
											{
												"id": 149,
												"nodeType": "PlaceholderStatement",
												"src": "884:1:1"
											}
										]
									},
									"id": 151,
									"name": "onlyPublicProvider",
									"nameLocation": "752:18:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:1"
									},
									"src": "743:150:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "1064:191:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Role_$228",
																	"typeString": "enum structures.Role"
																},
																"id": 161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 154,
																			"name": "structUsers_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 249,
																			"src": "1083:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$244_storage_$",
																				"typeString": "mapping(address => struct structures.structUser storage ref)"
																			}
																		},
																		"id": 157,
																		"indexExpression": {
																			"expression": {
																				"id": 155,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1096:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 156,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1096:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1083:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_structUser_$244_storage",
																			"typeString": "struct structures.structUser storage ref"
																		}
																	},
																	"id": 158,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "role",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 231,
																	"src": "1083:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$228",
																		"typeString": "enum structures.Role"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 159,
																		"name": "Role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 228,
																		"src": "1116:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Role_$228_$",
																			"typeString": "type(enum structures.Role)"
																		}
																	},
																	"id": 160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "SYSTEM_OWNER",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 223,
																	"src": "1116:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$228",
																		"typeString": "enum structures.Role"
																	}
																},
																"src": "1083:50:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Role_$228",
																	"typeString": "enum structures.Role"
																},
																"id": 169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 162,
																			"name": "structUsers_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 249,
																			"src": "1137:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$244_storage_$",
																				"typeString": "mapping(address => struct structures.structUser storage ref)"
																			}
																		},
																		"id": 165,
																		"indexExpression": {
																			"expression": {
																				"id": 163,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1150:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1150:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1137:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_structUser_$244_storage",
																			"typeString": "struct structures.structUser storage ref"
																		}
																	},
																	"id": 166,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "role",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 231,
																	"src": "1137:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$228",
																		"typeString": "enum structures.Role"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 167,
																		"name": "Role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 228,
																		"src": "1170:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Role_$228_$",
																			"typeString": "type(enum structures.Role)"
																		}
																	},
																	"id": 168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "SYSTEM_PRIVATE",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 225,
																	"src": "1170:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$228",
																		"typeString": "enum structures.Role"
																	}
																},
																"src": "1137:52:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1083:106:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420746865206f776e6572206f7220707269766174652070726f7669646572",
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1191:43:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9",
																"typeString": "literal_string \"You are not the owner or private provider\""
															},
															"value": "You are not the owner or private provider"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8b230f1aca8fa6e062a8ed0126ca3709ee4c3506ae4f7c88d52fdd39e19620e9",
																"typeString": "literal_string \"You are not the owner or private provider\""
															}
														],
														"id": 153,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1075:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1075:160:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "1075:160:1"
											},
											{
												"id": 174,
												"nodeType": "PlaceholderStatement",
												"src": "1246:1:1"
											}
										]
									},
									"id": 176,
									"name": "onlyOwnerAndPrivateProvider",
									"nameLocation": "1033:27:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1061:2:1"
									},
									"src": "1024:231:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "1408:368:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_enum$_Role_$228",
																			"typeString": "enum structures.Role"
																		},
																		"id": 186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 179,
																					"name": "structUsers_",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 249,
																					"src": "1441:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$244_storage_$",
																						"typeString": "mapping(address => struct structures.structUser storage ref)"
																					}
																				},
																				"id": 182,
																				"indexExpression": {
																					"expression": {
																						"id": 180,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "1454:3:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 181,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "1454:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1441:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_structUser_$244_storage",
																					"typeString": "struct structures.structUser storage ref"
																				}
																			},
																			"id": 183,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "role",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 231,
																			"src": "1441:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Role_$228",
																				"typeString": "enum structures.Role"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 184,
																				"name": "Role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 228,
																				"src": "1474:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_Role_$228_$",
																					"typeString": "type(enum structures.Role)"
																				}
																			},
																			"id": 185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "SYSTEM_OWNER",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 223,
																			"src": "1474:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Role_$228",
																				"typeString": "enum structures.Role"
																			}
																		},
																		"src": "1441:50:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_enum$_Role_$228",
																			"typeString": "enum structures.Role"
																		},
																		"id": 194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 187,
																					"name": "structUsers_",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 249,
																					"src": "1508:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$244_storage_$",
																						"typeString": "mapping(address => struct structures.structUser storage ref)"
																					}
																				},
																				"id": 190,
																				"indexExpression": {
																					"expression": {
																						"id": 188,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "1521:3:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 189,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "1521:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1508:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_structUser_$244_storage",
																					"typeString": "struct structures.structUser storage ref"
																				}
																			},
																			"id": 191,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "role",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 231,
																			"src": "1508:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Role_$228",
																				"typeString": "enum structures.Role"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 192,
																				"name": "Role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 228,
																				"src": "1541:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_Role_$228_$",
																					"typeString": "type(enum structures.Role)"
																				}
																			},
																			"id": 193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "SYSTEM_PUBLIC",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 224,
																			"src": "1541:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Role_$228",
																				"typeString": "enum structures.Role"
																			}
																		},
																		"src": "1508:51:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "1441:118:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_Role_$228",
																		"typeString": "enum structures.Role"
																	},
																	"id": 203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 196,
																				"name": "structUsers_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 249,
																				"src": "1576:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$244_storage_$",
																					"typeString": "mapping(address => struct structures.structUser storage ref)"
																				}
																			},
																			"id": 199,
																			"indexExpression": {
																				"expression": {
																					"id": 197,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "1589:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 198,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "1589:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1576:24:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_structUser_$244_storage",
																				"typeString": "struct structures.structUser storage ref"
																			}
																		},
																		"id": 200,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "role",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 231,
																		"src": "1576:29:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Role_$228",
																			"typeString": "enum structures.Role"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"expression": {
																			"id": 201,
																			"name": "Role",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 228,
																			"src": "1609:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_Role_$228_$",
																				"typeString": "type(enum structures.Role)"
																			}
																		},
																		"id": 202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "SYSTEM_PRIVATE",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 225,
																		"src": "1609:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Role_$228",
																			"typeString": "enum structures.Role"
																		}
																	},
																	"src": "1576:52:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1441:187:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Role_$228",
																	"typeString": "enum structures.Role"
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 205,
																			"name": "structUsers_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 249,
																			"src": "1645:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$244_storage_$",
																				"typeString": "mapping(address => struct structures.structUser storage ref)"
																			}
																		},
																		"id": 208,
																		"indexExpression": {
																			"expression": {
																				"id": 206,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1658:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1658:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1645:24:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_structUser_$244_storage",
																			"typeString": "struct structures.structUser storage ref"
																		}
																	},
																	"id": 209,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "role",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 231,
																	"src": "1645:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$228",
																		"typeString": "enum structures.Role"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"expression": {
																		"id": 210,
																		"name": "Role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 228,
																		"src": "1678:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Role_$228_$",
																			"typeString": "type(enum structures.Role)"
																		}
																	},
																	"id": 211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "INVESTOR",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 226,
																	"src": "1678:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Role_$228",
																		"typeString": "enum structures.Role"
																	}
																},
																"src": "1645:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1441:250:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4170706c69636174696f6e2063616e206f6e6c79206265207375626d697474656420627920726567756c6172207573657273",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1693:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8eee8f3e1b78fc84a03ad9368aed0f5d5ffbe790cbbf5be7c05b10e873c56608",
																"typeString": "literal_string \"Application can only be submitted by regular users\""
															},
															"value": "Application can only be submitted by regular users"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8eee8f3e1b78fc84a03ad9368aed0f5d5ffbe790cbbf5be7c05b10e873c56608",
																"typeString": "literal_string \"Application can only be submitted by regular users\""
															}
														],
														"id": 178,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1419:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1419:337:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "1419:337:1"
											},
											{
												"id": 217,
												"nodeType": "PlaceholderStatement",
												"src": "1767:1:1"
											}
										]
									},
									"id": 219,
									"name": "onlyUser",
									"nameLocation": "1396:8:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1405:2:1"
									},
									"src": "1387:389:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 221,
							"src": "107:1672:1",
							"usedErrors": []
						}
					],
					"src": "37:1742:1"
				},
				"id": 1
			},
			"GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol": {
				"ast": {
					"absolutePath": "GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol",
					"exportedSymbols": {
						"structures": [
							306
						]
					},
					"id": 307,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 222,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 306,
							"linearizedBaseContracts": [
								306
							],
							"name": "structures",
							"nameLocation": "81:10:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "structures.Role",
									"id": 228,
									"members": [
										{
											"id": 223,
											"name": "SYSTEM_OWNER",
											"nameLocation": "200:12:2",
											"nodeType": "EnumValue",
											"src": "200:12:2"
										},
										{
											"id": 224,
											"name": "SYSTEM_PUBLIC",
											"nameLocation": "223:13:2",
											"nodeType": "EnumValue",
											"src": "223:13:2"
										},
										{
											"id": 225,
											"name": "SYSTEM_PRIVATE",
											"nameLocation": "247:14:2",
											"nodeType": "EnumValue",
											"src": "247:14:2"
										},
										{
											"id": 226,
											"name": "INVESTOR",
											"nameLocation": "272:8:2",
											"nodeType": "EnumValue",
											"src": "272:8:2"
										},
										{
											"id": 227,
											"name": "USER",
											"nameLocation": "291:4:2",
											"nodeType": "EnumValue",
											"src": "291:4:2"
										}
									],
									"name": "Role",
									"nameLocation": "184:4:2",
									"nodeType": "EnumDefinition",
									"src": "179:123:2"
								},
								{
									"canonicalName": "structures.structUser",
									"id": 244,
									"members": [
										{
											"constant": false,
											"id": 231,
											"mutability": "mutable",
											"name": "role",
											"nameLocation": "416:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 244,
											"src": "411:9:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_Role_$228",
												"typeString": "enum structures.Role"
											},
											"typeName": {
												"id": 230,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 229,
													"name": "Role",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 228,
													"src": "411:4:2"
												},
												"referencedDeclaration": 228,
												"src": "411:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Role_$228",
													"typeString": "enum structures.Role"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 233,
											"mutability": "mutable",
											"name": "login",
											"nameLocation": "466:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 244,
											"src": "459:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 232,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "459:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 235,
											"mutability": "mutable",
											"name": "password",
											"nameLocation": "515:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 244,
											"src": "507:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 234,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "507:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 237,
											"mutability": "mutable",
											"name": "balance_overall",
											"nameLocation": "565:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 244,
											"src": "557:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 236,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "557:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 239,
											"mutability": "mutable",
											"name": "balance_seed",
											"nameLocation": "626:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 244,
											"src": "618:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 238,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "618:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 241,
											"mutability": "mutable",
											"name": "balance_private",
											"nameLocation": "696:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 244,
											"src": "688:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 240,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "688:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 243,
											"mutability": "mutable",
											"name": "balance_public",
											"nameLocation": "769:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 244,
											"src": "761:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 242,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "761:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "structUser",
									"nameLocation": "389:10:2",
									"nodeType": "StructDefinition",
									"scope": 306,
									"src": "382:448:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc837259",
									"id": 249,
									"mutability": "mutable",
									"name": "structUsers_",
									"nameLocation": "875:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "836:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$244_storage_$",
										"typeString": "mapping(address => struct structures.structUser)"
									},
									"typeName": {
										"id": 248,
										"keyType": {
											"id": 245,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "845:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "836:31:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$244_storage_$",
											"typeString": "mapping(address => struct structures.structUser)"
										},
										"valueType": {
											"id": 247,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 246,
												"name": "structUser",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 244,
												"src": "856:10:2"
											},
											"referencedDeclaration": 244,
											"src": "856:10:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_structUser_$244_storage_ptr",
												"typeString": "struct structures.structUser"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 255,
									"mutability": "mutable",
									"name": "allowed",
									"nameLocation": "1007:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "958:56:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 254,
										"keyType": {
											"id": 250,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "966:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "958:48:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 253,
											"keyType": {
												"id": 251,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "986:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "977:28:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 252,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "997:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "0761c8b9",
									"id": 258,
									"mutability": "mutable",
									"name": "tokenPrice_",
									"nameLocation": "1138:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "1123:38:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 256,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1123:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "373530303030303030",
										"id": 257,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1152:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_750000000_by_1",
											"typeString": "int_const 750000000"
										},
										"value": "750000000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "948942ad",
									"id": 261,
									"mutability": "mutable",
									"name": "tokenAmount_",
									"nameLocation": "1397:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "1385:33:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 259,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1385:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030303030",
										"id": 260,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1412:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000_by_1",
											"typeString": "int_const 100000"
										},
										"value": "100000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 264,
									"mutability": "constant",
									"name": "ownerAdr",
									"nameLocation": "1661:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "1644:70:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 262,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1644:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307838453463323465313334393038663233333461654638383535364663314461616130373541353663",
										"id": 263,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1672:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x8E4c24e134908f2334aeF88556Fc1Daaa075A56c"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 267,
									"mutability": "constant",
									"name": "privateProviderAdr",
									"nameLocation": "1768:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "1751:80:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 265,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1751:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307834343930636633364138413439313830304233353134304130376234313930623533336646634266",
										"id": 266,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1789:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x4490cf36A8A491800B35140A07b4190b533fFcBf"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 270,
									"mutability": "constant",
									"name": "publicProviderAdr",
									"nameLocation": "1885:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "1868:79:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 268,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1868:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307839363939663335326241374139324537433046663639323445443939363032636464424133386442",
										"id": 269,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1905:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x9699f352bA7A92E7C0Ff6924ED99602cddBA38dB"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "structures.structPhase",
									"id": 275,
									"members": [
										{
											"constant": false,
											"id": 272,
											"mutability": "mutable",
											"name": "statusPhase",
											"nameLocation": "2074:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 275,
											"src": "2069:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 271,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2069:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 274,
											"mutability": "mutable",
											"name": "reviewed",
											"nameLocation": "2126:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 275,
											"src": "2121:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 273,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2121:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "structPhase",
									"nameLocation": "2046:11:2",
									"nodeType": "StructDefinition",
									"scope": 306,
									"src": "2039:157:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 280,
									"mutability": "mutable",
									"name": "structPhases_",
									"nameLocation": "2235:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "2202:46:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structPhase_$275_storage_$",
										"typeString": "mapping(address => struct structures.structPhase)"
									},
									"typeName": {
										"id": 279,
										"keyType": {
											"id": 276,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2211:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2202:32:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structPhase_$275_storage_$",
											"typeString": "mapping(address => struct structures.structPhase)"
										},
										"valueType": {
											"id": 278,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 277,
												"name": "structPhase",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 275,
												"src": "2222:11:2"
											},
											"referencedDeclaration": 275,
											"src": "2222:11:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_structPhase_$275_storage_ptr",
												"typeString": "struct structures.structPhase"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "structures.structApplication",
									"id": 291,
									"members": [
										{
											"constant": false,
											"id": 282,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "2448:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 291,
											"src": "2441:11:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 281,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2441:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 284,
											"mutability": "mutable",
											"name": "contactForCommunication",
											"nameLocation": "2499:23:2",
											"nodeType": "VariableDeclaration",
											"scope": 291,
											"src": "2492:30:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 283,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2492:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 286,
											"mutability": "mutable",
											"name": "userAdr",
											"nameLocation": "2579:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 291,
											"src": "2571:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 285,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2571:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 288,
											"mutability": "mutable",
											"name": "status",
											"nameLocation": "2656:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 291,
											"src": "2651:11:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 287,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2651:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 290,
											"mutability": "mutable",
											"name": "exist",
											"nameLocation": "2726:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 291,
											"src": "2721:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 289,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2721:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "structApplication",
									"nameLocation": "2412:17:2",
									"nodeType": "StructDefinition",
									"scope": 306,
									"src": "2405:391:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 296,
									"mutability": "mutable",
									"name": "strucApplications_",
									"nameLocation": "2841:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "2802:57:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structApplication_$291_storage_$",
										"typeString": "mapping(address => struct structures.structApplication)"
									},
									"typeName": {
										"id": 295,
										"keyType": {
											"id": 292,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2811:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2802:38:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structApplication_$291_storage_$",
											"typeString": "mapping(address => struct structures.structApplication)"
										},
										"valueType": {
											"id": 294,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 293,
												"name": "structApplication",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 291,
												"src": "2822:17:2"
											},
											"referencedDeclaration": 291,
											"src": "2822:17:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_structApplication_$291_storage_ptr",
												"typeString": "struct structures.structApplication"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 299,
									"mutability": "mutable",
									"name": "structApplicationsAmountAdr",
									"nameLocation": "2940:27:2",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "2930:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 297,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2930:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 298,
										"nodeType": "ArrayTypeName",
										"src": "2930:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 302,
									"mutability": "mutable",
									"name": "whiteList",
									"nameLocation": "3084:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "3074:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 300,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3074:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 301,
										"nodeType": "ArrayTypeName",
										"src": "3074:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 305,
									"mutability": "mutable",
									"name": "blackList",
									"nameLocation": "3246:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 306,
									"src": "3236:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 303,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3236:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 304,
										"nodeType": "ArrayTypeName",
										"src": "3236:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								}
							],
							"scope": 307,
							"src": "72:3279:2",
							"usedErrors": []
						}
					],
					"src": "37:3314:2"
				},
				"id": 2
			}
		}
	}
}