{
	"id": "15fa83269897a3155f03bf74a7b4ca5e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nimport \"../lib/structures.sol\";        // шаблон структур\r\n\r\n// COMMENT: Контракт хранит в себе функции проверка.\r\ncontract validateFuncs is structures {\r\n\r\n    //COMMENT_FUNC: Функция проверки роли владельца.\r\n    function validateOwner() private  view returns (bool) {\r\n        if(structUsers_[msg.sender].role == Role.SYSTEM_OWNER) {\r\n            return (true);\r\n        } else {\r\n            return (false);\r\n        }\r\n    }\r\n\r\n    //COMMIT_FUNC: Функция проверка стадии SEED\r\n    // function validatePhaseSeed() {\r\n\r\n    // }\r\n\r\n\r\n}"
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\ncontract structures {\r\n    // COMMENT: Роли для структуры пользователей.\r\n    enum Role {\r\n        SYSTEM_OWNER,\r\n        SYSTEM_PUBLIC,\r\n        SYSTEM_PRIVATE,\r\n        INVESTOR,\r\n        USER\r\n    }\r\n\r\n    // COMMENT_SCTRUCT: Структура пользователей.\r\n    struct structUser {\r\n        Role role;               // роль  \r\n        string login;            // логин\r\n        bytes32 password;        // пароль\r\n        uint256 balance_overall; // общий баланс\r\n        uint256 balance_seed;    // баланс SEED токенов\r\n        uint256 balance_private; // баланс PRIVATE токенов\r\n        uint256 balance_public;  // баланс PUBLIC токенов\r\n    }\r\n    mapping (address => structUser) structUsers_; // обращение к структуре по АДРЕСАМ\r\n\r\n    // COMMENT_SCTRUC: Структура фазы.\r\n    struct structPhase {\r\n        bool statusPhase; // статус фазы\r\n        bool reviewed;    // была ли активирована фаза\r\n    }\r\n    mapping (address => structPhase) structPhases_; // обращение к структуре по АДРЕСАМ\r\n\r\n    // COMMENT_STRUCT: Структура заявок пользователей.\r\n    struct structApplication {\r\n        string name;                    // имя\r\n        string contactForCommunication; // контакты для связи\r\n        address userAdr;                // адрес пользователя\r\n        bool status;                    // статус заявки\r\n        bool reviewed;                  // была ли просмотрена заявка\r\n        bool exist;                     // заявка существует\r\n    }\r\n    mapping (address => structApplication) strucApplications_; // обращение к структуре по АДРЕСАМ\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol": {
				"validateFuncs": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":235:707  contract validateFuncs is structures {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":235:707  contract validateFuncs is structures {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220136b0b64a36b55d8c8802c2d06c4e7488c1166d61d909310f05a5ad62682627e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220136b0b64a36b55d8c8802c2d06c4e7488c1166d61d909310f05a5ad62682627e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT PUSH12 0xB64A36B55D8C8802C2D06C4 0xE7 BASEFEE DUP13 GT PUSH7 0xD61D909310F05A GAS 0xD6 0x26 DUP3 PUSH3 0x7E6473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "235:472:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220136b0b64a36b55d8c8802c2d06c4e7488c1166d61d909310f05a5ad62682627e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT PUSH12 0xB64A36B55D8C8802C2D06C4 0xE7 BASEFEE DUP13 GT PUSH7 0xD61D909310F05A GAS 0xD6 0x26 DUP3 PUSH3 0x7E6473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "235:472:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"validateOwner()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 235,
									"end": 707,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 235,
									"end": 707,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 235,
									"end": 707,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 235,
									"end": 707,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 235,
									"end": 707,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 235,
									"end": 707,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 235,
									"end": 707,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 235,
									"end": 707,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 235,
									"end": 707,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 235,
									"end": 707,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 235,
									"end": 707,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 235,
									"end": 707,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 235,
									"end": 707,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 235,
									"end": 707,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 235,
									"end": 707,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 235,
									"end": 707,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 235,
									"end": 707,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 235,
									"end": 707,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 235,
									"end": 707,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 235,
									"end": 707,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 235,
									"end": 707,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220136b0b64a36b55d8c8802c2d06c4e7488c1166d61d909310f05a5ad62682627e64736f6c63430008070033",
									".code": [
										{
											"begin": 235,
											"end": 707,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 235,
											"end": 707,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 235,
											"end": 707,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 235,
											"end": 707,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 235,
											"end": 707,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":\"validateFuncs\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":{\"keccak256\":\"0x1b7f4cc004100f94539ca710b4c29a478672047c60096fdf839e01ec2e6191c1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8d3c035379ad795e316e95c4382d98fdd1f36c2a759ac367d747f7b05aa89c0e\",\"dweb:/ipfs/QmSUambh7hdx8ve7pa7v7AFQBwLmy12pinDjwM7tff7Ncr\"]},\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":{\"keccak256\":\"0x3c4d55fff6547a670227273cabf6e5cd6279729590c2415e26148beed5975392\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://31dfe220e5e8f93ca63e6021e3fdf2115f3672410395d5ba5cceb197c48e921f\",\"dweb:/ipfs/QmcMwAuz3HM2QT4HWoHUxny2HqbtibVdu3gDwkeEs9Xyn7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 57,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
								"label": "structUsers_",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(structUser)52_storage)"
							},
							{
								"astId": 67,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
								"label": "structPhases_",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(structPhase)62_storage)"
							},
							{
								"astId": 85,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
								"label": "strucApplications_",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(structApplication)80_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(Role)36": {
								"encoding": "inplace",
								"label": "enum structures.Role",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(structApplication)80_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structApplication)",
								"numberOfBytes": "32",
								"value": "t_struct(structApplication)80_storage"
							},
							"t_mapping(t_address,t_struct(structPhase)62_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structPhase)",
								"numberOfBytes": "32",
								"value": "t_struct(structPhase)62_storage"
							},
							"t_mapping(t_address,t_struct(structUser)52_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structUser)",
								"numberOfBytes": "32",
								"value": "t_struct(structUser)52_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(structApplication)80_storage": {
								"encoding": "inplace",
								"label": "struct structures.structApplication",
								"members": [
									{
										"astId": 69,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 71,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
										"label": "contactForCommunication",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 73,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
										"label": "userAdr",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 75,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
										"label": "status",
										"offset": 20,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 77,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
										"label": "reviewed",
										"offset": 21,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 79,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
										"label": "exist",
										"offset": 22,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(structPhase)62_storage": {
								"encoding": "inplace",
								"label": "struct structures.structPhase",
								"members": [
									{
										"astId": 59,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
										"label": "statusPhase",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 61,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
										"label": "reviewed",
										"offset": 1,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(structUser)52_storage": {
								"encoding": "inplace",
								"label": "struct structures.structUser",
								"members": [
									{
										"astId": 39,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
										"label": "role",
										"offset": 0,
										"slot": "0",
										"type": "t_enum(Role)36"
									},
									{
										"astId": 41,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
										"label": "login",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 43,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
										"label": "password",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									},
									{
										"astId": 45,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
										"label": "balance_overall",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 47,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
										"label": "balance_seed",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 49,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
										"label": "balance_private",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 51,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
										"label": "balance_public",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol": {
				"structures": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":72:1988  contract structures {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":72:1988  contract structures {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209787948b605bf4bab4e1819b7ff0f307cd07633a328191c927cc3f36352749cd64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212209787948b605bf4bab4e1819b7ff0f307cd07633a328191c927cc3f36352749cd64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 DUP8 SWAP5 DUP12 PUSH1 0x5B DELEGATECALL 0xBA 0xB4 0xE1 DUP2 SWAP12 PUSH32 0xF0F307CD07633A328191C927CC3F36352749CD64736F6C634300080700330000 ",
							"sourceMap": "72:1916:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212209787948b605bf4bab4e1819b7ff0f307cd07633a328191c927cc3f36352749cd64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP8 DUP8 SWAP5 DUP12 PUSH1 0x5B DELEGATECALL 0xBA 0xB4 0xE1 DUP2 SWAP12 PUSH32 0xF0F307CD07633A328191C927CC3F36352749CD64736F6C634300080700330000 ",
							"sourceMap": "72:1916:1:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 72,
									"end": 1988,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209787948b605bf4bab4e1819b7ff0f307cd07633a328191c927cc3f36352749cd64736f6c63430008070033",
									".code": [
										{
											"begin": 72,
											"end": 1988,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 72,
											"end": 1988,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 72,
											"end": 1988,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 72,
											"end": 1988,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 1988,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 72,
											"end": 1988,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":\"structures\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":{\"keccak256\":\"0x3c4d55fff6547a670227273cabf6e5cd6279729590c2415e26148beed5975392\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://31dfe220e5e8f93ca63e6021e3fdf2115f3672410395d5ba5cceb197c48e921f\",\"dweb:/ipfs/QmcMwAuz3HM2QT4HWoHUxny2HqbtibVdu3gDwkeEs9Xyn7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 57,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "structUsers_",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(structUser)52_storage)"
							},
							{
								"astId": 67,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "structPhases_",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(structPhase)62_storage)"
							},
							{
								"astId": 85,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "strucApplications_",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(structApplication)80_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(Role)36": {
								"encoding": "inplace",
								"label": "enum structures.Role",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(structApplication)80_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structApplication)",
								"numberOfBytes": "32",
								"value": "t_struct(structApplication)80_storage"
							},
							"t_mapping(t_address,t_struct(structPhase)62_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structPhase)",
								"numberOfBytes": "32",
								"value": "t_struct(structPhase)62_storage"
							},
							"t_mapping(t_address,t_struct(structUser)52_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structUser)",
								"numberOfBytes": "32",
								"value": "t_struct(structUser)52_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(structApplication)80_storage": {
								"encoding": "inplace",
								"label": "struct structures.structApplication",
								"members": [
									{
										"astId": 69,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 71,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "contactForCommunication",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 73,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "userAdr",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 75,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "status",
										"offset": 20,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 77,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "reviewed",
										"offset": 21,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 79,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "exist",
										"offset": 22,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(structPhase)62_storage": {
								"encoding": "inplace",
								"label": "struct structures.structPhase",
								"members": [
									{
										"astId": 59,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "statusPhase",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 61,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "reviewed",
										"offset": 1,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(structUser)52_storage": {
								"encoding": "inplace",
								"label": "struct structures.structUser",
								"members": [
									{
										"astId": 39,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "role",
										"offset": 0,
										"slot": "0",
										"type": "t_enum(Role)36"
									},
									{
										"astId": 41,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "login",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 43,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "password",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									},
									{
										"astId": 45,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "balance_overall",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 47,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "balance_seed",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 49,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "balance_private",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 51,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "balance_public",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol": {
				"ast": {
					"absolutePath": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol",
					"exportedSymbols": {
						"structures": [
							86
						],
						"validateFuncs": [
							28
						]
					},
					"id": 29,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"absolutePath": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol",
							"file": "../lib/structures.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 29,
							"sourceUnit": 87,
							"src": "72:31:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "structures",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 86,
										"src": "261:10:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "261:10:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 28,
							"linearizedBaseContracts": [
								28,
								86
							],
							"name": "validateFuncs",
							"nameLocation": "244:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "417:160:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Role_$36",
														"typeString": "enum structures.Role"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 9,
																"name": "structUsers_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 57,
																"src": "431:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$52_storage_$",
																	"typeString": "mapping(address => struct structures.structUser storage ref)"
																}
															},
															"id": 12,
															"indexExpression": {
																"expression": {
																	"id": 10,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "444:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 11,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "444:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "431:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_structUser_$52_storage",
																"typeString": "struct structures.structUser storage ref"
															}
														},
														"id": 13,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "role",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 39,
														"src": "431:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Role_$36",
															"typeString": "enum structures.Role"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 14,
															"name": "Role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "464:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Role_$36_$",
																"typeString": "type(enum structures.Role)"
															}
														},
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "SYSTEM_OWNER",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 31,
														"src": "464:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Role_$36",
															"typeString": "enum structures.Role"
														}
													},
													"src": "431:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 24,
													"nodeType": "Block",
													"src": "529:41:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 21,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "552:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"id": 22,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "551:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"functionReturnParameters": 8,
															"id": 23,
															"nodeType": "Return",
															"src": "544:14:0"
														}
													]
												},
												"id": 25,
												"nodeType": "IfStatement",
												"src": "428:142:0",
												"trueBody": {
													"id": 20,
													"nodeType": "Block",
													"src": "483:40:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 17,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "506:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	}
																],
																"id": 18,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "505:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"functionReturnParameters": 8,
															"id": 19,
															"nodeType": "Return",
															"src": "498:13:0"
														}
													]
												}
											}
										]
									},
									"id": 27,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "validateOwner",
									"nameLocation": "372:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "385:2:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "411:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 6,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "411:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "410:6:0"
									},
									"scope": 28,
									"src": "363:214:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 29,
							"src": "235:472:0",
							"usedErrors": []
						}
					],
					"src": "37:670:0"
				},
				"id": 0
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol": {
				"ast": {
					"absolutePath": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol",
					"exportedSymbols": {
						"structures": [
							86
						]
					},
					"id": 87,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 30,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 86,
							"linearizedBaseContracts": [
								86
							],
							"name": "structures",
							"nameLocation": "81:10:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "structures.Role",
									"id": 36,
									"members": [
										{
											"id": 31,
											"name": "SYSTEM_OWNER",
											"nameLocation": "200:12:1",
											"nodeType": "EnumValue",
											"src": "200:12:1"
										},
										{
											"id": 32,
											"name": "SYSTEM_PUBLIC",
											"nameLocation": "223:13:1",
											"nodeType": "EnumValue",
											"src": "223:13:1"
										},
										{
											"id": 33,
											"name": "SYSTEM_PRIVATE",
											"nameLocation": "247:14:1",
											"nodeType": "EnumValue",
											"src": "247:14:1"
										},
										{
											"id": 34,
											"name": "INVESTOR",
											"nameLocation": "272:8:1",
											"nodeType": "EnumValue",
											"src": "272:8:1"
										},
										{
											"id": 35,
											"name": "USER",
											"nameLocation": "291:4:1",
											"nodeType": "EnumValue",
											"src": "291:4:1"
										}
									],
									"name": "Role",
									"nameLocation": "184:4:1",
									"nodeType": "EnumDefinition",
									"src": "179:123:1"
								},
								{
									"canonicalName": "structures.structUser",
									"id": 52,
									"members": [
										{
											"constant": false,
											"id": 39,
											"mutability": "mutable",
											"name": "role",
											"nameLocation": "416:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 52,
											"src": "411:9:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_Role_$36",
												"typeString": "enum structures.Role"
											},
											"typeName": {
												"id": 38,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 37,
													"name": "Role",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 36,
													"src": "411:4:1"
												},
												"referencedDeclaration": 36,
												"src": "411:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Role_$36",
													"typeString": "enum structures.Role"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 41,
											"mutability": "mutable",
											"name": "login",
											"nameLocation": "466:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 52,
											"src": "459:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 40,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "459:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 43,
											"mutability": "mutable",
											"name": "password",
											"nameLocation": "515:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 52,
											"src": "507:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 42,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "507:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 45,
											"mutability": "mutable",
											"name": "balance_overall",
											"nameLocation": "565:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 52,
											"src": "557:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 44,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "557:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 47,
											"mutability": "mutable",
											"name": "balance_seed",
											"nameLocation": "626:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 52,
											"src": "618:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 46,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "618:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 49,
											"mutability": "mutable",
											"name": "balance_private",
											"nameLocation": "696:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 52,
											"src": "688:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 48,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "688:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 51,
											"mutability": "mutable",
											"name": "balance_public",
											"nameLocation": "769:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 52,
											"src": "761:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 50,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "761:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "structUser",
									"nameLocation": "389:10:1",
									"nodeType": "StructDefinition",
									"scope": 86,
									"src": "382:448:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 57,
									"mutability": "mutable",
									"name": "structUsers_",
									"nameLocation": "868:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 86,
									"src": "836:44:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$52_storage_$",
										"typeString": "mapping(address => struct structures.structUser)"
									},
									"typeName": {
										"id": 56,
										"keyType": {
											"id": 53,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "845:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "836:31:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$52_storage_$",
											"typeString": "mapping(address => struct structures.structUser)"
										},
										"valueType": {
											"id": 55,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 54,
												"name": "structUser",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 52,
												"src": "856:10:1"
											},
											"referencedDeclaration": 52,
											"src": "856:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_structUser_$52_storage_ptr",
												"typeString": "struct structures.structUser"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "structures.structPhase",
									"id": 62,
									"members": [
										{
											"constant": false,
											"id": 59,
											"mutability": "mutable",
											"name": "statusPhase",
											"nameLocation": "1041:11:1",
											"nodeType": "VariableDeclaration",
											"scope": 62,
											"src": "1036:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 58,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1036:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 61,
											"mutability": "mutable",
											"name": "reviewed",
											"nameLocation": "1093:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 62,
											"src": "1088:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 60,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1088:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "structPhase",
									"nameLocation": "1013:11:1",
									"nodeType": "StructDefinition",
									"scope": 86,
									"src": "1006:157:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 67,
									"mutability": "mutable",
									"name": "structPhases_",
									"nameLocation": "1202:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 86,
									"src": "1169:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structPhase_$62_storage_$",
										"typeString": "mapping(address => struct structures.structPhase)"
									},
									"typeName": {
										"id": 66,
										"keyType": {
											"id": 63,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1178:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1169:32:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structPhase_$62_storage_$",
											"typeString": "mapping(address => struct structures.structPhase)"
										},
										"valueType": {
											"id": 65,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 64,
												"name": "structPhase",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 62,
												"src": "1189:11:1"
											},
											"referencedDeclaration": 62,
											"src": "1189:11:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_structPhase_$62_storage_ptr",
												"typeString": "struct structures.structPhase"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "structures.structApplication",
									"id": 80,
									"members": [
										{
											"constant": false,
											"id": 69,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "1415:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 80,
											"src": "1408:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 68,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1408:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 71,
											"mutability": "mutable",
											"name": "contactForCommunication",
											"nameLocation": "1466:23:1",
											"nodeType": "VariableDeclaration",
											"scope": 80,
											"src": "1459:30:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 70,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1459:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 73,
											"mutability": "mutable",
											"name": "userAdr",
											"nameLocation": "1546:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 80,
											"src": "1538:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 72,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1538:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 75,
											"mutability": "mutable",
											"name": "status",
											"nameLocation": "1623:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 80,
											"src": "1618:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 74,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1618:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 77,
											"mutability": "mutable",
											"name": "reviewed",
											"nameLocation": "1693:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 80,
											"src": "1688:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 76,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1688:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 79,
											"mutability": "mutable",
											"name": "exist",
											"nameLocation": "1787:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 80,
											"src": "1782:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 78,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1782:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "structApplication",
									"nameLocation": "1379:17:1",
									"nodeType": "StructDefinition",
									"scope": 86,
									"src": "1372:485:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 85,
									"mutability": "mutable",
									"name": "strucApplications_",
									"nameLocation": "1902:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 86,
									"src": "1863:57:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structApplication_$80_storage_$",
										"typeString": "mapping(address => struct structures.structApplication)"
									},
									"typeName": {
										"id": 84,
										"keyType": {
											"id": 81,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1872:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1863:38:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structApplication_$80_storage_$",
											"typeString": "mapping(address => struct structures.structApplication)"
										},
										"valueType": {
											"id": 83,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 82,
												"name": "structApplication",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 80,
												"src": "1883:17:1"
											},
											"referencedDeclaration": 80,
											"src": "1883:17:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_structApplication_$80_storage_ptr",
												"typeString": "struct structures.structApplication"
											}
										}
									},
									"visibility": "internal"
								}
							],
							"scope": 87,
							"src": "72:1916:1",
							"usedErrors": []
						}
					],
					"src": "37:1951:1"
				},
				"id": 1
			}
		}
	}
}