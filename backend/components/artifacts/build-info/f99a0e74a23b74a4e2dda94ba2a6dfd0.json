{
	"id": "f99a0e74a23b74a4e2dda94ba2a6dfd0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nimport \"../shared/lib/SafeMath.sol\";\r\nimport \"../shared/lib/IERC20.sol\";\r\n\r\ncontract CryptoMonster is IERC20  {\r\n    using SafeMath for uint256; // библиотека безопасных вычислений\r\n\r\n    // COMMENT: Общие сведения по токену.\r\n    string public constant name = \"CryptoMonster\";  // имя токена\r\n    string public constant symbol = \"CMON\";         // тикер токена\r\n    uint8 public constant decimals = 12;            // 1 000 000 000 000 == 1 CMON ; конвертация eth в wei: https://eth-converter.com/\r\n\r\n    // COMMENT: Структура пользователей.\r\n    struct structUser {\r\n        string login;       // логин\r\n        bytes32 password;   // пароль\r\n        uint256 balances;   // баланс\r\n    }\r\n    mapping (address => structUser) structUser_;\r\n\r\n    mapping(address => string) logins;                          // логины пользователей\r\n    mapping(address => uint256) balances;                       // баланс по адресу\r\n    mapping(address => mapping (address => uint256)) allowed;   // делегированные пользоатели\r\n\r\n    uint256 totalSupply_;\r\n    uint256 public constant tokenPrice_ = 1000000000; // 1 токен за 0.00075 ETH => 750000000; 0.001ETH => 1000000000 WEI | ЗНАЧЕНИЕ УКАЗЫВАЕТСЯ В WEI\r\n\r\n    constructor(uint256 total) {\r\n        totalSupply_ = total;\r\n        balances[msg.sender] = totalSupply_;\r\n    }\r\n\r\n    // COMMENT_FUNC: Функция покупки токена\r\n    function buy(uint256 _amount) external payable {\r\n        // например: покупатель хочет 1 токенов, для этого он должен отправить 5 вэй\r\n        require(msg.value == _amount * tokenPrice_, 'Need to send exact amount of wei');\r\n        \r\n        balances[msg.sender] = balances[msg.sender].add(_amount);\r\n    }\r\n\r\n    // COMMENT_FUNC: Функция вернет количество всех токенов, выделенных этим контрактом, независимо от владельца.\r\n    function totalSupply() public override view returns (uint256) {\r\n        return totalSupply_;\r\n    }\r\n\r\n    // COMMENT_FUNC: Функция вернет текущий баланс токена учетной записи, идентифицированный по адресу его владельца.\r\n    function balanceOf(address _tokenOwner) public override view returns (uint256) {\r\n        return balances[_tokenOwner];\r\n    }\r\n\r\n    // COMMENT_FUNC: Функция перевода используется для перемещения количества токенов _numTokens с баланса владельца\r\n    // на баланс другого пользователя или получателя. Передающий владелец — msg.sender, \r\n    // то есть тот, кто выполняет функцию.\r\n    function transfer(address _receiver, uint256 _numTokens) public override returns (bool) {\r\n        require(_numTokens <= balances[msg.sender]);                    // проверка баланса\r\n        balances[msg.sender] = balances[msg.sender].sub(_numTokens);    // снятие токенов с баланса\r\n        balances[_receiver] = balances[_receiver].add(_numTokens);      // начисление токенов на баланс\r\n        emit Transfer(msg.sender, _receiver, _numTokens);               // оповещение об успешной операции перевода\r\n        return true;\r\n    }\r\n\r\n    // COMMENT_FUNC: Функция TransferFrom является аналогом функции утверждения. Это позволяет делегату,\r\n    // одобренному для снятия средств, переводить средства владельца на сторонний счет.\r\n    function transferFrom(address _owner, address _buyer, uint256 _numTokens) public override returns (bool) {\r\n        require(_numTokens <= balances[_owner]);              // проверка баланса\r\n        require(_numTokens <= allowed[_owner][msg.sender]);   // проверка баланса\r\n\r\n        balances[_owner] = balances[_owner].sub(_numTokens);                        // снятие токенов с баланса\r\n        allowed[_owner][msg.sender] = allowed[_owner][msg.sender].sub(_numTokens);  // снятие токенов с баланса\r\n        balances[_buyer] = balances[_buyer].add(_numTokens);                        // начисление токенов на баланс\r\n        emit Transfer(_owner, _buyer, _numTokens);\r\n        return true;\r\n    }\r\n\r\n    // COMMENT_FUNC: Функция позволяет владельцу, т. е. msg.sender одобрить делегированную учетную запись\r\n    // для снятия токенов со своей учетной записи и передачи их на другие учетные записи.\r\n    function approve(address _delegate, uint256 _numTokens) public override returns (bool) {\r\n        allowed[msg.sender][_delegate] = _numTokens;        // установка разрешенной суммы для снятие токенов с определенного АДРЕСА\r\n        emit Approval(msg.sender, _delegate, _numTokens);   \r\n        return true;\r\n    }\r\n\r\n    // COMMENT_FUNC: Функци возвращает текущее утвержденное количество токенов владельцем\r\n    // конкретному делегату, как установлено в функции утверждения.\r\n    function allowance(address _owner, address _delegate) public override view returns (uint) {\r\n        return allowed[_owner][_delegate];\r\n    }\r\n}"
			},
			"GitHub/contract-token-cryptoMonster/shared/lib/IERC20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);                                 // общее количество токенов в системе\r\n    function balanceOf(address _account) external view returns (uint256);                   // позволяет посмотреть баланс любого пользователя\r\n    function allowance(address _owner, address _spender) external view returns (uint256);   // посмотреть сколько АДРЕС owner разрешил использовать свое  количество токенов АДРЕСУ spender \r\n\r\n    function transfer(address _to, uint256 _amount) external returns (bool);                    // переслает  деньги с msg.sender другому пользователю\r\n    function approve(address _spender, uint256 _amount) external returns (bool);                // разрешает какому-то АДРЕСУ распоряжаться определенным кол-вом токенов\r\n    function transferFrom(address _to, address _from, uint256 _amount) external returns (bool); // от когого-то АДРЕСА пересылает на определенный АДРЕС кол-во токенов\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);        // евент о том, что произошел transfer c 1-го аккаунта на 2-ой, вызывает когда мы переводим токены\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);  // вызывает когда мы с помощью функции: \"approve\", разрешаем использовать токены\r\n}"
			},
			"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n      uint256 c = a + b;\r\n      assert(c >= a);\r\n      return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n      assert(b <= a);\r\n      return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a,uint256 b,string memory errorMessage) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol": {
				"CryptoMonster": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "total",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_delegate",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_delegate",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_numTokens",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenOwner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "buy",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenPrice_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_numTokens",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_buyer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_numTokens",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":148:5985  contract CryptoMonster is IERC20  {\r... */\n  mstore(0x40, 0x80)\n    /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1477:1589  constructor(uint256 total) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1530:1535  total */\n  dup1\n    /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1515:1527  totalSupply_ */\n  0x04\n    /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1515:1535  totalSupply_ = total */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1569:1581  totalSupply_ */\n  sload(0x04)\n    /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1546:1554  balances */\n  0x02\n    /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1546:1566  balances[msg.sender] */\n  0x00\n    /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1555:1565  msg.sender */\n  caller\n    /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1546:1566  balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1546:1581  balances[msg.sender] = totalSupply_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1477:1589  constructor(uint256 total) {\r... */\n  pop\n    /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":148:5985  contract CryptoMonster is IERC20  {\r... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:507   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:362   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":281:360   */\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":243:362   */\ntag_13:\n    /* \"#utility.yul\":401:402   */\n  0x00\n    /* \"#utility.yul\":426:490   */\n  tag_16\n    /* \"#utility.yul\":482:489   */\n  dup5\n    /* \"#utility.yul\":473:479   */\n  dup3\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":426:490   */\n  tag_8\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":416:490   */\n  swap2\n  pop\n    /* \"#utility.yul\":372:500   */\n  pop\n    /* \"#utility.yul\":156:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":594:671   */\ntag_19:\n    /* \"#utility.yul\":631:638   */\n  0x00\n    /* \"#utility.yul\":660:665   */\n  dup2\n    /* \"#utility.yul\":649:665   */\n  swap1\n  pop\n    /* \"#utility.yul\":594:671   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":800:917   */\ntag_15:\n    /* \"#utility.yul\":909:910   */\n  0x00\n    /* \"#utility.yul\":906:907   */\n  dup1\n    /* \"#utility.yul\":899:911   */\n  revert\n    /* \"#utility.yul\":923:1045   */\ntag_11:\n    /* \"#utility.yul\":996:1020   */\n  tag_25\n    /* \"#utility.yul\":1014:1019   */\n  dup2\n    /* \"#utility.yul\":996:1020   */\n  tag_19\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":989:994   */\n  dup2\n    /* \"#utility.yul\":986:1021   */\n  eq\n    /* \"#utility.yul\":976:1039   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":1035:1036   */\n  0x00\n    /* \"#utility.yul\":1032:1033   */\n  dup1\n    /* \"#utility.yul\":1025:1037   */\n  revert\n    /* \"#utility.yul\":976:1039   */\ntag_26:\n    /* \"#utility.yul\":923:1045   */\n  pop\n  jump\t// out\n    /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":148:5985  contract CryptoMonster is IERC20  {\r... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":148:5985  contract CryptoMonster is IERC20  {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd96a094a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_12\n      jumpi\n      jump(tag_1)\n    tag_13:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x0761c8b9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":354:399  string public constant name = \"CryptoMonster\" */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1297:1345  uint256 public constant tokenPrice_ = 1000000000 */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5184:5558  function approve(address _delegate, uint256 _numTokens) public override returns (bool) {\r... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":2230:2330  function totalSupply() public override view returns (uint256) {\r... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4053:4848  function transferFrom(address _owner, address _buyer, uint256 _numTokens) public override returns (bool) {\r... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":510:545  uint8 public constant decimals = 12 */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":2540:2666  function balanceOf(address _tokenOwner) public override view returns (uint256) {\r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":430:468  string public constant symbol = \"CMON\" */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3089:3720  function transfer(address _receiver, uint256 _numTokens) public override returns (bool) {\r... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1662:2028  function buy(uint256 _amount) external payable {\r... */\n    tag_11:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      stop\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5840:5982  function allowance(address _owner, address _delegate) public override view returns (uint) {\r... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":354:399  string public constant name = \"CryptoMonster\" */\n    tag_16:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0d\n      dup2\n      mstore\n      0x20\n      add\n      0x43727970746f4d6f6e7374657200000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1297:1345  uint256 public constant tokenPrice_ = 1000000000 */\n    tag_21:\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1335:1345  1000000000 */\n      0x3b9aca00\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1297:1345  uint256 public constant tokenPrice_ = 1000000000 */\n      dup2\n      jump\t// out\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5184:5558  function approve(address _delegate, uint256 _numTokens) public override returns (bool) {\r... */\n    tag_28:\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5265:5269  bool */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5315:5325  _numTokens */\n      dup2\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5282:5289  allowed */\n      0x03\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5282:5301  allowed[msg.sender] */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5290:5300  msg.sender */\n      caller\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5282:5301  allowed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5282:5312  allowed[msg.sender][_delegate] */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5302:5311  _delegate */\n      dup6\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5282:5312  allowed[msg.sender][_delegate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5282:5325  allowed[msg.sender][_delegate] = _numTokens */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5503:5512  _delegate */\n      dup3\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5482:5525  Approval(msg.sender, _delegate, _numTokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5491:5501  msg.sender */\n      caller\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5482:5525  Approval(msg.sender, _delegate, _numTokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5514:5524  _numTokens */\n      dup5\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5482:5525  Approval(msg.sender, _delegate, _numTokens) */\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5546:5550  true */\n      0x01\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5539:5550  return true */\n      swap1\n      pop\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5184:5558  function approve(address _delegate, uint256 _numTokens) public override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":2230:2330  function totalSupply() public override view returns (uint256) {\r... */\n    tag_33:\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":2283:2290  uint256 */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":2310:2322  totalSupply_ */\n      sload(0x04)\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":2303:2322  return totalSupply_ */\n      swap1\n      pop\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":2230:2330  function totalSupply() public override view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4053:4848  function transferFrom(address _owner, address _buyer, uint256 _numTokens) public override returns (bool) {\r... */\n    tag_39:\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4152:4156  bool */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4191:4199  balances */\n      0x02\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4191:4207  balances[_owner] */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4200:4206  _owner */\n      dup6\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4191:4207  balances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4177:4187  _numTokens */\n      dup3\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4177:4207  _numTokens <= balances[_owner] */\n      gt\n      iszero\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4169:4208  require(_numTokens <= balances[_owner]) */\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4289:4296  allowed */\n      0x03\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4289:4304  allowed[_owner] */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4297:4303  _owner */\n      dup6\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4289:4304  allowed[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4289:4316  allowed[_owner][msg.sender] */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4305:4315  msg.sender */\n      caller\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4289:4316  allowed[_owner][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4275:4285  _numTokens */\n      dup3\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4275:4316  _numTokens <= allowed[_owner][msg.sender] */\n      gt\n      iszero\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4267:4317  require(_numTokens <= allowed[_owner][msg.sender]) */\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4386:4418  balances[_owner].sub(_numTokens) */\n      tag_77\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4407:4417  _numTokens */\n      dup3\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4386:4394  balances */\n      0x02\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4386:4402  balances[_owner] */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4395:4401  _owner */\n      dup8\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4386:4402  balances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4386:4406  balances[_owner].sub */\n      tag_78\n      swap1\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4386:4418  balances[_owner].sub(_numTokens) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_77:\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4367:4375  balances */\n      0x02\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4367:4383  balances[_owner] */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4376:4382  _owner */\n      dup7\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4367:4383  balances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4367:4418  balances[_owner] = balances[_owner].sub(_numTokens) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4531:4574  allowed[_owner][msg.sender].sub(_numTokens) */\n      tag_79\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4563:4573  _numTokens */\n      dup3\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4531:4538  allowed */\n      0x03\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4531:4546  allowed[_owner] */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4539:4545  _owner */\n      dup8\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4531:4546  allowed[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4531:4558  allowed[_owner][msg.sender] */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4547:4557  msg.sender */\n      caller\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4531:4558  allowed[_owner][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4531:4562  allowed[_owner][msg.sender].sub */\n      tag_78\n      swap1\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4531:4574  allowed[_owner][msg.sender].sub(_numTokens) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_79:\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4501:4508  allowed */\n      0x03\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4501:4516  allowed[_owner] */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4509:4515  _owner */\n      dup7\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4501:4516  allowed[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4501:4528  allowed[_owner][msg.sender] */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4517:4527  msg.sender */\n      caller\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4501:4528  allowed[_owner][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4501:4574  allowed[_owner][msg.sender] = allowed[_owner][msg.sender].sub(_numTokens) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4654:4686  balances[_buyer].add(_numTokens) */\n      tag_80\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4675:4685  _numTokens */\n      dup3\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4654:4662  balances */\n      0x02\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4654:4670  balances[_buyer] */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4663:4669  _buyer */\n      dup7\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4654:4670  balances[_buyer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4654:4674  balances[_buyer].add */\n      tag_81\n      swap1\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4654:4686  balances[_buyer].add(_numTokens) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_80:\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4635:4643  balances */\n      0x02\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4635:4651  balances[_buyer] */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4644:4650  _buyer */\n      dup6\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4635:4651  balances[_buyer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4635:4686  balances[_buyer] = balances[_buyer].add(_numTokens) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4799:4805  _buyer */\n      dup3\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4782:4818  Transfer(_owner, _buyer, _numTokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4791:4797  _owner */\n      dup5\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4782:4818  Transfer(_owner, _buyer, _numTokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4807:4817  _numTokens */\n      dup5\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4782:4818  Transfer(_owner, _buyer, _numTokens) */\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4836:4840  true */\n      0x01\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4829:4840  return true */\n      swap1\n      pop\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":4053:4848  function transferFrom(address _owner, address _buyer, uint256 _numTokens) public override returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":510:545  uint8 public constant decimals = 12 */\n    tag_43:\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":543:545  12 */\n      0x0c\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":510:545  uint8 public constant decimals = 12 */\n      dup2\n      jump\t// out\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":2540:2666  function balanceOf(address _tokenOwner) public override view returns (uint256) {\r... */\n    tag_50:\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":2610:2617  uint256 */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":2637:2645  balances */\n      0x02\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":2637:2658  balances[_tokenOwner] */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":2646:2657  _tokenOwner */\n      dup4\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":2637:2658  balances[_tokenOwner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":2630:2658  return balances[_tokenOwner] */\n      swap1\n      pop\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":2540:2666  function balanceOf(address _tokenOwner) public override view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":430:468  string public constant symbol = \"CMON\" */\n    tag_54:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      0x434d4f4e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3089:3720  function transfer(address _receiver, uint256 _numTokens) public override returns (bool) {\r... */\n    tag_59:\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3171:3175  bool */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3210:3218  balances */\n      0x02\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3210:3230  balances[msg.sender] */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3219:3229  msg.sender */\n      caller\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3210:3230  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3196:3206  _numTokens */\n      dup3\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3196:3230  _numTokens <= balances[msg.sender] */\n      gt\n      iszero\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3188:3231  require(_numTokens <= balances[msg.sender]) */\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3319:3355  balances[msg.sender].sub(_numTokens) */\n      tag_86\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3344:3354  _numTokens */\n      dup3\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3319:3327  balances */\n      0x02\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3319:3339  balances[msg.sender] */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3328:3338  msg.sender */\n      caller\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3319:3339  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3319:3343  balances[msg.sender].sub */\n      tag_78\n      swap1\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3319:3355  balances[msg.sender].sub(_numTokens) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_86:\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3296:3304  balances */\n      0x02\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3296:3316  balances[msg.sender] */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3305:3315  msg.sender */\n      caller\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3296:3316  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3296:3355  balances[msg.sender] = balances[msg.sender].sub(_numTokens) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3440:3475  balances[_receiver].add(_numTokens) */\n      tag_87\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3464:3474  _numTokens */\n      dup3\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3440:3448  balances */\n      0x02\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3440:3459  balances[_receiver] */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3449:3458  _receiver */\n      dup7\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3440:3459  balances[_receiver] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3440:3463  balances[_receiver].add */\n      tag_81\n      swap1\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3440:3475  balances[_receiver].add(_numTokens) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_87:\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3418:3426  balances */\n      0x02\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3418:3437  balances[_receiver] */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3427:3436  _receiver */\n      dup6\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3418:3437  balances[_receiver] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3418:3475  balances[_receiver] = balances[_receiver].add(_numTokens) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3574:3583  _receiver */\n      dup3\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3553:3596  Transfer(msg.sender, _receiver, _numTokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3562:3572  msg.sender */\n      caller\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3553:3596  Transfer(msg.sender, _receiver, _numTokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3585:3595  _numTokens */\n      dup5\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3553:3596  Transfer(msg.sender, _receiver, _numTokens) */\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3708:3712  true */\n      0x01\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3701:3712  return true */\n      swap1\n      pop\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":3089:3720  function transfer(address _receiver, uint256 _numTokens) public override returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1662:2028  function buy(uint256 _amount) external payable {\r... */\n    tag_64:\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1335:1345  1000000000 */\n      0x3b9aca00\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1885:1892  _amount */\n      dup2\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1885:1906  _amount * tokenPrice_ */\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1872:1881  msg.value */\n      callvalue\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1872:1906  msg.value == _amount * tokenPrice_ */\n      eq\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1864:1943  require(msg.value == _amount * tokenPrice_, 'Need to send exact amount of wei') */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1987:2020  balances[msg.sender].add(_amount) */\n      tag_95\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":2012:2019  _amount */\n      dup2\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1987:1995  balances */\n      0x02\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1987:2007  balances[msg.sender] */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1996:2006  msg.sender */\n      caller\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1987:2007  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1987:2011  balances[msg.sender].add */\n      tag_81\n      swap1\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1987:2020  balances[msg.sender].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_95:\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1964:1972  balances */\n      0x02\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1964:1984  balances[msg.sender] */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1973:1983  msg.sender */\n      caller\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1964:1984  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1964:2020  balances[msg.sender] = balances[msg.sender].add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":1662:2028  function buy(uint256 _amount) external payable {\r... */\n      pop\n      jump\t// out\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5840:5982  function allowance(address _owner, address _delegate) public override view returns (uint) {\r... */\n    tag_69:\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5924:5928  uint */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5948:5955  allowed */\n      0x03\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5948:5963  allowed[_owner] */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5956:5962  _owner */\n      dup5\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5948:5963  allowed[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5948:5974  allowed[_owner][_delegate] */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5964:5973  _delegate */\n      dup4\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5948:5974  allowed[_owner][_delegate] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5941:5974  return allowed[_owner][_delegate] */\n      swap1\n      pop\n        /* \"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":5840:5982  function allowance(address _owner, address _delegate) public override view returns (uint) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol\":2846:2965  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_78:\n        /* \"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol\":2904:2911  uint256 */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol\":2934:2935  a */\n      dup3\n        /* \"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol\":2929:2930  b */\n      dup3\n        /* \"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol\":2929:2935  b <= a */\n      gt\n      iszero\n        /* \"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol\":2922:2936  assert(b <= a) */\n      tag_98\n      jumpi\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n    tag_98:\n        /* \"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol\":2956:2957  b */\n      dup2\n        /* \"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol\":2952:2953  a */\n      dup4\n        /* \"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol\":2952:2957  a - b */\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n        /* \"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol\":2945:2957  return a - b */\n      swap1\n      pop\n        /* \"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol\":2846:2965  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol\":2422:2563  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_81:\n        /* \"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol\":2480:2487  uint256 */\n      0x00\n        /* \"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol\":2498:2507  uint256 c */\n      dup1\n        /* \"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol\":2514:2515  b */\n      dup3\n        /* \"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol\":2510:2511  a */\n      dup5\n        /* \"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol\":2510:2515  a + b */\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol\":2498:2515  uint256 c = a + b */\n      swap1\n      pop\n        /* \"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol\":2536:2537  a */\n      dup4\n        /* \"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol\":2531:2532  c */\n      dup2\n        /* \"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol\":2531:2537  c >= a */\n      lt\n      iszero\n        /* \"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol\":2524:2538  assert(c >= a) */\n      tag_106\n      jumpi\n      tag_107\n      tag_100\n      jump\t// in\n    tag_107:\n    tag_106:\n        /* \"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol\":2554:2555  c */\n      dup1\n        /* \"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol\":2547:2555  return c */\n      swap2\n      pop\n      pop\n        /* \"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol\":2422:2563  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_109:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_111\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_113:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_115\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:626   */\n    tag_49:\n        /* \"#utility.yul\":356:362   */\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:492   */\n      iszero\n      tag_118\n      jumpi\n        /* \"#utility.yul\":411:490   */\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":373:492   */\n    tag_118:\n        /* \"#utility.yul\":531:532   */\n      0x00\n        /* \"#utility.yul\":556:609   */\n      tag_121\n        /* \"#utility.yul\":601:608   */\n      dup5\n        /* \"#utility.yul\":592:598   */\n      dup3\n        /* \"#utility.yul\":581:590   */\n      dup6\n        /* \"#utility.yul\":577:599   */\n      add\n        /* \"#utility.yul\":556:609   */\n      tag_109\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":546:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":502:619   */\n      pop\n        /* \"#utility.yul\":297:626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:1106   */\n    tag_68:\n        /* \"#utility.yul\":700:706   */\n      0x00\n        /* \"#utility.yul\":708:714   */\n      dup1\n        /* \"#utility.yul\":757:759   */\n      0x40\n        /* \"#utility.yul\":745:754   */\n      dup4\n        /* \"#utility.yul\":736:743   */\n      dup6\n        /* \"#utility.yul\":732:755   */\n      sub\n        /* \"#utility.yul\":728:760   */\n      slt\n        /* \"#utility.yul\":725:844   */\n      iszero\n      tag_123\n      jumpi\n        /* \"#utility.yul\":763:842   */\n      tag_124\n      tag_120\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":725:844   */\n    tag_123:\n        /* \"#utility.yul\":883:884   */\n      0x00\n        /* \"#utility.yul\":908:961   */\n      tag_125\n        /* \"#utility.yul\":953:960   */\n      dup6\n        /* \"#utility.yul\":944:950   */\n      dup3\n        /* \"#utility.yul\":933:942   */\n      dup7\n        /* \"#utility.yul\":929:951   */\n      add\n        /* \"#utility.yul\":908:961   */\n      tag_109\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":898:961   */\n      swap3\n      pop\n        /* \"#utility.yul\":854:971   */\n      pop\n        /* \"#utility.yul\":1010:1012   */\n      0x20\n        /* \"#utility.yul\":1036:1089   */\n      tag_126\n        /* \"#utility.yul\":1081:1088   */\n      dup6\n        /* \"#utility.yul\":1072:1078   */\n      dup3\n        /* \"#utility.yul\":1061:1070   */\n      dup7\n        /* \"#utility.yul\":1057:1079   */\n      add\n        /* \"#utility.yul\":1036:1089   */\n      tag_109\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":1026:1089   */\n      swap2\n      pop\n        /* \"#utility.yul\":981:1099   */\n      pop\n        /* \"#utility.yul\":632:1106   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1112:1731   */\n    tag_38:\n        /* \"#utility.yul\":1189:1195   */\n      0x00\n        /* \"#utility.yul\":1197:1203   */\n      dup1\n        /* \"#utility.yul\":1205:1211   */\n      0x00\n        /* \"#utility.yul\":1254:1256   */\n      0x60\n        /* \"#utility.yul\":1242:1251   */\n      dup5\n        /* \"#utility.yul\":1233:1240   */\n      dup7\n        /* \"#utility.yul\":1229:1252   */\n      sub\n        /* \"#utility.yul\":1225:1257   */\n      slt\n        /* \"#utility.yul\":1222:1341   */\n      iszero\n      tag_128\n      jumpi\n        /* \"#utility.yul\":1260:1339   */\n      tag_129\n      tag_120\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":1222:1341   */\n    tag_128:\n        /* \"#utility.yul\":1380:1381   */\n      0x00\n        /* \"#utility.yul\":1405:1458   */\n      tag_130\n        /* \"#utility.yul\":1450:1457   */\n      dup7\n        /* \"#utility.yul\":1441:1447   */\n      dup3\n        /* \"#utility.yul\":1430:1439   */\n      dup8\n        /* \"#utility.yul\":1426:1448   */\n      add\n        /* \"#utility.yul\":1405:1458   */\n      tag_109\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":1395:1458   */\n      swap4\n      pop\n        /* \"#utility.yul\":1351:1468   */\n      pop\n        /* \"#utility.yul\":1507:1509   */\n      0x20\n        /* \"#utility.yul\":1533:1586   */\n      tag_131\n        /* \"#utility.yul\":1578:1585   */\n      dup7\n        /* \"#utility.yul\":1569:1575   */\n      dup3\n        /* \"#utility.yul\":1558:1567   */\n      dup8\n        /* \"#utility.yul\":1554:1576   */\n      add\n        /* \"#utility.yul\":1533:1586   */\n      tag_109\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":1523:1586   */\n      swap3\n      pop\n        /* \"#utility.yul\":1478:1596   */\n      pop\n        /* \"#utility.yul\":1635:1637   */\n      0x40\n        /* \"#utility.yul\":1661:1714   */\n      tag_132\n        /* \"#utility.yul\":1706:1713   */\n      dup7\n        /* \"#utility.yul\":1697:1703   */\n      dup3\n        /* \"#utility.yul\":1686:1695   */\n      dup8\n        /* \"#utility.yul\":1682:1704   */\n      add\n        /* \"#utility.yul\":1661:1714   */\n      tag_113\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":1651:1714   */\n      swap2\n      pop\n        /* \"#utility.yul\":1606:1724   */\n      pop\n        /* \"#utility.yul\":1112:1731   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1737:2211   */\n    tag_27:\n        /* \"#utility.yul\":1805:1811   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup1\n        /* \"#utility.yul\":1862:1864   */\n      0x40\n        /* \"#utility.yul\":1850:1859   */\n      dup4\n        /* \"#utility.yul\":1841:1848   */\n      dup6\n        /* \"#utility.yul\":1837:1860   */\n      sub\n        /* \"#utility.yul\":1833:1865   */\n      slt\n        /* \"#utility.yul\":1830:1949   */\n      iszero\n      tag_134\n      jumpi\n        /* \"#utility.yul\":1868:1947   */\n      tag_135\n      tag_120\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":1830:1949   */\n    tag_134:\n        /* \"#utility.yul\":1988:1989   */\n      0x00\n        /* \"#utility.yul\":2013:2066   */\n      tag_136\n        /* \"#utility.yul\":2058:2065   */\n      dup6\n        /* \"#utility.yul\":2049:2055   */\n      dup3\n        /* \"#utility.yul\":2038:2047   */\n      dup7\n        /* \"#utility.yul\":2034:2056   */\n      add\n        /* \"#utility.yul\":2013:2066   */\n      tag_109\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":2003:2066   */\n      swap3\n      pop\n        /* \"#utility.yul\":1959:2076   */\n      pop\n        /* \"#utility.yul\":2115:2117   */\n      0x20\n        /* \"#utility.yul\":2141:2194   */\n      tag_137\n        /* \"#utility.yul\":2186:2193   */\n      dup6\n        /* \"#utility.yul\":2177:2183   */\n      dup3\n        /* \"#utility.yul\":2166:2175   */\n      dup7\n        /* \"#utility.yul\":2162:2184   */\n      add\n        /* \"#utility.yul\":2141:2194   */\n      tag_113\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":2131:2194   */\n      swap2\n      pop\n        /* \"#utility.yul\":2086:2204   */\n      pop\n        /* \"#utility.yul\":1737:2211   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2217:2546   */\n    tag_63:\n        /* \"#utility.yul\":2276:2282   */\n      0x00\n        /* \"#utility.yul\":2325:2327   */\n      0x20\n        /* \"#utility.yul\":2313:2322   */\n      dup3\n        /* \"#utility.yul\":2304:2311   */\n      dup5\n        /* \"#utility.yul\":2300:2323   */\n      sub\n        /* \"#utility.yul\":2296:2328   */\n      slt\n        /* \"#utility.yul\":2293:2412   */\n      iszero\n      tag_139\n      jumpi\n        /* \"#utility.yul\":2331:2410   */\n      tag_140\n      tag_120\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":2293:2412   */\n    tag_139:\n        /* \"#utility.yul\":2451:2452   */\n      0x00\n        /* \"#utility.yul\":2476:2529   */\n      tag_141\n        /* \"#utility.yul\":2521:2528   */\n      dup5\n        /* \"#utility.yul\":2512:2518   */\n      dup3\n        /* \"#utility.yul\":2501:2510   */\n      dup6\n        /* \"#utility.yul\":2497:2519   */\n      add\n        /* \"#utility.yul\":2476:2529   */\n      tag_113\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":2466:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2422:2539   */\n      pop\n        /* \"#utility.yul\":2217:2546   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2552:2661   */\n    tag_142:\n        /* \"#utility.yul\":2633:2654   */\n      tag_144\n        /* \"#utility.yul\":2648:2653   */\n      dup2\n        /* \"#utility.yul\":2633:2654   */\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":2628:2631   */\n      dup3\n        /* \"#utility.yul\":2621:2655   */\n      mstore\n        /* \"#utility.yul\":2552:2661   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2667:3031   */\n    tag_146:\n        /* \"#utility.yul\":2755:2758   */\n      0x00\n        /* \"#utility.yul\":2783:2822   */\n      tag_148\n        /* \"#utility.yul\":2816:2821   */\n      dup3\n        /* \"#utility.yul\":2783:2822   */\n      tag_149\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":2838:2909   */\n      tag_150\n        /* \"#utility.yul\":2902:2908   */\n      dup2\n        /* \"#utility.yul\":2897:2900   */\n      dup6\n        /* \"#utility.yul\":2838:2909   */\n      tag_151\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":2831:2909   */\n      swap4\n      pop\n        /* \"#utility.yul\":2918:2970   */\n      tag_152\n        /* \"#utility.yul\":2963:2969   */\n      dup2\n        /* \"#utility.yul\":2958:2961   */\n      dup6\n        /* \"#utility.yul\":2951:2955   */\n      0x20\n        /* \"#utility.yul\":2944:2949   */\n      dup7\n        /* \"#utility.yul\":2940:2956   */\n      add\n        /* \"#utility.yul\":2918:2970   */\n      tag_153\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":2995:3024   */\n      tag_154\n        /* \"#utility.yul\":3017:3023   */\n      dup2\n        /* \"#utility.yul\":2995:3024   */\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":2990:2993   */\n      dup5\n        /* \"#utility.yul\":2986:3025   */\n      add\n        /* \"#utility.yul\":2979:3025   */\n      swap2\n      pop\n        /* \"#utility.yul\":2759:3031   */\n      pop\n        /* \"#utility.yul\":2667:3031   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3037:3403   */\n    tag_156:\n        /* \"#utility.yul\":3179:3182   */\n      0x00\n        /* \"#utility.yul\":3200:3267   */\n      tag_158\n        /* \"#utility.yul\":3264:3266   */\n      0x20\n        /* \"#utility.yul\":3259:3262   */\n      dup4\n        /* \"#utility.yul\":3200:3267   */\n      tag_151\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":3193:3267   */\n      swap2\n      pop\n        /* \"#utility.yul\":3276:3369   */\n      tag_159\n        /* \"#utility.yul\":3365:3368   */\n      dup3\n        /* \"#utility.yul\":3276:3369   */\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":3394:3396   */\n      0x20\n        /* \"#utility.yul\":3389:3392   */\n      dup3\n        /* \"#utility.yul\":3385:3397   */\n      add\n        /* \"#utility.yul\":3378:3397   */\n      swap1\n      pop\n        /* \"#utility.yul\":3037:3403   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3409:3527   */\n    tag_161:\n        /* \"#utility.yul\":3496:3520   */\n      tag_163\n        /* \"#utility.yul\":3514:3519   */\n      dup2\n        /* \"#utility.yul\":3496:3520   */\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":3491:3494   */\n      dup3\n        /* \"#utility.yul\":3484:3521   */\n      mstore\n        /* \"#utility.yul\":3409:3527   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3533:3645   */\n    tag_165:\n        /* \"#utility.yul\":3616:3638   */\n      tag_167\n        /* \"#utility.yul\":3632:3637   */\n      dup2\n        /* \"#utility.yul\":3616:3638   */\n      tag_168\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":3611:3614   */\n      dup3\n        /* \"#utility.yul\":3604:3639   */\n      mstore\n        /* \"#utility.yul\":3533:3645   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3651:3861   */\n    tag_30:\n        /* \"#utility.yul\":3738:3742   */\n      0x00\n        /* \"#utility.yul\":3776:3778   */\n      0x20\n        /* \"#utility.yul\":3765:3774   */\n      dup3\n        /* \"#utility.yul\":3761:3779   */\n      add\n        /* \"#utility.yul\":3753:3779   */\n      swap1\n      pop\n        /* \"#utility.yul\":3789:3854   */\n      tag_170\n        /* \"#utility.yul\":3851:3852   */\n      0x00\n        /* \"#utility.yul\":3840:3849   */\n      dup4\n        /* \"#utility.yul\":3836:3853   */\n      add\n        /* \"#utility.yul\":3827:3833   */\n      dup5\n        /* \"#utility.yul\":3789:3854   */\n      tag_142\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":3651:3861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3867:4180   */\n    tag_18:\n        /* \"#utility.yul\":3980:3984   */\n      0x00\n        /* \"#utility.yul\":4018:4020   */\n      0x20\n        /* \"#utility.yul\":4007:4016   */\n      dup3\n        /* \"#utility.yul\":4003:4021   */\n      add\n        /* \"#utility.yul\":3995:4021   */\n      swap1\n      pop\n        /* \"#utility.yul\":4067:4076   */\n      dup2\n        /* \"#utility.yul\":4061:4065   */\n      dup2\n        /* \"#utility.yul\":4057:4077   */\n      sub\n        /* \"#utility.yul\":4053:4054   */\n      0x00\n        /* \"#utility.yul\":4042:4051   */\n      dup4\n        /* \"#utility.yul\":4038:4055   */\n      add\n        /* \"#utility.yul\":4031:4078   */\n      mstore\n        /* \"#utility.yul\":4095:4173   */\n      tag_172\n        /* \"#utility.yul\":4168:4172   */\n      dup2\n        /* \"#utility.yul\":4159:4165   */\n      dup5\n        /* \"#utility.yul\":4095:4173   */\n      tag_146\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":4087:4173   */\n      swap1\n      pop\n        /* \"#utility.yul\":3867:4180   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4186:4605   */\n    tag_94:\n        /* \"#utility.yul\":4352:4356   */\n      0x00\n        /* \"#utility.yul\":4390:4392   */\n      0x20\n        /* \"#utility.yul\":4379:4388   */\n      dup3\n        /* \"#utility.yul\":4375:4393   */\n      add\n        /* \"#utility.yul\":4367:4393   */\n      swap1\n      pop\n        /* \"#utility.yul\":4439:4448   */\n      dup2\n        /* \"#utility.yul\":4433:4437   */\n      dup2\n        /* \"#utility.yul\":4429:4449   */\n      sub\n        /* \"#utility.yul\":4425:4426   */\n      0x00\n        /* \"#utility.yul\":4414:4423   */\n      dup4\n        /* \"#utility.yul\":4410:4427   */\n      add\n        /* \"#utility.yul\":4403:4450   */\n      mstore\n        /* \"#utility.yul\":4467:4598   */\n      tag_174\n        /* \"#utility.yul\":4593:4597   */\n      dup2\n        /* \"#utility.yul\":4467:4598   */\n      tag_156\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":4459:4598   */\n      swap1\n      pop\n        /* \"#utility.yul\":4186:4605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4611:4833   */\n    tag_23:\n        /* \"#utility.yul\":4704:4708   */\n      0x00\n        /* \"#utility.yul\":4742:4744   */\n      0x20\n        /* \"#utility.yul\":4731:4740   */\n      dup3\n        /* \"#utility.yul\":4727:4745   */\n      add\n        /* \"#utility.yul\":4719:4745   */\n      swap1\n      pop\n        /* \"#utility.yul\":4755:4826   */\n      tag_176\n        /* \"#utility.yul\":4823:4824   */\n      0x00\n        /* \"#utility.yul\":4812:4821   */\n      dup4\n        /* \"#utility.yul\":4808:4825   */\n      add\n        /* \"#utility.yul\":4799:4805   */\n      dup5\n        /* \"#utility.yul\":4755:4826   */\n      tag_161\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":4611:4833   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4839:5053   */\n    tag_45:\n        /* \"#utility.yul\":4928:4932   */\n      0x00\n        /* \"#utility.yul\":4966:4968   */\n      0x20\n        /* \"#utility.yul\":4955:4964   */\n      dup3\n        /* \"#utility.yul\":4951:4969   */\n      add\n        /* \"#utility.yul\":4943:4969   */\n      swap1\n      pop\n        /* \"#utility.yul\":4979:5046   */\n      tag_178\n        /* \"#utility.yul\":5043:5044   */\n      0x00\n        /* \"#utility.yul\":5032:5041   */\n      dup4\n        /* \"#utility.yul\":5028:5045   */\n      add\n        /* \"#utility.yul\":5019:5025   */\n      dup5\n        /* \"#utility.yul\":4979:5046   */\n      tag_165\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":4839:5053   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5140:5239   */\n    tag_149:\n        /* \"#utility.yul\":5192:5198   */\n      0x00\n        /* \"#utility.yul\":5226:5231   */\n      dup2\n        /* \"#utility.yul\":5220:5232   */\n      mload\n        /* \"#utility.yul\":5210:5232   */\n      swap1\n      pop\n        /* \"#utility.yul\":5140:5239   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5245:5414   */\n    tag_151:\n        /* \"#utility.yul\":5329:5340   */\n      0x00\n        /* \"#utility.yul\":5363:5369   */\n      dup3\n        /* \"#utility.yul\":5358:5361   */\n      dup3\n        /* \"#utility.yul\":5351:5370   */\n      mstore\n        /* \"#utility.yul\":5403:5407   */\n      0x20\n        /* \"#utility.yul\":5398:5401   */\n      dup3\n        /* \"#utility.yul\":5394:5408   */\n      add\n        /* \"#utility.yul\":5379:5408   */\n      swap1\n      pop\n        /* \"#utility.yul\":5245:5414   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5420:5725   */\n    tag_105:\n        /* \"#utility.yul\":5460:5463   */\n      0x00\n        /* \"#utility.yul\":5479:5499   */\n      tag_184\n        /* \"#utility.yul\":5497:5498   */\n      dup3\n        /* \"#utility.yul\":5479:5499   */\n      tag_164\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":5474:5499   */\n      swap2\n      pop\n        /* \"#utility.yul\":5513:5533   */\n      tag_185\n        /* \"#utility.yul\":5531:5532   */\n      dup4\n        /* \"#utility.yul\":5513:5533   */\n      tag_164\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":5508:5533   */\n      swap3\n      pop\n        /* \"#utility.yul\":5667:5668   */\n      dup3\n        /* \"#utility.yul\":5599:5665   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5595:5669   */\n      sub\n        /* \"#utility.yul\":5592:5593   */\n      dup3\n        /* \"#utility.yul\":5589:5670   */\n      gt\n        /* \"#utility.yul\":5586:5693   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":5673:5691   */\n      tag_187\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":5586:5693   */\n    tag_186:\n        /* \"#utility.yul\":5717:5718   */\n      dup3\n        /* \"#utility.yul\":5714:5715   */\n      dup3\n        /* \"#utility.yul\":5710:5719   */\n      add\n        /* \"#utility.yul\":5703:5719   */\n      swap1\n      pop\n        /* \"#utility.yul\":5420:5725   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5731:6079   */\n    tag_91:\n        /* \"#utility.yul\":5771:5778   */\n      0x00\n        /* \"#utility.yul\":5794:5814   */\n      tag_190\n        /* \"#utility.yul\":5812:5813   */\n      dup3\n        /* \"#utility.yul\":5794:5814   */\n      tag_164\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":5789:5814   */\n      swap2\n      pop\n        /* \"#utility.yul\":5828:5848   */\n      tag_191\n        /* \"#utility.yul\":5846:5847   */\n      dup4\n        /* \"#utility.yul\":5828:5848   */\n      tag_164\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":5823:5848   */\n      swap3\n      pop\n        /* \"#utility.yul\":6016:6017   */\n      dup2\n        /* \"#utility.yul\":5948:6014   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5944:6018   */\n      div\n        /* \"#utility.yul\":5941:5942   */\n      dup4\n        /* \"#utility.yul\":5938:6019   */\n      gt\n        /* \"#utility.yul\":5933:5934   */\n      dup3\n        /* \"#utility.yul\":5926:5935   */\n      iszero\n        /* \"#utility.yul\":5919:5936   */\n      iszero\n        /* \"#utility.yul\":5915:6020   */\n      and\n        /* \"#utility.yul\":5912:6043   */\n      iszero\n      tag_192\n      jumpi\n        /* \"#utility.yul\":6023:6041   */\n      tag_193\n      tag_188\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":5912:6043   */\n    tag_192:\n        /* \"#utility.yul\":6071:6072   */\n      dup3\n        /* \"#utility.yul\":6068:6069   */\n      dup3\n        /* \"#utility.yul\":6064:6073   */\n      mul\n        /* \"#utility.yul\":6053:6073   */\n      swap1\n      pop\n        /* \"#utility.yul\":5731:6079   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6085:6276   */\n    tag_102:\n        /* \"#utility.yul\":6125:6129   */\n      0x00\n        /* \"#utility.yul\":6145:6165   */\n      tag_195\n        /* \"#utility.yul\":6163:6164   */\n      dup3\n        /* \"#utility.yul\":6145:6165   */\n      tag_164\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":6140:6165   */\n      swap2\n      pop\n        /* \"#utility.yul\":6179:6199   */\n      tag_196\n        /* \"#utility.yul\":6197:6198   */\n      dup4\n        /* \"#utility.yul\":6179:6199   */\n      tag_164\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":6174:6199   */\n      swap3\n      pop\n        /* \"#utility.yul\":6218:6219   */\n      dup3\n        /* \"#utility.yul\":6215:6216   */\n      dup3\n        /* \"#utility.yul\":6212:6220   */\n      lt\n        /* \"#utility.yul\":6209:6243   */\n      iszero\n      tag_197\n      jumpi\n        /* \"#utility.yul\":6223:6241   */\n      tag_198\n      tag_188\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":6209:6243   */\n    tag_197:\n        /* \"#utility.yul\":6268:6269   */\n      dup3\n        /* \"#utility.yul\":6265:6266   */\n      dup3\n        /* \"#utility.yul\":6261:6270   */\n      sub\n        /* \"#utility.yul\":6253:6270   */\n      swap1\n      pop\n        /* \"#utility.yul\":6085:6276   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6282:6378   */\n    tag_199:\n        /* \"#utility.yul\":6319:6326   */\n      0x00\n        /* \"#utility.yul\":6348:6372   */\n      tag_201\n        /* \"#utility.yul\":6366:6371   */\n      dup3\n        /* \"#utility.yul\":6348:6372   */\n      tag_202\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":6337:6372   */\n      swap1\n      pop\n        /* \"#utility.yul\":6282:6378   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6384:6474   */\n    tag_145:\n        /* \"#utility.yul\":6418:6425   */\n      0x00\n        /* \"#utility.yul\":6461:6466   */\n      dup2\n        /* \"#utility.yul\":6454:6467   */\n      iszero\n        /* \"#utility.yul\":6447:6468   */\n      iszero\n        /* \"#utility.yul\":6436:6468   */\n      swap1\n      pop\n        /* \"#utility.yul\":6384:6474   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6480:6606   */\n    tag_202:\n        /* \"#utility.yul\":6517:6524   */\n      0x00\n        /* \"#utility.yul\":6557:6599   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6550:6555   */\n      dup3\n        /* \"#utility.yul\":6546:6600   */\n      and\n        /* \"#utility.yul\":6535:6600   */\n      swap1\n      pop\n        /* \"#utility.yul\":6480:6606   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6612:6689   */\n    tag_164:\n        /* \"#utility.yul\":6649:6656   */\n      0x00\n        /* \"#utility.yul\":6678:6683   */\n      dup2\n        /* \"#utility.yul\":6667:6683   */\n      swap1\n      pop\n        /* \"#utility.yul\":6612:6689   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6695:6781   */\n    tag_168:\n        /* \"#utility.yul\":6730:6737   */\n      0x00\n        /* \"#utility.yul\":6770:6774   */\n      0xff\n        /* \"#utility.yul\":6763:6768   */\n      dup3\n        /* \"#utility.yul\":6759:6775   */\n      and\n        /* \"#utility.yul\":6748:6775   */\n      swap1\n      pop\n        /* \"#utility.yul\":6695:6781   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6787:7094   */\n    tag_153:\n        /* \"#utility.yul\":6855:6856   */\n      0x00\n        /* \"#utility.yul\":6865:6978   */\n    tag_208:\n        /* \"#utility.yul\":6879:6885   */\n      dup4\n        /* \"#utility.yul\":6876:6877   */\n      dup2\n        /* \"#utility.yul\":6873:6886   */\n      lt\n        /* \"#utility.yul\":6865:6978   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":6964:6965   */\n      dup1\n        /* \"#utility.yul\":6959:6962   */\n      dup3\n        /* \"#utility.yul\":6955:6966   */\n      add\n        /* \"#utility.yul\":6949:6967   */\n      mload\n        /* \"#utility.yul\":6945:6946   */\n      dup2\n        /* \"#utility.yul\":6940:6943   */\n      dup5\n        /* \"#utility.yul\":6936:6947   */\n      add\n        /* \"#utility.yul\":6929:6968   */\n      mstore\n        /* \"#utility.yul\":6901:6903   */\n      0x20\n        /* \"#utility.yul\":6898:6899   */\n      dup2\n        /* \"#utility.yul\":6894:6904   */\n      add\n        /* \"#utility.yul\":6889:6904   */\n      swap1\n      pop\n        /* \"#utility.yul\":6865:6978   */\n      jump(tag_208)\n    tag_210:\n        /* \"#utility.yul\":6996:7002   */\n      dup4\n        /* \"#utility.yul\":6993:6994   */\n      dup2\n        /* \"#utility.yul\":6990:7003   */\n      gt\n        /* \"#utility.yul\":6987:7088   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":7076:7077   */\n      0x00\n        /* \"#utility.yul\":7067:7073   */\n      dup5\n        /* \"#utility.yul\":7062:7065   */\n      dup5\n        /* \"#utility.yul\":7058:7074   */\n      add\n        /* \"#utility.yul\":7051:7078   */\n      mstore\n        /* \"#utility.yul\":6987:7088   */\n    tag_211:\n        /* \"#utility.yul\":6836:7094   */\n      pop\n        /* \"#utility.yul\":6787:7094   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7100:7280   */\n    tag_100:\n        /* \"#utility.yul\":7148:7225   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7145:7146   */\n      0x00\n        /* \"#utility.yul\":7138:7226   */\n      mstore\n        /* \"#utility.yul\":7245:7249   */\n      0x01\n        /* \"#utility.yul\":7242:7243   */\n      0x04\n        /* \"#utility.yul\":7235:7250   */\n      mstore\n        /* \"#utility.yul\":7269:7273   */\n      0x24\n        /* \"#utility.yul\":7266:7267   */\n      0x00\n        /* \"#utility.yul\":7259:7274   */\n      revert\n        /* \"#utility.yul\":7286:7466   */\n    tag_188:\n        /* \"#utility.yul\":7334:7411   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7331:7332   */\n      0x00\n        /* \"#utility.yul\":7324:7412   */\n      mstore\n        /* \"#utility.yul\":7431:7435   */\n      0x11\n        /* \"#utility.yul\":7428:7429   */\n      0x04\n        /* \"#utility.yul\":7421:7436   */\n      mstore\n        /* \"#utility.yul\":7455:7459   */\n      0x24\n        /* \"#utility.yul\":7452:7453   */\n      0x00\n        /* \"#utility.yul\":7445:7460   */\n      revert\n        /* \"#utility.yul\":7595:7712   */\n    tag_120:\n        /* \"#utility.yul\":7704:7705   */\n      0x00\n        /* \"#utility.yul\":7701:7702   */\n      dup1\n        /* \"#utility.yul\":7694:7706   */\n      revert\n        /* \"#utility.yul\":7718:7820   */\n    tag_155:\n        /* \"#utility.yul\":7759:7765   */\n      0x00\n        /* \"#utility.yul\":7810:7812   */\n      0x1f\n        /* \"#utility.yul\":7806:7813   */\n      not\n        /* \"#utility.yul\":7801:7803   */\n      0x1f\n        /* \"#utility.yul\":7794:7799   */\n      dup4\n        /* \"#utility.yul\":7790:7804   */\n      add\n        /* \"#utility.yul\":7786:7814   */\n      and\n        /* \"#utility.yul\":7776:7814   */\n      swap1\n      pop\n        /* \"#utility.yul\":7718:7820   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7826:8008   */\n    tag_160:\n        /* \"#utility.yul\":7966:8000   */\n      0x4e65656420746f2073656e6420657861637420616d6f756e74206f6620776569\n        /* \"#utility.yul\":7962:7963   */\n      0x00\n        /* \"#utility.yul\":7954:7960   */\n      dup3\n        /* \"#utility.yul\":7950:7964   */\n      add\n        /* \"#utility.yul\":7943:8001   */\n      mstore\n        /* \"#utility.yul\":7826:8008   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8014:8136   */\n    tag_112:\n        /* \"#utility.yul\":8087:8111   */\n      tag_220\n        /* \"#utility.yul\":8105:8110   */\n      dup2\n        /* \"#utility.yul\":8087:8111   */\n      tag_199\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":8080:8085   */\n      dup2\n        /* \"#utility.yul\":8077:8112   */\n      eq\n        /* \"#utility.yul\":8067:8130   */\n      tag_221\n      jumpi\n        /* \"#utility.yul\":8126:8127   */\n      0x00\n        /* \"#utility.yul\":8123:8124   */\n      dup1\n        /* \"#utility.yul\":8116:8128   */\n      revert\n        /* \"#utility.yul\":8067:8130   */\n    tag_221:\n        /* \"#utility.yul\":8014:8136   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8142:8264   */\n    tag_116:\n        /* \"#utility.yul\":8215:8239   */\n      tag_223\n        /* \"#utility.yul\":8233:8238   */\n      dup2\n        /* \"#utility.yul\":8215:8239   */\n      tag_164\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":8208:8213   */\n      dup2\n        /* \"#utility.yul\":8205:8240   */\n      eq\n        /* \"#utility.yul\":8195:8258   */\n      tag_224\n      jumpi\n        /* \"#utility.yul\":8254:8255   */\n      0x00\n        /* \"#utility.yul\":8251:8252   */\n      dup1\n        /* \"#utility.yul\":8244:8256   */\n      revert\n        /* \"#utility.yul\":8195:8258   */\n    tag_224:\n        /* \"#utility.yul\":8142:8264   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220962985aced05f73e1ca25863d150cf4deff4eec9318175943b0597246dae020264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_65": {
									"entryPoint": null,
									"id": 65,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 211,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1048:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:3",
														"type": ""
													}
												],
												"src": "7:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "281:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:3"
															},
															"nodeType": "YulIf",
															"src": "243:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "372:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "387:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "391:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "416:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "462:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "426:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "416:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:3",
														"type": ""
													}
												],
												"src": "156:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "553:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "563:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "546:6:3",
														"type": ""
													}
												],
												"src": "513:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "639:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "649:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "660:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "649:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "621:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "631:7:3",
														"type": ""
													}
												],
												"src": "594:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "766:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "783:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "786:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "776:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "776:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "776:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "677:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "889:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "906:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "909:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "899:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "899:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "899:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "800:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "966:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1023:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1035:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1025:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1025:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "989:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1014:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "996:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "996:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "986:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "986:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "979:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:43:3"
															},
															"nodeType": "YulIf",
															"src": "976:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "959:5:3",
														"type": ""
													}
												],
												"src": "923:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051620011ae380380620011ae8339818101604052810190610034919061009c565b80600481905550600454600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550506100ef565b600081519050610096816100d8565b92915050565b6000602082840312156100b2576100b16100d3565b5b60006100c084828501610087565b91505092915050565b6000819050919050565b600080fd5b6100e1816100c9565b81146100ec57600080fd5b50565b6110af80620000ff6000396000f3fe60806040526004361061009c5760003560e01c8063313ce56711610064578063313ce5671461019c57806370a08231146101c757806395d89b4114610204578063a9059cbb1461022f578063d96a094a1461026c578063dd62ed3e146102885761009c565b806306fdde03146100a15780630761c8b9146100cc578063095ea7b3146100f757806318160ddd1461013457806323b872dd1461015f575b600080fd5b3480156100ad57600080fd5b506100b66102c5565b6040516100c39190610dae565b60405180910390f35b3480156100d857600080fd5b506100e16102fe565b6040516100ee9190610df0565b60405180910390f35b34801561010357600080fd5b5061011e60048036038101906101199190610c9d565b610306565b60405161012b9190610d93565b60405180910390f35b34801561014057600080fd5b506101496103f8565b6040516101569190610df0565b60405180910390f35b34801561016b57600080fd5b5061018660048036038101906101819190610c4a565b610402565b6040516101939190610d93565b60405180910390f35b3480156101a857600080fd5b506101b1610782565b6040516101be9190610e0b565b60405180910390f35b3480156101d357600080fd5b506101ee60048036038101906101e99190610bdd565b610787565b6040516101fb9190610df0565b60405180910390f35b34801561021057600080fd5b506102196107d0565b6040516102269190610dae565b60405180910390f35b34801561023b57600080fd5b5061025660048036038101906102519190610c9d565b610809565b6040516102639190610d93565b60405180910390f35b61028660048036038101906102819190610cdd565b6109f0565b005b34801561029457600080fd5b506102af60048036038101906102aa9190610c0a565b610ad9565b6040516102bc9190610df0565b60405180910390f35b6040518060400160405280600d81526020017f43727970746f4d6f6e737465720000000000000000000000000000000000000081525081565b633b9aca0081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103e69190610df0565b60405180910390a36001905092915050565b6000600454905090565b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561045057600080fd5b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211156104d957600080fd5b61052b82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b6090919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506105fd82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b6090919063ffffffff16565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506106cf82600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b8790919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161076f9190610df0565b60405180910390a3600190509392505050565b600c81565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6040518060400160405280600481526020017f434d4f4e0000000000000000000000000000000000000000000000000000000081525081565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561085757600080fd5b6108a982600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b6090919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061093e82600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b8790919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516109de9190610df0565b60405180910390a36001905092915050565b633b9aca0081610a009190610e98565b3414610a41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3890610dd0565b60405180910390fd5b610a9381600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b8790919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600082821115610b7357610b72610fae565b5b8183610b7f9190610ef2565b905092915050565b6000808284610b969190610e42565b905083811015610ba957610ba8610fae565b5b8091505092915050565b600081359050610bc28161104b565b92915050565b600081359050610bd781611062565b92915050565b600060208284031215610bf357610bf261100c565b5b6000610c0184828501610bb3565b91505092915050565b60008060408385031215610c2157610c2061100c565b5b6000610c2f85828601610bb3565b9250506020610c4085828601610bb3565b9150509250929050565b600080600060608486031215610c6357610c6261100c565b5b6000610c7186828701610bb3565b9350506020610c8286828701610bb3565b9250506040610c9386828701610bc8565b9150509250925092565b60008060408385031215610cb457610cb361100c565b5b6000610cc285828601610bb3565b9250506020610cd385828601610bc8565b9150509250929050565b600060208284031215610cf357610cf261100c565b5b6000610d0184828501610bc8565b91505092915050565b610d1381610f38565b82525050565b6000610d2482610e26565b610d2e8185610e31565b9350610d3e818560208601610f7b565b610d4781611011565b840191505092915050565b6000610d5f602083610e31565b9150610d6a82611022565b602082019050919050565b610d7e81610f64565b82525050565b610d8d81610f6e565b82525050565b6000602082019050610da86000830184610d0a565b92915050565b60006020820190508181036000830152610dc88184610d19565b905092915050565b60006020820190508181036000830152610de981610d52565b9050919050565b6000602082019050610e056000830184610d75565b92915050565b6000602082019050610e206000830184610d84565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610e4d82610f64565b9150610e5883610f64565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e8d57610e8c610fdd565b5b828201905092915050565b6000610ea382610f64565b9150610eae83610f64565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ee757610ee6610fdd565b5b828202905092915050565b6000610efd82610f64565b9150610f0883610f64565b925082821015610f1b57610f1a610fdd565b5b828203905092915050565b6000610f3182610f44565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610f99578082015181840152602081019050610f7e565b83811115610fa8576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4e65656420746f2073656e6420657861637420616d6f756e74206f6620776569600082015250565b61105481610f26565b811461105f57600080fd5b50565b61106b81610f64565b811461107657600080fd5b5056fea2646970667358221220962985aced05f73e1ca25863d150cf4deff4eec9318175943b0597246dae020264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x11AE CODESIZE SUB DUP1 PUSH3 0x11AE DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x34 SWAP2 SWAP1 PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP PUSH2 0xEF JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x96 DUP2 PUSH2 0xD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB2 JUMPI PUSH2 0xB1 PUSH2 0xD3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC0 DUP5 DUP3 DUP6 ADD PUSH2 0x87 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE1 DUP2 PUSH2 0xC9 JUMP JUMPDEST DUP2 EQ PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x10AF DUP1 PUSH3 0xFF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0xD96A094A EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x288 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x761C8B9 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xDAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE1 PUSH2 0x2FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE SWAP2 SWAP1 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xC9D JUMP JUMPDEST PUSH2 0x306 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x149 PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x181 SWAP2 SWAP1 PUSH2 0xC4A JUMP JUMPDEST PUSH2 0x402 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x193 SWAP2 SWAP1 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B1 PUSH2 0x782 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0xE0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x787 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x219 PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0xDAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0xC9D JUMP JUMPDEST PUSH2 0x809 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0xCDD JUMP JUMPDEST PUSH2 0x9F0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0xC0A JUMP JUMPDEST PUSH2 0xAD9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43727970746F4D6F6E7374657200000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH4 0x3B9ACA00 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x52B DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB60 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x5FD DUP3 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB60 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x6CF DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB87 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x76F SWAP2 SWAP1 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xC DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x434D4F4E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x857 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A9 DUP3 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB60 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x93E DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB87 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x9DE SWAP2 SWAP1 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x3B9ACA00 DUP2 PUSH2 0xA00 SWAP2 SWAP1 PUSH2 0xE98 JUMP JUMPDEST CALLVALUE EQ PUSH2 0xA41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA38 SWAP1 PUSH2 0xDD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA93 DUP2 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB87 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xB73 JUMPI PUSH2 0xB72 PUSH2 0xFAE JUMP JUMPDEST JUMPDEST DUP2 DUP4 PUSH2 0xB7F SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0xB96 SWAP2 SWAP1 PUSH2 0xE42 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xBA9 JUMPI PUSH2 0xBA8 PUSH2 0xFAE JUMP JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC2 DUP2 PUSH2 0x104B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBD7 DUP2 PUSH2 0x1062 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBF3 JUMPI PUSH2 0xBF2 PUSH2 0x100C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC01 DUP5 DUP3 DUP6 ADD PUSH2 0xBB3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC21 JUMPI PUSH2 0xC20 PUSH2 0x100C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC2F DUP6 DUP3 DUP7 ADD PUSH2 0xBB3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC40 DUP6 DUP3 DUP7 ADD PUSH2 0xBB3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC63 JUMPI PUSH2 0xC62 PUSH2 0x100C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC71 DUP7 DUP3 DUP8 ADD PUSH2 0xBB3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC82 DUP7 DUP3 DUP8 ADD PUSH2 0xBB3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC93 DUP7 DUP3 DUP8 ADD PUSH2 0xBC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCB4 JUMPI PUSH2 0xCB3 PUSH2 0x100C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCC2 DUP6 DUP3 DUP7 ADD PUSH2 0xBB3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCD3 DUP6 DUP3 DUP7 ADD PUSH2 0xBC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF3 JUMPI PUSH2 0xCF2 PUSH2 0x100C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD01 DUP5 DUP3 DUP6 ADD PUSH2 0xBC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD13 DUP2 PUSH2 0xF38 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD24 DUP3 PUSH2 0xE26 JUMP JUMPDEST PUSH2 0xD2E DUP2 DUP6 PUSH2 0xE31 JUMP JUMPDEST SWAP4 POP PUSH2 0xD3E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF7B JUMP JUMPDEST PUSH2 0xD47 DUP2 PUSH2 0x1011 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD5F PUSH1 0x20 DUP4 PUSH2 0xE31 JUMP JUMPDEST SWAP2 POP PUSH2 0xD6A DUP3 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD7E DUP2 PUSH2 0xF64 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD8D DUP2 PUSH2 0xF6E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDA8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDC8 DUP2 DUP5 PUSH2 0xD19 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDE9 DUP2 PUSH2 0xD52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE05 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE20 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE4D DUP3 PUSH2 0xF64 JUMP JUMPDEST SWAP2 POP PUSH2 0xE58 DUP4 PUSH2 0xF64 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xE8D JUMPI PUSH2 0xE8C PUSH2 0xFDD JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA3 DUP3 PUSH2 0xF64 JUMP JUMPDEST SWAP2 POP PUSH2 0xEAE DUP4 PUSH2 0xF64 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xEE7 JUMPI PUSH2 0xEE6 PUSH2 0xFDD JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEFD DUP3 PUSH2 0xF64 JUMP JUMPDEST SWAP2 POP PUSH2 0xF08 DUP4 PUSH2 0xF64 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xF1B JUMPI PUSH2 0xF1A PUSH2 0xFDD JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF31 DUP3 PUSH2 0xF44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF99 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF7E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xFA8 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E65656420746F2073656E6420657861637420616D6F756E74206F6620776569 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1054 DUP2 PUSH2 0xF26 JUMP JUMPDEST DUP2 EQ PUSH2 0x105F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x106B DUP2 PUSH2 0xF64 JUMP JUMPDEST DUP2 EQ PUSH2 0x1076 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 0x29 DUP6 0xAC 0xED SDIV 0xF7 RETURNDATACOPY SHR LOG2 PC PUSH4 0xD150CF4D 0xEF DELEGATECALL 0xEE 0xC9 BALANCE DUP2 PUSH22 0x943B0597246DAE020264736F6C634300080700330000 ",
							"sourceMap": "148:5837:0:-:0;;;1477:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1530:5;1515:12;:20;;;;1569:12;;1546:8;:20;1555:10;1546:20;;;;;;;;;;;;;;;:35;;;;1477:112;148:5837;;7:143:3;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:77::-;631:7;660:5;649:16;;594:77;;;:::o;800:117::-;909:1;906;899:12;923:122;996:24;1014:5;996:24;:::i;:::-;989:5;986:35;976:63;;1035:1;1032;1025:12;976:63;923:122;:::o;148:5837:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@add_549": {
									"entryPoint": 2951,
									"id": 549,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_294": {
									"entryPoint": 2777,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_277": {
									"entryPoint": 774,
									"id": 277,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_116": {
									"entryPoint": 1927,
									"id": 116,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@buy_94": {
									"entryPoint": 2544,
									"id": 94,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_17": {
									"entryPoint": 1922,
									"id": 17,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_11": {
									"entryPoint": 709,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_570": {
									"entryPoint": 2912,
									"id": 570,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@symbol_14": {
									"entryPoint": 2000,
									"id": 14,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenPrice__48": {
									"entryPoint": 766,
									"id": 48,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_103": {
									"entryPoint": 1016,
									"id": 103,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_248": {
									"entryPoint": 1026,
									"id": 248,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_169": {
									"entryPoint": 2057,
									"id": 169,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3037,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4051d84e6e5b7b6dd4f339faf4431a8793809c7ef094e92a31341b0d1c457a38_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4051d84e6e5b7b6dd4f339faf4431a8793809c7ef094e92a31341b0d1c457a38__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 3963,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x01": {
									"entryPoint": 4014,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 4061,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4108,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_4051d84e6e5b7b6dd4f339faf4431a8793809c7ef094e92a31341b0d1c457a38": {
									"entryPoint": 4130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8267:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:3",
														"type": ""
													}
												],
												"src": "7:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:3",
														"type": ""
													}
												],
												"src": "152:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "411:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:3"
															},
															"nodeType": "YulIf",
															"src": "373:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "502:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "517:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "531:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "521:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "546:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "581:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "592:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "577:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "577:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "601:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "556:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "546:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:3",
														"type": ""
													}
												],
												"src": "297:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "715:391:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "761:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "763:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "763:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "763:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "736:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "745:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "732:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "757:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "728:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:32:3"
															},
															"nodeType": "YulIf",
															"src": "725:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "854:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "869:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "883:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "873:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "898:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "933:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "944:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "929:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "929:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "953:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "908:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "908:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "898:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "981:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "996:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1010:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1000:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1026:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1061:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1072:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1057:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1057:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1081:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1036:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1026:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "677:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "688:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "700:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "708:6:3",
														"type": ""
													}
												],
												"src": "632:474:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1212:519:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1258:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1260:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1260:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1260:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1233:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1242:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1229:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1229:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1254:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1225:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1225:32:3"
															},
															"nodeType": "YulIf",
															"src": "1222:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1351:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1366:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1380:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1370:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1395:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1430:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1441:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1426:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1426:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1450:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1405:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1405:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1395:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1478:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1493:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1507:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1497:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1523:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1558:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1569:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1554:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1554:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1578:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1533:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1533:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1523:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1606:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1621:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1625:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1651:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1686:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1697:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1682:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1682:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1706:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1661:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1661:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1651:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1166:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1177:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1189:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1197:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1205:6:3",
														"type": ""
													}
												],
												"src": "1112:619:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1820:391:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1868:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1868:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1868:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1841:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1850:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1837:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1837:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1862:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1833:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1833:32:3"
															},
															"nodeType": "YulIf",
															"src": "1830:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1959:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1974:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1988:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1978:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2003:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2038:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2049:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2034:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2034:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2058:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2013:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2013:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2003:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2086:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2101:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2115:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2105:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2131:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2166:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2177:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2162:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2162:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2186:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2141:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2141:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2131:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1782:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1793:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1805:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1813:6:3",
														"type": ""
													}
												],
												"src": "1737:474:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2283:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2329:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2331:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2331:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2331:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2304:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2313:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2300:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2300:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2325:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2296:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2296:32:3"
															},
															"nodeType": "YulIf",
															"src": "2293:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2422:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2437:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2451:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2441:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2466:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2501:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2512:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2497:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2497:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2521:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2476:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2476:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2466:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2253:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2264:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2276:6:3",
														"type": ""
													}
												],
												"src": "2217:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2611:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2628:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2648:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2633:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2633:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2621:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2621:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2621:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2599:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2606:3:3",
														"type": ""
													}
												],
												"src": "2552:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2759:272:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2769:53:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2816:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2783:32:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2783:39:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2773:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2831:78:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2897:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2902:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2838:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2838:71:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2831:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2944:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2951:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2940:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2940:16:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2958:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2963:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2918:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2918:52:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2918:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2979:46:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2990:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3017:6:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2995:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2995:29:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2986:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2986:39:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2979:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2740:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2747:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2755:3:3",
														"type": ""
													}
												],
												"src": "2667:364:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3183:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3193:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3259:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3264:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3200:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3200:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3193:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3365:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4051d84e6e5b7b6dd4f339faf4431a8793809c7ef094e92a31341b0d1c457a38",
																	"nodeType": "YulIdentifier",
																	"src": "3276:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3276:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3276:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3378:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3389:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3394:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3385:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3385:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3378:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4051d84e6e5b7b6dd4f339faf4431a8793809c7ef094e92a31341b0d1c457a38_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3171:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3179:3:3",
														"type": ""
													}
												],
												"src": "3037:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3474:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3491:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3514:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3496:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3496:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3484:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3484:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3484:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3462:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3469:3:3",
														"type": ""
													}
												],
												"src": "3409:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3594:51:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3611:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3632:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "3616:15:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3616:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3604:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3604:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3604:35:3"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3582:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3589:3:3",
														"type": ""
													}
												],
												"src": "3533:112:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3743:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3753:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3765:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3776:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3761:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3761:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3753:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3827:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3840:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3851:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3836:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3836:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3789:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3789:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3789:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3715:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3727:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3738:4:3",
														"type": ""
													}
												],
												"src": "3651:210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3985:195:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3995:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4007:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4018:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4003:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4003:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3995:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4042:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4053:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4038:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4038:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4061:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4067:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4057:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4057:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4031:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4031:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4031:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4087:86:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4159:6:3"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4168:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4095:63:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4095:78:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4087:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3957:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3969:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3980:4:3",
														"type": ""
													}
												],
												"src": "3867:313:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4357:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4367:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4379:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4390:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4375:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4375:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4367:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4414:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4425:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4410:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4410:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4433:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4439:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4429:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4429:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4403:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4403:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4403:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4459:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4593:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4051d84e6e5b7b6dd4f339faf4431a8793809c7ef094e92a31341b0d1c457a38_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4467:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4467:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4459:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4051d84e6e5b7b6dd4f339faf4431a8793809c7ef094e92a31341b0d1c457a38__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4337:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4352:4:3",
														"type": ""
													}
												],
												"src": "4186:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4709:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4719:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4731:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4742:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4727:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4727:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4719:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4799:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4812:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4823:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4808:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4808:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4755:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4755:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4755:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4681:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4693:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4704:4:3",
														"type": ""
													}
												],
												"src": "4611:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4933:120:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4943:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4955:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4966:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4951:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4951:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4943:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5019:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5032:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5043:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5028:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5028:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4979:39:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4979:67:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4979:67:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4905:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4917:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4928:4:3",
														"type": ""
													}
												],
												"src": "4839:214:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5099:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5109:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5125:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5119:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5119:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5109:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5092:6:3",
														"type": ""
													}
												],
												"src": "5059:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5199:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5210:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5226:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5220:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5220:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5210:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5182:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5192:6:3",
														"type": ""
													}
												],
												"src": "5140:99:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5341:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5358:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5363:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5351:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5351:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5351:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5379:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5398:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5403:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5394:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5394:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5379:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5313:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5318:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5329:11:3",
														"type": ""
													}
												],
												"src": "5245:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5464:261:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5474:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5497:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5479:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5479:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5474:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5508:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5531:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5513:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5513:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5508:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5671:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5673:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5673:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5673:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5592:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5599:66:3",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5667:1:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5595:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5595:74:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5589:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5589:81:3"
															},
															"nodeType": "YulIf",
															"src": "5586:107:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5703:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5714:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5717:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5710:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5710:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5703:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5451:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5454:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5460:3:3",
														"type": ""
													}
												],
												"src": "5420:305:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5779:300:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5789:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5812:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5794:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5794:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5789:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5823:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5846:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5828:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5828:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5823:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6021:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6023:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6023:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6023:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5933:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5926:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5926:9:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5919:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5919:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5941:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5948:66:3",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6016:1:3"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "5944:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5944:74:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5938:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5938:81:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5915:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5915:105:3"
															},
															"nodeType": "YulIf",
															"src": "5912:131:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6053:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6068:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6071:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6064:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6064:9:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6053:7:3"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5762:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5765:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "5771:7:3",
														"type": ""
													}
												],
												"src": "5731:348:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6130:146:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6140:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6163:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6145:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6145:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6140:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6174:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6197:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6179:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6179:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6174:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6221:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6223:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6223:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6223:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6215:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6218:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6212:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6212:8:3"
															},
															"nodeType": "YulIf",
															"src": "6209:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6253:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6265:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6268:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6261:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6261:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6253:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6116:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6119:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "6125:4:3",
														"type": ""
													}
												],
												"src": "6085:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6327:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6337:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6366:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6348:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6348:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6337:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6309:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6319:7:3",
														"type": ""
													}
												],
												"src": "6282:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6426:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6436:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6461:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6454:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6454:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6447:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6447:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6436:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6408:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6418:7:3",
														"type": ""
													}
												],
												"src": "6384:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6525:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6535:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6550:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6557:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6546:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6546:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6535:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6507:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6517:7:3",
														"type": ""
													}
												],
												"src": "6480:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6657:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6667:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6678:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6667:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6639:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6649:7:3",
														"type": ""
													}
												],
												"src": "6612:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6738:43:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6748:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6763:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6770:4:3",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6759:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6759:16:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6748:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6720:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6730:7:3",
														"type": ""
													}
												],
												"src": "6695:86:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6836:258:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6846:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6855:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6850:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6915:63:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "6940:3:3"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "6945:1:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6936:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6936:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "6959:3:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6964:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6955:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6955:11:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6949:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6949:18:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6929:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6929:39:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6929:39:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6876:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6879:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6873:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6873:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6887:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6889:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6898:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6901:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6894:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6894:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6889:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6869:3:3",
																"statements": []
															},
															"src": "6865:113:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7012:76:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "7062:3:3"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "7067:6:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7058:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7058:16:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7076:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7051:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7051:27:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7051:27:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6993:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6996:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6990:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6990:13:3"
															},
															"nodeType": "YulIf",
															"src": "6987:101:3"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6818:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "6823:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6828:6:3",
														"type": ""
													}
												],
												"src": "6787:307:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7128:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7145:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7148:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7138:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7138:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7138:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7242:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7245:4:3",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7235:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7235:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7235:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7266:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7269:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7259:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7259:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7259:15:3"
														}
													]
												},
												"name": "panic_error_0x01",
												"nodeType": "YulFunctionDefinition",
												"src": "7100:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7314:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7331:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7334:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7324:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7324:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7324:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7428:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7431:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7421:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7421:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7421:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7452:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7455:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7445:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7445:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7445:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7286:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7561:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7578:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7581:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7571:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7571:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7571:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "7472:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7684:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7701:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7704:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7694:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7694:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7694:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "7595:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7766:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7776:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7794:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7801:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7790:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7790:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7810:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7806:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7806:7:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7786:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7786:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "7776:6:3"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7749:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "7759:6:3",
														"type": ""
													}
												],
												"src": "7718:102:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7932:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7954:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7962:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7950:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7950:14:3"
																	},
																	{
																		"hexValue": "4e65656420746f2073656e6420657861637420616d6f756e74206f6620776569",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7966:34:3",
																		"type": "",
																		"value": "Need to send exact amount of wei"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7943:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7943:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7943:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_4051d84e6e5b7b6dd4f339faf4431a8793809c7ef094e92a31341b0d1c457a38",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7924:6:3",
														"type": ""
													}
												],
												"src": "7826:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8057:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8114:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8123:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8126:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8116:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8116:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8116:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8080:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8105:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "8087:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8087:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8077:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8077:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8070:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8070:43:3"
															},
															"nodeType": "YulIf",
															"src": "8067:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8050:5:3",
														"type": ""
													}
												],
												"src": "8014:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8185:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8242:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8251:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8254:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8244:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8244:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8244:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8208:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8233:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "8215:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8215:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8205:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8205:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8198:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8198:43:3"
															},
															"nodeType": "YulIf",
															"src": "8195:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8178:5:3",
														"type": ""
													}
												],
												"src": "8142:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_4051d84e6e5b7b6dd4f339faf4431a8793809c7ef094e92a31341b0d1c457a38_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_4051d84e6e5b7b6dd4f339faf4431a8793809c7ef094e92a31341b0d1c457a38(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4051d84e6e5b7b6dd4f339faf4431a8793809c7ef094e92a31341b0d1c457a38__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4051d84e6e5b7b6dd4f339faf4431a8793809c7ef094e92a31341b0d1c457a38_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_4051d84e6e5b7b6dd4f339faf4431a8793809c7ef094e92a31341b0d1c457a38(memPtr) {\n\n        mstore(add(memPtr, 0), \"Need to send exact amount of wei\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061009c5760003560e01c8063313ce56711610064578063313ce5671461019c57806370a08231146101c757806395d89b4114610204578063a9059cbb1461022f578063d96a094a1461026c578063dd62ed3e146102885761009c565b806306fdde03146100a15780630761c8b9146100cc578063095ea7b3146100f757806318160ddd1461013457806323b872dd1461015f575b600080fd5b3480156100ad57600080fd5b506100b66102c5565b6040516100c39190610dae565b60405180910390f35b3480156100d857600080fd5b506100e16102fe565b6040516100ee9190610df0565b60405180910390f35b34801561010357600080fd5b5061011e60048036038101906101199190610c9d565b610306565b60405161012b9190610d93565b60405180910390f35b34801561014057600080fd5b506101496103f8565b6040516101569190610df0565b60405180910390f35b34801561016b57600080fd5b5061018660048036038101906101819190610c4a565b610402565b6040516101939190610d93565b60405180910390f35b3480156101a857600080fd5b506101b1610782565b6040516101be9190610e0b565b60405180910390f35b3480156101d357600080fd5b506101ee60048036038101906101e99190610bdd565b610787565b6040516101fb9190610df0565b60405180910390f35b34801561021057600080fd5b506102196107d0565b6040516102269190610dae565b60405180910390f35b34801561023b57600080fd5b5061025660048036038101906102519190610c9d565b610809565b6040516102639190610d93565b60405180910390f35b61028660048036038101906102819190610cdd565b6109f0565b005b34801561029457600080fd5b506102af60048036038101906102aa9190610c0a565b610ad9565b6040516102bc9190610df0565b60405180910390f35b6040518060400160405280600d81526020017f43727970746f4d6f6e737465720000000000000000000000000000000000000081525081565b633b9aca0081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103e69190610df0565b60405180910390a36001905092915050565b6000600454905090565b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561045057600080fd5b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211156104d957600080fd5b61052b82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b6090919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506105fd82600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b6090919063ffffffff16565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506106cf82600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b8790919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161076f9190610df0565b60405180910390a3600190509392505050565b600c81565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6040518060400160405280600481526020017f434d4f4e0000000000000000000000000000000000000000000000000000000081525081565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561085757600080fd5b6108a982600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b6090919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061093e82600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b8790919063ffffffff16565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516109de9190610df0565b60405180910390a36001905092915050565b633b9aca0081610a009190610e98565b3414610a41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3890610dd0565b60405180910390fd5b610a9381600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b8790919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600082821115610b7357610b72610fae565b5b8183610b7f9190610ef2565b905092915050565b6000808284610b969190610e42565b905083811015610ba957610ba8610fae565b5b8091505092915050565b600081359050610bc28161104b565b92915050565b600081359050610bd781611062565b92915050565b600060208284031215610bf357610bf261100c565b5b6000610c0184828501610bb3565b91505092915050565b60008060408385031215610c2157610c2061100c565b5b6000610c2f85828601610bb3565b9250506020610c4085828601610bb3565b9150509250929050565b600080600060608486031215610c6357610c6261100c565b5b6000610c7186828701610bb3565b9350506020610c8286828701610bb3565b9250506040610c9386828701610bc8565b9150509250925092565b60008060408385031215610cb457610cb361100c565b5b6000610cc285828601610bb3565b9250506020610cd385828601610bc8565b9150509250929050565b600060208284031215610cf357610cf261100c565b5b6000610d0184828501610bc8565b91505092915050565b610d1381610f38565b82525050565b6000610d2482610e26565b610d2e8185610e31565b9350610d3e818560208601610f7b565b610d4781611011565b840191505092915050565b6000610d5f602083610e31565b9150610d6a82611022565b602082019050919050565b610d7e81610f64565b82525050565b610d8d81610f6e565b82525050565b6000602082019050610da86000830184610d0a565b92915050565b60006020820190508181036000830152610dc88184610d19565b905092915050565b60006020820190508181036000830152610de981610d52565b9050919050565b6000602082019050610e056000830184610d75565b92915050565b6000602082019050610e206000830184610d84565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610e4d82610f64565b9150610e5883610f64565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e8d57610e8c610fdd565b5b828201905092915050565b6000610ea382610f64565b9150610eae83610f64565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ee757610ee6610fdd565b5b828202905092915050565b6000610efd82610f64565b9150610f0883610f64565b925082821015610f1b57610f1a610fdd565b5b828203905092915050565b6000610f3182610f44565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610f99578082015181840152602081019050610f7e565b83811115610fa8576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4e65656420746f2073656e6420657861637420616d6f756e74206f6620776569600082015250565b61105481610f26565b811461105f57600080fd5b50565b61106b81610f64565b811461107657600080fd5b5056fea2646970667358221220962985aced05f73e1ca25863d150cf4deff4eec9318175943b0597246dae020264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0xD96A094A EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x288 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x761C8B9 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x15F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xDAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE1 PUSH2 0x2FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEE SWAP2 SWAP1 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xC9D JUMP JUMPDEST PUSH2 0x306 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x149 PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x156 SWAP2 SWAP1 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x186 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x181 SWAP2 SWAP1 PUSH2 0xC4A JUMP JUMPDEST PUSH2 0x402 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x193 SWAP2 SWAP1 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B1 PUSH2 0x782 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0xE0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x787 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x219 PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0xDAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0xC9D JUMP JUMPDEST PUSH2 0x809 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0xCDD JUMP JUMPDEST PUSH2 0x9F0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x294 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0xC0A JUMP JUMPDEST PUSH2 0xAD9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43727970746F4D6F6E7374657200000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH4 0x3B9ACA00 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x52B DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB60 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x5FD DUP3 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB60 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x6CF DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB87 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x76F SWAP2 SWAP1 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xC DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x434D4F4E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x857 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A9 DUP3 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB60 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x93E DUP3 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB87 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x9DE SWAP2 SWAP1 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x3B9ACA00 DUP2 PUSH2 0xA00 SWAP2 SWAP1 PUSH2 0xE98 JUMP JUMPDEST CALLVALUE EQ PUSH2 0xA41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA38 SWAP1 PUSH2 0xDD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA93 DUP2 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB87 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xB73 JUMPI PUSH2 0xB72 PUSH2 0xFAE JUMP JUMPDEST JUMPDEST DUP2 DUP4 PUSH2 0xB7F SWAP2 SWAP1 PUSH2 0xEF2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0xB96 SWAP2 SWAP1 PUSH2 0xE42 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xBA9 JUMPI PUSH2 0xBA8 PUSH2 0xFAE JUMP JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC2 DUP2 PUSH2 0x104B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBD7 DUP2 PUSH2 0x1062 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBF3 JUMPI PUSH2 0xBF2 PUSH2 0x100C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC01 DUP5 DUP3 DUP6 ADD PUSH2 0xBB3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC21 JUMPI PUSH2 0xC20 PUSH2 0x100C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC2F DUP6 DUP3 DUP7 ADD PUSH2 0xBB3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC40 DUP6 DUP3 DUP7 ADD PUSH2 0xBB3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC63 JUMPI PUSH2 0xC62 PUSH2 0x100C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC71 DUP7 DUP3 DUP8 ADD PUSH2 0xBB3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC82 DUP7 DUP3 DUP8 ADD PUSH2 0xBB3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC93 DUP7 DUP3 DUP8 ADD PUSH2 0xBC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCB4 JUMPI PUSH2 0xCB3 PUSH2 0x100C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCC2 DUP6 DUP3 DUP7 ADD PUSH2 0xBB3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCD3 DUP6 DUP3 DUP7 ADD PUSH2 0xBC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF3 JUMPI PUSH2 0xCF2 PUSH2 0x100C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD01 DUP5 DUP3 DUP6 ADD PUSH2 0xBC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD13 DUP2 PUSH2 0xF38 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD24 DUP3 PUSH2 0xE26 JUMP JUMPDEST PUSH2 0xD2E DUP2 DUP6 PUSH2 0xE31 JUMP JUMPDEST SWAP4 POP PUSH2 0xD3E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF7B JUMP JUMPDEST PUSH2 0xD47 DUP2 PUSH2 0x1011 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD5F PUSH1 0x20 DUP4 PUSH2 0xE31 JUMP JUMPDEST SWAP2 POP PUSH2 0xD6A DUP3 PUSH2 0x1022 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD7E DUP2 PUSH2 0xF64 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD8D DUP2 PUSH2 0xF6E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDA8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDC8 DUP2 DUP5 PUSH2 0xD19 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDE9 DUP2 PUSH2 0xD52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE05 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE20 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE4D DUP3 PUSH2 0xF64 JUMP JUMPDEST SWAP2 POP PUSH2 0xE58 DUP4 PUSH2 0xF64 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xE8D JUMPI PUSH2 0xE8C PUSH2 0xFDD JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEA3 DUP3 PUSH2 0xF64 JUMP JUMPDEST SWAP2 POP PUSH2 0xEAE DUP4 PUSH2 0xF64 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xEE7 JUMPI PUSH2 0xEE6 PUSH2 0xFDD JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEFD DUP3 PUSH2 0xF64 JUMP JUMPDEST SWAP2 POP PUSH2 0xF08 DUP4 PUSH2 0xF64 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xF1B JUMPI PUSH2 0xF1A PUSH2 0xFDD JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF31 DUP3 PUSH2 0xF44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF99 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF7E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xFA8 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E65656420746F2073656E6420657861637420616D6F756E74206F6620776569 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1054 DUP2 PUSH2 0xF26 JUMP JUMPDEST DUP2 EQ PUSH2 0x105F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x106B DUP2 PUSH2 0xF64 JUMP JUMPDEST DUP2 EQ PUSH2 0x1076 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 0x29 DUP6 0xAC 0xED SDIV 0xF7 RETURNDATACOPY SHR LOG2 PC PUSH4 0xD150CF4D 0xEF DELEGATECALL 0xEE 0xC9 BALANCE DUP2 PUSH22 0x943B0597246DAE020264736F6C634300080700330000 ",
							"sourceMap": "148:5837:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;354:45;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1297:48;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5184:374;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2230:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4053:795;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;510:35;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2540:126;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;430:38;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3089:631;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1662:366;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5840:142;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;354:45;;;;;;;;;;;;;;;;;;;:::o;1297:48::-;1335:10;1297:48;:::o;5184:374::-;5265:4;5315:10;5282:7;:19;5290:10;5282:19;;;;;;;;;;;;;;;:30;5302:9;5282:30;;;;;;;;;;;;;;;:43;;;;5503:9;5482:43;;5491:10;5482:43;;;5514:10;5482:43;;;;;;:::i;:::-;;;;;;;;5546:4;5539:11;;5184:374;;;;:::o;2230:100::-;2283:7;2310:12;;2303:19;;2230:100;:::o;4053:795::-;4152:4;4191:8;:16;4200:6;4191:16;;;;;;;;;;;;;;;;4177:10;:30;;4169:39;;;;;;4289:7;:15;4297:6;4289:15;;;;;;;;;;;;;;;:27;4305:10;4289:27;;;;;;;;;;;;;;;;4275:10;:41;;4267:50;;;;;;4386:32;4407:10;4386:8;:16;4395:6;4386:16;;;;;;;;;;;;;;;;:20;;:32;;;;:::i;:::-;4367:8;:16;4376:6;4367:16;;;;;;;;;;;;;;;:51;;;;4531:43;4563:10;4531:7;:15;4539:6;4531:15;;;;;;;;;;;;;;;:27;4547:10;4531:27;;;;;;;;;;;;;;;;:31;;:43;;;;:::i;:::-;4501:7;:15;4509:6;4501:15;;;;;;;;;;;;;;;:27;4517:10;4501:27;;;;;;;;;;;;;;;:73;;;;4654:32;4675:10;4654:8;:16;4663:6;4654:16;;;;;;;;;;;;;;;;:20;;:32;;;;:::i;:::-;4635:8;:16;4644:6;4635:16;;;;;;;;;;;;;;;:51;;;;4799:6;4782:36;;4791:6;4782:36;;;4807:10;4782:36;;;;;;:::i;:::-;;;;;;;;4836:4;4829:11;;4053:795;;;;;:::o;510:35::-;543:2;510:35;:::o;2540:126::-;2610:7;2637:8;:21;2646:11;2637:21;;;;;;;;;;;;;;;;2630:28;;2540:126;;;:::o;430:38::-;;;;;;;;;;;;;;;;;;;:::o;3089:631::-;3171:4;3210:8;:20;3219:10;3210:20;;;;;;;;;;;;;;;;3196:10;:34;;3188:43;;;;;;3319:36;3344:10;3319:8;:20;3328:10;3319:20;;;;;;;;;;;;;;;;:24;;:36;;;;:::i;:::-;3296:8;:20;3305:10;3296:20;;;;;;;;;;;;;;;:59;;;;3440:35;3464:10;3440:8;:19;3449:9;3440:19;;;;;;;;;;;;;;;;:23;;:35;;;;:::i;:::-;3418:8;:19;3427:9;3418:19;;;;;;;;;;;;;;;:57;;;;3574:9;3553:43;;3562:10;3553:43;;;3585:10;3553:43;;;;;;:::i;:::-;;;;;;;;3708:4;3701:11;;3089:631;;;;:::o;1662:366::-;1335:10;1885:7;:21;;;;:::i;:::-;1872:9;:34;1864:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;1987:33;2012:7;1987:8;:20;1996:10;1987:20;;;;;;;;;;;;;;;;:24;;:33;;;;:::i;:::-;1964:8;:20;1973:10;1964:20;;;;;;;;;;;;;;;:56;;;;1662:366;:::o;5840:142::-;5924:4;5948:7;:15;5956:6;5948:15;;;;;;;;;;;;;;;:26;5964:9;5948:26;;;;;;;;;;;;;;;;5941:33;;5840:142;;;;:::o;2846:119:2:-;2904:7;2934:1;2929;:6;;2922:14;;;;:::i;:::-;;2956:1;2952;:5;;;;:::i;:::-;2945:12;;2846:119;;;;:::o;2422:141::-;2480:7;2498:9;2514:1;2510;:5;;;;:::i;:::-;2498:17;;2536:1;2531;:6;;2524:14;;;;:::i;:::-;;2554:1;2547:8;;;2422:141;;;;:::o;7:139:3:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:119;;;411:79;;:::i;:::-;373:119;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;297:329;;;;:::o;632:474::-;700:6;708;757:2;745:9;736:7;732:23;728:32;725:119;;;763:79;;:::i;:::-;725:119;883:1;908:53;953:7;944:6;933:9;929:22;908:53;:::i;:::-;898:63;;854:117;1010:2;1036:53;1081:7;1072:6;1061:9;1057:22;1036:53;:::i;:::-;1026:63;;981:118;632:474;;;;;:::o;1112:619::-;1189:6;1197;1205;1254:2;1242:9;1233:7;1229:23;1225:32;1222:119;;;1260:79;;:::i;:::-;1222:119;1380:1;1405:53;1450:7;1441:6;1430:9;1426:22;1405:53;:::i;:::-;1395:63;;1351:117;1507:2;1533:53;1578:7;1569:6;1558:9;1554:22;1533:53;:::i;:::-;1523:63;;1478:118;1635:2;1661:53;1706:7;1697:6;1686:9;1682:22;1661:53;:::i;:::-;1651:63;;1606:118;1112:619;;;;;:::o;1737:474::-;1805:6;1813;1862:2;1850:9;1841:7;1837:23;1833:32;1830:119;;;1868:79;;:::i;:::-;1830:119;1988:1;2013:53;2058:7;2049:6;2038:9;2034:22;2013:53;:::i;:::-;2003:63;;1959:117;2115:2;2141:53;2186:7;2177:6;2166:9;2162:22;2141:53;:::i;:::-;2131:63;;2086:118;1737:474;;;;;:::o;2217:329::-;2276:6;2325:2;2313:9;2304:7;2300:23;2296:32;2293:119;;;2331:79;;:::i;:::-;2293:119;2451:1;2476:53;2521:7;2512:6;2501:9;2497:22;2476:53;:::i;:::-;2466:63;;2422:117;2217:329;;;;:::o;2552:109::-;2633:21;2648:5;2633:21;:::i;:::-;2628:3;2621:34;2552:109;;:::o;2667:364::-;2755:3;2783:39;2816:5;2783:39;:::i;:::-;2838:71;2902:6;2897:3;2838:71;:::i;:::-;2831:78;;2918:52;2963:6;2958:3;2951:4;2944:5;2940:16;2918:52;:::i;:::-;2995:29;3017:6;2995:29;:::i;:::-;2990:3;2986:39;2979:46;;2759:272;2667:364;;;;:::o;3037:366::-;3179:3;3200:67;3264:2;3259:3;3200:67;:::i;:::-;3193:74;;3276:93;3365:3;3276:93;:::i;:::-;3394:2;3389:3;3385:12;3378:19;;3037:366;;;:::o;3409:118::-;3496:24;3514:5;3496:24;:::i;:::-;3491:3;3484:37;3409:118;;:::o;3533:112::-;3616:22;3632:5;3616:22;:::i;:::-;3611:3;3604:35;3533:112;;:::o;3651:210::-;3738:4;3776:2;3765:9;3761:18;3753:26;;3789:65;3851:1;3840:9;3836:17;3827:6;3789:65;:::i;:::-;3651:210;;;;:::o;3867:313::-;3980:4;4018:2;4007:9;4003:18;3995:26;;4067:9;4061:4;4057:20;4053:1;4042:9;4038:17;4031:47;4095:78;4168:4;4159:6;4095:78;:::i;:::-;4087:86;;3867:313;;;;:::o;4186:419::-;4352:4;4390:2;4379:9;4375:18;4367:26;;4439:9;4433:4;4429:20;4425:1;4414:9;4410:17;4403:47;4467:131;4593:4;4467:131;:::i;:::-;4459:139;;4186:419;;;:::o;4611:222::-;4704:4;4742:2;4731:9;4727:18;4719:26;;4755:71;4823:1;4812:9;4808:17;4799:6;4755:71;:::i;:::-;4611:222;;;;:::o;4839:214::-;4928:4;4966:2;4955:9;4951:18;4943:26;;4979:67;5043:1;5032:9;5028:17;5019:6;4979:67;:::i;:::-;4839:214;;;;:::o;5140:99::-;5192:6;5226:5;5220:12;5210:22;;5140:99;;;:::o;5245:169::-;5329:11;5363:6;5358:3;5351:19;5403:4;5398:3;5394:14;5379:29;;5245:169;;;;:::o;5420:305::-;5460:3;5479:20;5497:1;5479:20;:::i;:::-;5474:25;;5513:20;5531:1;5513:20;:::i;:::-;5508:25;;5667:1;5599:66;5595:74;5592:1;5589:81;5586:107;;;5673:18;;:::i;:::-;5586:107;5717:1;5714;5710:9;5703:16;;5420:305;;;;:::o;5731:348::-;5771:7;5794:20;5812:1;5794:20;:::i;:::-;5789:25;;5828:20;5846:1;5828:20;:::i;:::-;5823:25;;6016:1;5948:66;5944:74;5941:1;5938:81;5933:1;5926:9;5919:17;5915:105;5912:131;;;6023:18;;:::i;:::-;5912:131;6071:1;6068;6064:9;6053:20;;5731:348;;;;:::o;6085:191::-;6125:4;6145:20;6163:1;6145:20;:::i;:::-;6140:25;;6179:20;6197:1;6179:20;:::i;:::-;6174:25;;6218:1;6215;6212:8;6209:34;;;6223:18;;:::i;:::-;6209:34;6268:1;6265;6261:9;6253:17;;6085:191;;;;:::o;6282:96::-;6319:7;6348:24;6366:5;6348:24;:::i;:::-;6337:35;;6282:96;;;:::o;6384:90::-;6418:7;6461:5;6454:13;6447:21;6436:32;;6384:90;;;:::o;6480:126::-;6517:7;6557:42;6550:5;6546:54;6535:65;;6480:126;;;:::o;6612:77::-;6649:7;6678:5;6667:16;;6612:77;;;:::o;6695:86::-;6730:7;6770:4;6763:5;6759:16;6748:27;;6695:86;;;:::o;6787:307::-;6855:1;6865:113;6879:6;6876:1;6873:13;6865:113;;;6964:1;6959:3;6955:11;6949:18;6945:1;6940:3;6936:11;6929:39;6901:2;6898:1;6894:10;6889:15;;6865:113;;;6996:6;6993:1;6990:13;6987:101;;;7076:1;7067:6;7062:3;7058:16;7051:27;6987:101;6836:258;6787:307;;;:::o;7100:180::-;7148:77;7145:1;7138:88;7245:4;7242:1;7235:15;7269:4;7266:1;7259:15;7286:180;7334:77;7331:1;7324:88;7431:4;7428:1;7421:15;7455:4;7452:1;7445:15;7595:117;7704:1;7701;7694:12;7718:102;7759:6;7810:2;7806:7;7801:2;7794:5;7790:14;7786:28;7776:38;;7718:102;;;:::o;7826:182::-;7966:34;7962:1;7954:6;7950:14;7943:58;7826:182;:::o;8014:122::-;8087:24;8105:5;8087:24;:::i;:::-;8080:5;8077:35;8067:63;;8126:1;8123;8116:12;8067:63;8014:122;:::o;8142:::-;8215:24;8233:5;8215:24;:::i;:::-;8208:5;8205:35;8195:63;;8254:1;8251;8244:12;8195:63;8142:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "854200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2863",
								"buy(uint256)": "infinite",
								"decimals()": "335",
								"name()": "infinite",
								"symbol()": "infinite",
								"tokenPrice_()": "352",
								"totalSupply()": "2504",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 148,
									"end": 5985,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 148,
									"end": 5985,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 148,
									"end": 5985,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1530,
									"end": 1535,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1515,
									"end": 1527,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1515,
									"end": 1535,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1515,
									"end": 1535,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1515,
									"end": 1535,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1515,
									"end": 1535,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1569,
									"end": 1581,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1569,
									"end": 1581,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1546,
									"end": 1554,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1546,
									"end": 1566,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1555,
									"end": 1565,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1546,
									"end": 1566,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1546,
									"end": 1566,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1546,
									"end": 1566,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1546,
									"end": 1566,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1546,
									"end": 1566,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1546,
									"end": 1566,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1546,
									"end": 1566,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1546,
									"end": 1566,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1546,
									"end": 1566,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1546,
									"end": 1566,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1546,
									"end": 1566,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1546,
									"end": 1566,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1546,
									"end": 1566,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1546,
									"end": 1566,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1546,
									"end": 1566,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1546,
									"end": 1581,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1546,
									"end": 1581,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1546,
									"end": 1581,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1546,
									"end": 1581,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1477,
									"end": 1589,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 148,
									"end": 5985,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 148,
									"end": 5985,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 243,
									"end": 362,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 243,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 243,
									"end": 362,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 416,
									"end": 490,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 416,
									"end": 490,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 372,
									"end": 500,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 594,
									"end": 671,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 594,
									"end": 671,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 631,
									"end": 638,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 665,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 649,
									"end": 665,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 649,
									"end": 665,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 594,
									"end": 671,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 594,
									"end": 671,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 594,
									"end": 671,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 594,
									"end": 671,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 800,
									"end": 917,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 800,
									"end": 917,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 909,
									"end": 910,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 906,
									"end": 907,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 899,
									"end": 911,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 1014,
									"end": 1019,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 996,
									"end": 1020,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 989,
									"end": 994,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 986,
									"end": 1021,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1035,
									"end": 1036,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1032,
									"end": 1033,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1025,
									"end": 1037,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 976,
									"end": 1039,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 923,
									"end": 1045,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 148,
									"end": 5985,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 148,
									"end": 5985,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 148,
									"end": 5985,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 148,
									"end": 5985,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 148,
									"end": 5985,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 148,
									"end": 5985,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 148,
									"end": 5985,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 148,
									"end": 5985,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 148,
									"end": 5985,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220962985aced05f73e1ca25863d150cf4deff4eec9318175943b0597246dae020264736f6c63430008070033",
									".code": [
										{
											"begin": 148,
											"end": 5985,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "PUSH",
											"source": 0,
											"value": "D96A094A"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "PUSH",
											"source": 0,
											"value": "761C8B9"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 148,
											"end": 5985,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 354,
											"end": 399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 354,
											"end": 399,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 354,
											"end": 399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 354,
											"end": 399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 354,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 354,
											"end": 399,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 354,
											"end": 399,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 354,
											"end": 399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 399,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 354,
											"end": 399,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 354,
											"end": 399,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 354,
											"end": 399,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 354,
											"end": 399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 399,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 510,
											"end": 545,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 510,
											"end": 545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 510,
											"end": 545,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 510,
											"end": 545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 545,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 510,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 510,
											"end": 545,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 510,
											"end": 545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 510,
											"end": 545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 545,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 510,
											"end": 545,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 510,
											"end": 545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 510,
											"end": 545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 510,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 510,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 510,
											"end": 545,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 510,
											"end": 545,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 510,
											"end": 545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 510,
											"end": 545,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 545,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 510,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 510,
											"end": 545,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 510,
											"end": 545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 510,
											"end": 545,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 510,
											"end": 545,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 510,
											"end": 545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 510,
											"end": 545,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 510,
											"end": 545,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 510,
											"end": 545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 545,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 510,
											"end": 545,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 510,
											"end": 545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 510,
											"end": 545,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1662,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1662,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1662,
											"end": 2028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 2028,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 2028,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 2028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 2028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1662,
											"end": 2028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 2028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1662,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1662,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1662,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1662,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1662,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1662,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 2028,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 354,
											"end": 399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 399,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 354,
											"end": 399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 354,
											"end": 399,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "PUSH",
											"source": 0,
											"value": "43727970746F4D6F6E7374657200000000000000000000000000000000000000"
										},
										{
											"begin": 354,
											"end": 399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 354,
											"end": 399,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1345,
											"name": "PUSH",
											"source": 0,
											"value": "3B9ACA00"
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1345,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5265,
											"end": 5269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5315,
											"end": 5325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5289,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5282,
											"end": 5301,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5290,
											"end": 5300,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5301,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5282,
											"end": 5301,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5301,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5282,
											"end": 5301,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5301,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5301,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5282,
											"end": 5301,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5301,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5301,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5282,
											"end": 5301,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5301,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5301,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5302,
											"end": 5311,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5312,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5282,
											"end": 5312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5312,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5282,
											"end": 5312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5282,
											"end": 5312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5282,
											"end": 5312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5312,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5325,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5282,
											"end": 5325,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5503,
											"end": 5512,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5482,
											"end": 5525,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5482,
											"end": 5525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5491,
											"end": 5501,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5482,
											"end": 5525,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5482,
											"end": 5525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5482,
											"end": 5525,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 5514,
											"end": 5524,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5482,
											"end": 5525,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5482,
											"end": 5525,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5482,
											"end": 5525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5482,
											"end": 5525,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5482,
											"end": 5525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5482,
											"end": 5525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5482,
											"end": 5525,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5482,
											"end": 5525,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5482,
											"end": 5525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5482,
											"end": 5525,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5482,
											"end": 5525,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5482,
											"end": 5525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5482,
											"end": 5525,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5482,
											"end": 5525,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5482,
											"end": 5525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5482,
											"end": 5525,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 5546,
											"end": 5550,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5539,
											"end": 5550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5539,
											"end": 5550,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5558,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2283,
											"end": 2290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2310,
											"end": 2322,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2310,
											"end": 2322,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2230,
											"end": 2330,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4152,
											"end": 4156,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4199,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4191,
											"end": 4207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4200,
											"end": 4206,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4207,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4191,
											"end": 4207,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4207,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4191,
											"end": 4207,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4207,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4191,
											"end": 4207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4207,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4191,
											"end": 4207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4207,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4207,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4177,
											"end": 4187,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4177,
											"end": 4207,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4177,
											"end": 4207,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4169,
											"end": 4208,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4208,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4208,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 4208,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4169,
											"end": 4208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4296,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4289,
											"end": 4304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4297,
											"end": 4303,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4304,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4289,
											"end": 4304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4304,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4289,
											"end": 4304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4304,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4289,
											"end": 4304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4304,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4289,
											"end": 4304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4289,
											"end": 4304,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4305,
											"end": 4315,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4316,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4289,
											"end": 4316,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4316,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4289,
											"end": 4316,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4316,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4289,
											"end": 4316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4316,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4289,
											"end": 4316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4289,
											"end": 4316,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4289,
											"end": 4316,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4275,
											"end": 4285,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4275,
											"end": 4316,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4275,
											"end": 4316,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4267,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4267,
											"end": 4317,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4267,
											"end": 4317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4267,
											"end": 4317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4267,
											"end": 4317,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4267,
											"end": 4317,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4267,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4407,
											"end": 4417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4394,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4386,
											"end": 4402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4395,
											"end": 4401,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4402,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4386,
											"end": 4402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4402,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4386,
											"end": 4402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4386,
											"end": 4402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4386,
											"end": 4402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4386,
											"end": 4402,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4386,
											"end": 4406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4386,
											"end": 4418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4418,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4386,
											"end": 4418,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4386,
											"end": 4418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4367,
											"end": 4375,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4367,
											"end": 4383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4376,
											"end": 4382,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4367,
											"end": 4383,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4367,
											"end": 4383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4367,
											"end": 4383,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4367,
											"end": 4383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4367,
											"end": 4383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4367,
											"end": 4383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4367,
											"end": 4383,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4367,
											"end": 4383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4367,
											"end": 4383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4367,
											"end": 4383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4367,
											"end": 4383,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4367,
											"end": 4383,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4367,
											"end": 4383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4367,
											"end": 4383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4367,
											"end": 4383,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4367,
											"end": 4418,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4563,
											"end": 4573,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 4538,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4531,
											"end": 4546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4539,
											"end": 4545,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 4546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4531,
											"end": 4546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 4546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4531,
											"end": 4546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 4546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 4546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 4546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4531,
											"end": 4546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 4546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 4546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 4546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 4546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4531,
											"end": 4546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 4546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4531,
											"end": 4546,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 4558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4547,
											"end": 4557,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 4558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4531,
											"end": 4558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 4558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4531,
											"end": 4558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 4558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 4558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 4558,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4531,
											"end": 4558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 4558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 4558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 4558,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 4558,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4531,
											"end": 4558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 4558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4531,
											"end": 4558,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 4558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4531,
											"end": 4562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 4574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 4574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 4574,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4531,
											"end": 4574,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4531,
											"end": 4574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4531,
											"end": 4574,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4531,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4508,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4501,
											"end": 4516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4509,
											"end": 4515,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4516,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4501,
											"end": 4516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4516,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4501,
											"end": 4516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4516,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4501,
											"end": 4516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4516,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4501,
											"end": 4516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4501,
											"end": 4516,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4517,
											"end": 4527,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4528,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4501,
											"end": 4528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4528,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4501,
											"end": 4528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4501,
											"end": 4528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4501,
											"end": 4528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4501,
											"end": 4528,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4574,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4501,
											"end": 4574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4654,
											"end": 4686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4675,
											"end": 4685,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4654,
											"end": 4662,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4663,
											"end": 4669,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4654,
											"end": 4670,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4654,
											"end": 4674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4654,
											"end": 4674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4654,
											"end": 4686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4654,
											"end": 4686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4654,
											"end": 4686,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4654,
											"end": 4686,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4654,
											"end": 4686,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4654,
											"end": 4686,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4654,
											"end": 4686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4643,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4644,
											"end": 4650,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4635,
											"end": 4651,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4686,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4635,
											"end": 4686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4799,
											"end": 4805,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4782,
											"end": 4818,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4782,
											"end": 4818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4791,
											"end": 4797,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4782,
											"end": 4818,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4782,
											"end": 4818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4782,
											"end": 4818,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 4807,
											"end": 4817,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4782,
											"end": 4818,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4782,
											"end": 4818,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4782,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4782,
											"end": 4818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4782,
											"end": 4818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4782,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4782,
											"end": 4818,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4782,
											"end": 4818,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4782,
											"end": 4818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4782,
											"end": 4818,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4782,
											"end": 4818,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4782,
											"end": 4818,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4782,
											"end": 4818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4782,
											"end": 4818,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4782,
											"end": 4818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4782,
											"end": 4818,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 4836,
											"end": 4840,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4829,
											"end": 4840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4829,
											"end": 4840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4848,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 510,
											"end": 545,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 510,
											"end": 545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 543,
											"end": 545,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 510,
											"end": 545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 510,
											"end": 545,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2637,
											"end": 2645,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2637,
											"end": 2658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2646,
											"end": 2657,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2637,
											"end": 2658,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2637,
											"end": 2658,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2637,
											"end": 2658,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2637,
											"end": 2658,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2637,
											"end": 2658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2637,
											"end": 2658,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2637,
											"end": 2658,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2637,
											"end": 2658,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2637,
											"end": 2658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2637,
											"end": 2658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2637,
											"end": 2658,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2637,
											"end": 2658,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2637,
											"end": 2658,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2637,
											"end": 2658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2637,
											"end": 2658,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2637,
											"end": 2658,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2666,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "434D4F4E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 430,
											"end": 468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 430,
											"end": 468,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3218,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3210,
											"end": 3230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3229,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3230,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3210,
											"end": 3230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3230,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3210,
											"end": 3230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3210,
											"end": 3230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3210,
											"end": 3230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3230,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3230,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3196,
											"end": 3206,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3196,
											"end": 3230,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3196,
											"end": 3230,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3188,
											"end": 3231,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3231,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3188,
											"end": 3231,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3231,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3231,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3188,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3344,
											"end": 3354,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3327,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3328,
											"end": 3338,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3339,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3319,
											"end": 3343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3355,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3319,
											"end": 3355,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3319,
											"end": 3355,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3319,
											"end": 3355,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3319,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3304,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3296,
											"end": 3316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3305,
											"end": 3315,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3316,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3296,
											"end": 3316,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3316,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3296,
											"end": 3316,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3316,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3296,
											"end": 3316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3316,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3296,
											"end": 3316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3316,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3355,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3296,
											"end": 3355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3464,
											"end": 3474,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3448,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3440,
											"end": 3459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3449,
											"end": 3458,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3459,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3440,
											"end": 3459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3459,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3440,
											"end": 3459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3459,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3440,
											"end": 3459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3459,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3440,
											"end": 3459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3440,
											"end": 3459,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3459,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3440,
											"end": 3463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3475,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3440,
											"end": 3475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3440,
											"end": 3475,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3440,
											"end": 3475,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3440,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3418,
											"end": 3426,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3418,
											"end": 3437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3427,
											"end": 3436,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3418,
											"end": 3437,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3418,
											"end": 3437,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3418,
											"end": 3437,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3418,
											"end": 3437,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3418,
											"end": 3437,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3418,
											"end": 3437,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3418,
											"end": 3437,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3418,
											"end": 3437,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3418,
											"end": 3437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3418,
											"end": 3437,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3418,
											"end": 3437,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3418,
											"end": 3437,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3418,
											"end": 3437,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3418,
											"end": 3437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3418,
											"end": 3437,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3418,
											"end": 3475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3418,
											"end": 3475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3418,
											"end": 3475,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3418,
											"end": 3475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3574,
											"end": 3583,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3553,
											"end": 3596,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3553,
											"end": 3596,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3572,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3553,
											"end": 3596,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3553,
											"end": 3596,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3553,
											"end": 3596,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 3585,
											"end": 3595,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3553,
											"end": 3596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3553,
											"end": 3596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3553,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3553,
											"end": 3596,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3553,
											"end": 3596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3553,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3553,
											"end": 3596,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3553,
											"end": 3596,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3553,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3553,
											"end": 3596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3553,
											"end": 3596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3553,
											"end": 3596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3553,
											"end": 3596,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3553,
											"end": 3596,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3553,
											"end": 3596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3553,
											"end": 3596,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3708,
											"end": 3712,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3701,
											"end": 3712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3701,
											"end": 3712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3089,
											"end": 3720,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1662,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1662,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1345,
											"name": "PUSH",
											"source": 0,
											"value": "3B9ACA00"
										},
										{
											"begin": 1885,
											"end": 1892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1885,
											"end": 1906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 1906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1885,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1885,
											"end": 1906,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1885,
											"end": 1906,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1885,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1881,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1906,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 1943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1864,
											"end": 1943,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 1943,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1864,
											"end": 1943,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 1943,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1864,
											"end": 1943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 1943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 1943,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1864,
											"end": 1943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 1943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1864,
											"end": 1943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 1943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1864,
											"end": 1943,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1864,
											"end": 1943,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1864,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 1943,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1864,
											"end": 1943,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 1943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 1943,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 1943,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 1943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 1943,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1864,
											"end": 1943,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1864,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2012,
											"end": 2019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 1995,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1987,
											"end": 2007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1996,
											"end": 2006,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2007,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1987,
											"end": 2007,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2007,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1987,
											"end": 2007,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2007,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2007,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1987,
											"end": 2007,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2007,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2007,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1987,
											"end": 2007,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 2007,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2007,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1987,
											"end": 2011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2020,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1987,
											"end": 2020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1987,
											"end": 2020,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1987,
											"end": 2020,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1987,
											"end": 2020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1964,
											"end": 1972,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1964,
											"end": 1984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1973,
											"end": 1983,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1964,
											"end": 1984,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1964,
											"end": 1984,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1964,
											"end": 1984,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1964,
											"end": 1984,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1964,
											"end": 1984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1964,
											"end": 1984,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1964,
											"end": 1984,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1964,
											"end": 1984,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1964,
											"end": 1984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1964,
											"end": 1984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1964,
											"end": 1984,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1964,
											"end": 1984,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1964,
											"end": 1984,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1964,
											"end": 1984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1984,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1964,
											"end": 2020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1964,
											"end": 2020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1964,
											"end": 2020,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1964,
											"end": 2020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 2028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5924,
											"end": 5928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5948,
											"end": 5955,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5948,
											"end": 5963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5956,
											"end": 5962,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5948,
											"end": 5963,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5948,
											"end": 5963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5948,
											"end": 5963,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5948,
											"end": 5963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5948,
											"end": 5963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5948,
											"end": 5963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5948,
											"end": 5963,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5948,
											"end": 5963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5948,
											"end": 5963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5948,
											"end": 5963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5948,
											"end": 5963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5948,
											"end": 5963,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5948,
											"end": 5963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5948,
											"end": 5963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5948,
											"end": 5963,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5948,
											"end": 5974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5964,
											"end": 5973,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5948,
											"end": 5974,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5948,
											"end": 5974,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5948,
											"end": 5974,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5948,
											"end": 5974,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5948,
											"end": 5974,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5948,
											"end": 5974,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5948,
											"end": 5974,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5948,
											"end": 5974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5948,
											"end": 5974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5948,
											"end": 5974,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5948,
											"end": 5974,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5948,
											"end": 5974,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5948,
											"end": 5974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5948,
											"end": 5974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5948,
											"end": 5974,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5948,
											"end": 5974,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5941,
											"end": 5974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5941,
											"end": 5974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5840,
											"end": 5982,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2846,
											"end": 2965,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2846,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2904,
											"end": 2911,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2934,
											"end": 2935,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2929,
											"end": 2930,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2929,
											"end": 2935,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2929,
											"end": 2935,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2922,
											"end": 2936,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2922,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2922,
											"end": 2936,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2922,
											"end": 2936,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2922,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2936,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2922,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2956,
											"end": 2957,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 2953,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2952,
											"end": 2957,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 2957,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2952,
											"end": 2957,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2952,
											"end": 2957,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2952,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2957,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2945,
											"end": 2957,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2846,
											"end": 2965,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2846,
											"end": 2965,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2846,
											"end": 2965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2846,
											"end": 2965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2846,
											"end": 2965,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2422,
											"end": 2563,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2422,
											"end": 2563,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2480,
											"end": 2487,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2498,
											"end": 2507,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2515,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2511,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2510,
											"end": 2515,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2515,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2510,
											"end": 2515,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2510,
											"end": 2515,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2510,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2498,
											"end": 2515,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2498,
											"end": 2515,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 2537,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2532,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2524,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2524,
											"end": 2538,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2524,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2524,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2524,
											"end": 2538,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2524,
											"end": 2538,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2524,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2524,
											"end": 2538,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2524,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2554,
											"end": 2555,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2547,
											"end": 2555,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2547,
											"end": 2555,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2547,
											"end": 2555,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2422,
											"end": 2563,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2422,
											"end": 2563,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2422,
											"end": 2563,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2422,
											"end": 2563,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2422,
											"end": 2563,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 356,
											"end": 362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 373,
											"end": 492,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 373,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 373,
											"end": 492,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 531,
											"end": 532,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 581,
											"end": 590,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 577,
											"end": 599,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 546,
											"end": 609,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 546,
											"end": 609,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 502,
											"end": 619,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 700,
											"end": 706,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 714,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 757,
											"end": 759,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 754,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 736,
											"end": 743,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 732,
											"end": 755,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 728,
											"end": 760,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 725,
											"end": 844,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 725,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 725,
											"end": 844,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 883,
											"end": 884,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 953,
											"end": 960,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 944,
											"end": 950,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 933,
											"end": 942,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 929,
											"end": 951,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 898,
											"end": 961,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 898,
											"end": 961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 854,
											"end": 971,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1010,
											"end": 1012,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1081,
											"end": 1088,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1057,
											"end": 1079,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1189,
											"end": 1195,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1203,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1256,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1233,
											"end": 1240,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1229,
											"end": 1252,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1225,
											"end": 1257,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1380,
											"end": 1381,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 1450,
											"end": 1457,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1439,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1426,
											"end": 1448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1468,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1507,
											"end": 1509,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1578,
											"end": 1585,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1569,
											"end": 1575,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1554,
											"end": 1576,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1478,
											"end": 1596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1637,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1706,
											"end": 1713,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1686,
											"end": 1695,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1704,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1606,
											"end": 1724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1862,
											"end": 1864,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1841,
											"end": 1848,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1860,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1833,
											"end": 1865,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2058,
											"end": 2065,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2049,
											"end": 2055,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2047,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2056,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1959,
											"end": 2076,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2115,
											"end": 2117,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 2186,
											"end": 2193,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2086,
											"end": 2204,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2217,
											"end": 2546,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2217,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2282,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2327,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2304,
											"end": 2311,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2300,
											"end": 2323,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2296,
											"end": 2328,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2412,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2412,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2293,
											"end": 2412,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2331,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2331,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2331,
											"end": 2410,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2331,
											"end": 2410,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2331,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2412,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2293,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2451,
											"end": 2452,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2476,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 2521,
											"end": 2528,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2512,
											"end": 2518,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2501,
											"end": 2510,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2519,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2476,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2476,
											"end": 2529,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2476,
											"end": 2529,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 2476,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2529,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2529,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2422,
											"end": 2539,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2217,
											"end": 2546,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2217,
											"end": 2546,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2217,
											"end": 2546,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2217,
											"end": 2546,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2217,
											"end": 2546,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2552,
											"end": 2661,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 2552,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2633,
											"end": 2654,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2648,
											"end": 2653,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2633,
											"end": 2654,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 2633,
											"end": 2654,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2633,
											"end": 2654,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 2633,
											"end": 2654,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2628,
											"end": 2631,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2621,
											"end": 2655,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2661,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2661,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2552,
											"end": 2661,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2667,
											"end": 3031,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 2667,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2758,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2783,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2816,
											"end": 2821,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 2783,
											"end": 2822,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2783,
											"end": 2822,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 2783,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2902,
											"end": 2908,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2897,
											"end": 2900,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2838,
											"end": 2909,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2838,
											"end": 2909,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 2838,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2831,
											"end": 2909,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2831,
											"end": 2909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2918,
											"end": 2970,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 2963,
											"end": 2969,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2958,
											"end": 2961,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2951,
											"end": 2955,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2944,
											"end": 2949,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2956,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2918,
											"end": 2970,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2918,
											"end": 2970,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2918,
											"end": 2970,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 2918,
											"end": 2970,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2995,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 3017,
											"end": 3023,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2995,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2995,
											"end": 3024,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2995,
											"end": 3024,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2995,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2990,
											"end": 2993,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2986,
											"end": 3025,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2979,
											"end": 3025,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2979,
											"end": 3025,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2759,
											"end": 3031,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2667,
											"end": 3031,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2667,
											"end": 3031,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2667,
											"end": 3031,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2667,
											"end": 3031,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2667,
											"end": 3031,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3037,
											"end": 3403,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 3037,
											"end": 3403,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3179,
											"end": 3182,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3200,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3264,
											"end": 3266,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3259,
											"end": 3262,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3200,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 3200,
											"end": 3267,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3200,
											"end": 3267,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3200,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3193,
											"end": 3267,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3193,
											"end": 3267,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3276,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 3365,
											"end": 3368,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3276,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 3276,
											"end": 3369,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3276,
											"end": 3369,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 3276,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3394,
											"end": 3396,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3389,
											"end": 3392,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3385,
											"end": 3397,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3378,
											"end": 3397,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3378,
											"end": 3397,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3037,
											"end": 3403,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3037,
											"end": 3403,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3037,
											"end": 3403,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3037,
											"end": 3403,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3409,
											"end": 3527,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 3409,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3496,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3514,
											"end": 3519,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3496,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 3496,
											"end": 3520,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3496,
											"end": 3520,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3496,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3491,
											"end": 3494,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3521,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3409,
											"end": 3527,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3409,
											"end": 3527,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3409,
											"end": 3527,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3533,
											"end": 3645,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 3533,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3616,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 3616,
											"end": 3638,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3616,
											"end": 3638,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 3616,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3611,
											"end": 3614,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3604,
											"end": 3639,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3645,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3645,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3533,
											"end": 3645,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3651,
											"end": 3861,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3651,
											"end": 3861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3738,
											"end": 3742,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3778,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3765,
											"end": 3774,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3761,
											"end": 3779,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3753,
											"end": 3779,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3753,
											"end": 3779,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3789,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 3851,
											"end": 3852,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3840,
											"end": 3849,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3853,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3827,
											"end": 3833,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3789,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 3789,
											"end": 3854,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3789,
											"end": 3854,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 3789,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3651,
											"end": 3861,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3651,
											"end": 3861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3651,
											"end": 3861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3651,
											"end": 3861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3651,
											"end": 3861,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3867,
											"end": 4180,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 3867,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3980,
											"end": 3984,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4018,
											"end": 4020,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4007,
											"end": 4016,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4003,
											"end": 4021,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3995,
											"end": 4021,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3995,
											"end": 4021,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4067,
											"end": 4076,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4061,
											"end": 4065,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4057,
											"end": 4077,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4053,
											"end": 4054,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4042,
											"end": 4051,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4038,
											"end": 4055,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4078,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 4168,
											"end": 4172,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4159,
											"end": 4165,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 4095,
											"end": 4173,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4095,
											"end": 4173,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 4095,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4173,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4173,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3867,
											"end": 4180,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3867,
											"end": 4180,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3867,
											"end": 4180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3867,
											"end": 4180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3867,
											"end": 4180,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4186,
											"end": 4605,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 4186,
											"end": 4605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4352,
											"end": 4356,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4390,
											"end": 4392,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4379,
											"end": 4388,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4375,
											"end": 4393,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4367,
											"end": 4393,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4367,
											"end": 4393,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4433,
											"end": 4437,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4429,
											"end": 4449,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4425,
											"end": 4426,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4414,
											"end": 4423,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4410,
											"end": 4427,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4403,
											"end": 4450,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4467,
											"end": 4598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 4593,
											"end": 4597,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4467,
											"end": 4598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 4467,
											"end": 4598,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4467,
											"end": 4598,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 4467,
											"end": 4598,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4459,
											"end": 4598,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4459,
											"end": 4598,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4186,
											"end": 4605,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4186,
											"end": 4605,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4186,
											"end": 4605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4186,
											"end": 4605,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4611,
											"end": 4833,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 4611,
											"end": 4833,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4704,
											"end": 4708,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4742,
											"end": 4744,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4731,
											"end": 4740,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4727,
											"end": 4745,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4719,
											"end": 4745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4719,
											"end": 4745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4755,
											"end": 4826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 4823,
											"end": 4824,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4812,
											"end": 4821,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4808,
											"end": 4825,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4799,
											"end": 4805,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4755,
											"end": 4826,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 4755,
											"end": 4826,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4755,
											"end": 4826,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 4755,
											"end": 4826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4611,
											"end": 4833,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4611,
											"end": 4833,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4611,
											"end": 4833,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4611,
											"end": 4833,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4611,
											"end": 4833,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4839,
											"end": 5053,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 4839,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4928,
											"end": 4932,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4966,
											"end": 4968,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4955,
											"end": 4964,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4943,
											"end": 4969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4943,
											"end": 4969,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 5043,
											"end": 5044,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5041,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5028,
											"end": 5045,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5019,
											"end": 5025,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4839,
											"end": 5053,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4839,
											"end": 5053,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4839,
											"end": 5053,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4839,
											"end": 5053,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4839,
											"end": 5053,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5140,
											"end": 5239,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 5140,
											"end": 5239,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5226,
											"end": 5231,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5220,
											"end": 5232,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5232,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5232,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5140,
											"end": 5239,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5140,
											"end": 5239,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5140,
											"end": 5239,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5140,
											"end": 5239,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5245,
											"end": 5414,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 5245,
											"end": 5414,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5329,
											"end": 5340,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5363,
											"end": 5369,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5361,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5351,
											"end": 5370,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5403,
											"end": 5407,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5398,
											"end": 5401,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5394,
											"end": 5408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5379,
											"end": 5408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5379,
											"end": 5408,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5414,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5414,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5414,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5414,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5414,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5420,
											"end": 5725,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 5420,
											"end": 5725,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5460,
											"end": 5463,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5479,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 5497,
											"end": 5498,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5479,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 5479,
											"end": 5499,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5479,
											"end": 5499,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 5479,
											"end": 5499,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5474,
											"end": 5499,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5474,
											"end": 5499,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5513,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 5531,
											"end": 5532,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5513,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 5513,
											"end": 5533,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5513,
											"end": 5533,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 5513,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5508,
											"end": 5533,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5508,
											"end": 5533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5667,
											"end": 5668,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5599,
											"end": 5665,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5595,
											"end": 5669,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5592,
											"end": 5593,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5589,
											"end": 5670,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5586,
											"end": 5693,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5586,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 5586,
											"end": 5693,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5673,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 5673,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 5673,
											"end": 5691,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5673,
											"end": 5691,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 5673,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5586,
											"end": 5693,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 5586,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5717,
											"end": 5718,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5714,
											"end": 5715,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5710,
											"end": 5719,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5703,
											"end": 5719,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5703,
											"end": 5719,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5725,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5725,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5725,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5725,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5725,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5731,
											"end": 6079,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 5731,
											"end": 6079,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5771,
											"end": 5778,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5794,
											"end": 5814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 5812,
											"end": 5813,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5794,
											"end": 5814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 5794,
											"end": 5814,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5794,
											"end": 5814,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 5794,
											"end": 5814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5789,
											"end": 5814,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5789,
											"end": 5814,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5828,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 5846,
											"end": 5847,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5828,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 5828,
											"end": 5848,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5828,
											"end": 5848,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 5828,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5823,
											"end": 5848,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5823,
											"end": 5848,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6016,
											"end": 6017,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5948,
											"end": 6014,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5944,
											"end": 6018,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 5941,
											"end": 5942,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5938,
											"end": 6019,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5933,
											"end": 5934,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5926,
											"end": 5935,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5919,
											"end": 5936,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5915,
											"end": 6020,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5912,
											"end": 6043,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5912,
											"end": 6043,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 5912,
											"end": 6043,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6023,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 6023,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 6023,
											"end": 6041,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6023,
											"end": 6041,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 6023,
											"end": 6041,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5912,
											"end": 6043,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 5912,
											"end": 6043,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6071,
											"end": 6072,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6068,
											"end": 6069,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6064,
											"end": 6073,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 6053,
											"end": 6073,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6053,
											"end": 6073,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5731,
											"end": 6079,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5731,
											"end": 6079,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5731,
											"end": 6079,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5731,
											"end": 6079,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5731,
											"end": 6079,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6085,
											"end": 6276,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 6085,
											"end": 6276,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6125,
											"end": 6129,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6145,
											"end": 6165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 6163,
											"end": 6164,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6145,
											"end": 6165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 6145,
											"end": 6165,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6145,
											"end": 6165,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 6145,
											"end": 6165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6140,
											"end": 6165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6140,
											"end": 6165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6179,
											"end": 6199,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 6197,
											"end": 6198,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6179,
											"end": 6199,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 6179,
											"end": 6199,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6179,
											"end": 6199,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 6179,
											"end": 6199,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6174,
											"end": 6199,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6174,
											"end": 6199,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6218,
											"end": 6219,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6215,
											"end": 6216,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6212,
											"end": 6220,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6209,
											"end": 6243,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6209,
											"end": 6243,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 6209,
											"end": 6243,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6223,
											"end": 6241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 6223,
											"end": 6241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 6223,
											"end": 6241,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6223,
											"end": 6241,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 6223,
											"end": 6241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6209,
											"end": 6243,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 6209,
											"end": 6243,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6268,
											"end": 6269,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6265,
											"end": 6266,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6261,
											"end": 6270,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6270,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6270,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6085,
											"end": 6276,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6085,
											"end": 6276,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6085,
											"end": 6276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6085,
											"end": 6276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6085,
											"end": 6276,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6282,
											"end": 6378,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 6282,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6319,
											"end": 6326,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6348,
											"end": 6372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 6366,
											"end": 6371,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6348,
											"end": 6372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 6348,
											"end": 6372,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6348,
											"end": 6372,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 6348,
											"end": 6372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6372,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6337,
											"end": 6372,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6282,
											"end": 6378,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6282,
											"end": 6378,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6282,
											"end": 6378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6282,
											"end": 6378,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6384,
											"end": 6474,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 6384,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6418,
											"end": 6425,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6461,
											"end": 6466,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6454,
											"end": 6467,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6447,
											"end": 6468,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6436,
											"end": 6468,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6436,
											"end": 6468,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6384,
											"end": 6474,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6384,
											"end": 6474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6384,
											"end": 6474,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6384,
											"end": 6474,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6480,
											"end": 6606,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 6480,
											"end": 6606,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6517,
											"end": 6524,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6557,
											"end": 6599,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6550,
											"end": 6555,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6546,
											"end": 6600,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6535,
											"end": 6600,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6480,
											"end": 6606,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6480,
											"end": 6606,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6480,
											"end": 6606,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6480,
											"end": 6606,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6612,
											"end": 6689,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 6612,
											"end": 6689,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6656,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6678,
											"end": 6683,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6667,
											"end": 6683,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6667,
											"end": 6683,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6612,
											"end": 6689,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6612,
											"end": 6689,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6612,
											"end": 6689,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6612,
											"end": 6689,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6695,
											"end": 6781,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 6695,
											"end": 6781,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6730,
											"end": 6737,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6770,
											"end": 6774,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 6763,
											"end": 6768,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6759,
											"end": 6775,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6748,
											"end": 6775,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6748,
											"end": 6775,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6695,
											"end": 6781,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6695,
											"end": 6781,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6695,
											"end": 6781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6695,
											"end": 6781,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6787,
											"end": 7094,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 6787,
											"end": 7094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6855,
											"end": 6856,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6865,
											"end": 6978,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 6865,
											"end": 6978,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6879,
											"end": 6885,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6876,
											"end": 6877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6873,
											"end": 6886,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6865,
											"end": 6978,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6865,
											"end": 6978,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 6865,
											"end": 6978,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6964,
											"end": 6965,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6959,
											"end": 6962,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6955,
											"end": 6966,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6949,
											"end": 6967,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6945,
											"end": 6946,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6940,
											"end": 6943,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6936,
											"end": 6947,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6929,
											"end": 6968,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6901,
											"end": 6903,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6898,
											"end": 6899,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6894,
											"end": 6904,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6889,
											"end": 6904,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6889,
											"end": 6904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6865,
											"end": 6978,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 6865,
											"end": 6978,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6865,
											"end": 6978,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 6865,
											"end": 6978,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6996,
											"end": 7002,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6993,
											"end": 6994,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6990,
											"end": 7003,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7088,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 6987,
											"end": 7088,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7076,
											"end": 7077,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7067,
											"end": 7073,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7062,
											"end": 7065,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7058,
											"end": 7074,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7051,
											"end": 7078,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6987,
											"end": 7088,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 6987,
											"end": 7088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6836,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6787,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6787,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6787,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6787,
											"end": 7094,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7100,
											"end": 7280,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7100,
											"end": 7280,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7148,
											"end": 7225,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7145,
											"end": 7146,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7138,
											"end": 7226,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7245,
											"end": 7249,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7242,
											"end": 7243,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7235,
											"end": 7250,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7269,
											"end": 7273,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 7266,
											"end": 7267,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7259,
											"end": 7274,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7286,
											"end": 7466,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 7286,
											"end": 7466,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7334,
											"end": 7411,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7331,
											"end": 7332,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7324,
											"end": 7412,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7431,
											"end": 7435,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 7428,
											"end": 7429,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7421,
											"end": 7436,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7455,
											"end": 7459,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 7452,
											"end": 7453,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7445,
											"end": 7460,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7595,
											"end": 7712,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 7595,
											"end": 7712,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7704,
											"end": 7705,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7701,
											"end": 7702,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7694,
											"end": 7706,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7718,
											"end": 7820,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 7718,
											"end": 7820,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7759,
											"end": 7765,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7810,
											"end": 7812,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 7806,
											"end": 7813,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 7801,
											"end": 7803,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 7794,
											"end": 7799,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7790,
											"end": 7804,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7786,
											"end": 7814,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7776,
											"end": 7814,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7776,
											"end": 7814,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7718,
											"end": 7820,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7718,
											"end": 7820,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7718,
											"end": 7820,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7718,
											"end": 7820,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7826,
											"end": 8008,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 7826,
											"end": 8008,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7966,
											"end": 8000,
											"name": "PUSH",
											"source": 3,
											"value": "4E65656420746F2073656E6420657861637420616D6F756E74206F6620776569"
										},
										{
											"begin": 7962,
											"end": 7963,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7954,
											"end": 7960,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7950,
											"end": 7964,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7943,
											"end": 8001,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7826,
											"end": 8008,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7826,
											"end": 8008,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8014,
											"end": 8136,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 8014,
											"end": 8136,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8087,
											"end": 8111,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 8105,
											"end": 8110,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8087,
											"end": 8111,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 8087,
											"end": 8111,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8087,
											"end": 8111,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 8087,
											"end": 8111,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8080,
											"end": 8085,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8077,
											"end": 8112,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 8067,
											"end": 8130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 8067,
											"end": 8130,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8126,
											"end": 8127,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8123,
											"end": 8124,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8116,
											"end": 8128,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8067,
											"end": 8130,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 8067,
											"end": 8130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8136,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8014,
											"end": 8136,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8142,
											"end": 8264,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 8142,
											"end": 8264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8215,
											"end": 8239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 8233,
											"end": 8238,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8215,
											"end": 8239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 8215,
											"end": 8239,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8215,
											"end": 8239,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 8215,
											"end": 8239,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8208,
											"end": 8213,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8205,
											"end": 8240,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 8195,
											"end": 8258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 8195,
											"end": 8258,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8254,
											"end": 8255,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8251,
											"end": 8252,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8244,
											"end": 8256,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8195,
											"end": 8258,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 8195,
											"end": 8258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8142,
											"end": 8264,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8142,
											"end": 8264,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"buy(uint256)": "d96a094a",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"tokenPrice_()": "0761c8b9",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_numTokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_numTokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_numTokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":\"CryptoMonster\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol\":{\"keccak256\":\"0xd748ee54f00831eb1373cac4aea15fca5a24e9d0afbe5c0a88b47923765e84d1\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2ed64973b70806c25c4a79ff6862026444d834c371b8ae4e0a98eb7b2331dc42\",\"dweb:/ipfs/QmU1MTQaHaCw1Gug7Co3XA5mLEyH1XdiSZ4HcaG2KiwxQA\"]},\"GitHub/contract-token-cryptoMonster/shared/lib/IERC20.sol\":{\"keccak256\":\"0xaf036a21cac1b39999f4f57c20939eb30c1c818c3ad3ac99010fcbad0badb5ff\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7f0cbb48bb4360ed1412721ecfbb7c2fb5ccd113b76d993fca357f4c999b7dc2\",\"dweb:/ipfs/QmVsEVBc8wG37chWLLCM3AAdwJBppXqEqUBL3SWGuMqw1m\"]},\"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol\":{\"keccak256\":\"0xf430ff20a1998bdd5fa93c6b9e623cce686a19b73e97f317012b06c01de28661\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7a5ff8e7dfa39317a4fb4bcf89c7adcd32fadf8e2614c9c2d313a84fa65449bd\",\"dweb:/ipfs/Qmf9dYztjw9AZdsMuxW4YBNzE8Z9u2Ke9WBFhzSnbffKy4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 29,
								"contract": "GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol:CryptoMonster",
								"label": "structUser_",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(structUser)24_storage)"
							},
							{
								"astId": 33,
								"contract": "GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol:CryptoMonster",
								"label": "logins",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_string_storage)"
							},
							{
								"astId": 37,
								"contract": "GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol:CryptoMonster",
								"label": "balances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 43,
								"contract": "GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol:CryptoMonster",
								"label": "allowed",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 45,
								"contract": "GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol:CryptoMonster",
								"label": "totalSupply_",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_mapping(t_address,t_struct(structUser)24_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct CryptoMonster.structUser)",
								"numberOfBytes": "32",
								"value": "t_struct(structUser)24_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(structUser)24_storage": {
								"encoding": "inplace",
								"label": "struct CryptoMonster.structUser",
								"members": [
									{
										"astId": 19,
										"contract": "GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol:CryptoMonster",
										"label": "login",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 21,
										"contract": "GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol:CryptoMonster",
										"label": "password",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									},
									{
										"astId": 23,
										"contract": "GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol:CryptoMonster",
										"label": "balances",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"GitHub/contract-token-cryptoMonster/shared/lib/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GitHub/contract-token-cryptoMonster/shared/lib/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"GitHub/contract-token-cryptoMonster/shared/lib/IERC20.sol\":{\"keccak256\":\"0xaf036a21cac1b39999f4f57c20939eb30c1c818c3ad3ac99010fcbad0badb5ff\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7f0cbb48bb4360ed1412721ecfbb7c2fb5ccd113b76d993fca357f4c999b7dc2\",\"dweb:/ipfs/QmVsEVBc8wG37chWLLCM3AAdwJBppXqEqUBL3SWGuMqw1m\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol\":72:6543  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol\":72:6543  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203f9acc28189701a85bc9e775c438d9cd51abbcb08f18ad84892e7a4150fe0a6464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203f9acc28189701a85bc9e775c438d9cd51abbcb08f18ad84892e7a4150fe0a6464736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH SWAP11 0xCC 0x28 XOR SWAP8 ADD 0xA8 JUMPDEST 0xC9 0xE7 PUSH22 0xC438D9CD51ABBCB08F18AD84892E7A4150FE0A646473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "72:6471:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203f9acc28189701a85bc9e775c438d9cd51abbcb08f18ad84892e7a4150fe0a6464736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH SWAP11 0xCC 0x28 XOR SWAP8 ADD 0xA8 JUMPDEST 0xC9 0xE7 PUSH22 0xC438D9CD51ABBCB08F18AD84892E7A4150FE0A646473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "72:6471:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 72,
									"end": 6543,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203f9acc28189701a85bc9e775c438d9cd51abbcb08f18ad84892e7a4150fe0a6464736f6c63430008070033",
									".code": [
										{
											"begin": 72,
											"end": 6543,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 72,
											"end": 6543,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 72,
											"end": 6543,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 72,
											"end": 6543,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 72,
											"end": 6543,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 72,
											"end": 6543,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 72,
											"end": 6543,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 6543,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 72,
											"end": 6543,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol\":{\"keccak256\":\"0xf430ff20a1998bdd5fa93c6b9e623cce686a19b73e97f317012b06c01de28661\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7a5ff8e7dfa39317a4fb4bcf89c7adcd32fadf8e2614c9c2d313a84fa65449bd\",\"dweb:/ipfs/Qmf9dYztjw9AZdsMuxW4YBNzE8Z9u2Ke9WBFhzSnbffKy4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol": {
				"ast": {
					"absolutePath": "GitHub/contract-token-cryptoMonster/components/CryptoMonster.sol",
					"exportedSymbols": {
						"CryptoMonster": [
							295
						],
						"IERC20": [
							364
						],
						"SafeMath": [
							691
						]
					},
					"id": 296,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"absolutePath": "GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol",
							"file": "../shared/lib/SafeMath.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 692,
							"src": "72:36:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "GitHub/contract-token-cryptoMonster/shared/lib/IERC20.sol",
							"file": "../shared/lib/IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 365,
							"src": "110:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 364,
										"src": "174:6:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "174:6:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								364
							],
							"name": "CryptoMonster",
							"nameLocation": "157:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 8,
									"libraryName": {
										"id": 6,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 691,
										"src": "195:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "189:27:0",
									"typeName": {
										"id": 7,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "208:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "06fdde03",
									"id": 11,
									"mutability": "constant",
									"name": "name",
									"nameLocation": "377:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "354:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 9,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "354:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "43727970746f4d6f6e73746572",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "384:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_89ac219436a16babcfc919d8ca1835134e6c91424e36f4e24261f1714a498a1b",
											"typeString": "literal_string \"CryptoMonster\""
										},
										"value": "CryptoMonster"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "95d89b41",
									"id": 14,
									"mutability": "constant",
									"name": "symbol",
									"nameLocation": "453:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "430:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 12,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "430:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "434d4f4e",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "462:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_e86e9d249e78803464a390917ee9c0c208ae91b8492ba4f486bfcebff4d0b2a3",
											"typeString": "literal_string \"CMON\""
										},
										"value": "CMON"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "313ce567",
									"id": 17,
									"mutability": "constant",
									"name": "decimals",
									"nameLocation": "532:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "510:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 15,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "510:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3132",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "543:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_12_by_1",
											"typeString": "int_const 12"
										},
										"value": "12"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "CryptoMonster.structUser",
									"id": 24,
									"members": [
										{
											"constant": false,
											"id": 19,
											"mutability": "mutable",
											"name": "login",
											"nameLocation": "760:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 24,
											"src": "753:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 18,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "753:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 21,
											"mutability": "mutable",
											"name": "password",
											"nameLocation": "804:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 24,
											"src": "796:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 20,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "796:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 23,
											"mutability": "mutable",
											"name": "balances",
											"nameLocation": "849:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 24,
											"src": "841:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 22,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "841:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "structUser",
									"nameLocation": "731:10:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "724:159:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 29,
									"mutability": "mutable",
									"name": "structUser_",
									"nameLocation": "921:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "889:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$24_storage_$",
										"typeString": "mapping(address => struct CryptoMonster.structUser)"
									},
									"typeName": {
										"id": 28,
										"keyType": {
											"id": 25,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "898:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "889:31:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$24_storage_$",
											"typeString": "mapping(address => struct CryptoMonster.structUser)"
										},
										"valueType": {
											"id": 27,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 26,
												"name": "structUser",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 24,
												"src": "909:10:0"
											},
											"referencedDeclaration": 24,
											"src": "909:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_structUser_$24_storage_ptr",
												"typeString": "struct CryptoMonster.structUser"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 33,
									"mutability": "mutable",
									"name": "logins",
									"nameLocation": "968:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "941:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
										"typeString": "mapping(address => string)"
									},
									"typeName": {
										"id": 32,
										"keyType": {
											"id": 30,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "949:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "941:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
											"typeString": "mapping(address => string)"
										},
										"valueType": {
											"id": 31,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "960:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 37,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "1077:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "1049:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 36,
										"keyType": {
											"id": 34,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1057:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1049:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 35,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1068:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 43,
									"mutability": "mutable",
									"name": "allowed",
									"nameLocation": "1197:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "1148:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 42,
										"keyType": {
											"id": 38,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1156:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1148:48:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 41,
											"keyType": {
												"id": 39,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1176:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1167:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 40,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1187:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 45,
									"mutability": "mutable",
									"name": "totalSupply_",
									"nameLocation": "1278:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "1270:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 44,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1270:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"functionSelector": "0761c8b9",
									"id": 48,
									"mutability": "constant",
									"name": "tokenPrice_",
									"nameLocation": "1321:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "1297:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 46,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1297:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030303030303030",
										"id": 47,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1335:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000_by_1",
											"typeString": "int_const 1000000000"
										},
										"value": "1000000000"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "1504:85:0",
										"statements": [
											{
												"expression": {
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 53,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "1515:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 54,
														"name": "total",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "1530:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1515:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "1515:20:0"
											},
											{
												"expression": {
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 57,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "1546:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 60,
														"indexExpression": {
															"expression": {
																"id": 58,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1555:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1555:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1546:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 61,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "1569:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1546:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "1546:35:0"
											}
										]
									},
									"id": 65,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "total",
												"nameLocation": "1497:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "1489:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1488:15:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1504:0:0"
									},
									"scope": 295,
									"src": "1477:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "1709:319:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 71,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1872:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1872:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 73,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "1885:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 74,
																	"name": "tokenPrice_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 48,
																	"src": "1895:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1885:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1872:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e65656420746f2073656e6420657861637420616d6f756e74206f6620776569",
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1908:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4051d84e6e5b7b6dd4f339faf4431a8793809c7ef094e92a31341b0d1c457a38",
																"typeString": "literal_string \"Need to send exact amount of wei\""
															},
															"value": "Need to send exact amount of wei"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4051d84e6e5b7b6dd4f339faf4431a8793809c7ef094e92a31341b0d1c457a38",
																"typeString": "literal_string \"Need to send exact amount of wei\""
															}
														],
														"id": 70,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1864:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1864:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "1864:79:0"
											},
											{
												"expression": {
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 80,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "1964:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 83,
														"indexExpression": {
															"expression": {
																"id": 81,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1973:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1973:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1964:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 89,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "2012:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 84,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "1987:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 87,
																"indexExpression": {
																	"expression": {
																		"id": 85,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1996:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 86,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1996:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1987:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 549,
															"src": "1987:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1987:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1964:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "1964:56:0"
											}
										]
									},
									"functionSelector": "d96a094a",
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buy",
									"nameLocation": "1671:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1683:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1675:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1675:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1674:17:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1709:0:0"
									},
									"scope": 295,
									"src": "1662:366:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										302
									],
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2292:38:0",
										"statements": [
											{
												"expression": {
													"id": 100,
													"name": "totalSupply_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 45,
													"src": "2310:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 99,
												"id": 101,
												"nodeType": "Return",
												"src": "2303:19:0"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2239:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 96,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2260:8:0"
									},
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2250:2:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2283:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2283:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2282:9:0"
									},
									"scope": 295,
									"src": "2230:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										309
									],
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "2619:47:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 111,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "2637:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 113,
													"indexExpression": {
														"id": 112,
														"name": "_tokenOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "2646:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2637:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 110,
												"id": 114,
												"nodeType": "Return",
												"src": "2630:28:0"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2549:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 107,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2587:8:0"
									},
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "_tokenOwner",
												"nameLocation": "2567:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2559:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:21:0"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2610:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2610:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2609:9:0"
									},
									"scope": 295,
									"src": "2540:126:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										327
									],
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "3177:543:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 127,
																"name": "_numTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 120,
																"src": "3196:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 128,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "3210:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 131,
																"indexExpression": {
																	"expression": {
																		"id": 129,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3219:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3219:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3210:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3196:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 126,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3188:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3188:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3188:43:0"
											},
											{
												"expression": {
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 135,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "3296:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 138,
														"indexExpression": {
															"expression": {
																"id": 136,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3305:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3305:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3296:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 144,
																"name": "_numTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 120,
																"src": "3344:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 139,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "3319:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 142,
																"indexExpression": {
																	"expression": {
																		"id": 140,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3328:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3328:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3319:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 570,
															"src": "3319:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3319:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3296:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "3296:59:0"
											},
											{
												"expression": {
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 148,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "3418:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 150,
														"indexExpression": {
															"id": 149,
															"name": "_receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "3427:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3418:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 155,
																"name": "_numTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 120,
																"src": "3464:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 151,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "3440:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 153,
																"indexExpression": {
																	"id": 152,
																	"name": "_receiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "3449:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3440:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 549,
															"src": "3440:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3440:35:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3418:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 158,
												"nodeType": "ExpressionStatement",
												"src": "3418:57:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 160,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3562:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3562:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 162,
															"name": "_receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "3574:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 163,
															"name": "_numTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 120,
															"src": "3585:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 159,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "3553:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3553:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 165,
												"nodeType": "EmitStatement",
												"src": "3548:48:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3708:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 125,
												"id": 167,
												"nodeType": "Return",
												"src": "3701:11:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3098:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 122,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3153:8:0"
									},
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "_receiver",
												"nameLocation": "3115:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "3107:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3107:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "_numTokens",
												"nameLocation": "3134:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "3126:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3126:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3106:39:0"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "3171:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 123,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3171:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3170:6:0"
									},
									"scope": 295,
									"src": "3089:631:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										347
									],
									"body": {
										"id": 247,
										"nodeType": "Block",
										"src": "4158:690:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 182,
																"name": "_numTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 175,
																"src": "4177:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 183,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "4191:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 185,
																"indexExpression": {
																	"id": 184,
																	"name": "_owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 171,
																	"src": "4200:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4191:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4177:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4169:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4169:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "4169:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 190,
																"name": "_numTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 175,
																"src": "4275:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 191,
																		"name": "allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 43,
																		"src": "4289:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 193,
																	"indexExpression": {
																		"id": 192,
																		"name": "_owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 171,
																		"src": "4297:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4289:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 196,
																"indexExpression": {
																	"expression": {
																		"id": 194,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4305:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4305:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4289:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4275:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4267:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4267:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 199,
												"nodeType": "ExpressionStatement",
												"src": "4267:50:0"
											},
											{
												"expression": {
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 200,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "4367:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 202,
														"indexExpression": {
															"id": 201,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "4376:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4367:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 207,
																"name": "_numTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 175,
																"src": "4407:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 203,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "4386:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 205,
																"indexExpression": {
																	"id": 204,
																	"name": "_owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 171,
																	"src": "4395:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4386:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 570,
															"src": "4386:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4386:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4367:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "4367:51:0"
											},
											{
												"expression": {
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 211,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "4501:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 215,
															"indexExpression": {
																"id": 212,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 171,
																"src": "4509:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4501:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 216,
														"indexExpression": {
															"expression": {
																"id": 213,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4517:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4517:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4501:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 224,
																"name": "_numTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 175,
																"src": "4563:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 217,
																		"name": "allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 43,
																		"src": "4531:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 219,
																	"indexExpression": {
																		"id": 218,
																		"name": "_owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 171,
																		"src": "4539:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4531:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 222,
																"indexExpression": {
																	"expression": {
																		"id": 220,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4547:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4547:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4531:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 570,
															"src": "4531:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 225,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4531:43:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4501:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 227,
												"nodeType": "ExpressionStatement",
												"src": "4501:73:0"
											},
											{
												"expression": {
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 228,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "4635:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 230,
														"indexExpression": {
															"id": 229,
															"name": "_buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "4644:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4635:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 235,
																"name": "_numTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 175,
																"src": "4675:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 231,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "4654:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 233,
																"indexExpression": {
																	"id": 232,
																	"name": "_buyer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 173,
																	"src": "4663:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4654:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 549,
															"src": "4654:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4654:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4635:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 238,
												"nodeType": "ExpressionStatement",
												"src": "4635:51:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 240,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "4791:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 241,
															"name": "_buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "4799:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 242,
															"name": "_numTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "4807:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 239,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "4782:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4782:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "EmitStatement",
												"src": "4777:41:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4836:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 180,
												"id": 246,
												"nodeType": "Return",
												"src": "4829:11:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4062:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 177,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4134:8:0"
									},
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "4083:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "4075:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4075:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "_buyer",
												"nameLocation": "4099:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "4091:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4091:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "_numTokens",
												"nameLocation": "4115:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "4107:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4107:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4074:52:0"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "4152:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 178,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4152:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4151:6:0"
									},
									"scope": 295,
									"src": "4053:795:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										336
									],
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "5271:287:0",
										"statements": [
											{
												"expression": {
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 258,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "5282:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 262,
															"indexExpression": {
																"expression": {
																	"id": 259,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5290:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5290:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5282:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 263,
														"indexExpression": {
															"id": 261,
															"name": "_delegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "5302:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5282:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 264,
														"name": "_numTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "5315:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5282:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 266,
												"nodeType": "ExpressionStatement",
												"src": "5282:43:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 268,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5491:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5491:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 270,
															"name": "_delegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "5503:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 271,
															"name": "_numTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "5514:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 267,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "5482:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5482:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 273,
												"nodeType": "EmitStatement",
												"src": "5477:48:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5546:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 257,
												"id": 275,
												"nodeType": "Return",
												"src": "5539:11:0"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5193:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 254,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5247:8:0"
									},
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "_delegate",
												"nameLocation": "5209:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "5201:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5201:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "_numTokens",
												"nameLocation": "5228:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "5220:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5220:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5200:39:0"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "5265:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 255,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5265:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5264:6:0"
									},
									"scope": 295,
									"src": "5184:374:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										318
									],
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "5930:52:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 287,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "5948:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 289,
														"indexExpression": {
															"id": 288,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "5956:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5948:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 291,
													"indexExpression": {
														"id": 290,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "5964:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5948:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 286,
												"id": 292,
												"nodeType": "Return",
												"src": "5941:33:0"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "5849:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 283,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5901:8:0"
									},
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "5867:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "5859:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5859:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "_delegate",
												"nameLocation": "5883:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "5875:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5875:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5858:35:0"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "5924:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5924:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5923:6:0"
									},
									"scope": 295,
									"src": "5840:142:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 296,
							"src": "148:5837:0",
							"usedErrors": []
						}
					],
					"src": "37:5948:0"
				},
				"id": 0
			},
			"GitHub/contract-token-cryptoMonster/shared/lib/IERC20.sol": {
				"ast": {
					"absolutePath": "GitHub/contract-token-cryptoMonster/shared/lib/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							364
						]
					},
					"id": 365,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 364,
							"linearizedBaseContracts": [
								364
							],
							"name": "IERC20",
							"nameLocation": "82:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "105:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "116:2:1"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "142:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "142:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "141:9:1"
									},
									"scope": 364,
									"src": "96:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 309,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "266:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "284:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "276:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "276:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "275:18:1"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "317:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "317:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "316:9:1"
									},
									"scope": 364,
									"src": "257:69:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "453:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "471:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "463:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "463:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "487:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "479:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "479:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "462:34:1"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "520:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "519:9:1"
									},
									"scope": 364,
									"src": "444:85:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "714:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "731:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "723:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "723:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "744:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "736:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "736:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:30:1"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "771:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "771:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "770:6:1"
									},
									"scope": 364,
									"src": "705:72:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 336,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "901:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "917:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "909:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "909:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "935:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "927:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "927:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "908:35:1"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "962:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 333,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "962:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:6:1"
									},
									"scope": 364,
									"src": "892:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1132:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1153:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1145:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "1166:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1158:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1158:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1181:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1173:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1173:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:45:1"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1208:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1208:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1207:6:1"
									},
									"scope": 364,
									"src": "1123:91:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 355,
									"name": "Transfer",
									"nameLocation": "1356:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "1381:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1365:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1365:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"indexed": true,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1404:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1388:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1388:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "1417:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1409:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1364:60:1"
									},
									"src": "1350:75:1"
								},
								{
									"anonymous": false,
									"id": 363,
									"name": "Approval",
									"nameLocation": "1608:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"indexed": true,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1633:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1617:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1617:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"indexed": true,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "1657:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1641:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "1675:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1667:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1667:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1616:66:1"
									},
									"src": "1602:81:1"
								}
							],
							"scope": 365,
							"src": "72:1753:1",
							"usedErrors": []
						}
					],
					"src": "37:1788:1"
				},
				"id": 1
			},
			"GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol": {
				"ast": {
					"absolutePath": "GitHub/contract-token-cryptoMonster/shared/lib/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							691
						]
					},
					"id": 692,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 366,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 691,
							"linearizedBaseContracts": [
								691
							],
							"name": "SafeMath",
							"nameLocation": "80:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "313:146:2",
										"statements": [
											{
												"id": 396,
												"nodeType": "UncheckedBlock",
												"src": "324:128:2",
												"statements": [
													{
														"assignments": [
															379
														],
														"declarations": [
															{
																"constant": false,
																"id": 379,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "357:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 396,
																"src": "349:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 378,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "349:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 383,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 380,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "361:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 381,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "365:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "361:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "349:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 384,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 379,
																"src": "385:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 385,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "389:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "385:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 391,
														"nodeType": "IfStatement",
														"src": "381:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "400:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "407:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 389,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "399:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 377,
															"id": 390,
															"nodeType": "Return",
															"src": "392:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "432:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 393,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "438:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 394,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "431:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 377,
														"id": 395,
														"nodeType": "Return",
														"src": "424:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "96:135:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "246:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "261:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "253:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "253:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "272:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "264:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "264:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "252:22:2"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "298:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 373,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "298:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "304:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "304:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "297:15:2"
									},
									"scope": 691,
									"src": "237:222:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "687:118:2",
										"statements": [
											{
												"id": 424,
												"nodeType": "UncheckedBlock",
												"src": "698:100:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 410,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "727:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 411,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "731:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "727:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 417,
														"nodeType": "IfStatement",
														"src": "723:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "742:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "749:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 415,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "741:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 409,
															"id": 416,
															"nodeType": "Return",
															"src": "734:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "774:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 419,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 401,
																		"src": "780:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 420,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 403,
																		"src": "784:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "780:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 422,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "773:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 409,
														"id": 423,
														"nodeType": "Return",
														"src": "766:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "467:138:2",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "620:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "635:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "627:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "646:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "638:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "638:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "626:22:2"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "672:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "672:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "678:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "671:15:2"
									},
									"scope": 691,
									"src": "611:194:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "1036:427:2",
										"statements": [
											{
												"id": 466,
												"nodeType": "UncheckedBlock",
												"src": "1047:409:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 438,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "1309:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1314:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1309:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 445,
														"nodeType": "IfStatement",
														"src": "1305:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1325:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1331:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 443,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1324:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 437,
															"id": 444,
															"nodeType": "Return",
															"src": "1317:16:2"
														}
													},
													{
														"assignments": [
															447
														],
														"declarations": [
															{
																"constant": false,
																"id": 447,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1356:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 466,
																"src": "1348:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 446,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1348:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 451,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 448,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "1360:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 449,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "1364:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1360:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1348:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 452,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 447,
																	"src": "1384:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 453,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 429,
																	"src": "1388:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1384:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 455,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "1393:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1384:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 461,
														"nodeType": "IfStatement",
														"src": "1380:33:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1404:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1411:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 459,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1403:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 437,
															"id": 460,
															"nodeType": "Return",
															"src": "1396:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1436:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 463,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 447,
																	"src": "1442:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 464,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1435:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 437,
														"id": 465,
														"nodeType": "Return",
														"src": "1428:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "813:141:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "969:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "984:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "976:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "995:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "987:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:22:2"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "1021:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1021:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "1027:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1020:15:2"
									},
									"scope": 691,
									"src": "960:503:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "1695:119:2",
										"statements": [
											{
												"id": 494,
												"nodeType": "UncheckedBlock",
												"src": "1706:101:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 480,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 473,
																"src": "1735:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 481,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1740:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1735:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 487,
														"nodeType": "IfStatement",
														"src": "1731:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1751:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1758:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 485,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1750:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 479,
															"id": 486,
															"nodeType": "Return",
															"src": "1743:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1783:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 489,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 471,
																		"src": "1789:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 490,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 473,
																		"src": "1793:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1789:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 492,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1782:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 479,
														"id": 493,
														"nodeType": "Return",
														"src": "1775:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "1471:142:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1628:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1643:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "1635:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1635:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1654:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "1646:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1646:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1634:22:2"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "1680:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 475,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1680:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "1686:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1679:15:2"
									},
									"scope": 691,
									"src": "1619:195:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "2056:119:2",
										"statements": [
											{
												"id": 522,
												"nodeType": "UncheckedBlock",
												"src": "2067:101:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 508,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 501,
																"src": "2096:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2101:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2096:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 515,
														"nodeType": "IfStatement",
														"src": "2092:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2112:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2119:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 513,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2111:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 507,
															"id": 514,
															"nodeType": "Return",
															"src": "2104:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2144:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 517,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 499,
																		"src": "2150:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 518,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 501,
																		"src": "2154:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2150:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 520,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2143:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 507,
														"id": 521,
														"nodeType": "Return",
														"src": "2136:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "1822:152:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "1989:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2004:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1996:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2015:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "2007:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2007:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:22:2"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "2041:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 503,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2041:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "2047:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2047:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2040:15:2"
									},
									"scope": 691,
									"src": "1980:195:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "2489:74:2",
										"statements": [
											{
												"assignments": [
													535
												],
												"declarations": [
													{
														"constant": false,
														"id": 535,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2506:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "2498:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 534,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2498:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 539,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 536,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "2510:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 537,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "2514:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2510:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2498:17:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 541,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "2531:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 542,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 527,
																"src": "2536:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2531:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 540,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "2524:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2524:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 545,
												"nodeType": "ExpressionStatement",
												"src": "2524:14:2"
											},
											{
												"expression": {
													"id": 546,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 535,
													"src": "2554:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 533,
												"id": 547,
												"nodeType": "Return",
												"src": "2547:8:2"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "2183:233:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2431:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2443:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "2435:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2435:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2454:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "2446:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2434:22:2"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "2480:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2480:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:9:2"
									},
									"scope": 691,
									"src": "2422:141:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "2913:52:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 560,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 554,
																"src": "2929:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 561,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 552,
																"src": "2934:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2929:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 559,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "2922:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2922:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 564,
												"nodeType": "ExpressionStatement",
												"src": "2922:14:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 565,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "2952:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 566,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "2956:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2952:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 558,
												"id": 568,
												"nodeType": "Return",
												"src": "2945:12:2"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "2571:269:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "2855:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2867:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "2859:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2859:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2878:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "2870:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2858:22:2"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "2904:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2904:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2903:9:2"
									},
									"scope": 691,
									"src": "2846:119:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "3291:31:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 580,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "3309:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 581,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "3313:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3309:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 579,
												"id": 583,
												"nodeType": "Return",
												"src": "3302:12:2"
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "2973:245:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3233:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3245:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "3237:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3256:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "3248:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3248:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:22:2"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "3282:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3282:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3281:9:2"
									},
									"scope": 691,
									"src": "3224:98:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "3690:31:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 595,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "3708:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 596,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "3712:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3708:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 594,
												"id": 598,
												"nodeType": "Return",
												"src": "3701:12:2"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "3330:287:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3632:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3644:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "3636:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3636:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3655:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "3647:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3647:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3635:22:2"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "3681:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3681:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3680:9:2"
									},
									"scope": 691,
									"src": "3623:98:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "4255:31:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 610,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "4273:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 611,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 605,
														"src": "4277:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4273:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 609,
												"id": 613,
												"nodeType": "Return",
												"src": "4266:12:2"
											}
										]
									},
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "3729:453:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4197:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4209:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4201:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4201:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4220:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4212:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4212:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4200:22:2"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4246:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4246:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4245:9:2"
									},
									"scope": 691,
									"src": "4188:98:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "4858:111:2",
										"statements": [
											{
												"id": 638,
												"nodeType": "UncheckedBlock",
												"src": "4869:93:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 628,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 620,
																		"src": "4902:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 629,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 618,
																		"src": "4907:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4902:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 631,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "4910:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 627,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "4894:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4894:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 633,
														"nodeType": "ExpressionStatement",
														"src": "4894:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 634,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 618,
																"src": "4945:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 635,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 620,
																"src": "4949:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4945:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 626,
														"id": 637,
														"nodeType": "Return",
														"src": "4938:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "4294:465:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4774:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4786:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "4778:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4778:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4796:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "4788:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4788:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4812:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "4798:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 621,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4798:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4777:48:2"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "4849:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4849:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4848:9:2"
									},
									"scope": 691,
									"src": "4765:204:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "5562:110:2",
										"statements": [
											{
												"id": 663,
												"nodeType": "UncheckedBlock",
												"src": "5573:92:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 653,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 645,
																		"src": "5606:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5610:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5606:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 656,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "5613:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 652,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5598:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5598:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 658,
														"nodeType": "ExpressionStatement",
														"src": "5598:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 659,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 643,
																"src": "5648:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 660,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 645,
																"src": "5652:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5648:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 651,
														"id": 662,
														"nodeType": "Return",
														"src": "5641:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "4977:484:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5476:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5488:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5480:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5480:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5499:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5491:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5491:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5516:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5502:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 646,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5502:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5479:50:2"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "5553:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5553:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5552:9:2"
									},
									"scope": 691,
									"src": "5467:205:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "6430:110:2",
										"statements": [
											{
												"id": 688,
												"nodeType": "UncheckedBlock",
												"src": "6441:92:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 678,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 670,
																		"src": "6474:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6478:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6474:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 681,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "6481:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 677,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6466:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6466:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 683,
														"nodeType": "ExpressionStatement",
														"src": "6466:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 684,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 668,
																"src": "6516:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 685,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 670,
																"src": "6520:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6516:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 676,
														"id": 687,
														"nodeType": "Return",
														"src": "6509:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "5680:649:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6344:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6356:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "6348:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6348:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6367:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "6359:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6359:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6384:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "6370:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 671,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6370:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6347:50:2"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "6421:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6421:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6420:9:2"
									},
									"scope": 691,
									"src": "6335:205:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 692,
							"src": "72:6471:2",
							"usedErrors": []
						}
					],
					"src": "37:6506:2"
				},
				"id": 2
			}
		}
	}
}