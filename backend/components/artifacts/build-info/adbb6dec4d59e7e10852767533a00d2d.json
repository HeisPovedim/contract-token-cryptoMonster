{
	"id": "adbb6dec4d59e7e10852767533a00d2d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\n// HELLPERS && LIB\r\nimport \"../shared/lib/SafeMath.sol\";     // библиотека безопасного перевод средств\r\nimport \"../shared/lib/IERC20.sol\";       // стандарт IERC20\r\n\r\n// COMPONENT\r\nimport \"./main.sol\";\r\nimport \"./PhaseSeed.sol\";\r\nimport \"./PhasePrivate.sol\";\r\n\r\ncontract CryptoMonster is IERC20, Main, PhaseSeed, PhasePrivate {\r\n    using SafeMath for uint256; // библиотека безопасных вычислений\r\n\r\n    // COMMENT: Общие сведения по токену.\r\n    string public constant name = \"CryptoMonster\"; // название токена\r\n    string public constant symbol = \"CMON\";        // тикер токена\r\n    uint8 public constant decimals = 12;           // 1 000 000 000 000 == 1 CMON ; конвертация eth в wei: https://eth-converter.com/\r\n\r\n    mapping(address => mapping (address => uint256)) allowed; // делегированные пользоатели\r\n\r\n    uint256 totalSupply_;                    // общее кол-во токенов при старте системы\r\n    uint256 public tokenPrice_ = 1000000000; // 1 токен за 0.00075 ETH => 750000000; 0.001ETH => 1000000000 WEI | ЗНАЧЕНИЕ УКАЗЫВАЕТСЯ В WEI\r\n\r\n    // COMMENT: Набор начальных системных пользователей.\r\n    address constant ownerAdr = 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4;           // ВЛАДЕЛЕЦ\r\n    address constant privateProviderAdr = 0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2; // PRIVATE ПРОВАЙДЕР\r\n    address constant publicProviderAdr = 0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2;  // PUBLIC ПРОВАЙДЕР\r\n\r\n    constructor(uint256 total) {\r\n        totalSupply_ = total; // кол-во токенов при старте\r\n\r\n        structUsers_[ownerAdr] = structUser(Role.SYSTEM_OWNER ,\"owner\", get_keccak256(\"3412\"), totalSupply_, 0, 0, 0);             // владелец \r\n        structUsers_[privateProviderAdr] = structUser(Role.SYSTEM_PRIVATE, \"Private provider\", get_keccak256(\"1423\"), 0, 0, 0, 0); // private провайдер\r\n        allowed[ownerAdr][privateProviderAdr] = totalSupply_;                                                                      // делегирование PRIVATE ПРОВАЙДЕРА\r\n        structPhases_[privateProviderAdr].statusPhase = false;                                                                     // присвоение статуса фазы\r\n        structUsers_[publicProviderAdr] = structUser(Role.SYSTEM_PUBLIC, \"Public provider\", get_keccak256(\"2314\"), 0, 0, 0, 0);    // public провайдер\r\n        allowed[ownerAdr][publicProviderAdr] = totalSupply_;                                                                       // делегирование PUBLIC ПРОВАЙДЕРА\r\n        structPhases_[publicProviderAdr].statusPhase = false;                                                                      // присвоение статуса фазы\r\n\r\n        // COMMENT: Перечесление средств инвесторам.\r\n        transfer(investorFirstAdr, 600000);  // Investor1\r\n        transfer(investorSecondAdr, 800000); // Investor2\r\n        transfer(bestFriendAdr, 400000);     // Best friend\r\n    }\r\n\r\n    // COMMENT_FUNC: Функция покупки токена\r\n    function buy(uint256 _amount) external payable {\r\n        // например: покупатель хочет 1 токенов, для этого он должен отправить 5 вэй\r\n        require(msg.value == _amount * tokenPrice_, \"Need to send exact amount of wei\");\r\n        require(structPhases_[privateProviderAdr].statusPhase == false && structPhases_[publicProviderAdr].statusPhase == false, \"During the seed phase, the transfer of tokens is prohibited\");\r\n        if (structPhases_[privateProviderAdr].statusPhase == true) {\r\n            structUsers_[msg.sender].balance_private = structUsers_[msg.sender].balance_private.add(_amount);\r\n        } else if (structPhases_[publicProviderAdr].statusPhase == true) {\r\n            structUsers_[msg.sender].balance_public = structUsers_[msg.sender].balance_public.add(_amount);\r\n        }\r\n    }\r\n\r\n    // COMMENT_FUNC: Функция вернет количество всех токенов, выделенных этим контрактом, независимо от владельца.\r\n    function totalSupply() public override view returns (uint256) {\r\n        return totalSupply_;\r\n    }\r\n\r\n    // COMMENT_FUNC: Функция вернет текущий баланс токена учетной записи, идентифицированный по адресу его владельца.\r\n    function balanceOf(address _tokenOwner) public override view returns (uint256) {\r\n        if(structPhases_[privateProviderAdr].statusPhase == false && structPhases_[publicProviderAdr].statusPhase == false) { // !: if фаза SEED\r\n            return structUsers_[_tokenOwner].balance_seed;\r\n        } else if (structPhases_[privateProviderAdr].statusPhase == true) {                                                   // !: if фаза PRIVATE\r\n            return structUsers_[_tokenOwner].balance_private;\r\n        } else if (structPhases_[publicProviderAdr].statusPhase == true) {                                                    // !: if фаза PUBLIC\r\n            return structUsers_[_tokenOwner].balance_public;\r\n        } else return 0;\r\n    }\r\n\r\n    // COMMENT_FUNC: Функция перевода используется для перемещения количества токенов _numTokens с баланса владельца\r\n    // на баланс другого пользователя или получателя. Передающий владелец — msg.sender, \r\n    // то есть тот, кто выполняет функцию.\r\n    function transfer(address _receiver, uint256 _numTokens) public override returns (bool) {\r\n        if (validatePhase(\"seed\", privateProviderAdr, publicProviderAdr) == true)  {                             // !: if фаза SEED\r\n            if (validateOwner() == true) {                                                                         // !: if пользователь админ\r\n                require(_numTokens <= structUsers_[msg.sender].balance_overall);                                     // !: проверка на переполнение баланса владельца\r\n                require (structUsers_[msg.sender].role == Role.INVESTOR, \"Your not investor\");                       // !: проверка того, что msg.sender является инвестором\r\n                require (structUsers_[_receiver].role == Role.INVESTOR, \"Your not investor\");                        // !: проверка того, что msg.sender является инвестором\r\n\r\n                structUsers_[msg.sender].balance_overall = structUsers_[msg.sender].balance_overall.sub(_numTokens); // ?: снятие токенов с баланса владельца\r\n                structUsers_[_receiver].balance_seed = structUsers_[_receiver].balance_seed.add(_numTokens);         // ?: начисление токенов на баланс SEED\r\n                emit Transfer(msg.sender, _receiver, _numTokens);                                                    // ?: оповещение об успешной операции перевода\r\n                return true;\r\n            } else {                                                                                               // !: if пользователь не админ\r\n                require(_numTokens <= structUsers_[msg.sender].balance_seed);                                        // !: проверка на переполнение баланса владельца\r\n                require (structUsers_[msg.sender].role == Role.INVESTOR, \"Your not investor\");                       // !: проверка того, что msg.sender является инвестором\r\n                require (structUsers_[_receiver].role == Role.INVESTOR, \"Your not investor\");                        // !: проверка того, что msg.sender является инвестором\r\n\r\n                structUsers_[msg.sender].balance_seed = structUsers_[msg.sender].balance_seed.sub(_numTokens);       // ?: снятие токенов с баланса владельца\r\n                structUsers_[_receiver].balance_seed = structUsers_[_receiver].balance_seed.add(_numTokens);         // ?: начисление токенов на баланс SEED\r\n                emit Transfer(msg.sender, _receiver, _numTokens);                                                    // ?: оповещение об успешной операции перевода\r\n                return true;\r\n            }\r\n        } else if (validatePhase(\"private\", privateProviderAdr, publicProviderAdr) == true) {                    // !: if фаза PRIVATE\r\n            if (validateOwner() == true) {                                                                         // !: if пользователь админ\r\n                require(_numTokens <= structUsers_[msg.sender].balance_overall);                                     // !: проверка на переполнение баланса владельца\r\n\r\n                structUsers_[msg.sender].balance_overall = structUsers_[msg.sender].balance_overall.sub(_numTokens); // ?: снятие токенов с баланса владельца\r\n                structUsers_[_receiver].balance_private = structUsers_[_receiver].balance_private.add(_numTokens);   // ?: начисление токенов на баланс PRIVATE\r\n                emit Transfer(msg.sender, _receiver, _numTokens);                                                    // ?: оповещение об успешной операции перевода\r\n                return true;\r\n            } else {                                                                                               // !: if пользователь не админ\r\n                require(_numTokens <= structUsers_[msg.sender].balance_private);                                     // !: проверка на переполнение баланса владельца\r\n\r\n                structUsers_[msg.sender].balance_private = structUsers_[msg.sender].balance_private.sub(_numTokens); // ?: снятие токенов с баланса владельца\r\n                structUsers_[_receiver].balance_private = structUsers_[_receiver].balance_private.add(_numTokens);   // ?: начисление токенов на баланс PRIVATE\r\n                emit Transfer(msg.sender, _receiver, _numTokens);                                                    // ?: оповещение об успешной операции перевода\r\n                return true;\r\n            }\r\n        } else if (validatePhase(\"public\", privateProviderAdr, publicProviderAdr) == true) {                     // !: if фаза PUBLIC\r\n            if (validateOwner() == true) {                                                                         // !: if пользователь админ\r\n                require(_numTokens <= structUsers_[msg.sender].balance_overall);                                     // !: проверка на переполнение баланса владельца\r\n\r\n                structUsers_[msg.sender].balance_overall = structUsers_[msg.sender].balance_overall.sub(_numTokens); // ?: снятие токенов с баланса владельца\r\n                structUsers_[_receiver].balance_public = structUsers_[_receiver].balance_public.add(_numTokens);     // ?: начисление токенов на баланс PUBLIC\r\n                emit Transfer(msg.sender, _receiver, _numTokens);                                                    // ?: оповещение об успешной операции перевода\r\n                return true;\r\n            } else {                                                                                               // !: if пользователь не админ\r\n                require(_numTokens <= structUsers_[msg.sender].balance_public);                                      // !: проверка на переполнение баланса владельца\r\n\r\n                structUsers_[msg.sender].balance_public = structUsers_[msg.sender].balance_public.sub(_numTokens);   // ?: снятие токенов с баланса владельца\r\n                structUsers_[_receiver].balance_public = structUsers_[_receiver].balance_public.add(_numTokens);     // ?: начисление токенов на баланс PUBLIC\r\n                emit Transfer(msg.sender, _receiver, _numTokens);                                                    // ?: оповещение об успешной операции перевода\r\n                return true;\r\n            }\r\n        } else return false;\r\n    }\r\n\r\n    // COMMENT_FUNC: Функция TransferFrom является аналогом функции утверждения. Это позволяет делегату,\r\n    // одобренному для снятия средств, переводить средства владельца на сторонний счет.\r\n    function transferFrom(address _owner, address _buyer, uint256 _numTokens) public override returns (bool) {\r\n        if (validatePhase(\"seed\", privateProviderAdr, publicProviderAdr) == true)  {                   // !: if фаза SEED\r\n            if (validateOwner() == true) {                                                             // !: if пользователь является ownder'ом\r\n                require(_numTokens <= structUsers_[_owner].balance_overall);                           // ?: проверка баланса\r\n                require(_numTokens <= allowed[_owner][msg.sender]);                                    // ?: проверка баланса\r\n\r\n                structUsers_[_owner].balance_seed = structUsers_[_owner].balance_seed.sub(_numTokens); // ?: снятие токенов с баланса\r\n                allowed[_owner][msg.sender] = allowed[_owner][msg.sender].sub(_numTokens);             // ?: снятие токенов с баланса\r\n                structUsers_[_buyer].balance_seed = structUsers_[_buyer].balance_seed.add(_numTokens); // ?: начисление токенов на баланс\r\n                emit Transfer(_owner, _buyer, _numTokens);\r\n                return true;\r\n            } else {\r\n                require(_numTokens <= structUsers_[_owner].balance_seed);                              // ?: проверка баланса\r\n                require(_numTokens <= allowed[_owner][msg.sender]);                                    // ?: проверка баланса\r\n\r\n                structUsers_[_owner].balance_seed = structUsers_[_owner].balance_seed.sub(_numTokens); // ?: снятие токенов с баланса\r\n                allowed[_owner][msg.sender] = allowed[_owner][msg.sender].sub(_numTokens);             // ?: снятие токенов с баланса\r\n                structUsers_[_buyer].balance_seed = structUsers_[_buyer].balance_seed.add(_numTokens); // ?: начисление токенов на баланс\r\n                emit Transfer(_owner, _buyer, _numTokens);\r\n                return true;\r\n            }\r\n        } else if (validatePhase(\"private\", privateProviderAdr, publicProviderAdr) == true) {     \r\n            if (validateOwner() == true) {                                                             // !: if пользователь является ownder'ом\r\n                require(_numTokens <= structUsers_[_owner].balance_overall);                           // ?: проверка баланса\r\n                require(_numTokens <= allowed[_owner][msg.sender]);                                    // ?: проверка баланса\r\n\r\n                structUsers_[_owner].balance_seed = structUsers_[_owner].balance_seed.sub(_numTokens); // ?: снятие токенов с баланса\r\n                allowed[_owner][msg.sender] = allowed[_owner][msg.sender].sub(_numTokens);             // ?: снятие токенов с баланса\r\n                structUsers_[_buyer].balance_seed = structUsers_[_buyer].balance_seed.add(_numTokens); // ?: начисление токенов на баланс\r\n                emit Transfer(_owner, _buyer, _numTokens);\r\n                return true;\r\n            } else {\r\n                require(_numTokens <= structUsers_[_owner].balance_private);                              // ?: проверка баланса\r\n                require(_numTokens <= allowed[_owner][msg.sender]);                                    // ?: проверка баланса\r\n\r\n                structUsers_[_owner].balance_private = structUsers_[_owner].balance_private.sub(_numTokens); // ?: снятие токенов с баланса\r\n                allowed[_owner][msg.sender] = allowed[_owner][msg.sender].sub(_numTokens);             // ?: снятие токенов с баланса\r\n                structUsers_[_buyer].balance_private = structUsers_[_buyer].balance_private.add(_numTokens); // ?: начисление токенов на баланс\r\n                emit Transfer(_owner, _buyer, _numTokens);\r\n                return true;\r\n            }\r\n        } else if (validatePhase(\"public\", privateProviderAdr, publicProviderAdr) == true) { \r\n            if (validateOwner() == true) {                                                             // !: if пользователь является ownder'ом\r\n                require(_numTokens <= structUsers_[_owner].balance_overall);                           // ?: проверка баланса\r\n                require(_numTokens <= allowed[_owner][msg.sender]);                                    // ?: проверка баланса\r\n\r\n                structUsers_[_owner].balance_seed = structUsers_[_owner].balance_seed.sub(_numTokens); // ?: снятие токенов с баланса\r\n                allowed[_owner][msg.sender] = allowed[_owner][msg.sender].sub(_numTokens);             // ?: снятие токенов с баланса\r\n                structUsers_[_buyer].balance_seed = structUsers_[_buyer].balance_seed.add(_numTokens); // ?: начисление токенов на баланс\r\n                emit Transfer(_owner, _buyer, _numTokens);\r\n                return true;\r\n            } else {\r\n                require(_numTokens <= structUsers_[_owner].balance_public);                              // ?: проверка баланса\r\n                require(_numTokens <= allowed[_owner][msg.sender]);                                    // ?: проверка баланса\r\n\r\n                structUsers_[_owner].balance_public = structUsers_[_owner].balance_public.sub(_numTokens); // ?: снятие токенов с баланса\r\n                allowed[_owner][msg.sender] = allowed[_owner][msg.sender].sub(_numTokens);             // ?: снятие токенов с баланса\r\n                structUsers_[_buyer].balance_public = structUsers_[_buyer].balance_public.add(_numTokens); // ?: начисление токенов на баланс\r\n                emit Transfer(_owner, _buyer, _numTokens);\r\n                return true;\r\n            }\r\n        } else return false;\r\n    }\r\n\r\n    // COMMENT_FUNC: Функция позволяет владельцу, т. е. msg.sender одобрить делегированную учетную запись\r\n    // для снятия токенов со своей учетной записи и передачи их на другие учетные записи.\r\n    function approve(address _delegate, uint256 _numTokens) public override returns (bool) {\r\n        allowed[msg.sender][_delegate] = _numTokens;      // установка разрешенной суммы для снятие токенов с определенного АДРЕСА\r\n        emit Approval(msg.sender, _delegate, _numTokens);\r\n        return true;\r\n    }\r\n\r\n    // COMMENT_FUNC: Функци возвращает текущее утвержденное количество токенов владельцем\r\n    // конкретному делегату, как установлено в функции утверждения.\r\n    function allowance(address _owner, address _delegate) public override view returns (uint) {\r\n        return allowed[_owner][_delegate];\r\n    }\r\n}"
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nimport \"./main.sol\";\r\n\r\ncontract PhasePrivate is Main {\r\n    // COMMENT_FUNC: Функция подачи заявок пользователей.\r\n    function application(string memory _name, string memory _contactForCommunication, address _userAdr) public {\r\n        require(strucApplications_[msg.sender].exist == true, \"Application already sent!\");                               // проверка на существование заявки\r\n        strucApplications_[msg.sender]  = structApplication(_name, _contactForCommunication, _userAdr, true, false, true);\r\n    }\r\n\r\n    // COMMENT_FUNC: Функция принятия заявки.\r\n    function acceptApplication (bool _changeStatus) public {\r\n        require(structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"You are not a private provider!\");\r\n\r\n    }\r\n}"
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nimport \"./main.sol\";\r\n\r\n// @: Конструкция SEED раунда.\r\ncontract PhaseSeed is Main {\r\n    address investorFirstAdr = 0x78731D3Ca6b7E34aC0F824c42a7cC18A495cabaB;  // Investor1\r\n    address investorSecondAdr = 0x617F2E2fD72FD9D5503197092aC168c91465E7f2; // Investor2\r\n    address bestFriendAdr = 0x17F6AD8Ef982297579C203069C1DbfFE4348c372;     // Best friend\r\n    // COMMENT: Набор начальных пользователей.\r\n    constructor() {\r\n        structUsers_[investorFirstAdr] = structUser(Role.INVESTOR , \"Investor1\", get_keccak256(\"3412\"), 0, 0, 0, 0); // Investor1\r\n        structUsers_[investorSecondAdr] = structUser(Role.INVESTOR, \"Investor1\", get_keccak256(\"1423\"), 0, 0, 0, 0); // Investor2\r\n        structUsers_[bestFriendAdr] = structUser(Role.INVESTOR, \"Best friend\", get_keccak256(\"2314\"), 0, 0, 0, 0);   // Best friend\r\n    }\r\n}\r\n\r\n"
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/components/main.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\n/* COMMENT: Данный котракт наследует: \r\n* > structures.sol\r\n* > getFuncs.sol\r\n*/\r\nimport \"../shared/helpers/validateFuncs.sol\";\r\n\r\ncontract Main is validateFuncs {\r\n\r\n}"
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/IERC20.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\ninterface IERC20 {\r\n    function totalSupply() external view returns (uint256);                                 // общее количество токенов в системе\r\n    function balanceOf(address _account) external view returns (uint256);                   // позволяет посмотреть баланс любого пользователя\r\n    function allowance(address _owner, address _spender) external view returns (uint256);   // посмотреть сколько АДРЕС owner разрешил использовать свое  количество токенов АДРЕСУ spender \r\n\r\n    function transfer(address _to, uint256 _amount) external returns (bool);                    // переслает  деньги с msg.sender другому пользователю\r\n    function approve(address _spender, uint256 _amount) external returns (bool);                // разрешает какому-то АДРЕСУ распоряжаться определенным кол-вом токенов\r\n    function transferFrom(address _to, address _from, uint256 _amount) external returns (bool); // от когого-то АДРЕСА пересылает на определенный АДРЕС кол-во токенов\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);        // евент о том, что произошел transfer c 1-го аккаунта на 2-ой, вызывает когда мы переводим токены\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);  // вызывает когда мы с помощью функции: \"approve\", разрешаем использовать токены\r\n}"
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n      uint256 c = a + b;\r\n      assert(c >= a);\r\n      return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n      assert(b <= a);\r\n      return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a,uint256 b,string memory errorMessage) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}"
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nimport \"../lib/structures.sol\";\r\nimport \"./getFuncs.sol\";              // шаблон структур\r\n\r\n// COMMENT: Контракт хранит в себе функции проверка.\r\ncontract validateFuncs is structures, getFuncs {\r\n\r\n    //COMMENT_FUNC: Функция проверки роли владельца.\r\n    function validateOwner() internal view returns (bool) {\r\n        if (structUsers_[msg.sender].role == Role.SYSTEM_OWNER)\r\n            return true;  // ?: if условие удовлетворено\r\n            return false; // ?: if условие не удовлетворяет\r\n    }\r\n\r\n    //COMMIT_FUNC: Функция проверка стадии SEED\r\n    function validatePhase(string memory _type, address _providerPrivate, address _providerPublic) internal view returns (bool) {\r\n        if (get_keccak256(_type) == get_keccak256(\"seed\")) {\r\n            if (structPhases_[_providerPrivate].statusPhase == false && structPhases_[_providerPublic].statusPhase == false ) \r\n            return true;  // ?: if условие удовлетворено\r\n            return false; // ?: if условие не удовлетворяет\r\n        } else if (get_keccak256(_type) == get_keccak256(\"private\")) {\r\n            if (structPhases_[_providerPrivate].statusPhase == true) \r\n            return true;  // ?: if условие удовлетворено\r\n            return false; // ?: if условие не удовлетворяет\r\n        } else if (get_keccak256(_type) == get_keccak256(\"public\")) {\r\n            if (structPhases_[_providerPublic].statusPhase == true)\r\n            return true;  // ?: if условие удовлетворено\r\n            return false; // ?: if условие не удовлетворяет\r\n        } else {\r\n            return false; // ?: if условие не удовлетворяет\r\n        }\r\n    }\r\n\r\n\r\n}"
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\ncontract getFuncs {\r\n    // Получения хэш-пароля\r\n    function get_keccak256(string memory _hash) public pure returns(bytes32) {\r\n            return(keccak256(abi.encodePacked(_hash)));\r\n    }\r\n}"
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\ncontract structures {\r\n    // COMMENT: Роли для структуры пользователей.\r\n    enum Role {\r\n        SYSTEM_OWNER,\r\n        SYSTEM_PUBLIC,\r\n        SYSTEM_PRIVATE,\r\n        INVESTOR,\r\n        USER\r\n    }\r\n\r\n    // COMMENT_SCTRUCT: Структура пользователей.\r\n    struct structUser {\r\n        Role role;               // роль  \r\n        string login;            // логин\r\n        bytes32 password;        // пароль\r\n        uint256 balance_overall; // общий баланс\r\n        uint256 balance_seed;    // баланс SEED токенов\r\n        uint256 balance_private; // баланс PRIVATE токенов\r\n        uint256 balance_public;  // баланс PUBLIC токенов\r\n    }\r\n    mapping (address => structUser) structUsers_; // обращение к структуре по АДРЕСАМ\r\n\r\n    // COMMENT_SCTRUC: Структура фазы.\r\n    struct structPhase {\r\n        bool statusPhase; // статус фазы\r\n        bool reviewed;    // была ли активирована фаза\r\n    }\r\n    mapping (address => structPhase) structPhases_; // обращение к структуре по АДРЕСАМ\r\n\r\n    // COMMENT_STRUCT: Структура заявок пользователей.\r\n    struct structApplication {\r\n        string name;                    // имя\r\n        string contactForCommunication; // контакты для связи\r\n        address userAdr;                // адрес пользователя\r\n        bool status;                    // статус заявки\r\n        bool reviewed;                  // была ли просмотрена заявка\r\n        bool exist;                     // заявка существует\r\n    }\r\n    mapping (address => structApplication) strucApplications_; // обращение к структуре по АДРЕСАМ\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 999
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol": {
				"CryptoMonster": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "total",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_changeStatus",
									"type": "bool"
								}
							],
							"name": "acceptApplication",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_delegate",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_contactForCommunication",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_userAdr",
									"type": "address"
								}
							],
							"name": "application",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_delegate",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_numTokens",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenOwner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "buy",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_hash",
									"type": "string"
								}
							],
							"name": "get_keccak256",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenPrice_",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_numTokens",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_buyer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_numTokens",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":377:20940  contract CryptoMonster is IERC20, Main, PhaseSeed, PhasePrivate {\r... */\n  mstore(0x40, 0x80)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":179:248  address investorFirstAdr = 0x78731D3Ca6b7E34aC0F824c42a7cC18A495cabaB */\n  0x03\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":206:248  0x78731D3Ca6b7E34aC0F824c42a7cC18A495cabaB */\n  0x78731d3ca6b7e34ac0f824c42a7cc18a495cabab\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":179:248  address investorFirstAdr = 0x78731D3Ca6b7E34aC0F824c42a7cC18A495cabaB */\n  or\n  swap1\n  swap2\n  sstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":269:339  address investorSecondAdr = 0x617F2E2fD72FD9D5503197092aC168c91465E7f2 */\n  0x04\n  dup1\n  sload\n  dup3\n  and\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":297:339  0x617F2E2fD72FD9D5503197092aC168c91465E7f2 */\n  0x617f2e2fd72fd9d5503197092ac168c91465e7f2\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":269:339  address investorSecondAdr = 0x617F2E2fD72FD9D5503197092aC168c91465E7f2 */\n  or\n  swap1\n  sstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":359:425  address bestFriendAdr = 0x17F6AD8Ef982297579C203069C1DbfFE4348c372 */\n  0x05\n  dup1\n  sload\n  swap1\n  swap2\n  and\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":383:425  0x17F6AD8Ef982297579C203069C1DbfFE4348c372 */\n  0x17f6ad8ef982297579c203069c1dbffe4348c372\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":359:425  address bestFriendAdr = 0x17F6AD8Ef982297579C203069C1DbfFE4348c372 */\n  or\n  swap1\n  sstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1197:1207  1000000000 */\n  0x3b9aca00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1168:1207  uint256 public tokenPrice_ = 1000000000 */\n  0x08\n  sstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1775:3374  constructor(uint256 total) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":584:658  structUser(Role.INVESTOR , \"Investor1\", get_keccak256(\"3412\"), 0, 0, 0, 0) */\n  0x40\n  dup1\n  mload\n  0xe0\n  dup2\n  add\n  swap1\n  swap2\n  mstore\n  dup1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":595:608  Role.INVESTOR */\n  0x03\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":584:658  structUser(Role.INVESTOR , \"Investor1\", get_keccak256(\"3412\"), 0, 0, 0, 0) */\n  dup2\n  mstore\n  0x20\n  add\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xb8, 0x496e766573746f7231)\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":624:645  get_keccak256(\"3412\") */\n  tag_10\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe1, 0x199a1899)\n  dup2\n  mstore\n  pop\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":624:637  get_keccak256 */\n  shl(0x20, tag_11)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":624:645  get_keccak256(\"3412\") */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":584:658  structUser(Role.INVESTOR , \"Investor1\", get_keccak256(\"3412\"), 0, 0, 0, 0) */\n  dup2\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":647:648  0 */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":584:658  structUser(Role.INVESTOR , \"Investor1\", get_keccak256(\"3412\"), 0, 0, 0, 0) */\n  0x20\n  dup1\n  dup4\n  add\n  dup3\n  swap1\n  mstore\n  0x40\n  dup1\n  dup5\n  add\n  dup4\n  swap1\n  mstore\n  0x60\n  dup5\n  add\n  dup4\n  swap1\n  mstore\n  0x80\n  swap1\n  swap4\n  add\n  dup3\n  swap1\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":564:580  investorFirstAdr */\n  and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":551:581  structUsers_[investorFirstAdr] */\n  dup3\n  mstore\n  dup2\n  swap1\n  mstore\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":551:658  structUsers_[investorFirstAdr] = structUser(Role.INVESTOR , \"Investor1\", get_keccak256(\"3412\"), 0, 0, 0, 0) */\n  dup2\n  mload\n  dup2\n  sload\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":551:581  structUsers_[investorFirstAdr] */\n  dup3\n  swap1\n  not(0xff)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":551:658  structUsers_[investorFirstAdr] = structUser(Role.INVESTOR , \"Investor1\", get_keccak256(\"3412\"), 0, 0, 0, 0) */\n  and\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":564:580  investorFirstAdr */\n  0x01\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":551:658  structUsers_[investorFirstAdr] = structUser(Role.INVESTOR , \"Investor1\", get_keccak256(\"3412\"), 0, 0, 0, 0) */\n  dup4\n  0x04\n  dup2\n  gt\n  iszero\n  tag_13\n  jumpi\n  tag_13\n  tag_9\n  jump\t// in\ntag_13:\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x20\n  dup3\n  dup2\n  add\n  mload\n  dup1\n  mload\n  tag_14\n  swap3\n  0x01\n  dup6\n  add\n  swap3\n  add\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  pop\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  0x60\n  dup3\n  add\n  mload\n  dup2\n  0x03\n  add\n  sstore\n  0x80\n  dup3\n  add\n  mload\n  dup2\n  0x04\n  add\n  sstore\n  0xa0\n  dup3\n  add\n  mload\n  dup2\n  0x05\n  add\n  sstore\n  0xc0\n  dup3\n  add\n  mload\n  dup2\n  0x06\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":716:789  structUser(Role.INVESTOR, \"Investor1\", get_keccak256(\"1423\"), 0, 0, 0, 0) */\n  mload(0x40)\n  dup1\n  0xe0\n  add\n  0x40\n  mstore\n  dup1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":727:740  Role.INVESTOR */\n  0x03\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":716:789  structUser(Role.INVESTOR, \"Investor1\", get_keccak256(\"1423\"), 0, 0, 0, 0) */\n  0x04\n  dup2\n  gt\n  iszero\n  tag_17\n  jumpi\n  tag_17\n  tag_9\n  jump\t// in\ntag_17:\n  dup2\n  mstore\n  0x20\n  add\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xb8, 0x496e766573746f7231)\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":755:776  get_keccak256(\"1423\") */\n  tag_18\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe0, 0x31343233)\n  dup2\n  mstore\n  pop\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":755:768  get_keccak256 */\n  shl(0x20, tag_11)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":755:776  get_keccak256(\"1423\") */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":716:789  structUser(Role.INVESTOR, \"Investor1\", get_keccak256(\"1423\"), 0, 0, 0, 0) */\n  dup2\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":778:779  0 */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":716:789  structUser(Role.INVESTOR, \"Investor1\", get_keccak256(\"1423\"), 0, 0, 0, 0) */\n  0x20\n  dup1\n  dup4\n  add\n  dup3\n  swap1\n  mstore\n  0x40\n  dup1\n  dup5\n  add\n  dup4\n  swap1\n  mstore\n  0x60\n  dup5\n  add\n  dup4\n  swap1\n  mstore\n  0x80\n  swap1\n  swap4\n  add\n  dup3\n  swap1\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":695:712  investorSecondAdr */\n  0x04\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":682:713  structUsers_[investorSecondAdr] */\n  dup4\n  mstore\n  swap1\n  dup3\n  swap1\n  mstore\n  swap2\n  swap1\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":682:789  structUsers_[investorSecondAdr] = structUser(Role.INVESTOR, \"Investor1\", get_keccak256(\"1423\"), 0, 0, 0, 0) */\n  dup3\n  mload\n  dup2\n  sload\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":682:713  structUsers_[investorSecondAdr] */\n  swap2\n  swap3\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":682:789  structUsers_[investorSecondAdr] = structUser(Role.INVESTOR, \"Investor1\", get_keccak256(\"1423\"), 0, 0, 0, 0) */\n  swap1\n  swap2\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":682:713  structUsers_[investorSecondAdr] */\n  dup4\n  swap2\n  not(0xff)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":682:789  structUsers_[investorSecondAdr] = structUser(Role.INVESTOR, \"Investor1\", get_keccak256(\"1423\"), 0, 0, 0, 0) */\n  swap1\n  swap2\n  and\n  swap1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":695:712  investorSecondAdr */\n  0x01\n  swap1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":682:789  structUsers_[investorSecondAdr] = structUser(Role.INVESTOR, \"Investor1\", get_keccak256(\"1423\"), 0, 0, 0, 0) */\n  dup5\n  swap1\n  dup2\n  gt\n  iszero\n  tag_20\n  jumpi\n  tag_20\n  tag_9\n  jump\t// in\ntag_20:\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x20\n  dup3\n  dup2\n  add\n  mload\n  dup1\n  mload\n  tag_21\n  swap3\n  0x01\n  dup6\n  add\n  swap3\n  add\n  swap1\n  tag_15\n  jump\t// in\ntag_21:\n  pop\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  0x60\n  dup3\n  add\n  mload\n  dup2\n  0x03\n  add\n  sstore\n  0x80\n  dup3\n  add\n  mload\n  dup2\n  0x04\n  add\n  sstore\n  0xa0\n  dup3\n  add\n  mload\n  dup2\n  0x05\n  add\n  sstore\n  0xc0\n  dup3\n  add\n  mload\n  dup2\n  0x06\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":843:918  structUser(Role.INVESTOR, \"Best friend\", get_keccak256(\"2314\"), 0, 0, 0, 0) */\n  mload(0x40)\n  dup1\n  0xe0\n  add\n  0x40\n  mstore\n  dup1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":854:867  Role.INVESTOR */\n  0x03\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":843:918  structUser(Role.INVESTOR, \"Best friend\", get_keccak256(\"2314\"), 0, 0, 0, 0) */\n  0x04\n  dup2\n  gt\n  iszero\n  tag_23\n  jumpi\n  tag_23\n  tag_9\n  jump\t// in\ntag_23:\n  dup2\n  mstore\n  0x20\n  add\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xaa, 0x10995cdd08199c9a595b99)\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":884:905  get_keccak256(\"2314\") */\n  tag_24\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe2, 0x0c8ccc4d)\n  dup2\n  mstore\n  pop\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":884:897  get_keccak256 */\n  shl(0x20, tag_11)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":884:905  get_keccak256(\"2314\") */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":843:918  structUser(Role.INVESTOR, \"Best friend\", get_keccak256(\"2314\"), 0, 0, 0, 0) */\n  dup2\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":907:908  0 */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":843:918  structUser(Role.INVESTOR, \"Best friend\", get_keccak256(\"2314\"), 0, 0, 0, 0) */\n  0x20\n  dup1\n  dup4\n  add\n  dup3\n  swap1\n  mstore\n  0x40\n  dup1\n  dup5\n  add\n  dup4\n  swap1\n  mstore\n  0x60\n  dup5\n  add\n  dup4\n  swap1\n  mstore\n  0x80\n  swap1\n  swap4\n  add\n  dup3\n  swap1\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":826:839  bestFriendAdr */\n  and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":813:840  structUsers_[bestFriendAdr] */\n  dup3\n  mstore\n  dup2\n  swap1\n  mstore\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":813:918  structUsers_[bestFriendAdr] = structUser(Role.INVESTOR, \"Best friend\", get_keccak256(\"2314\"), 0, 0, 0, 0) */\n  dup2\n  mload\n  dup2\n  sload\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":813:840  structUsers_[bestFriendAdr] */\n  dup3\n  swap1\n  not(0xff)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":813:918  structUsers_[bestFriendAdr] = structUser(Role.INVESTOR, \"Best friend\", get_keccak256(\"2314\"), 0, 0, 0, 0) */\n  and\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":826:839  bestFriendAdr */\n  0x01\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":813:918  structUsers_[bestFriendAdr] = structUser(Role.INVESTOR, \"Best friend\", get_keccak256(\"2314\"), 0, 0, 0, 0) */\n  dup4\n  0x04\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  tag_26\n  tag_9\n  jump\t// in\ntag_26:\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x20\n  dup3\n  dup2\n  add\n  mload\n  dup1\n  mload\n  tag_27\n  swap3\n  0x01\n  dup6\n  add\n  swap3\n  add\n  swap1\n  tag_15\n  jump\t// in\ntag_27:\n  pop\n  0x40\n  dup3\n  dup2\n  add\n  mload\n  0x02\n  dup4\n  add\n  sstore\n  0x60\n  dup4\n  add\n  mload\n  0x03\n  dup4\n  add\n  sstore\n  0x80\n  dup4\n  add\n  mload\n  0x04\n  dup4\n  add\n  sstore\n  0xa0\n  dup4\n  add\n  mload\n  0x05\n  dup4\n  add\n  sstore\n  0xc0\n  swap1\n  swap3\n  add\n  mload\n  0x06\n  swap1\n  swap2\n  add\n  sstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1813:1825  totalSupply_ */\n  0x07\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1813:1833  totalSupply_ = total */\n  dup3\n  swap1\n  sstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1921:2005  structUser(Role.SYSTEM_OWNER ,\"owner\", get_keccak256(\"3412\"), totalSupply_, 0, 0, 0) */\n  dup1\n  mload\n  0xe0\n  dup2\n  add\n  swap1\n  swap2\n  mstore\n  dup1\n  0x00\n  dup2\n  mstore\n  0x20\n  add\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xd9, 0x37bbb732b9)\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1960:1981  get_keccak256(\"3412\") */\n  tag_31\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe1, 0x199a1899)\n  dup2\n  mstore\n  pop\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1960:1973  get_keccak256 */\n  shl(0x20, tag_11)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1960:1981  get_keccak256(\"3412\") */\n  0x20\n  shr\n  jump\t// in\ntag_31:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1921:2005  structUser(Role.SYSTEM_OWNER ,\"owner\", get_keccak256(\"3412\"), totalSupply_, 0, 0, 0) */\n  dup2\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1983:1995  totalSupply_ */\n  sload(0x07)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1921:2005  structUser(Role.SYSTEM_OWNER ,\"owner\", get_keccak256(\"3412\"), totalSupply_, 0, 0, 0) */\n  0x20\n  dup1\n  dup4\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  0x00\n  0x40\n  dup4\n  add\n  dup2\n  swap1\n  mstore\n  0x60\n  dup4\n  add\n  dup2\n  swap1\n  mstore\n  0x80\n  swap1\n  swap3\n  add\n  dup3\n  swap1\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1461:1503  0x5B38Da6a701c568545dCfcB03FcB875f56beddC4 */\n  0x5b38da6a701c568545dcfcb03fcb875f56beddc4\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1896:1918  structUsers_[ownerAdr] */\n  dup3\n  mstore\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1896:2005  structUsers_[ownerAdr] = structUser(Role.SYSTEM_OWNER ,\"owner\", get_keccak256(\"3412\"), totalSupply_, 0, 0, 0) */\n  dup1\n  mload\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1896:1918  structUsers_[ownerAdr] */\n  0x58f8e73c330daffe64653449eb9a999c1162911d5129dd8193c7233d46ade2d5\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1896:2005  structUsers_[ownerAdr] = structUser(Role.SYSTEM_OWNER ,\"owner\", get_keccak256(\"3412\"), totalSupply_, 0, 0, 0) */\n  dup1\n  sload\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1896:1918  structUsers_[ownerAdr] */\n  swap1\n  swap2\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1896:2005  structUsers_[ownerAdr] = structUser(Role.SYSTEM_OWNER ,\"owner\", get_keccak256(\"3412\"), totalSupply_, 0, 0, 0) */\n  swap1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1896:1918  structUsers_[ownerAdr] */\n  dup3\n  swap1\n  not(0xff)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1896:2005  structUsers_[ownerAdr] = structUser(Role.SYSTEM_OWNER ,\"owner\", get_keccak256(\"3412\"), totalSupply_, 0, 0, 0) */\n  and\n  0x01\n  dup4\n  0x04\n  dup2\n  gt\n  iszero\n  tag_33\n  jumpi\n  tag_33\n  tag_9\n  jump\t// in\ntag_33:\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x20\n  dup3\n  dup2\n  add\n  mload\n  dup1\n  mload\n  tag_34\n  swap3\n  0x01\n  dup6\n  add\n  swap3\n  add\n  swap1\n  tag_15\n  jump\t// in\ntag_34:\n  pop\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  0x60\n  dup3\n  add\n  mload\n  dup2\n  0x03\n  add\n  sstore\n  0x80\n  dup3\n  add\n  mload\n  dup2\n  0x04\n  add\n  sstore\n  0xa0\n  dup3\n  add\n  mload\n  dup2\n  0x05\n  add\n  sstore\n  0xc0\n  dup3\n  add\n  mload\n  dup2\n  0x06\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2084:2170  structUser(Role.SYSTEM_PRIVATE, \"Private provider\", get_keccak256(\"1423\"), 0, 0, 0, 0) */\n  mload(0x40)\n  dup1\n  0xe0\n  add\n  0x40\n  mstore\n  dup1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2095:2114  Role.SYSTEM_PRIVATE */\n  0x02\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2084:2170  structUser(Role.SYSTEM_PRIVATE, \"Private provider\", get_keccak256(\"1423\"), 0, 0, 0, 0) */\n  0x04\n  dup2\n  gt\n  iszero\n  tag_36\n  jumpi\n  tag_36\n  tag_9\n  jump\t// in\ntag_36:\n  dup2\n  mstore\n  0x20\n  add\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x10\n  dup2\n  mstore\n  0x20\n  add\n  shl(0x81, 0x283934bb30ba3290383937bb34b232b9)\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2136:2157  get_keccak256(\"1423\") */\n  tag_37\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe0, 0x31343233)\n  dup2\n  mstore\n  pop\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2136:2149  get_keccak256 */\n  shl(0x20, tag_11)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2136:2157  get_keccak256(\"1423\") */\n  0x20\n  shr\n  jump\t// in\ntag_37:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2084:2170  structUser(Role.SYSTEM_PRIVATE, \"Private provider\", get_keccak256(\"1423\"), 0, 0, 0, 0) */\n  dup2\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2159:2160  0 */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2084:2170  structUser(Role.SYSTEM_PRIVATE, \"Private provider\", get_keccak256(\"1423\"), 0, 0, 0, 0) */\n  0x20\n  dup1\n  dup4\n  add\n  dup3\n  swap1\n  mstore\n  0x40\n  dup4\n  add\n  dup3\n  swap1\n  mstore\n  0x60\n  dup4\n  add\n  dup3\n  swap1\n  mstore\n  0x80\n  swap1\n  swap3\n  add\n  dup2\n  swap1\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_e92b278610ce8b6027ef7ad432103699b0132d8b129c33a54a54aa5151a105a3\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2049:2081  structUsers_[privateProviderAdr] */\n  dup2\n  mstore\n  swap1\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2049:2170  structUsers_[privateProviderAdr] = structUser(Role.SYSTEM_PRIVATE, \"Private provider\", get_keccak256(\"1423\"), 0, 0, 0, 0) */\n  dup1\n  mload\n  0x00\n  dup1\n  mload\n  0x20\n  data_b419932d51bf6bdfed16bae3f9f1f38a5df16d2ef9b0328748b1d9edd7c1e16c\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  dup1\n  sload\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2049:2081  structUsers_[privateProviderAdr] */\n  swap1\n  swap2\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2049:2170  structUsers_[privateProviderAdr] = structUser(Role.SYSTEM_PRIVATE, \"Private provider\", get_keccak256(\"1423\"), 0, 0, 0, 0) */\n  swap1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2049:2081  structUsers_[privateProviderAdr] */\n  dup3\n  swap1\n  not(0xff)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2049:2170  structUsers_[privateProviderAdr] = structUser(Role.SYSTEM_PRIVATE, \"Private provider\", get_keccak256(\"1423\"), 0, 0, 0, 0) */\n  and\n  0x01\n  dup4\n  0x04\n  dup2\n  gt\n  iszero\n  tag_39\n  jumpi\n  tag_39\n  tag_9\n  jump\t// in\ntag_39:\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x20\n  dup3\n  dup2\n  add\n  mload\n  dup1\n  mload\n  tag_40\n  swap3\n  0x01\n  dup6\n  add\n  swap3\n  add\n  swap1\n  tag_15\n  jump\t// in\ntag_40:\n  pop\n  0x40\n  dup3\n  dup2\n  add\n  mload\n  0x02\n  dup4\n  add\n  sstore\n  0x60\n  dup4\n  add\n  mload\n  0x03\n  dup4\n  add\n  sstore\n  0x80\n  dup4\n  add\n  mload\n  0x04\n  dup4\n  add\n  sstore\n  0xa0\n  dup4\n  add\n  mload\n  0x05\n  dup4\n  add\n  sstore\n  0xc0\n  swap1\n  swap3\n  add\n  mload\n  0x06\n  swap1\n  swap2\n  add\n  sstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2251:2263  totalSupply_ */\n  sload(0x07)\n  0x00\n  dup1\n  mload\n  0x20\n  data_e92b278610ce8b6027ef7ad432103699b0132d8b129c33a54a54aa5151a105a3\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2211:2248  allowed[ownerAdr][privateProviderAdr] */\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_aafb3744b162f07202c1cec14b08048e79801d7c878b2c0eab16dd2801fec9ce\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2211:2263  allowed[ownerAdr][privateProviderAdr] = totalSupply_ */\n  sstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2402:2415  structPhases_ */\n  0x01\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2211:2228  allowed[ownerAdr] */\n  0x20\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2402:2435  structPhases_[privateProviderAdr] */\n  dup2\n  swap1\n  mstore\n  0x9d4d959825f0680278e64197773b2a50cd78b2b2cb00711ddbeebf0bf93cd8a4\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2402:2455  structPhases_[privateProviderAdr].statusPhase = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2616:2700  structUser(Role.SYSTEM_PUBLIC, \"Public provider\", get_keccak256(\"2314\"), 0, 0, 0, 0) */\n  dup2\n  mload\n  0xe0\n  dup2\n  add\n  swap1\n  swap3\n  mstore\n  dup2\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0f\n  dup2\n  mstore\n  0x20\n  add\n  shl(0x89, 0x283ab13634b190383937bb34b232b9)\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2666:2687  get_keccak256(\"2314\") */\n  tag_43\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe2, 0x0c8ccc4d)\n  dup2\n  mstore\n  pop\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2666:2679  get_keccak256 */\n  shl(0x20, tag_11)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2666:2687  get_keccak256(\"2314\") */\n  0x20\n  shr\n  jump\t// in\ntag_43:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2616:2700  structUser(Role.SYSTEM_PUBLIC, \"Public provider\", get_keccak256(\"2314\"), 0, 0, 0, 0) */\n  dup2\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2689:2690  0 */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2616:2700  structUser(Role.SYSTEM_PUBLIC, \"Public provider\", get_keccak256(\"2314\"), 0, 0, 0, 0) */\n  0x20\n  dup1\n  dup4\n  add\n  dup3\n  swap1\n  mstore\n  0x40\n  dup4\n  add\n  dup3\n  swap1\n  mstore\n  0x60\n  dup4\n  add\n  dup3\n  swap1\n  mstore\n  0x80\n  swap1\n  swap3\n  add\n  dup2\n  swap1\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_e92b278610ce8b6027ef7ad432103699b0132d8b129c33a54a54aa5151a105a3\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2582:2613  structUsers_[publicProviderAdr] */\n  dup2\n  mstore\n  swap1\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2582:2700  structUsers_[publicProviderAdr] = structUser(Role.SYSTEM_PUBLIC, \"Public provider\", get_keccak256(\"2314\"), 0, 0, 0, 0) */\n  dup1\n  mload\n  0x00\n  dup1\n  mload\n  0x20\n  data_b419932d51bf6bdfed16bae3f9f1f38a5df16d2ef9b0328748b1d9edd7c1e16c\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  dup1\n  sload\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2582:2613  structUsers_[publicProviderAdr] */\n  swap1\n  swap2\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2582:2700  structUsers_[publicProviderAdr] = structUser(Role.SYSTEM_PUBLIC, \"Public provider\", get_keccak256(\"2314\"), 0, 0, 0, 0) */\n  swap1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2582:2613  structUsers_[publicProviderAdr] */\n  dup3\n  swap1\n  not(0xff)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2582:2700  structUsers_[publicProviderAdr] = structUser(Role.SYSTEM_PUBLIC, \"Public provider\", get_keccak256(\"2314\"), 0, 0, 0, 0) */\n  and\n  0x01\n  dup4\n  0x04\n  dup2\n  gt\n  iszero\n  tag_45\n  jumpi\n  tag_45\n  tag_9\n  jump\t// in\ntag_45:\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x20\n  dup3\n  dup2\n  add\n  mload\n  dup1\n  mload\n  tag_46\n  swap3\n  0x01\n  dup6\n  add\n  swap3\n  add\n  swap1\n  tag_15\n  jump\t// in\ntag_46:\n  pop\n  0x40\n  dup3\n  add\n  mload\n  0x02\n  dup3\n  add\n  sstore\n  0x60\n  dup3\n  add\n  mload\n  0x03\n  dup1\n  dup4\n  add\n  swap2\n  swap1\n  swap2\n  sstore\n  0x80\n  dup4\n  add\n  mload\n  0x04\n  dup4\n  add\n  sstore\n  0xa0\n  dup4\n  add\n  mload\n  0x05\n  dup4\n  add\n  sstore\n  0xc0\n  swap1\n  swap3\n  add\n  mload\n  0x06\n  swap1\n  swap2\n  add\n  sstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2782:2794  totalSupply_ */\n  sload(0x07)\n  0x00\n  dup1\n  mload\n  0x20\n  data_e92b278610ce8b6027ef7ad432103699b0132d8b129c33a54a54aa5151a105a3\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2743:2779  allowed[ownerAdr][publicProviderAdr] */\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_aafb3744b162f07202c1cec14b08048e79801d7c878b2c0eab16dd2801fec9ce\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2743:2794  allowed[ownerAdr][publicProviderAdr] = totalSupply_ */\n  sstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2933:2946  structPhases_ */\n  0x01\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2743:2760  allowed[ownerAdr] */\n  0x20\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2933:2965  structPhases_[publicProviderAdr] */\n  mstore\n  0x9d4d959825f0680278e64197773b2a50cd78b2b2cb00711ddbeebf0bf93cd8a4\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":2933:2985  structPhases_[publicProviderAdr].statusPhase = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3207:3223  investorFirstAdr */\n  sload\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3198:3232  transfer(investorFirstAdr, 600000) */\n  tag_47\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3207:3223  investorFirstAdr */\n  and\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3225:3231  600000 */\n  0x0927c0\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3198:3206  transfer */\n  tag_48\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3198:3232  transfer(investorFirstAdr, 600000) */\n  jump\t// in\ntag_47:\n  pop\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3266:3283  investorSecondAdr */\n  sload(0x04)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3257:3292  transfer(investorSecondAdr, 800000) */\n  tag_49\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3266:3283  investorSecondAdr */\n  and\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3285:3291  800000 */\n  0x0c3500\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3257:3265  transfer */\n  tag_48\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3257:3292  transfer(investorSecondAdr, 800000) */\n  jump\t// in\ntag_49:\n  pop\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3325:3338  bestFriendAdr */\n  sload(0x05)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3316:3347  transfer(bestFriendAdr, 400000) */\n  tag_50\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3325:3338  bestFriendAdr */\n  and\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3340:3346  400000 */\n  0x061a80\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3316:3324  transfer */\n  tag_48\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3316:3347  transfer(bestFriendAdr, 400000) */\n  jump\t// in\ntag_50:\n  pop\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1775:3374  constructor(uint256 total) {\r... */\n  pop\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":377:20940  contract CryptoMonster is IERC20, Main, PhaseSeed, PhasePrivate {\r... */\n  jump(tag_173)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":144:282  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\ntag_11:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":208:215  bytes32 */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":266:271  _hash */\n  dup2\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":249:272  abi.encodePacked(_hash) */\n  add(0x20, mload(0x40))\n  tag_53\n  swap2\n  swap1\n  tag_54\n  jump\t// in\ntag_53:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":239:273  keccak256(abi.encodePacked(_hash)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":232:274  return(keccak256(abi.encodePacked(_hash))) */\n  swap1\n  pop\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":144:282  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":5995:13261  function transfer(address _receiver, uint256 _numTokens) public override returns (bool) {\r... */\ntag_48:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6077:6081  bool */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6098:6158  validatePhase(\"seed\", privateProviderAdr, publicProviderAdr) */\n  tag_56\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe2, 0x1cd95959)\n  dup2\n  mstore\n  pop\n  0x00\n  dup1\n  mload\n  0x20\n  data_e92b278610ce8b6027ef7ad432103699b0132d8b129c33a54a54aa5151a105a3\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1694:1736  0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2 */\n  dup1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6098:6111  validatePhase */\n  shl(0x20, tag_57)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6098:6158  validatePhase(\"seed\", privateProviderAdr, publicProviderAdr) */\n  0x20\n  shr\n  jump\t// in\ntag_56:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6098:6166  validatePhase(\"seed\", privateProviderAdr, publicProviderAdr) == true */\n  iszero\n  iszero\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6162:6166  true */\n  0x01\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6098:6166  validatePhase(\"seed\", privateProviderAdr, publicProviderAdr) == true */\n  eq\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6094:13253  if (validatePhase(\"seed\", privateProviderAdr, publicProviderAdr) == true)  {                             // !: if фаза SEED\r... */\n  iszero\n  tag_58\n  jumpi\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6239:6254  validateOwner() */\n  tag_59\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6239:6252  validateOwner */\n  tag_60\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6239:6254  validateOwner() */\n  jump\t// in\ntag_59:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6239:6262  validateOwner() == true */\n  iszero\n  iszero\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6258:6262  true */\n  0x01\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6239:6262  validateOwner() == true */\n  eq\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6235:9011  if (validateOwner() == true) {                                                                         // !: if пользователь админ\r... */\n  iszero\n  tag_61\n  jumpi\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6435:6445  msg.sender */\n  caller\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6422:6434  structUsers_ */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6422:6446  structUsers_[msg.sender] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6422:6462  structUsers_[msg.sender].balance_overall */\n  0x03\n  add\n  sload\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6408:6462  _numTokens <= structUsers_[msg.sender].balance_overall */\n  dup3\n  gt\n  iszero\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6400:6463  require(_numTokens <= structUsers_[msg.sender].balance_overall) */\n  tag_62\n  jumpi\n  0x00\n  dup1\n  revert\ntag_62:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6647:6660  Role.INVESTOR */\n  0x03\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6627:6637  msg.sender */\n  caller\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6614:6626  structUsers_ */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6614:6638  structUsers_[msg.sender] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6614:6643  structUsers_[msg.sender].role */\n  sload\n  0xff\n  and\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6614:6660  structUsers_[msg.sender].role == Role.INVESTOR */\n  0x04\n  dup2\n  gt\n  iszero\n  tag_66\n  jumpi\n  tag_66\n  tag_9\n  jump\t// in\ntag_66:\n  eq\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6605:6682  require (structUsers_[msg.sender].role == Role.INVESTOR, \"Your not investor\") */\n  tag_67\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":838:840   */\n  0x20\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6605:6682  require (structUsers_[msg.sender].role == Role.INVESTOR, \"Your not investor\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":820:841   */\n  mstore\n    /* \"#utility.yul\":877:879   */\n  0x11\n    /* \"#utility.yul\":857:875   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":850:880   */\n  mstore\n  shl(0x79, 0x2cb7bab9103737ba1034b73b32b9ba37b9)\n    /* \"#utility.yul\":896:914   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":889:936   */\n  mstore\n    /* \"#utility.yul\":953:971   */\n  0x64\n  add\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6605:6682  require (structUsers_[msg.sender].role == Role.INVESTOR, \"Your not investor\") */\ntag_68:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_67:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6853:6866  Role.INVESTOR */\n  0x03\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6821:6844  structUsers_[_receiver] */\n  dup5\n  and\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6821:6833  structUsers_ */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6821:6844  structUsers_[_receiver] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6821:6849  structUsers_[_receiver].role */\n  sload\n  0xff\n  and\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6821:6866  structUsers_[_receiver].role == Role.INVESTOR */\n  0x04\n  dup2\n  gt\n  iszero\n  tag_73\n  jumpi\n  tag_73\n  tag_9\n  jump\t// in\ntag_73:\n  eq\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6812:6888  require (structUsers_[_receiver].role == Role.INVESTOR, \"Your not investor\") */\n  tag_74\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":838:840   */\n  0x20\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6812:6888  require (structUsers_[_receiver].role == Role.INVESTOR, \"Your not investor\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":820:841   */\n  mstore\n    /* \"#utility.yul\":877:879   */\n  0x11\n    /* \"#utility.yul\":857:875   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":850:880   */\n  mstore\n  shl(0x79, 0x2cb7bab9103737ba1034b73b32b9ba37b9)\n    /* \"#utility.yul\":896:914   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":889:936   */\n  mstore\n    /* \"#utility.yul\":953:971   */\n  0x64\n  add\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6812:6888  require (structUsers_[_receiver].role == Role.INVESTOR, \"Your not investor\") */\n  tag_68\n    /* \"#utility.yul\":636:977   */\n  jump\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6812:6888  require (structUsers_[_receiver].role == Role.INVESTOR, \"Your not investor\") */\ntag_74:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7077:7087  msg.sender */\n  caller\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7064:7076  structUsers_ */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7064:7088  structUsers_[msg.sender] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  swap1\n  swap2\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7064:7104  structUsers_[msg.sender].balance_overall */\n  0x03\n  add\n  sload\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7064:7120  structUsers_[msg.sender].balance_overall.sub(_numTokens) */\n  tag_76\n  swap2\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7109:7119  _numTokens */\n  dup5\n  swap1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7064:7108  structUsers_[msg.sender].balance_overall.sub */\n  tag_0_93\n  tag_77\n  dup3\n  shl\n  or\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7064:7120  structUsers_[msg.sender].balance_overall.sub(_numTokens) */\n  swap1\n  shr\n  jump\t// in\ntag_76:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7034:7044  msg.sender */\n  caller\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7021:7033  structUsers_ */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7021:7045  structUsers_[msg.sender] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7021:7061  structUsers_[msg.sender].balance_overall */\n  0x03\n  add\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7021:7120  structUsers_[msg.sender].balance_overall = structUsers_[msg.sender].balance_overall.sub(_numTokens) */\n  swap4\n  swap1\n  swap4\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7249:7272  structUsers_[_receiver] */\n  dup7\n  and\n  dup3\n  mstore\n  swap2\n  swap1\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7249:7285  structUsers_[_receiver].balance_seed */\n  0x04\n  add\n  sload\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7249:7301  structUsers_[_receiver].balance_seed.add(_numTokens) */\n  tag_78\n  swap2\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7290:7300  _numTokens */\n  dup5\n  swap1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7249:7289  structUsers_[_receiver].balance_seed.add */\n  tag_0_94\n  tag_79\n  dup3\n  shl\n  or\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7249:7301  structUsers_[_receiver].balance_seed.add(_numTokens) */\n  swap1\n  shr\n  jump\t// in\ntag_78:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7210:7233  structUsers_[_receiver] */\n  dup5\n  and\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7210:7222  structUsers_ */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7210:7233  structUsers_[_receiver] */\n  dup2\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  swap2\n  dup3\n  swap1\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7210:7246  structUsers_[_receiver].balance_seed */\n  0x04\n  add\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7210:7301  structUsers_[_receiver].balance_seed = structUsers_[_receiver].balance_seed.add(_numTokens) */\n  swap4\n  swap1\n  swap4\n  sstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7398:7441  Transfer(msg.sender, _receiver, _numTokens) */\n  mload\n    /* \"#utility.yul\":1128:1153   */\n  dup5\n  dup2\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7210:7233  structUsers_[_receiver] */\n  swap1\n  swap2\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7407:7417  msg.sender */\n  caller\n  swap2\n  0x00\n  dup1\n  mload\n  0x20\n  data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7398:7441  Transfer(msg.sender, _receiver, _numTokens) */\n  swap2\n    /* \"#utility.yul\":1101:1119   */\n  add\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7398:7441  Transfer(msg.sender, _receiver, _numTokens) */\ntag_80:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n  pop\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7601:7605  true */\n  0x01\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7594:7605  return true */\n  jump(tag_127)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6235:9011  if (validateOwner() == true) {                                                                         // !: if пользователь админ\r... */\ntag_61:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7825:7835  msg.sender */\n  caller\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7812:7824  structUsers_ */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7812:7836  structUsers_[msg.sender] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7812:7849  structUsers_[msg.sender].balance_seed */\n  0x04\n  add\n  sload\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7798:7849  _numTokens <= structUsers_[msg.sender].balance_seed */\n  dup3\n  gt\n  iszero\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7790:7850  require(_numTokens <= structUsers_[msg.sender].balance_seed) */\n  tag_83\n  jumpi\n  0x00\n  dup1\n  revert\ntag_83:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8037:8050  Role.INVESTOR */\n  0x03\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8017:8027  msg.sender */\n  caller\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8004:8016  structUsers_ */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8004:8028  structUsers_[msg.sender] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8004:8033  structUsers_[msg.sender].role */\n  sload\n  0xff\n  and\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8004:8050  structUsers_[msg.sender].role == Role.INVESTOR */\n  0x04\n  dup2\n  gt\n  iszero\n  tag_87\n  jumpi\n  tag_87\n  tag_9\n  jump\t// in\ntag_87:\n  eq\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7995:8072  require (structUsers_[msg.sender].role == Role.INVESTOR, \"Your not investor\") */\n  tag_88\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":838:840   */\n  0x20\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7995:8072  require (structUsers_[msg.sender].role == Role.INVESTOR, \"Your not investor\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":820:841   */\n  mstore\n    /* \"#utility.yul\":877:879   */\n  0x11\n    /* \"#utility.yul\":857:875   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":850:880   */\n  mstore\n  shl(0x79, 0x2cb7bab9103737ba1034b73b32b9ba37b9)\n    /* \"#utility.yul\":896:914   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":889:936   */\n  mstore\n    /* \"#utility.yul\":953:971   */\n  0x64\n  add\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7995:8072  require (structUsers_[msg.sender].role == Role.INVESTOR, \"Your not investor\") */\n  tag_68\n    /* \"#utility.yul\":636:977   */\n  jump\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7995:8072  require (structUsers_[msg.sender].role == Role.INVESTOR, \"Your not investor\") */\ntag_88:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8243:8256  Role.INVESTOR */\n  0x03\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8211:8234  structUsers_[_receiver] */\n  dup5\n  and\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8211:8223  structUsers_ */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8211:8234  structUsers_[_receiver] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8211:8239  structUsers_[_receiver].role */\n  sload\n  0xff\n  and\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8211:8256  structUsers_[_receiver].role == Role.INVESTOR */\n  0x04\n  dup2\n  gt\n  iszero\n  tag_93\n  jumpi\n  tag_93\n  tag_9\n  jump\t// in\ntag_93:\n  eq\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8202:8278  require (structUsers_[_receiver].role == Role.INVESTOR, \"Your not investor\") */\n  tag_94\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":838:840   */\n  0x20\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8202:8278  require (structUsers_[_receiver].role == Role.INVESTOR, \"Your not investor\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":820:841   */\n  mstore\n    /* \"#utility.yul\":877:879   */\n  0x11\n    /* \"#utility.yul\":857:875   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":850:880   */\n  mstore\n  shl(0x79, 0x2cb7bab9103737ba1034b73b32b9ba37b9)\n    /* \"#utility.yul\":896:914   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":889:936   */\n  mstore\n    /* \"#utility.yul\":953:971   */\n  0x64\n  add\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8202:8278  require (structUsers_[_receiver].role == Role.INVESTOR, \"Your not investor\") */\n  tag_68\n    /* \"#utility.yul\":636:977   */\n  jump\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8202:8278  require (structUsers_[_receiver].role == Role.INVESTOR, \"Your not investor\") */\ntag_94:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8464:8474  msg.sender */\n  caller\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8451:8463  structUsers_ */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8451:8475  structUsers_[msg.sender] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  swap1\n  swap2\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8451:8488  structUsers_[msg.sender].balance_seed */\n  0x04\n  add\n  sload\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8451:8504  structUsers_[msg.sender].balance_seed.sub(_numTokens) */\n  tag_96\n  swap2\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8493:8503  _numTokens */\n  dup5\n  swap1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8451:8492  structUsers_[msg.sender].balance_seed.sub */\n  tag_0_93\n  tag_77\n  dup3\n  shl\n  or\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8451:8504  structUsers_[msg.sender].balance_seed.sub(_numTokens) */\n  swap1\n  shr\n  jump\t// in\ntag_96:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8424:8434  msg.sender */\n  caller\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8411:8423  structUsers_ */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8411:8435  structUsers_[msg.sender] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8411:8448  structUsers_[msg.sender].balance_seed */\n  0x04\n  swap1\n  dup2\n  add\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8411:8504  structUsers_[msg.sender].balance_seed = structUsers_[msg.sender].balance_seed.sub(_numTokens) */\n  swap5\n  swap1\n  swap5\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8639:8662  structUsers_[_receiver] */\n  dup8\n  and\n  dup4\n  mstore\n  swap1\n  swap2\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8639:8675  structUsers_[_receiver].balance_seed */\n  swap1\n  swap2\n  add\n  sload\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8639:8691  structUsers_[_receiver].balance_seed.add(_numTokens) */\n  tag_78\n  swap2\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8680:8690  _numTokens */\n  dup5\n  swap1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8639:8679  structUsers_[_receiver].balance_seed.add */\n  tag_0_94\n  tag_79\n  dup3\n  shl\n  or\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8639:8691  structUsers_[_receiver].balance_seed.add(_numTokens) */\n  swap1\n  shr\n  jump\t// in\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6094:13253  if (validatePhase(\"seed\", privateProviderAdr, publicProviderAdr) == true)  {                             // !: if фаза SEED\r... */\ntag_58:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9032:9095  validatePhase(\"private\", privateProviderAdr, publicProviderAdr) */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x07\n  dup2\n  mstore\n  shl(0xc8, 0x70726976617465)\n  0x20\n  dup3\n  add\n  mstore\n  tag_100\n  swap1\n  0x00\n  dup1\n  mload\n  0x20\n  data_e92b278610ce8b6027ef7ad432103699b0132d8b129c33a54a54aa5151a105a3\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1578:1620  0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2 */\n  dup1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9032:9045  validatePhase */\n  tag_57\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9032:9095  validatePhase(\"private\", privateProviderAdr, publicProviderAdr) */\n  jump\t// in\ntag_100:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9032:9103  validatePhase(\"private\", privateProviderAdr, publicProviderAdr) == true */\n  iszero\n  iszero\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9099:9103  true */\n  0x01\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9032:9103  validatePhase(\"private\", privateProviderAdr, publicProviderAdr) == true */\n  eq\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9028:13253  if (validatePhase(\"private\", privateProviderAdr, publicProviderAdr) == true) {                    // !: if фаза PRIVATE\r... */\n  iszero\n  tag_101\n  jumpi\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9169:9184  validateOwner() */\n  tag_102\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9169:9182  validateOwner */\n  tag_60\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9169:9184  validateOwner() */\n  jump\t// in\ntag_102:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9169:9192  validateOwner() == true */\n  iszero\n  iszero\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9188:9192  true */\n  0x01\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9169:9192  validateOwner() == true */\n  eq\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9165:11119  if (validateOwner() == true) {                                                                         // !: if пользователь админ\r... */\n  iszero\n  tag_103\n  jumpi\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9365:9375  msg.sender */\n  caller\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9352:9364  structUsers_ */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9352:9376  structUsers_[msg.sender] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9352:9392  structUsers_[msg.sender].balance_overall */\n  0x03\n  add\n  sload\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9338:9392  _numTokens <= structUsers_[msg.sender].balance_overall */\n  dup3\n  gt\n  iszero\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9330:9393  require(_numTokens <= structUsers_[msg.sender].balance_overall) */\n  tag_104\n  jumpi\n  0x00\n  dup1\n  revert\ntag_104:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9593:9603  msg.sender */\n  caller\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9580:9592  structUsers_ */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9580:9604  structUsers_[msg.sender] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  swap1\n  swap2\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9580:9620  structUsers_[msg.sender].balance_overall */\n  0x03\n  add\n  sload\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9580:9636  structUsers_[msg.sender].balance_overall.sub(_numTokens) */\n  tag_105\n  swap2\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9625:9635  _numTokens */\n  dup5\n  swap1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9580:9624  structUsers_[msg.sender].balance_overall.sub */\n  tag_0_93\n  tag_77\n  dup3\n  shl\n  or\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9580:9636  structUsers_[msg.sender].balance_overall.sub(_numTokens) */\n  swap1\n  shr\n  jump\t// in\ntag_105:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9550:9560  msg.sender */\n  caller\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9537:9549  structUsers_ */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9537:9561  structUsers_[msg.sender] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9537:9577  structUsers_[msg.sender].balance_overall */\n  0x03\n  add\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9537:9636  structUsers_[msg.sender].balance_overall = structUsers_[msg.sender].balance_overall.sub(_numTokens) */\n  swap4\n  swap1\n  swap4\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9768:9791  structUsers_[_receiver] */\n  dup7\n  and\n  dup3\n  mstore\n  swap2\n  swap1\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9768:9807  structUsers_[_receiver].balance_private */\n  0x05\n  add\n  sload\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9768:9823  structUsers_[_receiver].balance_private.add(_numTokens) */\n  tag_106\n  swap2\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9812:9822  _numTokens */\n  dup5\n  swap1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9768:9811  structUsers_[_receiver].balance_private.add */\n  tag_0_94\n  tag_79\n  dup3\n  shl\n  or\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9768:9823  structUsers_[_receiver].balance_private.add(_numTokens) */\n  swap1\n  shr\n  jump\t// in\ntag_106:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9726:9749  structUsers_[_receiver] */\n  dup5\n  and\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9726:9738  structUsers_ */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9726:9749  structUsers_[_receiver] */\n  dup2\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  swap2\n  dup3\n  swap1\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9726:9765  structUsers_[_receiver].balance_private */\n  0x05\n  add\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9726:9823  structUsers_[_receiver].balance_private = structUsers_[_receiver].balance_private.add(_numTokens) */\n  swap4\n  swap1\n  swap4\n  sstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9917:9960  Transfer(msg.sender, _receiver, _numTokens) */\n  mload\n    /* \"#utility.yul\":1128:1153   */\n  dup5\n  dup2\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9726:9749  structUsers_[_receiver] */\n  swap1\n  swap2\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9926:9936  msg.sender */\n  caller\n  swap2\n  0x00\n  dup1\n  mload\n  0x20\n  data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9917:9960  Transfer(msg.sender, _receiver, _numTokens) */\n  swap2\n    /* \"#utility.yul\":1101:1119   */\n  add\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9917:9960  Transfer(msg.sender, _receiver, _numTokens) */\n  tag_80\n    /* \"#utility.yul\":982:1159   */\n  jump\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9165:11119  if (validateOwner() == true) {                                                                         // !: if пользователь админ\r... */\ntag_103:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10344:10354  msg.sender */\n  caller\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10331:10343  structUsers_ */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10331:10355  structUsers_[msg.sender] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10331:10371  structUsers_[msg.sender].balance_private */\n  0x05\n  add\n  sload\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10317:10371  _numTokens <= structUsers_[msg.sender].balance_private */\n  dup3\n  gt\n  iszero\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10309:10372  require(_numTokens <= structUsers_[msg.sender].balance_private) */\n  tag_109\n  jumpi\n  0x00\n  dup1\n  revert\ntag_109:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10572:10582  msg.sender */\n  caller\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10559:10571  structUsers_ */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10559:10583  structUsers_[msg.sender] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  swap1\n  swap2\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10559:10599  structUsers_[msg.sender].balance_private */\n  0x05\n  add\n  sload\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10559:10615  structUsers_[msg.sender].balance_private.sub(_numTokens) */\n  tag_110\n  swap2\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10604:10614  _numTokens */\n  dup5\n  swap1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10559:10603  structUsers_[msg.sender].balance_private.sub */\n  tag_0_93\n  tag_77\n  dup3\n  shl\n  or\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10559:10615  structUsers_[msg.sender].balance_private.sub(_numTokens) */\n  swap1\n  shr\n  jump\t// in\ntag_110:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10529:10539  msg.sender */\n  caller\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10516:10528  structUsers_ */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10516:10540  structUsers_[msg.sender] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10516:10556  structUsers_[msg.sender].balance_private */\n  0x05\n  swap1\n  dup2\n  add\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10516:10615  structUsers_[msg.sender].balance_private = structUsers_[msg.sender].balance_private.sub(_numTokens) */\n  swap5\n  swap1\n  swap5\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10747:10770  structUsers_[_receiver] */\n  dup8\n  and\n  dup4\n  mstore\n  swap1\n  swap2\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10747:10786  structUsers_[_receiver].balance_private */\n  swap1\n  swap2\n  add\n  sload\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10747:10802  structUsers_[_receiver].balance_private.add(_numTokens) */\n  tag_106\n  swap2\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10791:10801  _numTokens */\n  dup5\n  swap1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10747:10790  structUsers_[_receiver].balance_private.add */\n  tag_0_94\n  tag_79\n  dup3\n  shl\n  or\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10747:10802  structUsers_[_receiver].balance_private.add(_numTokens) */\n  swap1\n  shr\n  jump\t// in\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9028:13253  if (validatePhase(\"private\", privateProviderAdr, publicProviderAdr) == true) {                    // !: if фаза PRIVATE\r... */\ntag_101:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11140:11202  validatePhase(\"public\", privateProviderAdr, publicProviderAdr) */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x06\n  dup2\n  mstore\n  shl(0xd0, 0x7075626c6963)\n  0x20\n  dup3\n  add\n  mstore\n  tag_114\n  swap1\n  0x00\n  dup1\n  mload\n  0x20\n  data_e92b278610ce8b6027ef7ad432103699b0132d8b129c33a54a54aa5151a105a3\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1578:1620  0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2 */\n  dup1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11140:11153  validatePhase */\n  tag_57\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11140:11202  validatePhase(\"public\", privateProviderAdr, publicProviderAdr) */\n  jump\t// in\ntag_114:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11140:11210  validatePhase(\"public\", privateProviderAdr, publicProviderAdr) == true */\n  iszero\n  iszero\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11206:11210  true */\n  0x01\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11140:11210  validatePhase(\"public\", privateProviderAdr, publicProviderAdr) == true */\n  eq\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11136:13253  if (validatePhase(\"public\", privateProviderAdr, publicProviderAdr) == true) {                     // !: if фаза PUBLIC\r... */\n  iszero\n  tag_115\n  jumpi\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11276:11291  validateOwner() */\n  tag_116\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11276:11289  validateOwner */\n  tag_60\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11276:11291  validateOwner() */\n  jump\t// in\ntag_116:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11276:11299  validateOwner() == true */\n  iszero\n  iszero\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11295:11299  true */\n  0x01\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11276:11299  validateOwner() == true */\n  eq\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11272:13224  if (validateOwner() == true) {                                                                         // !: if пользователь админ\r... */\n  iszero\n  tag_117\n  jumpi\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11472:11482  msg.sender */\n  caller\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11459:11471  structUsers_ */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11459:11483  structUsers_[msg.sender] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11459:11499  structUsers_[msg.sender].balance_overall */\n  0x03\n  add\n  sload\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11445:11499  _numTokens <= structUsers_[msg.sender].balance_overall */\n  dup3\n  gt\n  iszero\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11437:11500  require(_numTokens <= structUsers_[msg.sender].balance_overall) */\n  tag_118\n  jumpi\n  0x00\n  dup1\n  revert\ntag_118:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11700:11710  msg.sender */\n  caller\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11687:11699  structUsers_ */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11687:11711  structUsers_[msg.sender] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  swap1\n  swap2\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11687:11727  structUsers_[msg.sender].balance_overall */\n  0x03\n  add\n  sload\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11687:11743  structUsers_[msg.sender].balance_overall.sub(_numTokens) */\n  tag_119\n  swap2\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11732:11742  _numTokens */\n  dup5\n  swap1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11687:11731  structUsers_[msg.sender].balance_overall.sub */\n  tag_0_93\n  tag_77\n  dup3\n  shl\n  or\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11687:11743  structUsers_[msg.sender].balance_overall.sub(_numTokens) */\n  swap1\n  shr\n  jump\t// in\ntag_119:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11657:11667  msg.sender */\n  caller\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11644:11656  structUsers_ */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11644:11668  structUsers_[msg.sender] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11644:11684  structUsers_[msg.sender].balance_overall */\n  0x03\n  add\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11644:11743  structUsers_[msg.sender].balance_overall = structUsers_[msg.sender].balance_overall.sub(_numTokens) */\n  swap4\n  swap1\n  swap4\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11874:11897  structUsers_[_receiver] */\n  dup7\n  and\n  dup3\n  mstore\n  swap2\n  swap1\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11874:11912  structUsers_[_receiver].balance_public */\n  0x06\n  add\n  sload\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11874:11928  structUsers_[_receiver].balance_public.add(_numTokens) */\n  tag_120\n  swap2\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11917:11927  _numTokens */\n  dup5\n  swap1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11874:11916  structUsers_[_receiver].balance_public.add */\n  tag_0_94\n  tag_79\n  dup3\n  shl\n  or\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11874:11928  structUsers_[_receiver].balance_public.add(_numTokens) */\n  swap1\n  shr\n  jump\t// in\ntag_120:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11833:11856  structUsers_[_receiver] */\n  dup5\n  and\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11833:11845  structUsers_ */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11833:11856  structUsers_[_receiver] */\n  dup2\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  swap2\n  dup3\n  swap1\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11833:11871  structUsers_[_receiver].balance_public */\n  0x06\n  add\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11833:11928  structUsers_[_receiver].balance_public = structUsers_[_receiver].balance_public.add(_numTokens) */\n  swap4\n  swap1\n  swap4\n  sstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12023:12066  Transfer(msg.sender, _receiver, _numTokens) */\n  mload\n    /* \"#utility.yul\":1128:1153   */\n  dup5\n  dup2\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11833:11856  structUsers_[_receiver] */\n  swap1\n  swap2\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12032:12042  msg.sender */\n  caller\n  swap2\n  0x00\n  dup1\n  mload\n  0x20\n  data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12023:12066  Transfer(msg.sender, _receiver, _numTokens) */\n  swap2\n    /* \"#utility.yul\":1101:1119   */\n  add\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12023:12066  Transfer(msg.sender, _receiver, _numTokens) */\n  tag_80\n    /* \"#utility.yul\":982:1159   */\n  jump\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11272:13224  if (validateOwner() == true) {                                                                         // !: if пользователь админ\r... */\ntag_117:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12450:12460  msg.sender */\n  caller\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12437:12449  structUsers_ */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12437:12461  structUsers_[msg.sender] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12437:12476  structUsers_[msg.sender].balance_public */\n  0x06\n  add\n  sload\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12423:12476  _numTokens <= structUsers_[msg.sender].balance_public */\n  dup3\n  gt\n  iszero\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12415:12477  require(_numTokens <= structUsers_[msg.sender].balance_public) */\n  tag_123\n  jumpi\n  0x00\n  dup1\n  revert\ntag_123:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12677:12687  msg.sender */\n  caller\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12664:12676  structUsers_ */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12664:12688  structUsers_[msg.sender] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  swap1\n  swap2\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12664:12703  structUsers_[msg.sender].balance_public */\n  0x06\n  add\n  sload\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12664:12719  structUsers_[msg.sender].balance_public.sub(_numTokens) */\n  tag_124\n  swap2\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12708:12718  _numTokens */\n  dup5\n  swap1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12664:12707  structUsers_[msg.sender].balance_public.sub */\n  tag_0_93\n  tag_77\n  dup3\n  shl\n  or\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12664:12719  structUsers_[msg.sender].balance_public.sub(_numTokens) */\n  swap1\n  shr\n  jump\t// in\ntag_124:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12635:12645  msg.sender */\n  caller\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12622:12634  structUsers_ */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12622:12646  structUsers_[msg.sender] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12622:12661  structUsers_[msg.sender].balance_public */\n  0x06\n  swap1\n  dup2\n  add\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12622:12719  structUsers_[msg.sender].balance_public = structUsers_[msg.sender].balance_public.sub(_numTokens) */\n  swap5\n  swap1\n  swap5\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12852:12875  structUsers_[_receiver] */\n  dup8\n  and\n  dup4\n  mstore\n  swap1\n  swap2\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12852:12890  structUsers_[_receiver].balance_public */\n  swap1\n  swap2\n  add\n  sload\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12852:12906  structUsers_[_receiver].balance_public.add(_numTokens) */\n  tag_120\n  swap2\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12895:12905  _numTokens */\n  dup5\n  swap1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12852:12894  structUsers_[_receiver].balance_public.add */\n  tag_0_94\n  tag_79\n  dup3\n  shl\n  or\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12852:12906  structUsers_[_receiver].balance_public.add(_numTokens) */\n  swap1\n  shr\n  jump\t// in\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11136:13253  if (validatePhase(\"public\", privateProviderAdr, publicProviderAdr) == true) {                     // !: if фаза PUBLIC\r... */\ntag_115:\n  pop\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":13248:13253  false */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11136:13253  if (validatePhase(\"public\", privateProviderAdr, publicProviderAdr) == true) {                     // !: if фаза PUBLIC\r... */\ntag_127:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":5995:13261  function transfer(address _receiver, uint256 _numTokens) public override returns (bool) {\r... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":771:1971  function validatePhase(string memory _type, address _providerPrivate, address _providerPublic) internal view returns (bool) {\r... */\ntag_57:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":889:893  bool */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":934:955  get_keccak256(\"seed\") */\n  tag_129\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe2, 0x1cd95959)\n  dup2\n  mstore\n  pop\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":934:947  get_keccak256 */\n  shl(0x20, tag_11)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":934:955  get_keccak256(\"seed\") */\n  0x20\n  shr\n  jump\t// in\ntag_129:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":910:930  get_keccak256(_type) */\n  tag_130\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":924:929  _type */\n  dup6\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":910:923  get_keccak256 */\n  tag_11\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":910:930  get_keccak256(_type) */\n  jump\t// in\ntag_130:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":910:955  get_keccak256(_type) == get_keccak256(\"seed\") */\n  eq\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":906:1964  if (get_keccak256(_type) == get_keccak256(\"seed\")) {\r... */\n  iszero\n  tag_131\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":976:1007  structPhases_[_providerPrivate] */\n  dup4\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":976:989  structPhases_ */\n  0x01\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":976:1007  structPhases_[_providerPrivate] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":976:1019  structPhases_[_providerPrivate].statusPhase */\n  sload\n  0xff\n  and\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":976:1028  structPhases_[_providerPrivate].statusPhase == false */\n  iszero\n  dup1\n  iszero\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":976:1083  structPhases_[_providerPrivate].statusPhase == false && structPhases_[_providerPublic].statusPhase == false */\n  tag_132\n  jumpi\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1032:1062  structPhases_[_providerPublic] */\n  dup3\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1032:1045  structPhases_ */\n  0x01\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1032:1062  structPhases_[_providerPublic] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1032:1074  structPhases_[_providerPublic].statusPhase */\n  sload\n  0xff\n  and\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1032:1083  structPhases_[_providerPublic].statusPhase == false */\n  iszero\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":976:1083  structPhases_[_providerPrivate].statusPhase == false && structPhases_[_providerPublic].statusPhase == false */\ntag_132:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":972:1111  if (structPhases_[_providerPrivate].statusPhase == false && structPhases_[_providerPublic].statusPhase == false ) \r... */\n  iszero\n  tag_133\n  jumpi\n  pop\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1107:1111  true */\n  0x01\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1100:1111  return true */\n  jump(tag_144)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":972:1111  if (structPhases_[_providerPrivate].statusPhase == false && structPhases_[_providerPublic].statusPhase == false ) \r... */\ntag_133:\n  pop\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1185:1190  false */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1178:1190  return false */\n  jump(tag_144)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":906:1964  if (get_keccak256(_type) == get_keccak256(\"seed\")) {\r... */\ntag_131:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1292:1316  get_keccak256(\"private\") */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x07\n  dup2\n  mstore\n  shl(0xc8, 0x70726976617465)\n  0x20\n  dup3\n  add\n  mstore\n  tag_135\n  swap1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1292:1305  get_keccak256 */\n  tag_11\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1292:1316  get_keccak256(\"private\") */\n  jump\t// in\ntag_135:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1268:1288  get_keccak256(_type) */\n  tag_136\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1282:1287  _type */\n  dup6\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1268:1281  get_keccak256 */\n  tag_11\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1268:1288  get_keccak256(_type) */\n  jump\t// in\ntag_136:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1268:1316  get_keccak256(_type) == get_keccak256(\"private\") */\n  eq\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1264:1964  if (get_keccak256(_type) == get_keccak256(\"private\")) {\r... */\n  iszero\n  tag_137\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1337:1368  structPhases_[_providerPrivate] */\n  dup4\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1337:1350  structPhases_ */\n  0x01\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1337:1368  structPhases_[_providerPrivate] */\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  swap2\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1337:1380  structPhases_[_providerPrivate].statusPhase */\n  sload\n  0xff\n  and\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1337:1388  structPhases_[_providerPrivate].statusPhase == true */\n  iszero\n  iszero\n  eq\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1333:1415  if (structPhases_[_providerPrivate].statusPhase == true) \r... */\n  iszero\n  tag_133\n  jumpi\n  pop\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1411:1415  true */\n  0x01\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1404:1415  return true */\n  jump(tag_144)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1264:1964  if (get_keccak256(_type) == get_keccak256(\"private\")) {\r... */\ntag_137:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1596:1619  get_keccak256(\"public\") */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x06\n  dup2\n  mstore\n  shl(0xd0, 0x7075626c6963)\n  0x20\n  dup3\n  add\n  mstore\n  tag_140\n  swap1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1596:1609  get_keccak256 */\n  tag_11\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1596:1619  get_keccak256(\"public\") */\n  jump\t// in\ntag_140:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1572:1592  get_keccak256(_type) */\n  tag_141\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1586:1591  _type */\n  dup6\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1572:1585  get_keccak256 */\n  tag_11\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1572:1592  get_keccak256(_type) */\n  jump\t// in\ntag_141:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1572:1619  get_keccak256(_type) == get_keccak256(\"public\") */\n  eq\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1568:1964  if (get_keccak256(_type) == get_keccak256(\"public\")) {\r... */\n  iszero\n  tag_133\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1640:1670  structPhases_[_providerPublic] */\n  dup3\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1640:1653  structPhases_ */\n  0x01\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1640:1670  structPhases_[_providerPublic] */\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  swap2\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1640:1682  structPhases_[_providerPublic].statusPhase */\n  sload\n  0xff\n  and\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1640:1690  structPhases_[_providerPublic].statusPhase == true */\n  iszero\n  iszero\n  eq\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1636:1716  if (structPhases_[_providerPublic].statusPhase == true)\r... */\n  iszero\n  tag_133\n  jumpi\n  pop\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1712:1716  true */\n  0x01\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1568:1964  if (get_keccak256(_type) == get_keccak256(\"public\")) {\r... */\ntag_144:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":771:1971  function validatePhase(string memory _type, address _providerPrivate, address _providerPublic) internal view returns (bool) {\r... */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":405:693  function validateOwner() internal view returns (bool) {\r... */\ntag_60:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":453:457  bool */\n  0x00\n  dup1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":487:497  msg.sender */\n  caller\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":474:486  structUsers_ */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":474:498  structUsers_[msg.sender] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":474:503  structUsers_[msg.sender].role */\n  sload\n  0xff\n  and\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":474:524  structUsers_[msg.sender].role == Role.SYSTEM_OWNER */\n  0x04\n  dup2\n  gt\n  iszero\n  tag_149\n  jumpi\n  tag_149\n  tag_9\n  jump\t// in\ntag_149:\n  eq\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":470:550  if (structUsers_[msg.sender].role == Role.SYSTEM_OWNER)\r... */\n  iszero\n  tag_150\n  jumpi\n  pop\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":546:550  true */\n  0x01\n  swap1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":405:693  function validateOwner() internal view returns (bool) {\r... */\n  jump\t// out\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":470:550  if (structUsers_[msg.sender].role == Role.SYSTEM_OWNER)\r... */\ntag_150:\n  pop\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":624:629  false */\n  0x00\n  swap1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":405:693  function validateOwner() internal view returns (bool) {\r... */\n  jump\t// out\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2846:2965  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\ntag_77:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2904:2911  uint256 */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2934:2935  a */\n  dup3\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2929:2930  b */\n  dup3\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2929:2935  b <= a */\n  gt\n  iszero\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2922:2936  assert(b <= a) */\n  tag_153\n  jumpi\n  tag_153\n  tag_154\n  jump\t// in\ntag_153:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2952:2957  a - b */\n  tag_144\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2956:2957  b */\n  dup3\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2952:2953  a */\n  dup5\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2952:2957  a - b */\n  tag_156\n  jump\t// in\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2422:2563  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\ntag_79:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2480:2487  uint256 */\n  0x00\n  dup1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2510:2515  a + b */\n  tag_158\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2514:2515  b */\n  dup4\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2510:2511  a */\n  dup6\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2510:2515  a + b */\n  tag_159\n  jump\t// in\ntag_158:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2498:2515  uint256 c = a + b */\n  swap1\n  pop\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2536:2537  a */\n  dup4\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2531:2532  c */\n  dup2\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2531:2537  c >= a */\n  lt\n  iszero\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2524:2538  assert(c >= a) */\n  tag_144\n  jumpi\n  tag_144\n  tag_154\n  jump\t// in\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":377:20940  contract CryptoMonster is IERC20, Main, PhaseSeed, PhasePrivate {\r... */\ntag_15:\n  dup3\n  dup1\n  sload\n  tag_162\n  swap1\n  tag_163\n  jump\t// in\ntag_162:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_165\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_168)\ntag_165:\n  dup3\n  0x1f\n  lt\n  tag_166\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_168)\ntag_166:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_168\n  jumpi\n  swap2\n  dup3\n  add\ntag_167:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_168\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_167)\ntag_168:\n  pop\n  tag_169\n  swap3\n  swap2\n  pop\n  tag_170\n  jump\t// in\ntag_169:\n  pop\n  swap1\n  jump\t// out\ntag_170:\ntag_171:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_169\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_171)\n    /* \"#utility.yul\":14:198   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_175\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_175:\n  pop\n    /* \"#utility.yul\":176:192   */\n  mload\n  swap2\n    /* \"#utility.yul\":14:198   */\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":203:631   */\ntag_54:\n    /* \"#utility.yul\":334:337   */\n  0x00\n    /* \"#utility.yul\":372:378   */\n  dup3\n    /* \"#utility.yul\":366:379   */\n  mload\n    /* \"#utility.yul\":397:398   */\n  0x00\n    /* \"#utility.yul\":407:536   */\ntag_177:\n    /* \"#utility.yul\":421:427   */\n  dup2\n    /* \"#utility.yul\":418:419   */\n  dup2\n    /* \"#utility.yul\":415:428   */\n  lt\n    /* \"#utility.yul\":407:536   */\n  iszero\n  tag_179\n  jumpi\n    /* \"#utility.yul\":519:523   */\n  0x20\n    /* \"#utility.yul\":503:517   */\n  dup2\n  dup7\n  add\n    /* \"#utility.yul\":499:524   */\n  dup2\n  add\n    /* \"#utility.yul\":493:525   */\n  mload\n    /* \"#utility.yul\":480:491   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":473:526   */\n  mstore\n    /* \"#utility.yul\":436:448   */\n  add\n    /* \"#utility.yul\":407:536   */\n  jump(tag_177)\ntag_179:\n    /* \"#utility.yul\":554:560   */\n  dup2\n    /* \"#utility.yul\":551:552   */\n  dup2\n    /* \"#utility.yul\":548:561   */\n  gt\n    /* \"#utility.yul\":545:593   */\n  iszero\n  tag_180\n  jumpi\n    /* \"#utility.yul\":589:590   */\n  0x00\n    /* \"#utility.yul\":580:586   */\n  dup3\n    /* \"#utility.yul\":575:578   */\n  dup6\n    /* \"#utility.yul\":571:587   */\n  add\n    /* \"#utility.yul\":564:591   */\n  mstore\n    /* \"#utility.yul\":545:593   */\ntag_180:\n  pop\n    /* \"#utility.yul\":609:625   */\n  swap2\n  swap1\n  swap2\n  add\n  swap3\n    /* \"#utility.yul\":203:631   */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1164:1292   */\ntag_159:\n    /* \"#utility.yul\":1204:1207   */\n  0x00\n    /* \"#utility.yul\":1235:1236   */\n  dup3\n    /* \"#utility.yul\":1231:1237   */\n  not\n    /* \"#utility.yul\":1228:1229   */\n  dup3\n    /* \"#utility.yul\":1225:1238   */\n  gt\n    /* \"#utility.yul\":1222:1261   */\n  iszero\n  tag_185\n  jumpi\n    /* \"#utility.yul\":1241:1259   */\n  tag_185\n  tag_186\n  jump\t// in\ntag_185:\n  pop\n    /* \"#utility.yul\":1277:1286   */\n  add\n  swap1\n    /* \"#utility.yul\":1164:1292   */\n  jump\t// out\n    /* \"#utility.yul\":1297:1422   */\ntag_156:\n    /* \"#utility.yul\":1337:1341   */\n  0x00\n    /* \"#utility.yul\":1365:1366   */\n  dup3\n    /* \"#utility.yul\":1362:1363   */\n  dup3\n    /* \"#utility.yul\":1359:1367   */\n  lt\n    /* \"#utility.yul\":1356:1390   */\n  iszero\n  tag_189\n  jumpi\n    /* \"#utility.yul\":1370:1388   */\n  tag_189\n  tag_186\n  jump\t// in\ntag_189:\n  pop\n    /* \"#utility.yul\":1407:1416   */\n  sub\n  swap1\n    /* \"#utility.yul\":1297:1422   */\n  jump\t// out\n    /* \"#utility.yul\":1427:1807   */\ntag_163:\n    /* \"#utility.yul\":1506:1507   */\n  0x01\n    /* \"#utility.yul\":1502:1514   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1549:1561   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1570:1631   */\n  tag_191\n  jumpi\n    /* \"#utility.yul\":1624:1628   */\n  0x7f\n    /* \"#utility.yul\":1616:1622   */\n  dup3\n    /* \"#utility.yul\":1612:1629   */\n  and\n    /* \"#utility.yul\":1602:1629   */\n  swap2\n  pop\n    /* \"#utility.yul\":1570:1631   */\ntag_191:\n    /* \"#utility.yul\":1677:1679   */\n  0x20\n    /* \"#utility.yul\":1669:1675   */\n  dup3\n    /* \"#utility.yul\":1666:1680   */\n  lt\n    /* \"#utility.yul\":1646:1664   */\n  dup2\n    /* \"#utility.yul\":1643:1681   */\n  eq\n    /* \"#utility.yul\":1640:1801   */\n  iszero\n  tag_192\n  jumpi\n    /* \"#utility.yul\":1723:1733   */\n  0x4e487b71\n    /* \"#utility.yul\":1718:1721   */\n  0xe0\n    /* \"#utility.yul\":1714:1734   */\n  shl\n    /* \"#utility.yul\":1711:1712   */\n  0x00\n    /* \"#utility.yul\":1704:1735   */\n  mstore\n    /* \"#utility.yul\":1758:1762   */\n  0x22\n    /* \"#utility.yul\":1755:1756   */\n  0x04\n    /* \"#utility.yul\":1748:1763   */\n  mstore\n    /* \"#utility.yul\":1786:1790   */\n  0x24\n    /* \"#utility.yul\":1783:1784   */\n  0x00\n    /* \"#utility.yul\":1776:1791   */\n  revert\n    /* \"#utility.yul\":1640:1801   */\ntag_192:\n  pop\n    /* \"#utility.yul\":1427:1807   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1812:1939   */\ntag_154:\n    /* \"#utility.yul\":1873:1883   */\n  0x4e487b71\n    /* \"#utility.yul\":1868:1871   */\n  0xe0\n    /* \"#utility.yul\":1864:1884   */\n  shl\n    /* \"#utility.yul\":1861:1862   */\n  0x00\n    /* \"#utility.yul\":1854:1885   */\n  mstore\n    /* \"#utility.yul\":1904:1908   */\n  0x01\n    /* \"#utility.yul\":1901:1902   */\n  0x04\n    /* \"#utility.yul\":1894:1909   */\n  mstore\n    /* \"#utility.yul\":1928:1932   */\n  0x24\n    /* \"#utility.yul\":1925:1926   */\n  0x00\n    /* \"#utility.yul\":1918:1933   */\n  revert\n    /* \"#utility.yul\":1944:2071   */\ntag_186:\n    /* \"#utility.yul\":2005:2015   */\n  0x4e487b71\n    /* \"#utility.yul\":2000:2003   */\n  0xe0\n    /* \"#utility.yul\":1996:2016   */\n  shl\n    /* \"#utility.yul\":1993:1994   */\n  0x00\n    /* \"#utility.yul\":1986:2017   */\n  mstore\n    /* \"#utility.yul\":2036:2040   */\n  0x11\n    /* \"#utility.yul\":2033:2034   */\n  0x04\n    /* \"#utility.yul\":2026:2041   */\n  mstore\n    /* \"#utility.yul\":2060:2064   */\n  0x24\n    /* \"#utility.yul\":2057:2058   */\n  0x00\n    /* \"#utility.yul\":2050:2065   */\n  revert\n    /* \"#utility.yul\":2076:2203   */\ntag_9:\n    /* \"#utility.yul\":2137:2147   */\n  0x4e487b71\n    /* \"#utility.yul\":2132:2135   */\n  0xe0\n    /* \"#utility.yul\":2128:2148   */\n  shl\n    /* \"#utility.yul\":2125:2126   */\n  0x00\n    /* \"#utility.yul\":2118:2149   */\n  mstore\n    /* \"#utility.yul\":2168:2172   */\n  0x21\n    /* \"#utility.yul\":2165:2166   */\n  0x04\n    /* \"#utility.yul\":2158:2173   */\n  mstore\n    /* \"#utility.yul\":2192:2196   */\n  0x24\n    /* \"#utility.yul\":2189:2190   */\n  0x00\n    /* \"#utility.yul\":2182:2197   */\n  revert\n    /* \"#utility.yul\":2076:2203   */\ntag_173:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":377:20940  contract CryptoMonster is IERC20, Main, PhaseSeed, PhasePrivate {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_aafb3744b162f07202c1cec14b08048e79801d7c878b2c0eab16dd2801fec9ce d0917daa0b256b4ca08bff93fec91cc093247bf3cc8b97e585b3c6329d4b8765\ndata_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\ndata_b419932d51bf6bdfed16bae3f9f1f38a5df16d2ef9b0328748b1d9edd7c1e16c 1a1017a437881fd8fee8ab135586d886995df9286bd91e5d3c250f79b2327f02\ndata_e92b278610ce8b6027ef7ad432103699b0132d8b129c33a54a54aa5151a105a3 000000000000000000000000ab8483f64d9c6d1ecf9b849ae677dd3315835cb2\n\nsub_0: assembly {\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":377:20940  contract CryptoMonster is IERC20, Main, PhaseSeed, PhasePrivate {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x785963c3\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x9d9e7a4b\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x9d9e7a4b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd96a094a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x785963c3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8e4f8c6b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x18160ddd\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x0761c8b9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":613:658  string public constant name = \"CryptoMonster\" */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0d\n      dup2\n      mstore\n      0x20\n      add\n      0x43727970746f4d6f6e7374657200000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1168:1207  uint256 public tokenPrice_ = 1000000000 */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      sload(0x08)\n      dup2\n      jump\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":4018:4043   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":4006:4008   */\n      0x20\n        /* \"#utility.yul\":3991:4009   */\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1168:1207  uint256 public tokenPrice_ = 1000000000 */\n      tag_22\n        /* \"#utility.yul\":3872:4049   */\n      jump\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":20144:20513  function approve(address _delegate, uint256 _numTokens) public override returns (bool) {\r... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":3845:3859   */\n      swap1\n      iszero\n        /* \"#utility.yul\":3838:3860   */\n      iszero\n        /* \"#utility.yul\":3820:3861   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3808:3810   */\n      0x20\n        /* \"#utility.yul\":3793:3811   */\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":20144:20513  function approve(address _delegate, uint256 _numTokens) public override returns (bool) {\r... */\n      tag_22\n        /* \"#utility.yul\":3680:3867   */\n      jump\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4509:4609  function totalSupply() public override view returns (uint256) {\r... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4589:4601  totalSupply_ */\n      sload(0x07)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4509:4609  function totalSupply() public override view returns (uint256) {\r... */\n      jump(tag_25)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":13594:19808  function transferFrom(address _owner, address _buyer, uint256 _numTokens) public override returns (bool) {\r... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_30\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":777:812  uint8 public constant decimals = 12 */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":810:812  12 */\n      0x0c\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":777:812  uint8 public constant decimals = 12 */\n      dup2\n      jump\n    tag_47:\n      mload(0x40)\n        /* \"#utility.yul\":6645:6649   */\n      0xff\n        /* \"#utility.yul\":6633:6650   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":6615:6651   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6603:6605   */\n      0x20\n        /* \"#utility.yul\":6588:6606   */\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":777:812  uint8 public constant decimals = 12 */\n      tag_22\n        /* \"#utility.yul\":6473:6657   */\n      jump\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4819:5572  function balanceOf(address _tokenOwner) public override view returns (uint256) {\r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_25\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":224:651  function application(string memory _name, string memory _contactForCommunication, address _userAdr) public {\r... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":144:282  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_25\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":698:736  string public constant symbol = \"CMON\" */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_20\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      0x434d4f4e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":727:899  function acceptApplication (bool _changeStatus) public {\r... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_58\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":5995:13261  function transfer(address _receiver, uint256 _numTokens) public override returns (bool) {\r... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_30\n      tag_80\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3447:4307  function buy(uint256 _amount) external payable {\r... */\n    tag_14:\n      tag_58\n      tag_84\n      calldatasize\n      0x04\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":20795:20937  function allowance(address _owner, address _delegate) public override view returns (uint) {\r... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_25\n      tag_89\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_89:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":20903:20918  allowed[_owner] */\n      swap2\n      dup3\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":20879:20883  uint */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":20903:20918  allowed[_owner] */\n      swap1\n      dup2\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":20903:20910  allowed */\n      0x06\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":20903:20918  allowed[_owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":20903:20929  allowed[_owner][_delegate] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":20795:20937  function allowance(address _owner, address _delegate) public override view returns (uint) {\r... */\n      jump\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":20144:20513  function approve(address _delegate, uint256 _numTokens) public override returns (bool) {\r... */\n    tag_33:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":20250:20260  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":20225:20229  bool */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":20242:20261  allowed[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":20242:20249  allowed */\n      0x06\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":20242:20261  allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":20242:20272  allowed[msg.sender][_delegate] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":20242:20285  allowed[msg.sender][_delegate] = _numTokens */\n      dup6\n      swap1\n      sstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":20440:20483  Approval(msg.sender, _delegate, _numTokens) */\n      mload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":20225:20229  bool */\n      swap2\n      swap3\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":20242:20272  allowed[msg.sender][_delegate] */\n      swap1\n      swap2\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":20440:20483  Approval(msg.sender, _delegate, _numTokens) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap1\n      tag_96\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":20275:20285  _numTokens */\n      dup7\n        /* \"#utility.yul\":4018:4043   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4006:4008   */\n      0x20\n        /* \"#utility.yul\":3991:4009   */\n      add\n      swap1\n        /* \"#utility.yul\":3872:4049   */\n      jump\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":20440:20483  Approval(msg.sender, _delegate, _numTokens) */\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":20501:20505  true */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":20144:20513  function approve(address _delegate, uint256 _numTokens) public override returns (bool) {\r... */\n    tag_95:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":13594:19808  function transferFrom(address _owner, address _buyer, uint256 _numTokens) public override returns (bool) {\r... */\n    tag_44:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":13693:13697  bool */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":13714:13774  validatePhase(\"seed\", privateProviderAdr, publicProviderAdr) */\n      tag_99\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xe2, 0x1cd95959)\n      dup2\n      mstore\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1578:1620  0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2 */\n      0xab8483f64d9c6d1ecf9b849ae677dd3315835cb2\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1694:1736  0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2 */\n      dup1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":13714:13727  validatePhase */\n      tag_100\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":13714:13774  validatePhase(\"seed\", privateProviderAdr, publicProviderAdr) */\n      jump\t// in\n    tag_99:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":13714:13782  validatePhase(\"seed\", privateProviderAdr, publicProviderAdr) == true */\n      iszero\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":13778:13782  true */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":13714:13782  validatePhase(\"seed\", privateProviderAdr, publicProviderAdr) == true */\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":13710:19800  if (validatePhase(\"seed\", privateProviderAdr, publicProviderAdr) == true)  {                   // !: if фаза SEED\r... */\n      iszero\n      tag_101\n      jumpi\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":13845:13860  validateOwner() */\n      tag_102\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":13845:13858  validateOwner */\n      tag_103\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":13845:13860  validateOwner() */\n      jump\t// in\n    tag_102:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":13845:13868  validateOwner() == true */\n      iszero\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":13864:13868  true */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":13845:13868  validateOwner() == true */\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":13841:15735  if (validateOwner() == true) {                                                             // !: if пользователь является ownder'ом\r... */\n      iszero\n      tag_104\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14034:14054  structUsers_[_owner] */\n      dup5\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14034:14046  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14034:14054  structUsers_[_owner] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14034:14070  structUsers_[_owner].balance_overall */\n      0x03\n      add\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14020:14070  _numTokens <= structUsers_[_owner].balance_overall */\n      dup3\n      gt\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14012:14071  require(_numTokens <= structUsers_[_owner].balance_overall) */\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14176:14191  allowed[_owner] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14176:14183  allowed */\n      0x06\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14176:14191  allowed[_owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14192:14202  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14176:14203  allowed[_owner][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14162:14203  _numTokens <= allowed[_owner][msg.sender] */\n      dup3\n      gt\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14154:14204  require(_numTokens <= allowed[_owner][msg.sender]) */\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14334:14354  structUsers_[_owner] */\n      dup5\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14334:14346  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14334:14354  structUsers_[_owner] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14334:14367  structUsers_[_owner].balance_seed */\n      0x04\n      add\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14334:14383  structUsers_[_owner].balance_seed.sub(_numTokens) */\n      tag_107\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14372:14382  _numTokens */\n      dup4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14334:14371  structUsers_[_owner].balance_seed.sub */\n      tag_93\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14334:14383  structUsers_[_owner].balance_seed.sub(_numTokens) */\n      jump\t// in\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14298:14318  structUsers_[_owner] */\n      dup6\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14298:14310  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14298:14318  structUsers_[_owner] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14298:14331  structUsers_[_owner].balance_seed */\n      0x04\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14298:14383  structUsers_[_owner].balance_seed = structUsers_[_owner].balance_seed.sub(_numTokens) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14484:14491  allowed */\n      0x06\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14484:14499  allowed[_owner] */\n      dup2\n      mstore\n      dup3\n      dup3\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14500:14510  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14484:14511  allowed[_owner][msg.sender] */\n      dup4\n      mstore\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14484:14527  allowed[_owner][msg.sender].sub(_numTokens) */\n      tag_108\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14516:14526  _numTokens */\n      dup4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14484:14515  allowed[_owner][msg.sender].sub */\n      tag_93\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14484:14527  allowed[_owner][msg.sender].sub(_numTokens) */\n      jump\t// in\n    tag_108:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14454:14469  allowed[_owner] */\n      dup1\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14454:14461  allowed */\n      0x06\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14454:14469  allowed[_owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14470:14480  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14454:14481  allowed[_owner][msg.sender] */\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14454:14527  allowed[_owner][msg.sender] = allowed[_owner][msg.sender].sub(_numTokens) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14646:14666  structUsers_[_buyer] */\n      swap2\n      dup7\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      swap1\n      mstore\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14646:14679  structUsers_[_buyer].balance_seed */\n      0x04\n      add\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14646:14695  structUsers_[_buyer].balance_seed.add(_numTokens) */\n      tag_109\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14684:14694  _numTokens */\n      dup4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14646:14683  structUsers_[_buyer].balance_seed.add */\n      tag_94\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14646:14695  structUsers_[_buyer].balance_seed.add(_numTokens) */\n      jump\t// in\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14610:14630  structUsers_[_buyer] */\n      dup5\n      dup2\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14610:14622  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14610:14630  structUsers_[_buyer] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14610:14643  structUsers_[_buyer].balance_seed */\n      0x04\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14610:14695  structUsers_[_buyer].balance_seed = structUsers_[_buyer].balance_seed.add(_numTokens) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14779:14815  Transfer(_owner, _buyer, _numTokens) */\n      mload\n        /* \"#utility.yul\":4018:4043   */\n      dup6\n      dup2\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14610:14630  structUsers_[_buyer] */\n      swap1\n      swap3\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14779:14815  Transfer(_owner, _buyer, _numTokens) */\n      swap2\n      dup8\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":3991:4009   */\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14779:14815  Transfer(_owner, _buyer, _numTokens) */\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14841:14845  true */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14834:14845  return true */\n      jump(tag_154)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":13841:15735  if (validateOwner() == true) {                                                             // !: if пользователь является ownder'ом\r... */\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14908:14928  structUsers_[_owner] */\n      dup5\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14908:14920  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14908:14928  structUsers_[_owner] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14908:14941  structUsers_[_owner].balance_seed */\n      0x04\n      add\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14894:14941  _numTokens <= structUsers_[_owner].balance_seed */\n      dup3\n      gt\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":14886:14942  require(_numTokens <= structUsers_[_owner].balance_seed) */\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":13710:19800  if (validatePhase(\"seed\", privateProviderAdr, publicProviderAdr) == true)  {                   // !: if фаза SEED\r... */\n    tag_101:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":15756:15819  validatePhase(\"private\", privateProviderAdr, publicProviderAdr) */\n      tag_119\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xc8, 0x70726976617465)\n      dup2\n      mstore\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1578:1620  0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2 */\n      0xab8483f64d9c6d1ecf9b849ae677dd3315835cb2\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1694:1736  0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2 */\n      dup1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":15756:15769  validatePhase */\n      tag_100\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":15756:15819  validatePhase(\"private\", privateProviderAdr, publicProviderAdr) */\n      jump\t// in\n    tag_119:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":15756:15827  validatePhase(\"private\", privateProviderAdr, publicProviderAdr) == true */\n      iszero\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":15823:15827  true */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":15756:15827  validatePhase(\"private\", privateProviderAdr, publicProviderAdr) == true */\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":15752:19800  if (validatePhase(\"private\", privateProviderAdr, publicProviderAdr) == true) {     \r... */\n      iszero\n      tag_120\n      jumpi\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":15853:15868  validateOwner() */\n      tag_121\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":15853:15866  validateOwner */\n      tag_103\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":15853:15868  validateOwner() */\n      jump\t// in\n    tag_121:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":15853:15876  validateOwner() == true */\n      iszero\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":15872:15876  true */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":15853:15876  validateOwner() == true */\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":15849:17758  if (validateOwner() == true) {                                                             // !: if пользователь является ownder'ом\r... */\n      iszero\n      tag_122\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":16042:16062  structUsers_[_owner] */\n      dup5\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":16042:16054  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":16042:16062  structUsers_[_owner] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":16042:16078  structUsers_[_owner].balance_overall */\n      0x03\n      add\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":16028:16078  _numTokens <= structUsers_[_owner].balance_overall */\n      dup3\n      gt\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":16020:16079  require(_numTokens <= structUsers_[_owner].balance_overall) */\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":15849:17758  if (validateOwner() == true) {                                                             // !: if пользователь является ownder'ом\r... */\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":16916:16936  structUsers_[_owner] */\n      dup5\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":16916:16928  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":16916:16936  structUsers_[_owner] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":16916:16952  structUsers_[_owner].balance_private */\n      0x05\n      add\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":16902:16952  _numTokens <= structUsers_[_owner].balance_private */\n      dup3\n      gt\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":16894:16953  require(_numTokens <= structUsers_[_owner].balance_private) */\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17061:17076  allowed[_owner] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17061:17068  allowed */\n      0x06\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17061:17076  allowed[_owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17077:17087  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17061:17088  allowed[_owner][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17047:17088  _numTokens <= allowed[_owner][msg.sender] */\n      dup3\n      gt\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17039:17089  require(_numTokens <= allowed[_owner][msg.sender]) */\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17222:17242  structUsers_[_owner] */\n      dup5\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17222:17234  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17222:17242  structUsers_[_owner] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17222:17258  structUsers_[_owner].balance_private */\n      0x05\n      add\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17222:17274  structUsers_[_owner].balance_private.sub(_numTokens) */\n      tag_132\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17263:17273  _numTokens */\n      dup4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17222:17262  structUsers_[_owner].balance_private.sub */\n      tag_93\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17222:17274  structUsers_[_owner].balance_private.sub(_numTokens) */\n      jump\t// in\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17183:17203  structUsers_[_owner] */\n      dup6\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17183:17195  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17183:17203  structUsers_[_owner] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17183:17219  structUsers_[_owner].balance_private */\n      0x05\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17183:17274  structUsers_[_owner].balance_private = structUsers_[_owner].balance_private.sub(_numTokens) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17375:17382  allowed */\n      0x06\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17375:17390  allowed[_owner] */\n      dup2\n      mstore\n      dup3\n      dup3\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17391:17401  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17375:17402  allowed[_owner][msg.sender] */\n      dup4\n      mstore\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17375:17418  allowed[_owner][msg.sender].sub(_numTokens) */\n      tag_133\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17407:17417  _numTokens */\n      dup4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17375:17406  allowed[_owner][msg.sender].sub */\n      tag_93\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17375:17418  allowed[_owner][msg.sender].sub(_numTokens) */\n      jump\t// in\n    tag_133:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17345:17360  allowed[_owner] */\n      dup1\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17345:17352  allowed */\n      0x06\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17345:17360  allowed[_owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17361:17371  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17345:17372  allowed[_owner][msg.sender] */\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17345:17418  allowed[_owner][msg.sender] = allowed[_owner][msg.sender].sub(_numTokens) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17540:17560  structUsers_[_buyer] */\n      swap2\n      dup7\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      swap1\n      mstore\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17540:17576  structUsers_[_buyer].balance_private */\n      0x05\n      add\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17540:17592  structUsers_[_buyer].balance_private.add(_numTokens) */\n      tag_134\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17581:17591  _numTokens */\n      dup4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17540:17580  structUsers_[_buyer].balance_private.add */\n      tag_94\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17540:17592  structUsers_[_buyer].balance_private.add(_numTokens) */\n      jump\t// in\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17501:17521  structUsers_[_buyer] */\n      dup5\n      dup2\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17501:17513  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17501:17521  structUsers_[_buyer] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17501:17537  structUsers_[_buyer].balance_private */\n      0x05\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17501:17592  structUsers_[_buyer].balance_private = structUsers_[_buyer].balance_private.add(_numTokens) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17676:17712  Transfer(_owner, _buyer, _numTokens) */\n      mload\n        /* \"#utility.yul\":4018:4043   */\n      dup6\n      dup2\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17501:17521  structUsers_[_buyer] */\n      swap1\n      swap3\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17676:17712  Transfer(_owner, _buyer, _numTokens) */\n      swap2\n      dup8\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":3991:4009   */\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17676:17712  Transfer(_owner, _buyer, _numTokens) */\n      tag_110\n        /* \"#utility.yul\":3872:4049   */\n      jump\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":15752:19800  if (validatePhase(\"private\", privateProviderAdr, publicProviderAdr) == true) {     \r... */\n    tag_120:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17779:17841  validatePhase(\"public\", privateProviderAdr, publicProviderAdr) */\n      tag_137\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xd0, 0x7075626c6963)\n      dup2\n      mstore\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1578:1620  0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2 */\n      0xab8483f64d9c6d1ecf9b849ae677dd3315835cb2\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1694:1736  0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2 */\n      dup1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17779:17792  validatePhase */\n      tag_100\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17779:17841  validatePhase(\"public\", privateProviderAdr, publicProviderAdr) */\n      jump\t// in\n    tag_137:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17779:17849  validatePhase(\"public\", privateProviderAdr, publicProviderAdr) == true */\n      iszero\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17845:17849  true */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17779:17849  validatePhase(\"public\", privateProviderAdr, publicProviderAdr) == true */\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17775:19800  if (validatePhase(\"public\", privateProviderAdr, publicProviderAdr) == true) { \r... */\n      iszero\n      tag_138\n      jumpi\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17871:17886  validateOwner() */\n      tag_139\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17871:17884  validateOwner */\n      tag_103\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17871:17886  validateOwner() */\n      jump\t// in\n    tag_139:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17871:17894  validateOwner() == true */\n      iszero\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17890:17894  true */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17871:17894  validateOwner() == true */\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17867:19771  if (validateOwner() == true) {                                                             // !: if пользователь является ownder'ом\r... */\n      iszero\n      tag_140\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":18060:18080  structUsers_[_owner] */\n      dup5\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":18060:18072  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":18060:18080  structUsers_[_owner] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":18060:18096  structUsers_[_owner].balance_overall */\n      0x03\n      add\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":18046:18096  _numTokens <= structUsers_[_owner].balance_overall */\n      dup3\n      gt\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":18038:18097  require(_numTokens <= structUsers_[_owner].balance_overall) */\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17867:19771  if (validateOwner() == true) {                                                             // !: if пользователь является ownder'ом\r... */\n    tag_140:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":18934:18954  structUsers_[_owner] */\n      dup5\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":18934:18946  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":18934:18954  structUsers_[_owner] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":18934:18969  structUsers_[_owner].balance_public */\n      0x06\n      add\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":18920:18969  _numTokens <= structUsers_[_owner].balance_public */\n      dup3\n      gt\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":18912:18970  require(_numTokens <= structUsers_[_owner].balance_public) */\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19078:19093  allowed[_owner] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19078:19085  allowed */\n      0x06\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19078:19093  allowed[_owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19094:19104  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19078:19105  allowed[_owner][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19064:19105  _numTokens <= allowed[_owner][msg.sender] */\n      dup3\n      gt\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19056:19106  require(_numTokens <= allowed[_owner][msg.sender]) */\n      tag_149\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_149:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19238:19258  structUsers_[_owner] */\n      dup5\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19238:19250  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19238:19258  structUsers_[_owner] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19238:19273  structUsers_[_owner].balance_public */\n      0x06\n      add\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19238:19289  structUsers_[_owner].balance_public.sub(_numTokens) */\n      tag_150\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19278:19288  _numTokens */\n      dup4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19238:19277  structUsers_[_owner].balance_public.sub */\n      tag_93\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19238:19289  structUsers_[_owner].balance_public.sub(_numTokens) */\n      jump\t// in\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19200:19220  structUsers_[_owner] */\n      dup6\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19200:19212  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19200:19220  structUsers_[_owner] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19200:19235  structUsers_[_owner].balance_public */\n      0x06\n      swap1\n      dup2\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19200:19289  structUsers_[_owner].balance_public = structUsers_[_owner].balance_public.sub(_numTokens) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19390:19405  allowed[_owner] */\n      swap3\n      dup2\n      mstore\n      dup3\n      dup3\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19406:19416  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19390:19417  allowed[_owner][msg.sender] */\n      dup4\n      mstore\n      swap1\n      mstore\n      keccak256\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19390:19433  allowed[_owner][msg.sender].sub(_numTokens) */\n      tag_151\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19422:19432  _numTokens */\n      dup4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19390:19421  allowed[_owner][msg.sender].sub */\n      tag_93\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19390:19433  allowed[_owner][msg.sender].sub(_numTokens) */\n      jump\t// in\n    tag_151:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19360:19375  allowed[_owner] */\n      dup1\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19360:19367  allowed */\n      0x06\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19360:19375  allowed[_owner] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19376:19386  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19360:19387  allowed[_owner][msg.sender] */\n      dup6\n      mstore\n      dup3\n      mstore\n      dup1\n      dup5\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19360:19433  allowed[_owner][msg.sender] = allowed[_owner][msg.sender].sub(_numTokens) */\n      swap6\n      swap1\n      swap6\n      sstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19554:19574  structUsers_[_buyer] */\n      swap3\n      dup8\n      and\n      dup3\n      mstore\n      swap2\n      dup2\n      swap1\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19554:19589  structUsers_[_buyer].balance_public */\n      add\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19554:19605  structUsers_[_buyer].balance_public.add(_numTokens) */\n      tag_152\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19594:19604  _numTokens */\n      dup4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19554:19593  structUsers_[_buyer].balance_public.add */\n      tag_94\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19554:19605  structUsers_[_buyer].balance_public.add(_numTokens) */\n      jump\t// in\n    tag_152:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19516:19536  structUsers_[_buyer] */\n      dup5\n      dup2\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19516:19528  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19516:19536  structUsers_[_buyer] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19516:19551  structUsers_[_buyer].balance_public */\n      0x06\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19516:19605  structUsers_[_buyer].balance_public = structUsers_[_buyer].balance_public.add(_numTokens) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19689:19725  Transfer(_owner, _buyer, _numTokens) */\n      mload\n        /* \"#utility.yul\":4018:4043   */\n      dup6\n      dup2\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19516:19536  structUsers_[_buyer] */\n      swap1\n      swap3\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19689:19725  Transfer(_owner, _buyer, _numTokens) */\n      swap2\n      dup8\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":3991:4009   */\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19689:19725  Transfer(_owner, _buyer, _numTokens) */\n      tag_110\n        /* \"#utility.yul\":3872:4049   */\n      jump\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17775:19800  if (validatePhase(\"public\", privateProviderAdr, publicProviderAdr) == true) { \r... */\n    tag_138:\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":19795:19800  false */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":17775:19800  if (validatePhase(\"public\", privateProviderAdr, publicProviderAdr) == true) { \r... */\n    tag_154:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":13594:19808  function transferFrom(address _owner, address _buyer, uint256 _numTokens) public override returns (bool) {\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4819:5572  function balanceOf(address _tokenOwner) public override view returns (uint256) {\r... */\n    tag_55:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1578:1620  0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2 */\n      0xab8483f64d9c6d1ecf9b849ae677dd3315835cb2\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4889:4896  uint256 */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4912:4945  structPhases_[privateProviderAdr] */\n      swap1\n      dup2\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4912:4925  structPhases_ */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4912:4945  structPhases_[privateProviderAdr] */\n      0x20\n      mstore\n      0x9d4d959825f0680278e64197773b2a50cd78b2b2cb00711ddbeebf0bf93cd8a4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4912:4957  structPhases_[privateProviderAdr].statusPhase */\n      sload\n      0xff\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4912:4966  structPhases_[privateProviderAdr].statusPhase == false */\n      iszero\n      dup1\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4912:5023  structPhases_[privateProviderAdr].statusPhase == false && structPhases_[publicProviderAdr].statusPhase == false */\n      tag_156\n      jumpi\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1694:1736  0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2 */\n      0xab8483f64d9c6d1ecf9b849ae677dd3315835cb2\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4970:5002  structPhases_[publicProviderAdr] */\n      0x00\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4970:4983  structPhases_ */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4970:5002  structPhases_[publicProviderAdr] */\n      0x20\n      mstore\n      0x9d4d959825f0680278e64197773b2a50cd78b2b2cb00711ddbeebf0bf93cd8a4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4970:5014  structPhases_[publicProviderAdr].statusPhase */\n      sload\n      0xff\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4970:5023  structPhases_[publicProviderAdr].statusPhase == false */\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4912:5023  structPhases_[privateProviderAdr].statusPhase == false && structPhases_[publicProviderAdr].statusPhase == false */\n    tag_156:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4909:5564  if(structPhases_[privateProviderAdr].statusPhase == false && structPhases_[publicProviderAdr].statusPhase == false) { // !: if фаза SEED\r... */\n      iszero\n      tag_157\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":5070:5095  structUsers_[_tokenOwner] */\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":5070:5082  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":5070:5095  structUsers_[_tokenOwner] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":5070:5108  structUsers_[_tokenOwner].balance_seed */\n      0x04\n      add\n      sload\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4819:5572  function balanceOf(address _tokenOwner) public override view returns (uint256) {\r... */\n      jump\t// out\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4909:5564  if(structPhases_[privateProviderAdr].statusPhase == false && structPhases_[publicProviderAdr].statusPhase == false) { // !: if фаза SEED\r... */\n    tag_157:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1578:1620  0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2 */\n      0xab8483f64d9c6d1ecf9b849ae677dd3315835cb2\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":5130:5163  structPhases_[privateProviderAdr] */\n      0x00\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":5130:5143  structPhases_ */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":5130:5163  structPhases_[privateProviderAdr] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x9d4d959825f0680278e64197773b2a50cd78b2b2cb00711ddbeebf0bf93cd8a4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":5130:5175  structPhases_[privateProviderAdr].statusPhase */\n      sload\n      0xff\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":5130:5183  structPhases_[privateProviderAdr].statusPhase == true */\n      iszero\n      iszero\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":5126:5564  if (structPhases_[privateProviderAdr].statusPhase == true) {                                                   // !: if фаза PRIVATE\r... */\n      iszero\n      tag_159\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":5283:5308  structUsers_[_tokenOwner] */\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":5283:5295  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":5283:5308  structUsers_[_tokenOwner] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":5283:5324  structUsers_[_tokenOwner].balance_private */\n      0x05\n      add\n      sload\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4819:5572  function balanceOf(address _tokenOwner) public override view returns (uint256) {\r... */\n      jump\t// out\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":5126:5564  if (structPhases_[privateProviderAdr].statusPhase == true) {                                                   // !: if фаза PRIVATE\r... */\n    tag_159:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1694:1736  0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2 */\n      0xab8483f64d9c6d1ecf9b849ae677dd3315835cb2\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":5346:5378  structPhases_[publicProviderAdr] */\n      0x00\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":5346:5359  structPhases_ */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":5346:5378  structPhases_[publicProviderAdr] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x9d4d959825f0680278e64197773b2a50cd78b2b2cb00711ddbeebf0bf93cd8a4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":5346:5390  structPhases_[publicProviderAdr].statusPhase */\n      sload\n      0xff\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":5346:5398  structPhases_[publicProviderAdr].statusPhase == true */\n      iszero\n      iszero\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":5342:5564  if (structPhases_[publicProviderAdr].statusPhase == true) {                                                    // !: if фаза PUBLIC\r... */\n      iszero\n      tag_161\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":5498:5523  structUsers_[_tokenOwner] */\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":5498:5510  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":5498:5523  structUsers_[_tokenOwner] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":5498:5538  structUsers_[_tokenOwner].balance_public */\n      0x06\n      add\n      sload\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4819:5572  function balanceOf(address _tokenOwner) public override view returns (uint256) {\r... */\n      jump\t// out\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":5342:5564  if (structPhases_[publicProviderAdr].statusPhase == true) {                                                    // !: if фаза PUBLIC\r... */\n    tag_161:\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":5563:5564  0 */\n      0x00\n      swap2\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4819:5572  function balanceOf(address _tokenOwner) public override view returns (uint256) {\r... */\n      swap1\n      pop\n      jump\t// out\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":5342:5564  if (structPhases_[publicProviderAdr].statusPhase == true) {                                                    // !: if фаза PUBLIC\r... */\n    tag_162:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4819:5572  function balanceOf(address _tokenOwner) public override view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":224:651  function application(string memory _name, string memory _contactForCommunication, address _userAdr) public {\r... */\n    tag_61:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":369:379  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":350:380  strucApplications_[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":350:368  strucApplications_ */\n      0x02\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":350:380  strucApplications_[msg.sender] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":350:386  strucApplications_[msg.sender].exist */\n      add\n      sload\n      shl(0xb0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":350:394  strucApplications_[msg.sender].exist == true */\n      iszero\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":390:394  true */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":350:394  strucApplications_[msg.sender].exist == true */\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":342:424  require(strucApplications_[msg.sender].exist == true, \"Application already sent!\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5793:5795   */\n      0x20\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":342:424  require(strucApplications_[msg.sender].exist == true, \"Application already sent!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5775:5796   */\n      mstore\n        /* \"#utility.yul\":5832:5834   */\n      0x19\n        /* \"#utility.yul\":5812:5830   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5805:5835   */\n      mstore\n        /* \"#utility.yul\":5871:5898   */\n      0x4170706c69636174696f6e20616c72656164792073656e742100000000000000\n        /* \"#utility.yul\":5851:5869   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5844:5899   */\n      mstore\n        /* \"#utility.yul\":5916:5934   */\n      0x64\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":342:424  require(strucApplications_[msg.sender].exist == true, \"Application already sent!\") */\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_164:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":564:643  structApplication(_name, _contactForCommunication, _userAdr, true, false, true) */\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n      dup5\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      dup6\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      dup3\n      dup5\n      add\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":625:629  true */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":564:643  structApplication(_name, _contactForCommunication, _userAdr, true, false, true) */\n      0x60\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n      0x00\n      0x80\n      dup5\n      add\n      dup2\n      swap1\n      mstore\n      0xa0\n      dup5\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":549:559  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":530:560  strucApplications_[msg.sender] */\n      dup2\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":530:548  strucApplications_ */\n      0x02\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":530:560  strucApplications_[msg.sender] */\n      dup3\n      mstore\n      swap3\n      swap1\n      swap3\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":530:643  strucApplications_[msg.sender]  = structApplication(_name, _contactForCommunication, _userAdr, true, false, true) */\n      dup2\n      mload\n      dup1\n      mload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":564:643  structApplication(_name, _contactForCommunication, _userAdr, true, false, true) */\n      swap3\n      swap4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":530:560  strucApplications_[msg.sender] */\n      swap2\n      swap3\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":530:643  strucApplications_[msg.sender]  = structApplication(_name, _contactForCommunication, _userAdr, true, false, true) */\n      tag_167\n      swap3\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":530:560  strucApplications_[msg.sender] */\n      dup5\n      swap3\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":530:643  strucApplications_[msg.sender]  = structApplication(_name, _contactForCommunication, _userAdr, true, false, true) */\n      add\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      pop\n      0x20\n      dup3\n      dup2\n      add\n      mload\n      dup1\n      mload\n      tag_169\n      swap3\n      0x01\n      dup6\n      add\n      swap3\n      add\n      swap1\n      tag_168\n      jump\t// in\n    tag_169:\n      pop\n      0x40\n      dup3\n      add\n      mload\n      0x02\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      0x60\n      dup5\n      add\n      mload\n      0x80\n      dup6\n      add\n      mload\n      0xa0\n      swap1\n      swap6\n      add\n      mload\n      iszero\n      iszero\n      shl(0xb0, 0x01)\n      mul\n      0xffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff\n      swap6\n      iszero\n      iszero\n      0x01000000000000000000000000000000000000000000\n      mul\n      swap6\n      swap1\n      swap6\n      and\n      0xffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffff\n      swap2\n      iszero\n      iszero\n      0x010000000000000000000000000000000000000000\n      mul\n      0xffffffffffffffffffffff000000000000000000000000000000000000000000\n      swap1\n      swap4\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      or\n      swap2\n      swap1\n      swap2\n      or\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":224:651  function application(string memory _name, string memory _contactForCommunication, address _userAdr) public {\r... */\n      jump\t// out\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":144:282  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n    tag_66:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":208:215  bytes32 */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":266:271  _hash */\n      dup2\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":249:272  abi.encodePacked(_hash) */\n      add(0x20, mload(0x40))\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":239:273  keccak256(abi.encodePacked(_hash)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":232:274  return(keccak256(abi.encodePacked(_hash))) */\n      swap1\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":144:282  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":727:899  function acceptApplication (bool _changeStatus) public {\r... */\n    tag_77:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":834:853  Role.SYSTEM_PRIVATE */\n      0x02\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":814:824  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":801:813  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":801:825  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":801:830  structUsers_[msg.sender].role */\n      sload\n      0xff\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":801:853  structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_178\n      jumpi\n      tag_178\n      tag_176\n      jump\t// in\n    tag_178:\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":793:889  require(structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"You are not a private provider!\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4644:4646   */\n      0x20\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":793:889  require(structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"You are not a private provider!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4626:4647   */\n      mstore\n        /* \"#utility.yul\":4683:4685   */\n      0x1f\n        /* \"#utility.yul\":4663:4681   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4656:4686   */\n      mstore\n        /* \"#utility.yul\":4722:4755   */\n      0x596f7520617265206e6f74206120707269766174652070726f76696465722100\n        /* \"#utility.yul\":4702:4720   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4695:4756   */\n      mstore\n        /* \"#utility.yul\":4773:4791   */\n      0x64\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":793:889  require(structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"You are not a private provider!\") */\n      tag_165\n        /* \"#utility.yul\":4442:4797   */\n      jump\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":793:889  require(structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"You are not a private provider!\") */\n    tag_179:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":727:899  function acceptApplication (bool _changeStatus) public {\r... */\n      pop\n      jump\t// out\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":5995:13261  function transfer(address _receiver, uint256 _numTokens) public override returns (bool) {\r... */\n    tag_81:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6077:6081  bool */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6098:6158  validatePhase(\"seed\", privateProviderAdr, publicProviderAdr) */\n      tag_183\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xe2, 0x1cd95959)\n      dup2\n      mstore\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1578:1620  0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2 */\n      0xab8483f64d9c6d1ecf9b849ae677dd3315835cb2\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1694:1736  0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2 */\n      dup1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6098:6111  validatePhase */\n      tag_100\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6098:6158  validatePhase(\"seed\", privateProviderAdr, publicProviderAdr) */\n      jump\t// in\n    tag_183:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6098:6166  validatePhase(\"seed\", privateProviderAdr, publicProviderAdr) == true */\n      iszero\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6162:6166  true */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6098:6166  validatePhase(\"seed\", privateProviderAdr, publicProviderAdr) == true */\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6094:13253  if (validatePhase(\"seed\", privateProviderAdr, publicProviderAdr) == true)  {                             // !: if фаза SEED\r... */\n      iszero\n      tag_184\n      jumpi\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6239:6254  validateOwner() */\n      tag_185\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6239:6252  validateOwner */\n      tag_103\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6239:6254  validateOwner() */\n      jump\t// in\n    tag_185:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6239:6262  validateOwner() == true */\n      iszero\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6258:6262  true */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6239:6262  validateOwner() == true */\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6235:9011  if (validateOwner() == true) {                                                                         // !: if пользователь админ\r... */\n      iszero\n      tag_186\n      jumpi\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6435:6445  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6422:6434  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6422:6446  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6422:6462  structUsers_[msg.sender].balance_overall */\n      0x03\n      add\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6408:6462  _numTokens <= structUsers_[msg.sender].balance_overall */\n      dup3\n      gt\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6400:6463  require(_numTokens <= structUsers_[msg.sender].balance_overall) */\n      tag_187\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_187:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6647:6660  Role.INVESTOR */\n      0x03\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6627:6637  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6614:6626  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6614:6638  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6614:6643  structUsers_[msg.sender].role */\n      sload\n      0xff\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6614:6660  structUsers_[msg.sender].role == Role.INVESTOR */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_191\n      jumpi\n      tag_191\n      tag_176\n      jump\t// in\n    tag_191:\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6605:6682  require (structUsers_[msg.sender].role == Role.INVESTOR, \"Your not investor\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6147:6149   */\n      0x20\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6605:6682  require (structUsers_[msg.sender].role == Role.INVESTOR, \"Your not investor\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6129:6150   */\n      mstore\n        /* \"#utility.yul\":6186:6188   */\n      0x11\n        /* \"#utility.yul\":6166:6184   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6159:6189   */\n      mstore\n      shl(0x79, 0x2cb7bab9103737ba1034b73b32b9ba37b9)\n        /* \"#utility.yul\":6205:6223   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6198:6245   */\n      mstore\n        /* \"#utility.yul\":6262:6280   */\n      0x64\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6605:6682  require (structUsers_[msg.sender].role == Role.INVESTOR, \"Your not investor\") */\n      tag_165\n        /* \"#utility.yul\":5945:6286   */\n      jump\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6605:6682  require (structUsers_[msg.sender].role == Role.INVESTOR, \"Your not investor\") */\n    tag_192:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6853:6866  Role.INVESTOR */\n      0x03\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6821:6844  structUsers_[_receiver] */\n      dup5\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6821:6833  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6821:6844  structUsers_[_receiver] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6821:6849  structUsers_[_receiver].role */\n      sload\n      0xff\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6821:6866  structUsers_[_receiver].role == Role.INVESTOR */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_198\n      jumpi\n      tag_198\n      tag_176\n      jump\t// in\n    tag_198:\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6812:6888  require (structUsers_[_receiver].role == Role.INVESTOR, \"Your not investor\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6147:6149   */\n      0x20\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6812:6888  require (structUsers_[_receiver].role == Role.INVESTOR, \"Your not investor\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6129:6150   */\n      mstore\n        /* \"#utility.yul\":6186:6188   */\n      0x11\n        /* \"#utility.yul\":6166:6184   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6159:6189   */\n      mstore\n      shl(0x79, 0x2cb7bab9103737ba1034b73b32b9ba37b9)\n        /* \"#utility.yul\":6205:6223   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6198:6245   */\n      mstore\n        /* \"#utility.yul\":6262:6280   */\n      0x64\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6812:6888  require (structUsers_[_receiver].role == Role.INVESTOR, \"Your not investor\") */\n      tag_165\n        /* \"#utility.yul\":5945:6286   */\n      jump\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6812:6888  require (structUsers_[_receiver].role == Role.INVESTOR, \"Your not investor\") */\n    tag_199:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7077:7087  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7064:7076  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7064:7088  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7064:7104  structUsers_[msg.sender].balance_overall */\n      0x03\n      add\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7064:7120  structUsers_[msg.sender].balance_overall.sub(_numTokens) */\n      tag_201\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7109:7119  _numTokens */\n      dup4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7064:7108  structUsers_[msg.sender].balance_overall.sub */\n      tag_93\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7064:7120  structUsers_[msg.sender].balance_overall.sub(_numTokens) */\n      jump\t// in\n    tag_201:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7034:7044  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7021:7033  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7021:7045  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7021:7061  structUsers_[msg.sender].balance_overall */\n      0x03\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7021:7120  structUsers_[msg.sender].balance_overall = structUsers_[msg.sender].balance_overall.sub(_numTokens) */\n      swap3\n      swap1\n      swap3\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7249:7272  structUsers_[_receiver] */\n      dup6\n      and\n      dup2\n      mstore\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7249:7285  structUsers_[_receiver].balance_seed */\n      0x04\n      add\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7249:7301  structUsers_[_receiver].balance_seed.add(_numTokens) */\n      tag_202\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7290:7300  _numTokens */\n      dup4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7249:7289  structUsers_[_receiver].balance_seed.add */\n      tag_94\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7249:7301  structUsers_[_receiver].balance_seed.add(_numTokens) */\n      jump\t// in\n    tag_202:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7210:7233  structUsers_[_receiver] */\n      dup5\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7210:7222  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7210:7233  structUsers_[_receiver] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7210:7246  structUsers_[_receiver].balance_seed */\n      0x04\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7210:7301  structUsers_[_receiver].balance_seed = structUsers_[_receiver].balance_seed.add(_numTokens) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7398:7441  Transfer(msg.sender, _receiver, _numTokens) */\n      mload\n        /* \"#utility.yul\":4018:4043   */\n      dup5\n      dup2\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7210:7233  structUsers_[_receiver] */\n      swap1\n      swap2\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7407:7417  msg.sender */\n      caller\n      swap2\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7398:7441  Transfer(msg.sender, _receiver, _numTokens) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":3991:4009   */\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7398:7441  Transfer(msg.sender, _receiver, _numTokens) */\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7601:7605  true */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7594:7605  return true */\n      jump(tag_95)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6235:9011  if (validateOwner() == true) {                                                                         // !: if пользователь админ\r... */\n    tag_186:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7825:7835  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7812:7824  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7812:7836  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7812:7849  structUsers_[msg.sender].balance_seed */\n      0x04\n      add\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7798:7849  _numTokens <= structUsers_[msg.sender].balance_seed */\n      dup3\n      gt\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7790:7850  require(_numTokens <= structUsers_[msg.sender].balance_seed) */\n      tag_205\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_205:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8037:8050  Role.INVESTOR */\n      0x03\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8017:8027  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8004:8016  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8004:8028  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8004:8033  structUsers_[msg.sender].role */\n      sload\n      0xff\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8004:8050  structUsers_[msg.sender].role == Role.INVESTOR */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_209\n      jumpi\n      tag_209\n      tag_176\n      jump\t// in\n    tag_209:\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7995:8072  require (structUsers_[msg.sender].role == Role.INVESTOR, \"Your not investor\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6147:6149   */\n      0x20\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7995:8072  require (structUsers_[msg.sender].role == Role.INVESTOR, \"Your not investor\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6129:6150   */\n      mstore\n        /* \"#utility.yul\":6186:6188   */\n      0x11\n        /* \"#utility.yul\":6166:6184   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6159:6189   */\n      mstore\n      shl(0x79, 0x2cb7bab9103737ba1034b73b32b9ba37b9)\n        /* \"#utility.yul\":6205:6223   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6198:6245   */\n      mstore\n        /* \"#utility.yul\":6262:6280   */\n      0x64\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7995:8072  require (structUsers_[msg.sender].role == Role.INVESTOR, \"Your not investor\") */\n      tag_165\n        /* \"#utility.yul\":5945:6286   */\n      jump\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":7995:8072  require (structUsers_[msg.sender].role == Role.INVESTOR, \"Your not investor\") */\n    tag_210:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8243:8256  Role.INVESTOR */\n      0x03\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8211:8234  structUsers_[_receiver] */\n      dup5\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8211:8223  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8211:8234  structUsers_[_receiver] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8211:8239  structUsers_[_receiver].role */\n      sload\n      0xff\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8211:8256  structUsers_[_receiver].role == Role.INVESTOR */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_215\n      jumpi\n      tag_215\n      tag_176\n      jump\t// in\n    tag_215:\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8202:8278  require (structUsers_[_receiver].role == Role.INVESTOR, \"Your not investor\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6147:6149   */\n      0x20\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8202:8278  require (structUsers_[_receiver].role == Role.INVESTOR, \"Your not investor\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6129:6150   */\n      mstore\n        /* \"#utility.yul\":6186:6188   */\n      0x11\n        /* \"#utility.yul\":6166:6184   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6159:6189   */\n      mstore\n      shl(0x79, 0x2cb7bab9103737ba1034b73b32b9ba37b9)\n        /* \"#utility.yul\":6205:6223   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6198:6245   */\n      mstore\n        /* \"#utility.yul\":6262:6280   */\n      0x64\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8202:8278  require (structUsers_[_receiver].role == Role.INVESTOR, \"Your not investor\") */\n      tag_165\n        /* \"#utility.yul\":5945:6286   */\n      jump\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8202:8278  require (structUsers_[_receiver].role == Role.INVESTOR, \"Your not investor\") */\n    tag_216:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8464:8474  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8451:8463  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8451:8475  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8451:8488  structUsers_[msg.sender].balance_seed */\n      0x04\n      add\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8451:8504  structUsers_[msg.sender].balance_seed.sub(_numTokens) */\n      tag_218\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8493:8503  _numTokens */\n      dup4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8451:8492  structUsers_[msg.sender].balance_seed.sub */\n      tag_93\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8451:8504  structUsers_[msg.sender].balance_seed.sub(_numTokens) */\n      jump\t// in\n    tag_218:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8424:8434  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8411:8423  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8411:8435  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8411:8448  structUsers_[msg.sender].balance_seed */\n      0x04\n      swap1\n      dup2\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8411:8504  structUsers_[msg.sender].balance_seed = structUsers_[msg.sender].balance_seed.sub(_numTokens) */\n      swap4\n      swap1\n      swap4\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8639:8662  structUsers_[_receiver] */\n      dup7\n      and\n      dup3\n      mstore\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8639:8675  structUsers_[_receiver].balance_seed */\n      add\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8639:8691  structUsers_[_receiver].balance_seed.add(_numTokens) */\n      tag_202\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8680:8690  _numTokens */\n      dup4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8639:8679  structUsers_[_receiver].balance_seed.add */\n      tag_94\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":8639:8691  structUsers_[_receiver].balance_seed.add(_numTokens) */\n      jump\t// in\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":6094:13253  if (validatePhase(\"seed\", privateProviderAdr, publicProviderAdr) == true)  {                             // !: if фаза SEED\r... */\n    tag_184:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9032:9095  validatePhase(\"private\", privateProviderAdr, publicProviderAdr) */\n      tag_222\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xc8, 0x70726976617465)\n      dup2\n      mstore\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1578:1620  0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2 */\n      0xab8483f64d9c6d1ecf9b849ae677dd3315835cb2\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1694:1736  0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2 */\n      dup1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9032:9045  validatePhase */\n      tag_100\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9032:9095  validatePhase(\"private\", privateProviderAdr, publicProviderAdr) */\n      jump\t// in\n    tag_222:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9032:9103  validatePhase(\"private\", privateProviderAdr, publicProviderAdr) == true */\n      iszero\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9099:9103  true */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9032:9103  validatePhase(\"private\", privateProviderAdr, publicProviderAdr) == true */\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9028:13253  if (validatePhase(\"private\", privateProviderAdr, publicProviderAdr) == true) {                    // !: if фаза PRIVATE\r... */\n      iszero\n      tag_223\n      jumpi\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9169:9184  validateOwner() */\n      tag_224\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9169:9182  validateOwner */\n      tag_103\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9169:9184  validateOwner() */\n      jump\t// in\n    tag_224:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9169:9192  validateOwner() == true */\n      iszero\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9188:9192  true */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9169:9192  validateOwner() == true */\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9165:11119  if (validateOwner() == true) {                                                                         // !: if пользователь админ\r... */\n      iszero\n      tag_225\n      jumpi\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9365:9375  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9352:9364  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9352:9376  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9352:9392  structUsers_[msg.sender].balance_overall */\n      0x03\n      add\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9338:9392  _numTokens <= structUsers_[msg.sender].balance_overall */\n      dup3\n      gt\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9330:9393  require(_numTokens <= structUsers_[msg.sender].balance_overall) */\n      tag_226\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_226:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9593:9603  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9580:9592  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9580:9604  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9580:9620  structUsers_[msg.sender].balance_overall */\n      0x03\n      add\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9580:9636  structUsers_[msg.sender].balance_overall.sub(_numTokens) */\n      tag_227\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9625:9635  _numTokens */\n      dup4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9580:9624  structUsers_[msg.sender].balance_overall.sub */\n      tag_93\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9580:9636  structUsers_[msg.sender].balance_overall.sub(_numTokens) */\n      jump\t// in\n    tag_227:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9550:9560  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9537:9549  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9537:9561  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9537:9577  structUsers_[msg.sender].balance_overall */\n      0x03\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9537:9636  structUsers_[msg.sender].balance_overall = structUsers_[msg.sender].balance_overall.sub(_numTokens) */\n      swap3\n      swap1\n      swap3\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9768:9791  structUsers_[_receiver] */\n      dup6\n      and\n      dup2\n      mstore\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9768:9807  structUsers_[_receiver].balance_private */\n      0x05\n      add\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9768:9823  structUsers_[_receiver].balance_private.add(_numTokens) */\n      tag_228\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9812:9822  _numTokens */\n      dup4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9768:9811  structUsers_[_receiver].balance_private.add */\n      tag_94\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9768:9823  structUsers_[_receiver].balance_private.add(_numTokens) */\n      jump\t// in\n    tag_228:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9726:9749  structUsers_[_receiver] */\n      dup5\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9726:9738  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9726:9749  structUsers_[_receiver] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9726:9765  structUsers_[_receiver].balance_private */\n      0x05\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9726:9823  structUsers_[_receiver].balance_private = structUsers_[_receiver].balance_private.add(_numTokens) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9917:9960  Transfer(msg.sender, _receiver, _numTokens) */\n      mload\n        /* \"#utility.yul\":4018:4043   */\n      dup5\n      dup2\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9726:9749  structUsers_[_receiver] */\n      swap1\n      swap2\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9926:9936  msg.sender */\n      caller\n      swap2\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9917:9960  Transfer(msg.sender, _receiver, _numTokens) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":3991:4009   */\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9917:9960  Transfer(msg.sender, _receiver, _numTokens) */\n      tag_203\n        /* \"#utility.yul\":3872:4049   */\n      jump\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9165:11119  if (validateOwner() == true) {                                                                         // !: if пользователь админ\r... */\n    tag_225:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10344:10354  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10331:10343  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10331:10355  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10331:10371  structUsers_[msg.sender].balance_private */\n      0x05\n      add\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10317:10371  _numTokens <= structUsers_[msg.sender].balance_private */\n      dup3\n      gt\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10309:10372  require(_numTokens <= structUsers_[msg.sender].balance_private) */\n      tag_231\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_231:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10572:10582  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10559:10571  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10559:10583  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10559:10599  structUsers_[msg.sender].balance_private */\n      0x05\n      add\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10559:10615  structUsers_[msg.sender].balance_private.sub(_numTokens) */\n      tag_232\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10604:10614  _numTokens */\n      dup4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10559:10603  structUsers_[msg.sender].balance_private.sub */\n      tag_93\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10559:10615  structUsers_[msg.sender].balance_private.sub(_numTokens) */\n      jump\t// in\n    tag_232:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10529:10539  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10516:10528  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10516:10540  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10516:10556  structUsers_[msg.sender].balance_private */\n      0x05\n      swap1\n      dup2\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10516:10615  structUsers_[msg.sender].balance_private = structUsers_[msg.sender].balance_private.sub(_numTokens) */\n      swap4\n      swap1\n      swap4\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10747:10770  structUsers_[_receiver] */\n      dup7\n      and\n      dup3\n      mstore\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10747:10786  structUsers_[_receiver].balance_private */\n      add\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10747:10802  structUsers_[_receiver].balance_private.add(_numTokens) */\n      tag_228\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10791:10801  _numTokens */\n      dup4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10747:10790  structUsers_[_receiver].balance_private.add */\n      tag_94\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":10747:10802  structUsers_[_receiver].balance_private.add(_numTokens) */\n      jump\t// in\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":9028:13253  if (validatePhase(\"private\", privateProviderAdr, publicProviderAdr) == true) {                    // !: if фаза PRIVATE\r... */\n    tag_223:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11140:11202  validatePhase(\"public\", privateProviderAdr, publicProviderAdr) */\n      tag_236\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xd0, 0x7075626c6963)\n      dup2\n      mstore\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1578:1620  0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2 */\n      0xab8483f64d9c6d1ecf9b849ae677dd3315835cb2\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1694:1736  0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2 */\n      dup1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11140:11153  validatePhase */\n      tag_100\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11140:11202  validatePhase(\"public\", privateProviderAdr, publicProviderAdr) */\n      jump\t// in\n    tag_236:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11140:11210  validatePhase(\"public\", privateProviderAdr, publicProviderAdr) == true */\n      iszero\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11206:11210  true */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11140:11210  validatePhase(\"public\", privateProviderAdr, publicProviderAdr) == true */\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11136:13253  if (validatePhase(\"public\", privateProviderAdr, publicProviderAdr) == true) {                     // !: if фаза PUBLIC\r... */\n      iszero\n      tag_237\n      jumpi\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11276:11291  validateOwner() */\n      tag_238\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11276:11289  validateOwner */\n      tag_103\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11276:11291  validateOwner() */\n      jump\t// in\n    tag_238:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11276:11299  validateOwner() == true */\n      iszero\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11295:11299  true */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11276:11299  validateOwner() == true */\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11272:13224  if (validateOwner() == true) {                                                                         // !: if пользователь админ\r... */\n      iszero\n      tag_239\n      jumpi\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11472:11482  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11459:11471  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11459:11483  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11459:11499  structUsers_[msg.sender].balance_overall */\n      0x03\n      add\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11445:11499  _numTokens <= structUsers_[msg.sender].balance_overall */\n      dup3\n      gt\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11437:11500  require(_numTokens <= structUsers_[msg.sender].balance_overall) */\n      tag_240\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_240:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11700:11710  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11687:11699  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11687:11711  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11687:11727  structUsers_[msg.sender].balance_overall */\n      0x03\n      add\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11687:11743  structUsers_[msg.sender].balance_overall.sub(_numTokens) */\n      tag_241\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11732:11742  _numTokens */\n      dup4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11687:11731  structUsers_[msg.sender].balance_overall.sub */\n      tag_93\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11687:11743  structUsers_[msg.sender].balance_overall.sub(_numTokens) */\n      jump\t// in\n    tag_241:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11657:11667  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11644:11656  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11644:11668  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11644:11684  structUsers_[msg.sender].balance_overall */\n      0x03\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11644:11743  structUsers_[msg.sender].balance_overall = structUsers_[msg.sender].balance_overall.sub(_numTokens) */\n      swap3\n      swap1\n      swap3\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11874:11897  structUsers_[_receiver] */\n      dup6\n      and\n      dup2\n      mstore\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11874:11912  structUsers_[_receiver].balance_public */\n      0x06\n      add\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11874:11928  structUsers_[_receiver].balance_public.add(_numTokens) */\n      tag_242\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11917:11927  _numTokens */\n      dup4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11874:11916  structUsers_[_receiver].balance_public.add */\n      tag_94\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11874:11928  structUsers_[_receiver].balance_public.add(_numTokens) */\n      jump\t// in\n    tag_242:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11833:11856  structUsers_[_receiver] */\n      dup5\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11833:11845  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11833:11856  structUsers_[_receiver] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11833:11871  structUsers_[_receiver].balance_public */\n      0x06\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11833:11928  structUsers_[_receiver].balance_public = structUsers_[_receiver].balance_public.add(_numTokens) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12023:12066  Transfer(msg.sender, _receiver, _numTokens) */\n      mload\n        /* \"#utility.yul\":4018:4043   */\n      dup5\n      dup2\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11833:11856  structUsers_[_receiver] */\n      swap1\n      swap2\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12032:12042  msg.sender */\n      caller\n      swap2\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12023:12066  Transfer(msg.sender, _receiver, _numTokens) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":3991:4009   */\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12023:12066  Transfer(msg.sender, _receiver, _numTokens) */\n      tag_203\n        /* \"#utility.yul\":3872:4049   */\n      jump\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11272:13224  if (validateOwner() == true) {                                                                         // !: if пользователь админ\r... */\n    tag_239:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12450:12460  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12437:12449  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12437:12461  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12437:12476  structUsers_[msg.sender].balance_public */\n      0x06\n      add\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12423:12476  _numTokens <= structUsers_[msg.sender].balance_public */\n      dup3\n      gt\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12415:12477  require(_numTokens <= structUsers_[msg.sender].balance_public) */\n      tag_245\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_245:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12677:12687  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12664:12676  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12664:12688  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12664:12703  structUsers_[msg.sender].balance_public */\n      0x06\n      add\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12664:12719  structUsers_[msg.sender].balance_public.sub(_numTokens) */\n      tag_246\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12708:12718  _numTokens */\n      dup4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12664:12707  structUsers_[msg.sender].balance_public.sub */\n      tag_93\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12664:12719  structUsers_[msg.sender].balance_public.sub(_numTokens) */\n      jump\t// in\n    tag_246:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12635:12645  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12622:12634  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12622:12646  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12622:12661  structUsers_[msg.sender].balance_public */\n      0x06\n      swap1\n      dup2\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12622:12719  structUsers_[msg.sender].balance_public = structUsers_[msg.sender].balance_public.sub(_numTokens) */\n      swap4\n      swap1\n      swap4\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12852:12875  structUsers_[_receiver] */\n      dup7\n      and\n      dup3\n      mstore\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12852:12890  structUsers_[_receiver].balance_public */\n      add\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12852:12906  structUsers_[_receiver].balance_public.add(_numTokens) */\n      tag_242\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12895:12905  _numTokens */\n      dup4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12852:12894  structUsers_[_receiver].balance_public.add */\n      tag_94\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":12852:12906  structUsers_[_receiver].balance_public.add(_numTokens) */\n      jump\t// in\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":11136:13253  if (validatePhase(\"public\", privateProviderAdr, publicProviderAdr) == true) {                     // !: if фаза PUBLIC\r... */\n    tag_237:\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":13248:13253  false */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":13241:13253  return false */\n      jump(tag_95)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3447:4307  function buy(uint256 _amount) external payable {\r... */\n    tag_86:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3680:3691  tokenPrice_ */\n      sload(0x08)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3670:3691  _amount * tokenPrice_ */\n      tag_251\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3670:3677  _amount */\n      dup3\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3670:3691  _amount * tokenPrice_ */\n      tag_252\n      jump\t// in\n    tag_251:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3657:3666  msg.value */\n      callvalue\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3657:3691  msg.value == _amount * tokenPrice_ */\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3649:3728  require(msg.value == _amount * tokenPrice_, \"Need to send exact amount of wei\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5004:5006   */\n      0x20\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3649:3728  require(msg.value == _amount * tokenPrice_, \"Need to send exact amount of wei\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4986:5007   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5023:5041   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5016:5046   */\n      mstore\n        /* \"#utility.yul\":5082:5116   */\n      0x4e65656420746f2073656e6420657861637420616d6f756e74206f6620776569\n        /* \"#utility.yul\":5062:5080   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5055:5117   */\n      mstore\n        /* \"#utility.yul\":5134:5152   */\n      0x64\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3649:3728  require(msg.value == _amount * tokenPrice_, \"Need to send exact amount of wei\") */\n      tag_165\n        /* \"#utility.yul\":4802:5158   */\n      jump\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3649:3728  require(msg.value == _amount * tokenPrice_, \"Need to send exact amount of wei\") */\n    tag_253:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1578:1620  0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2 */\n      0xab8483f64d9c6d1ecf9b849ae677dd3315835cb2\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3747:3780  structPhases_[privateProviderAdr] */\n      0x00\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3747:3760  structPhases_ */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3747:3780  structPhases_[privateProviderAdr] */\n      0x20\n      mstore\n      0x9d4d959825f0680278e64197773b2a50cd78b2b2cb00711ddbeebf0bf93cd8a4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3747:3792  structPhases_[privateProviderAdr].statusPhase */\n      sload\n      0xff\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3747:3801  structPhases_[privateProviderAdr].statusPhase == false */\n      iszero\n      dup1\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3747:3858  structPhases_[privateProviderAdr].statusPhase == false && structPhases_[publicProviderAdr].statusPhase == false */\n      tag_256\n      jumpi\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1694:1736  0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2 */\n      0xab8483f64d9c6d1ecf9b849ae677dd3315835cb2\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3805:3837  structPhases_[publicProviderAdr] */\n      0x00\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3805:3818  structPhases_ */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3805:3837  structPhases_[publicProviderAdr] */\n      0x20\n      mstore\n      0x9d4d959825f0680278e64197773b2a50cd78b2b2cb00711ddbeebf0bf93cd8a4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3805:3849  structPhases_[publicProviderAdr].statusPhase */\n      sload\n      0xff\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3805:3858  structPhases_[publicProviderAdr].statusPhase == false */\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3747:3858  structPhases_[privateProviderAdr].statusPhase == false && structPhases_[publicProviderAdr].statusPhase == false */\n    tag_256:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3739:3922  require(structPhases_[privateProviderAdr].statusPhase == false && structPhases_[publicProviderAdr].statusPhase == false, \"During the seed phase, the transfer of tokens is prohibited\") */\n      tag_257\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5365:5367   */\n      0x20\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3739:3922  require(structPhases_[privateProviderAdr].statusPhase == false && structPhases_[publicProviderAdr].statusPhase == false, \"During the seed phase, the transfer of tokens is prohibited\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5347:5368   */\n      mstore\n        /* \"#utility.yul\":5404:5406   */\n      0x3b\n        /* \"#utility.yul\":5384:5402   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5377:5407   */\n      mstore\n        /* \"#utility.yul\":5443:5477   */\n      0x447572696e672074686520736565642070686173652c20746865207472616e73\n        /* \"#utility.yul\":5423:5441   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5416:5478   */\n      mstore\n        /* \"#utility.yul\":5514:5543   */\n      0x666572206f6620746f6b656e732069732070726f686962697465640000000000\n        /* \"#utility.yul\":5494:5512   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5487:5544   */\n      mstore\n        /* \"#utility.yul\":5561:5580   */\n      0x84\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3739:3922  require(structPhases_[privateProviderAdr].statusPhase == false && structPhases_[publicProviderAdr].statusPhase == false, \"During the seed phase, the transfer of tokens is prohibited\") */\n      tag_165\n        /* \"#utility.yul\":5163:5586   */\n      jump\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3739:3922  require(structPhases_[privateProviderAdr].statusPhase == false && structPhases_[publicProviderAdr].statusPhase == false, \"During the seed phase, the transfer of tokens is prohibited\") */\n    tag_257:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1578:1620  0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2 */\n      0xab8483f64d9c6d1ecf9b849ae677dd3315835cb2\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3937:3970  structPhases_[privateProviderAdr] */\n      0x00\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3937:3950  structPhases_ */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3937:3970  structPhases_[privateProviderAdr] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x9d4d959825f0680278e64197773b2a50cd78b2b2cb00711ddbeebf0bf93cd8a4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3937:3982  structPhases_[privateProviderAdr].statusPhase */\n      sload\n      0xff\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3937:3990  structPhases_[privateProviderAdr].statusPhase == true */\n      iszero\n      iszero\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3933:4300  if (structPhases_[privateProviderAdr].statusPhase == true) {\r... */\n      iszero\n      tag_260\n      jumpi\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4063:4073  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4050:4062  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4050:4074  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4050:4090  structUsers_[msg.sender].balance_private */\n      0x05\n      add\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4050:4103  structUsers_[msg.sender].balance_private.add(_amount) */\n      tag_261\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4095:4102  _amount */\n      dup3\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4050:4094  structUsers_[msg.sender].balance_private.add */\n      tag_94\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4050:4103  structUsers_[msg.sender].balance_private.add(_amount) */\n      jump\t// in\n    tag_261:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4020:4030  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4007:4019  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4007:4031  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4007:4047  structUsers_[msg.sender].balance_private */\n      0x05\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4007:4103  structUsers_[msg.sender].balance_private = structUsers_[msg.sender].balance_private.add(_amount) */\n      sstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":727:899  function acceptApplication (bool _changeStatus) public {\r... */\n      pop\n      jump\t// out\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3933:4300  if (structPhases_[privateProviderAdr].statusPhase == true) {\r... */\n    tag_260:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":1694:1736  0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2 */\n      0xab8483f64d9c6d1ecf9b849ae677dd3315835cb2\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4125:4157  structPhases_[publicProviderAdr] */\n      0x00\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4125:4138  structPhases_ */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4125:4157  structPhases_[publicProviderAdr] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x9d4d959825f0680278e64197773b2a50cd78b2b2cb00711ddbeebf0bf93cd8a4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4125:4169  structPhases_[publicProviderAdr].statusPhase */\n      sload\n      0xff\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4125:4177  structPhases_[publicProviderAdr].statusPhase == true */\n      iszero\n      iszero\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4121:4300  if (structPhases_[publicProviderAdr].statusPhase == true) {\r... */\n      iszero\n      tag_179\n      jumpi\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4249:4259  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4236:4248  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4236:4260  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4236:4275  structUsers_[msg.sender].balance_public */\n      0x06\n      add\n      sload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4236:4288  structUsers_[msg.sender].balance_public.add(_amount) */\n      tag_264\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4280:4287  _amount */\n      dup3\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4236:4279  structUsers_[msg.sender].balance_public.add */\n      tag_94\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4236:4288  structUsers_[msg.sender].balance_public.add(_amount) */\n      jump\t// in\n    tag_264:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4207:4217  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4194:4206  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4194:4218  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4194:4233  structUsers_[msg.sender].balance_public */\n      0x06\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":4194:4288  structUsers_[msg.sender].balance_public = structUsers_[msg.sender].balance_public.add(_amount) */\n      sstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":3447:4307  function buy(uint256 _amount) external payable {\r... */\n      pop\n      jump\t// out\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2846:2965  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_93:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2904:2911  uint256 */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2934:2935  a */\n      dup3\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2929:2930  b */\n      dup3\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2929:2935  b <= a */\n      gt\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2922:2936  assert(b <= a) */\n      tag_268\n      jumpi\n      tag_268\n      tag_269\n      jump\t// in\n    tag_268:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2952:2957  a - b */\n      tag_154\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2956:2957  b */\n      dup3\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2952:2953  a */\n      dup5\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2952:2957  a - b */\n      tag_271\n      jump\t// in\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2422:2563  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_94:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2480:2487  uint256 */\n      0x00\n      dup1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2510:2515  a + b */\n      tag_273\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2514:2515  b */\n      dup4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2510:2511  a */\n      dup6\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2510:2515  a + b */\n      tag_274\n      jump\t// in\n    tag_273:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2498:2515  uint256 c = a + b */\n      swap1\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2536:2537  a */\n      dup4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2531:2532  c */\n      dup2\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2531:2537  c >= a */\n      lt\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":2524:2538  assert(c >= a) */\n      tag_154\n      jumpi\n      tag_154\n      tag_269\n      jump\t// in\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":771:1971  function validatePhase(string memory _type, address _providerPrivate, address _providerPublic) internal view returns (bool) {\r... */\n    tag_100:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":889:893  bool */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":934:955  get_keccak256(\"seed\") */\n      tag_278\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xe2, 0x1cd95959)\n      dup2\n      mstore\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":934:947  get_keccak256 */\n      tag_66\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":934:955  get_keccak256(\"seed\") */\n      jump\t// in\n    tag_278:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":910:930  get_keccak256(_type) */\n      tag_279\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":924:929  _type */\n      dup6\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":910:923  get_keccak256 */\n      tag_66\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":910:930  get_keccak256(_type) */\n      jump\t// in\n    tag_279:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":910:955  get_keccak256(_type) == get_keccak256(\"seed\") */\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":906:1964  if (get_keccak256(_type) == get_keccak256(\"seed\")) {\r... */\n      iszero\n      tag_280\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":976:1007  structPhases_[_providerPrivate] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":976:989  structPhases_ */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":976:1007  structPhases_[_providerPrivate] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":976:1019  structPhases_[_providerPrivate].statusPhase */\n      sload\n      0xff\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":976:1028  structPhases_[_providerPrivate].statusPhase == false */\n      iszero\n      dup1\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":976:1083  structPhases_[_providerPrivate].statusPhase == false && structPhases_[_providerPublic].statusPhase == false */\n      tag_281\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1032:1062  structPhases_[_providerPublic] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1032:1045  structPhases_ */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1032:1062  structPhases_[_providerPublic] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1032:1074  structPhases_[_providerPublic].statusPhase */\n      sload\n      0xff\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1032:1083  structPhases_[_providerPublic].statusPhase == false */\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":976:1083  structPhases_[_providerPrivate].statusPhase == false && structPhases_[_providerPublic].statusPhase == false */\n    tag_281:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":972:1111  if (structPhases_[_providerPrivate].statusPhase == false && structPhases_[_providerPublic].statusPhase == false ) \r... */\n      iszero\n      tag_138\n      jumpi\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1107:1111  true */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1100:1111  return true */\n      jump(tag_154)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":906:1964  if (get_keccak256(_type) == get_keccak256(\"seed\")) {\r... */\n    tag_280:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1292:1316  get_keccak256(\"private\") */\n      tag_284\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x07\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xc8, 0x70726976617465)\n      dup2\n      mstore\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1292:1305  get_keccak256 */\n      tag_66\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1292:1316  get_keccak256(\"private\") */\n      jump\t// in\n    tag_284:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1268:1288  get_keccak256(_type) */\n      tag_285\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1282:1287  _type */\n      dup6\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1268:1281  get_keccak256 */\n      tag_66\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1268:1288  get_keccak256(_type) */\n      jump\t// in\n    tag_285:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1268:1316  get_keccak256(_type) == get_keccak256(\"private\") */\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1264:1964  if (get_keccak256(_type) == get_keccak256(\"private\")) {\r... */\n      iszero\n      tag_286\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1337:1368  structPhases_[_providerPrivate] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1337:1350  structPhases_ */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1337:1368  structPhases_[_providerPrivate] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1337:1380  structPhases_[_providerPrivate].statusPhase */\n      sload\n      0xff\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1337:1388  structPhases_[_providerPrivate].statusPhase == true */\n      iszero\n      iszero\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1333:1415  if (structPhases_[_providerPrivate].statusPhase == true) \r... */\n      iszero\n      tag_138\n      jumpi\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1411:1415  true */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1404:1415  return true */\n      jump(tag_154)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1264:1964  if (get_keccak256(_type) == get_keccak256(\"private\")) {\r... */\n    tag_286:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1596:1619  get_keccak256(\"public\") */\n      tag_289\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xd0, 0x7075626c6963)\n      dup2\n      mstore\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1596:1609  get_keccak256 */\n      tag_66\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1596:1619  get_keccak256(\"public\") */\n      jump\t// in\n    tag_289:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1572:1592  get_keccak256(_type) */\n      tag_290\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1586:1591  _type */\n      dup6\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1572:1585  get_keccak256 */\n      tag_66\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1572:1592  get_keccak256(_type) */\n      jump\t// in\n    tag_290:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1572:1619  get_keccak256(_type) == get_keccak256(\"public\") */\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1568:1964  if (get_keccak256(_type) == get_keccak256(\"public\")) {\r... */\n      iszero\n      tag_138\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1640:1670  structPhases_[_providerPublic] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1640:1653  structPhases_ */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1640:1670  structPhases_[_providerPublic] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1640:1682  structPhases_[_providerPublic].statusPhase */\n      sload\n      0xff\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1640:1690  structPhases_[_providerPublic].statusPhase == true */\n      iszero\n      iszero\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1636:1716  if (structPhases_[_providerPublic].statusPhase == true)\r... */\n      iszero\n      tag_138\n      jumpi\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1712:1716  true */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":1705:1716  return true */\n      jump(tag_154)\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":405:693  function validateOwner() internal view returns (bool) {\r... */\n    tag_103:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":453:457  bool */\n      0x00\n      dup1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":487:497  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":474:486  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":474:498  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":474:503  structUsers_[msg.sender].role */\n      sload\n      0xff\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":474:524  structUsers_[msg.sender].role == Role.SYSTEM_OWNER */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_298\n      jumpi\n      tag_298\n      tag_176\n      jump\t// in\n    tag_298:\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":470:550  if (structUsers_[msg.sender].role == Role.SYSTEM_OWNER)\r... */\n      iszero\n      tag_299\n      jumpi\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":546:550  true */\n      0x01\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":405:693  function validateOwner() internal view returns (bool) {\r... */\n      jump\t// out\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":470:550  if (structUsers_[msg.sender].role == Role.SYSTEM_OWNER)\r... */\n    tag_299:\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":624:629  false */\n      0x00\n      swap1\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":405:693  function validateOwner() internal view returns (bool) {\r... */\n      jump\t// out\n    tag_168:\n      dup3\n      dup1\n      sload\n      tag_300\n      swap1\n      tag_301\n      jump\t// in\n    tag_300:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_303\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_306)\n    tag_303:\n      dup3\n      0x1f\n      lt\n      tag_304\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_306)\n    tag_304:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_306\n      jumpi\n      swap2\n      dup3\n      add\n    tag_305:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_306\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_305)\n    tag_306:\n      pop\n      tag_307\n      swap3\n      swap2\n      pop\n      tag_308\n      jump\t// in\n    tag_307:\n      pop\n      swap1\n      jump\t// out\n    tag_308:\n    tag_309:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_307\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_309)\n        /* \"#utility.yul\":14:210   */\n    tag_312:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:185   */\n      dup2\n      and\n        /* \"#utility.yul\":121:186   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:204   */\n      tag_162\n      jumpi\n        /* \"#utility.yul\":200:201   */\n      0x00\n        /* \"#utility.yul\":197:198   */\n      dup1\n        /* \"#utility.yul\":190:202   */\n      revert\n        /* \"#utility.yul\":215:934   */\n    tag_315:\n        /* \"#utility.yul\":258:263   */\n      0x00\n        /* \"#utility.yul\":311:314   */\n      dup3\n        /* \"#utility.yul\":304:308   */\n      0x1f\n        /* \"#utility.yul\":296:302   */\n      dup4\n        /* \"#utility.yul\":292:309   */\n      add\n        /* \"#utility.yul\":288:315   */\n      slt\n        /* \"#utility.yul\":278:333   */\n      tag_317\n      jumpi\n        /* \"#utility.yul\":329:330   */\n      0x00\n        /* \"#utility.yul\":326:327   */\n      dup1\n        /* \"#utility.yul\":319:331   */\n      revert\n        /* \"#utility.yul\":278:333   */\n    tag_317:\n        /* \"#utility.yul\":365:371   */\n      dup2\n        /* \"#utility.yul\":352:372   */\n      calldataload\n        /* \"#utility.yul\":391:409   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":428:430   */\n      dup1\n        /* \"#utility.yul\":424:426   */\n      dup3\n        /* \"#utility.yul\":421:431   */\n      gt\n        /* \"#utility.yul\":418:454   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":434:452   */\n      tag_319\n      tag_320\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":509:511   */\n      0x40\n        /* \"#utility.yul\":503:512   */\n      mload\n        /* \"#utility.yul\":477:479   */\n      0x1f\n        /* \"#utility.yul\":563:576   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":559:581   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":583:585   */\n      0x3f\n        /* \"#utility.yul\":555:586   */\n      add\n        /* \"#utility.yul\":551:591   */\n      and\n        /* \"#utility.yul\":539:592   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":607:625   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":627:649   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":604:650   */\n      or\n        /* \"#utility.yul\":601:673   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":653:671   */\n      tag_322\n      tag_320\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":693:703   */\n      dup2\n        /* \"#utility.yul\":689:691   */\n      0x40\n        /* \"#utility.yul\":682:704   */\n      mstore\n        /* \"#utility.yul\":728:730   */\n      dup4\n        /* \"#utility.yul\":720:726   */\n      dup2\n        /* \"#utility.yul\":713:731   */\n      mstore\n        /* \"#utility.yul\":774:777   */\n      dup7\n        /* \"#utility.yul\":767:771   */\n      0x20\n        /* \"#utility.yul\":762:764   */\n      dup6\n        /* \"#utility.yul\":754:760   */\n      dup9\n        /* \"#utility.yul\":750:765   */\n      add\n        /* \"#utility.yul\":746:772   */\n      add\n        /* \"#utility.yul\":743:778   */\n      gt\n        /* \"#utility.yul\":740:795   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":791:792   */\n      0x00\n        /* \"#utility.yul\":788:789   */\n      dup1\n        /* \"#utility.yul\":781:793   */\n      revert\n        /* \"#utility.yul\":740:795   */\n    tag_323:\n        /* \"#utility.yul\":855:857   */\n      dup4\n        /* \"#utility.yul\":848:852   */\n      0x20\n        /* \"#utility.yul\":840:846   */\n      dup8\n        /* \"#utility.yul\":836:853   */\n      add\n        /* \"#utility.yul\":829:833   */\n      0x20\n        /* \"#utility.yul\":821:827   */\n      dup4\n        /* \"#utility.yul\":817:834   */\n      add\n        /* \"#utility.yul\":804:858   */\n      calldatacopy\n        /* \"#utility.yul\":902:903   */\n      0x00\n        /* \"#utility.yul\":895:899   */\n      0x20\n        /* \"#utility.yul\":890:892   */\n      dup6\n        /* \"#utility.yul\":882:888   */\n      dup4\n        /* \"#utility.yul\":878:893   */\n      add\n        /* \"#utility.yul\":874:900   */\n      add\n        /* \"#utility.yul\":867:904   */\n      mstore\n        /* \"#utility.yul\":922:928   */\n      dup1\n        /* \"#utility.yul\":913:928   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":215:934   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":939:1125   */\n    tag_54:\n        /* \"#utility.yul\":998:1004   */\n      0x00\n        /* \"#utility.yul\":1051:1053   */\n      0x20\n        /* \"#utility.yul\":1039:1048   */\n      dup3\n        /* \"#utility.yul\":1030:1037   */\n      dup5\n        /* \"#utility.yul\":1026:1049   */\n      sub\n        /* \"#utility.yul\":1022:1054   */\n      slt\n        /* \"#utility.yul\":1019:1071   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":1067:1068   */\n      0x00\n        /* \"#utility.yul\":1064:1065   */\n      dup1\n        /* \"#utility.yul\":1057:1069   */\n      revert\n        /* \"#utility.yul\":1019:1071   */\n    tag_325:\n        /* \"#utility.yul\":1090:1119   */\n      tag_154\n        /* \"#utility.yul\":1109:1118   */\n      dup3\n        /* \"#utility.yul\":1090:1119   */\n      tag_312\n      jump\t// in\n        /* \"#utility.yul\":1130:1390   */\n    tag_90:\n        /* \"#utility.yul\":1198:1204   */\n      0x00\n        /* \"#utility.yul\":1206:1212   */\n      dup1\n        /* \"#utility.yul\":1259:1261   */\n      0x40\n        /* \"#utility.yul\":1247:1256   */\n      dup4\n        /* \"#utility.yul\":1238:1245   */\n      dup6\n        /* \"#utility.yul\":1234:1257   */\n      sub\n        /* \"#utility.yul\":1230:1262   */\n      slt\n        /* \"#utility.yul\":1227:1279   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":1275:1276   */\n      0x00\n        /* \"#utility.yul\":1272:1273   */\n      dup1\n        /* \"#utility.yul\":1265:1277   */\n      revert\n        /* \"#utility.yul\":1227:1279   */\n    tag_328:\n        /* \"#utility.yul\":1298:1327   */\n      tag_329\n        /* \"#utility.yul\":1317:1326   */\n      dup4\n        /* \"#utility.yul\":1298:1327   */\n      tag_312\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":1288:1327   */\n      swap2\n      pop\n        /* \"#utility.yul\":1346:1384   */\n      tag_330\n        /* \"#utility.yul\":1380:1382   */\n      0x20\n        /* \"#utility.yul\":1369:1378   */\n      dup5\n        /* \"#utility.yul\":1365:1383   */\n      add\n        /* \"#utility.yul\":1346:1384   */\n      tag_312\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":1336:1384   */\n      swap1\n      pop\n        /* \"#utility.yul\":1130:1390   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1395:1723   */\n    tag_43:\n        /* \"#utility.yul\":1472:1478   */\n      0x00\n        /* \"#utility.yul\":1480:1486   */\n      dup1\n        /* \"#utility.yul\":1488:1494   */\n      0x00\n        /* \"#utility.yul\":1541:1543   */\n      0x60\n        /* \"#utility.yul\":1529:1538   */\n      dup5\n        /* \"#utility.yul\":1520:1527   */\n      dup7\n        /* \"#utility.yul\":1516:1539   */\n      sub\n        /* \"#utility.yul\":1512:1544   */\n      slt\n        /* \"#utility.yul\":1509:1561   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":1557:1558   */\n      0x00\n        /* \"#utility.yul\":1554:1555   */\n      dup1\n        /* \"#utility.yul\":1547:1559   */\n      revert\n        /* \"#utility.yul\":1509:1561   */\n    tag_332:\n        /* \"#utility.yul\":1580:1609   */\n      tag_333\n        /* \"#utility.yul\":1599:1608   */\n      dup5\n        /* \"#utility.yul\":1580:1609   */\n      tag_312\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":1570:1609   */\n      swap3\n      pop\n        /* \"#utility.yul\":1628:1666   */\n      tag_334\n        /* \"#utility.yul\":1662:1664   */\n      0x20\n        /* \"#utility.yul\":1651:1660   */\n      dup6\n        /* \"#utility.yul\":1647:1665   */\n      add\n        /* \"#utility.yul\":1628:1666   */\n      tag_312\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":1618:1666   */\n      swap2\n      pop\n        /* \"#utility.yul\":1713:1715   */\n      0x40\n        /* \"#utility.yul\":1702:1711   */\n      dup5\n        /* \"#utility.yul\":1698:1716   */\n      add\n        /* \"#utility.yul\":1685:1717   */\n      calldataload\n        /* \"#utility.yul\":1675:1717   */\n      swap1\n      pop\n        /* \"#utility.yul\":1395:1723   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1728:1982   */\n    tag_32:\n        /* \"#utility.yul\":1796:1802   */\n      0x00\n        /* \"#utility.yul\":1804:1810   */\n      dup1\n        /* \"#utility.yul\":1857:1859   */\n      0x40\n        /* \"#utility.yul\":1845:1854   */\n      dup4\n        /* \"#utility.yul\":1836:1843   */\n      dup6\n        /* \"#utility.yul\":1832:1855   */\n      sub\n        /* \"#utility.yul\":1828:1860   */\n      slt\n        /* \"#utility.yul\":1825:1877   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":1873:1874   */\n      0x00\n        /* \"#utility.yul\":1870:1871   */\n      dup1\n        /* \"#utility.yul\":1863:1875   */\n      revert\n        /* \"#utility.yul\":1825:1877   */\n    tag_336:\n        /* \"#utility.yul\":1896:1925   */\n      tag_337\n        /* \"#utility.yul\":1915:1924   */\n      dup4\n        /* \"#utility.yul\":1896:1925   */\n      tag_312\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":1886:1925   */\n      swap5\n        /* \"#utility.yul\":1972:1974   */\n      0x20\n        /* \"#utility.yul\":1957:1975   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1944:1976   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1728:1982   */\n      jump\t// out\n        /* \"#utility.yul\":1987:2260   */\n    tag_76:\n        /* \"#utility.yul\":2043:2049   */\n      0x00\n        /* \"#utility.yul\":2096:2098   */\n      0x20\n        /* \"#utility.yul\":2084:2093   */\n      dup3\n        /* \"#utility.yul\":2075:2082   */\n      dup5\n        /* \"#utility.yul\":2071:2094   */\n      sub\n        /* \"#utility.yul\":2067:2099   */\n      slt\n        /* \"#utility.yul\":2064:2116   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":2112:2113   */\n      0x00\n        /* \"#utility.yul\":2109:2110   */\n      dup1\n        /* \"#utility.yul\":2102:2114   */\n      revert\n        /* \"#utility.yul\":2064:2116   */\n    tag_339:\n        /* \"#utility.yul\":2151:2160   */\n      dup2\n        /* \"#utility.yul\":2138:2161   */\n      calldataload\n        /* \"#utility.yul\":2204:2209   */\n      dup1\n        /* \"#utility.yul\":2197:2210   */\n      iszero\n        /* \"#utility.yul\":2190:2211   */\n      iszero\n        /* \"#utility.yul\":2183:2188   */\n      dup2\n        /* \"#utility.yul\":2180:2212   */\n      eq\n        /* \"#utility.yul\":2170:2230   */\n      tag_154\n      jumpi\n        /* \"#utility.yul\":2226:2227   */\n      0x00\n        /* \"#utility.yul\":2223:2224   */\n      dup1\n        /* \"#utility.yul\":2216:2228   */\n      revert\n        /* \"#utility.yul\":2265:2587   */\n    tag_65:\n        /* \"#utility.yul\":2334:2340   */\n      0x00\n        /* \"#utility.yul\":2387:2389   */\n      0x20\n        /* \"#utility.yul\":2375:2384   */\n      dup3\n        /* \"#utility.yul\":2366:2373   */\n      dup5\n        /* \"#utility.yul\":2362:2385   */\n      sub\n        /* \"#utility.yul\":2358:2390   */\n      slt\n        /* \"#utility.yul\":2355:2407   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":2403:2404   */\n      0x00\n        /* \"#utility.yul\":2400:2401   */\n      dup1\n        /* \"#utility.yul\":2393:2405   */\n      revert\n        /* \"#utility.yul\":2355:2407   */\n    tag_342:\n        /* \"#utility.yul\":2443:2452   */\n      dup2\n        /* \"#utility.yul\":2430:2453   */\n      calldataload\n        /* \"#utility.yul\":2476:2494   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2468:2474   */\n      dup2\n        /* \"#utility.yul\":2465:2495   */\n      gt\n        /* \"#utility.yul\":2462:2512   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":2508:2509   */\n      0x00\n        /* \"#utility.yul\":2505:2506   */\n      dup1\n        /* \"#utility.yul\":2498:2510   */\n      revert\n        /* \"#utility.yul\":2462:2512   */\n    tag_343:\n        /* \"#utility.yul\":2531:2581   */\n      tag_344\n        /* \"#utility.yul\":2573:2580   */\n      dup5\n        /* \"#utility.yul\":2564:2570   */\n      dup3\n        /* \"#utility.yul\":2553:2562   */\n      dup6\n        /* \"#utility.yul\":2549:2571   */\n      add\n        /* \"#utility.yul\":2531:2581   */\n      tag_315\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":2521:2581   */\n      swap5\n        /* \"#utility.yul\":2265:2587   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2592:3209   */\n    tag_60:\n        /* \"#utility.yul\":2689:2695   */\n      0x00\n        /* \"#utility.yul\":2697:2703   */\n      dup1\n        /* \"#utility.yul\":2705:2711   */\n      0x00\n        /* \"#utility.yul\":2758:2760   */\n      0x60\n        /* \"#utility.yul\":2746:2755   */\n      dup5\n        /* \"#utility.yul\":2737:2744   */\n      dup7\n        /* \"#utility.yul\":2733:2756   */\n      sub\n        /* \"#utility.yul\":2729:2761   */\n      slt\n        /* \"#utility.yul\":2726:2778   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":2774:2775   */\n      0x00\n        /* \"#utility.yul\":2771:2772   */\n      dup1\n        /* \"#utility.yul\":2764:2776   */\n      revert\n        /* \"#utility.yul\":2726:2778   */\n    tag_346:\n        /* \"#utility.yul\":2814:2823   */\n      dup4\n        /* \"#utility.yul\":2801:2824   */\n      calldataload\n        /* \"#utility.yul\":2843:2861   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2884:2886   */\n      dup1\n        /* \"#utility.yul\":2876:2882   */\n      dup3\n        /* \"#utility.yul\":2873:2887   */\n      gt\n        /* \"#utility.yul\":2870:2904   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":2900:2901   */\n      0x00\n        /* \"#utility.yul\":2897:2898   */\n      dup1\n        /* \"#utility.yul\":2890:2902   */\n      revert\n        /* \"#utility.yul\":2870:2904   */\n    tag_347:\n        /* \"#utility.yul\":2923:2973   */\n      tag_348\n        /* \"#utility.yul\":2965:2972   */\n      dup8\n        /* \"#utility.yul\":2956:2962   */\n      dup4\n        /* \"#utility.yul\":2945:2954   */\n      dup9\n        /* \"#utility.yul\":2941:2963   */\n      add\n        /* \"#utility.yul\":2923:2973   */\n      tag_315\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":2913:2973   */\n      swap5\n      pop\n        /* \"#utility.yul\":3026:3028   */\n      0x20\n        /* \"#utility.yul\":3015:3024   */\n      dup7\n        /* \"#utility.yul\":3011:3029   */\n      add\n        /* \"#utility.yul\":2998:3030   */\n      calldataload\n        /* \"#utility.yul\":2982:3030   */\n      swap2\n      pop\n        /* \"#utility.yul\":3055:3057   */\n      dup1\n        /* \"#utility.yul\":3045:3053   */\n      dup3\n        /* \"#utility.yul\":3042:3058   */\n      gt\n        /* \"#utility.yul\":3039:3075   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":3071:3072   */\n      0x00\n        /* \"#utility.yul\":3068:3069   */\n      dup1\n        /* \"#utility.yul\":3061:3073   */\n      revert\n        /* \"#utility.yul\":3039:3075   */\n    tag_349:\n      pop\n        /* \"#utility.yul\":3094:3146   */\n      tag_350\n        /* \"#utility.yul\":3138:3145   */\n      dup7\n        /* \"#utility.yul\":3127:3135   */\n      dup3\n        /* \"#utility.yul\":3116:3125   */\n      dup8\n        /* \"#utility.yul\":3112:3136   */\n      add\n        /* \"#utility.yul\":3094:3146   */\n      tag_315\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":3084:3146   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":3165:3203   */\n      tag_351\n        /* \"#utility.yul\":3199:3201   */\n      0x40\n        /* \"#utility.yul\":3188:3197   */\n      dup6\n        /* \"#utility.yul\":3184:3202   */\n      add\n        /* \"#utility.yul\":3165:3203   */\n      tag_312\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":3155:3203   */\n      swap1\n      pop\n        /* \"#utility.yul\":2592:3209   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3214:3394   */\n    tag_85:\n        /* \"#utility.yul\":3273:3279   */\n      0x00\n        /* \"#utility.yul\":3326:3328   */\n      0x20\n        /* \"#utility.yul\":3314:3323   */\n      dup3\n        /* \"#utility.yul\":3305:3312   */\n      dup5\n        /* \"#utility.yul\":3301:3324   */\n      sub\n        /* \"#utility.yul\":3297:3329   */\n      slt\n        /* \"#utility.yul\":3294:3346   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":3342:3343   */\n      0x00\n        /* \"#utility.yul\":3339:3340   */\n      dup1\n        /* \"#utility.yul\":3332:3344   */\n      revert\n        /* \"#utility.yul\":3294:3346   */\n    tag_353:\n      pop\n        /* \"#utility.yul\":3365:3388   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3214:3394   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3399:3675   */\n    tag_172:\n        /* \"#utility.yul\":3530:3533   */\n      0x00\n        /* \"#utility.yul\":3568:3574   */\n      dup3\n        /* \"#utility.yul\":3562:3575   */\n      mload\n        /* \"#utility.yul\":3584:3637   */\n      tag_355\n        /* \"#utility.yul\":3630:3636   */\n      dup2\n        /* \"#utility.yul\":3625:3628   */\n      dup5\n        /* \"#utility.yul\":3618:3622   */\n      0x20\n        /* \"#utility.yul\":3610:3616   */\n      dup8\n        /* \"#utility.yul\":3606:3623   */\n      add\n        /* \"#utility.yul\":3584:3637   */\n      tag_356\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":3653:3669   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":3399:3675   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4054:4437   */\n    tag_23:\n        /* \"#utility.yul\":4203:4205   */\n      0x20\n        /* \"#utility.yul\":4192:4201   */\n      dup2\n        /* \"#utility.yul\":4185:4206   */\n      mstore\n        /* \"#utility.yul\":4166:4170   */\n      0x00\n        /* \"#utility.yul\":4235:4241   */\n      dup3\n        /* \"#utility.yul\":4229:4242   */\n      mload\n        /* \"#utility.yul\":4278:4284   */\n      dup1\n        /* \"#utility.yul\":4273:4275   */\n      0x20\n        /* \"#utility.yul\":4262:4271   */\n      dup5\n        /* \"#utility.yul\":4258:4276   */\n      add\n        /* \"#utility.yul\":4251:4285   */\n      mstore\n        /* \"#utility.yul\":4294:4360   */\n      tag_360\n        /* \"#utility.yul\":4353:4359   */\n      dup2\n        /* \"#utility.yul\":4348:4350   */\n      0x40\n        /* \"#utility.yul\":4337:4346   */\n      dup6\n        /* \"#utility.yul\":4333:4351   */\n      add\n        /* \"#utility.yul\":4328:4330   */\n      0x20\n        /* \"#utility.yul\":4320:4326   */\n      dup8\n        /* \"#utility.yul\":4316:4331   */\n      add\n        /* \"#utility.yul\":4294:4360   */\n      tag_356\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":4421:4423   */\n      0x1f\n        /* \"#utility.yul\":4400:4415   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4396:4425   */\n      and\n        /* \"#utility.yul\":4381:4426   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":4428:4430   */\n      0x40\n        /* \"#utility.yul\":4377:4431   */\n      add\n      swap3\n        /* \"#utility.yul\":4054:4437   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6662:6790   */\n    tag_274:\n        /* \"#utility.yul\":6702:6705   */\n      0x00\n        /* \"#utility.yul\":6733:6734   */\n      dup3\n        /* \"#utility.yul\":6729:6735   */\n      not\n        /* \"#utility.yul\":6726:6727   */\n      dup3\n        /* \"#utility.yul\":6723:6736   */\n      gt\n        /* \"#utility.yul\":6720:6759   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":6739:6757   */\n      tag_370\n      tag_371\n      jump\t// in\n    tag_370:\n      pop\n        /* \"#utility.yul\":6775:6784   */\n      add\n      swap1\n        /* \"#utility.yul\":6662:6790   */\n      jump\t// out\n        /* \"#utility.yul\":6795:6963   */\n    tag_252:\n        /* \"#utility.yul\":6835:6842   */\n      0x00\n        /* \"#utility.yul\":6901:6902   */\n      dup2\n        /* \"#utility.yul\":6897:6898   */\n      0x00\n        /* \"#utility.yul\":6893:6899   */\n      not\n        /* \"#utility.yul\":6889:6903   */\n      div\n        /* \"#utility.yul\":6886:6887   */\n      dup4\n        /* \"#utility.yul\":6883:6904   */\n      gt\n        /* \"#utility.yul\":6878:6879   */\n      dup3\n        /* \"#utility.yul\":6871:6880   */\n      iszero\n        /* \"#utility.yul\":6864:6881   */\n      iszero\n        /* \"#utility.yul\":6860:6905   */\n      and\n        /* \"#utility.yul\":6857:6928   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":6908:6926   */\n      tag_374\n      tag_371\n      jump\t// in\n    tag_374:\n      pop\n        /* \"#utility.yul\":6948:6957   */\n      mul\n      swap1\n        /* \"#utility.yul\":6795:6963   */\n      jump\t// out\n        /* \"#utility.yul\":6968:7093   */\n    tag_271:\n        /* \"#utility.yul\":7008:7012   */\n      0x00\n        /* \"#utility.yul\":7036:7037   */\n      dup3\n        /* \"#utility.yul\":7033:7034   */\n      dup3\n        /* \"#utility.yul\":7030:7038   */\n      lt\n        /* \"#utility.yul\":7027:7061   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":7041:7059   */\n      tag_377\n      tag_371\n      jump\t// in\n    tag_377:\n      pop\n        /* \"#utility.yul\":7078:7087   */\n      sub\n      swap1\n        /* \"#utility.yul\":6968:7093   */\n      jump\t// out\n        /* \"#utility.yul\":7098:7356   */\n    tag_356:\n        /* \"#utility.yul\":7170:7171   */\n      0x00\n        /* \"#utility.yul\":7180:7293   */\n    tag_379:\n        /* \"#utility.yul\":7194:7200   */\n      dup4\n        /* \"#utility.yul\":7191:7192   */\n      dup2\n        /* \"#utility.yul\":7188:7201   */\n      lt\n        /* \"#utility.yul\":7180:7293   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":7270:7281   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":7264:7282   */\n      mload\n        /* \"#utility.yul\":7251:7262   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":7244:7283   */\n      mstore\n        /* \"#utility.yul\":7216:7218   */\n      0x20\n        /* \"#utility.yul\":7209:7219   */\n      add\n        /* \"#utility.yul\":7180:7293   */\n      jump(tag_379)\n    tag_381:\n        /* \"#utility.yul\":7311:7317   */\n      dup4\n        /* \"#utility.yul\":7308:7309   */\n      dup2\n        /* \"#utility.yul\":7305:7318   */\n      gt\n        /* \"#utility.yul\":7302:7350   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":7346:7347   */\n      0x00\n        /* \"#utility.yul\":7337:7343   */\n      dup5\n        /* \"#utility.yul\":7332:7335   */\n      dup5\n        /* \"#utility.yul\":7328:7344   */\n      add\n        /* \"#utility.yul\":7321:7348   */\n      mstore\n        /* \"#utility.yul\":7302:7350   */\n    tag_382:\n      pop\n        /* \"#utility.yul\":7098:7356   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7361:7798   */\n    tag_301:\n        /* \"#utility.yul\":7440:7441   */\n      0x01\n        /* \"#utility.yul\":7436:7448   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":7483:7495   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":7504:7565   */\n      tag_384\n      jumpi\n        /* \"#utility.yul\":7558:7562   */\n      0x7f\n        /* \"#utility.yul\":7550:7556   */\n      dup3\n        /* \"#utility.yul\":7546:7563   */\n      and\n        /* \"#utility.yul\":7536:7563   */\n      swap2\n      pop\n        /* \"#utility.yul\":7504:7565   */\n    tag_384:\n        /* \"#utility.yul\":7611:7613   */\n      0x20\n        /* \"#utility.yul\":7603:7609   */\n      dup3\n        /* \"#utility.yul\":7600:7614   */\n      lt\n        /* \"#utility.yul\":7580:7598   */\n      dup2\n        /* \"#utility.yul\":7577:7615   */\n      eq\n        /* \"#utility.yul\":7574:7792   */\n      iszero\n      tag_385\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":7645:7646   */\n      0x00\n        /* \"#utility.yul\":7638:7726   */\n      mstore\n        /* \"#utility.yul\":7749:7753   */\n      0x22\n        /* \"#utility.yul\":7746:7747   */\n      0x04\n        /* \"#utility.yul\":7739:7754   */\n      mstore\n        /* \"#utility.yul\":7777:7781   */\n      0x24\n        /* \"#utility.yul\":7774:7775   */\n      0x00\n        /* \"#utility.yul\":7767:7782   */\n      revert\n        /* \"#utility.yul\":7574:7792   */\n    tag_385:\n      pop\n        /* \"#utility.yul\":7361:7798   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7803:7987   */\n    tag_269:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":7852:7853   */\n      0x00\n        /* \"#utility.yul\":7845:7933   */\n      mstore\n        /* \"#utility.yul\":7952:7956   */\n      0x01\n        /* \"#utility.yul\":7949:7950   */\n      0x04\n        /* \"#utility.yul\":7942:7957   */\n      mstore\n        /* \"#utility.yul\":7976:7980   */\n      0x24\n        /* \"#utility.yul\":7973:7974   */\n      0x00\n        /* \"#utility.yul\":7966:7981   */\n      revert\n        /* \"#utility.yul\":7992:8176   */\n    tag_371:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":8041:8042   */\n      0x00\n        /* \"#utility.yul\":8034:8122   */\n      mstore\n        /* \"#utility.yul\":8141:8145   */\n      0x11\n        /* \"#utility.yul\":8138:8139   */\n      0x04\n        /* \"#utility.yul\":8131:8146   */\n      mstore\n        /* \"#utility.yul\":8165:8169   */\n      0x24\n        /* \"#utility.yul\":8162:8163   */\n      0x00\n        /* \"#utility.yul\":8155:8170   */\n      revert\n        /* \"#utility.yul\":8181:8365   */\n    tag_176:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":8230:8231   */\n      0x00\n        /* \"#utility.yul\":8223:8311   */\n      mstore\n        /* \"#utility.yul\":8330:8334   */\n      0x21\n        /* \"#utility.yul\":8327:8328   */\n      0x04\n        /* \"#utility.yul\":8320:8335   */\n      mstore\n        /* \"#utility.yul\":8354:8358   */\n      0x24\n        /* \"#utility.yul\":8351:8352   */\n      0x00\n        /* \"#utility.yul\":8344:8359   */\n      revert\n        /* \"#utility.yul\":8370:8554   */\n    tag_320:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":8419:8420   */\n      0x00\n        /* \"#utility.yul\":8412:8500   */\n      mstore\n        /* \"#utility.yul\":8519:8523   */\n      0x41\n        /* \"#utility.yul\":8516:8517   */\n      0x04\n        /* \"#utility.yul\":8509:8524   */\n      mstore\n        /* \"#utility.yul\":8543:8547   */\n      0x24\n        /* \"#utility.yul\":8540:8541   */\n      0x00\n        /* \"#utility.yul\":8533:8548   */\n      revert\n\n    auxdata: 0xa26469706673582212205e36ce26871be4e39f0a981a8d72ea692e762a9cf0fed388515cccc459eff83264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1350": {
									"entryPoint": null,
									"id": 1350,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_152": {
									"entryPoint": null,
									"id": 152,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_1740": {
									"entryPoint": 4531,
									"id": 1740,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@get_keccak256_1375": {
									"entryPoint": 2234,
									"id": 1375,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@sub_1761": {
									"entryPoint": 4498,
									"id": 1761,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_686": {
									"entryPoint": 2284,
									"id": 686,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@validateOwner_1403": {
									"entryPoint": 4437,
									"id": 1403,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@validatePhase_1485": {
									"entryPoint": 4064,
									"id": 1485,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4759,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f1b42555ffaacb2479fbd22497c1ed2c2b4af451fda620715042bfc9de76ccd6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x01": {
									"entryPoint": 4935,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 4957,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 4979,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2205:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:103:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:9"
															},
															"nodeType": "YulIf",
															"src": "105:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "166:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "182:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "176:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "176:16:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:9",
														"type": ""
													}
												],
												"src": "14:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "342:289:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "352:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "372:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "366:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "356:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "388:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "397:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "392:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "459:77:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "484:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "489:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "480:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "480:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "507:6:9"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "515:1:9"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "503:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "503:14:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "519:4:9",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "499:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "499:25:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "493:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "493:32:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "473:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "473:53:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "473:53:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "418:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "421:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "415:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "415:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "429:21:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "431:17:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "440:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "443:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "436:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "436:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "431:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "411:3:9",
																"statements": []
															},
															"src": "407:129:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "562:31:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "575:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "580:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "571:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "571:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "589:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "564:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "564:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "564:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "551:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "554:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "548:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "548:13:9"
															},
															"nodeType": "YulIf",
															"src": "545:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "602:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "613:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "618:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "609:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "609:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "318:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "323:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "334:3:9",
														"type": ""
													}
												],
												"src": "203:428:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "810:167:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "827:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "838:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "820:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "820:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "820:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "861:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "872:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "857:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "857:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "877:2:9",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "850:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "850:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "850:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "900:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "911:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "896:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "896:18:9"
																	},
																	{
																		"hexValue": "596f7572206e6f7420696e766573746f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "916:19:9",
																		"type": "",
																		"value": "Your not investor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "889:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "889:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "889:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "945:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "957:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "968:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "953:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "953:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "945:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f1b42555ffaacb2479fbd22497c1ed2c2b4af451fda620715042bfc9de76ccd6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "787:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "801:4:9",
														"type": ""
													}
												],
												"src": "636:341:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1083:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1093:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1105:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1116:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1101:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1101:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1093:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1135:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1146:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1128:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1128:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1128:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1052:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1063:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1074:4:9",
														"type": ""
													}
												],
												"src": "982:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1212:80:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1239:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1241:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1241:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1241:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1228:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1235:1:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1231:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1231:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1225:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1225:13:9"
															},
															"nodeType": "YulIf",
															"src": "1222:39:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1270:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1281:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1284:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1277:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1277:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1270:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1195:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1198:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1204:3:9",
														"type": ""
													}
												],
												"src": "1164:128:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1368:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1370:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1370:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1370:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1362:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1365:1:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1359:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1359:8:9"
															},
															"nodeType": "YulIf",
															"src": "1356:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1399:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1411:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1414:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1407:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1407:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1399:4:9"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1328:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1331:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1337:4:9",
														"type": ""
													}
												],
												"src": "1297:125:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:325:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1492:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1506:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1509:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1502:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1502:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1492:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1523:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1553:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1559:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1549:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1549:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1527:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1600:31:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1602:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1616:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1624:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1612:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1612:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1602:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1580:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1573:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1573:26:9"
															},
															"nodeType": "YulIf",
															"src": "1570:61:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1690:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1711:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1718:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1723:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1714:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1714:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1704:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1704:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1704:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1758:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1783:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1786:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1776:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1776:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1776:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1646:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1669:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1677:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1666:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1666:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1643:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1643:38:9"
															},
															"nodeType": "YulIf",
															"src": "1640:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1462:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1471:6:9",
														"type": ""
													}
												],
												"src": "1427:380:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1844:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1861:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1868:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1873:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1864:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1864:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1854:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1854:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1854:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1901:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1904:4:9",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1894:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1894:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1894:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1925:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1928:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1918:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1918:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1918:15:9"
														}
													]
												},
												"name": "panic_error_0x01",
												"nodeType": "YulFunctionDefinition",
												"src": "1812:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1976:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1993:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2000:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2005:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1996:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1996:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1986:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1986:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1986:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2033:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2026:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2026:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2026:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2057:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2060:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2050:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2050:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2050:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1944:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2108:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2125:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2132:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2137:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2128:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2128:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2118:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2118:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2165:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2168:4:9",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2158:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2158:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2158:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2189:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2192:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2182:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2182:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2182:15:9"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "2076:127:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_f1b42555ffaacb2479fbd22497c1ed2c2b4af451fda620715042bfc9de76ccd6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Your not investor\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x01()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600380546001600160a01b03199081167378731d3ca6b7e34ac0f824c42a7cc18a495cabab1790915560048054821673617f2e2fd72fd9d5503197092ac168c91465e7f2179055600580549091167317f6ad8ef982297579c203069c1dbffe4348c372179055633b9aca006008553480156200007f57600080fd5b506040516200302c3803806200302c833981016040819052620000a2916200127d565b6040805160e08101909152806003815260200160405180604001604052806009815260200168496e766573746f723160b81b81525081526020016200010960405180604001604052806004815260200163199a189960e11b815250620008ba60201b60201c565b81526000602080830182905260408084018390526060840183905260809093018290526003546001600160a01b031682528190522081518154829060ff191660018360048111156200015f576200015f62001373565b021790555060208281015180516200017e9260018501920190620011d7565b5060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c082015181600601559050506040518060e0016040528060036004811115620001d557620001d562001373565b815260200160405180604001604052806009815260200168496e766573746f723160b81b81525081526020016200022e604051806040016040528060048152602001633134323360e01b815250620008ba60201b60201c565b8152600060208083018290526040808401839052606084018390526080909301829052600480546001600160a01b03168352908290529190208251815491929091839160ff199091169060019084908111156200028f576200028f62001373565b02179055506020828101518051620002ae9260018501920190620011d7565b5060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c082015181600601559050506040518060e001604052806003600481111562000305576200030562001373565b81526020016040518060400160405280600b81526020016a10995cdd08199c9a595b9960aa1b815250815260200162000360604051806040016040528060048152602001630c8ccc4d60e21b815250620008ba60201b60201c565b81526000602080830182905260408084018390526060840183905260809093018290526005546001600160a01b031682528190522081518154829060ff19166001836004811115620003b657620003b662001373565b02179055506020828101518051620003d59260018501920190620011d7565b506040828101516002830155606083015160038301556080830151600483015560a0830151600583015560c0909201516006909101556007829055805160e0810190915280600081526020016040518060400160405280600581526020016437bbb732b960d91b81525081526020016200047160405180604001604052806004815260200163199a189960e11b815250620008ba60201b60201c565b8152600754602080830191909152600060408301819052606083018190526080909201829052735b38da6a701c568545dcfcb03fcb875f56beddc482525280517f58f8e73c330daffe64653449eb9a999c1162911d5129dd8193c7233d46ade2d58054909190829060ff19166001836004811115620004f457620004f462001373565b02179055506020828101518051620005139260018501920190620011d7565b5060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c082015181600601559050506040518060e00160405280600260048111156200056a576200056a62001373565b81526020016040518060400160405280601081526020016f283934bb30ba3290383937bb34b232b960811b8152508152602001620005ca604051806040016040528060048152602001633134323360e01b815250620008ba60201b60201c565b815260006020808301829052604083018290526060830182905260809092018190526000805160206200300c83398151915281529052805160008051602062002fec8339815191528054909190829060ff1916600183600481111562000634576200063462001373565b02179055506020828101518051620006539260018501920190620011d7565b506040828101516002830155606083015160038301556080830151600483015560a0830151600583015560c0909201516006909101556007546000805160206200300c83398151915260005260008051602062002fac83398151915255600160208190527f9d4d959825f0680278e64197773b2a50cd78b2b2cb00711ddbeebf0bf93cd8a4805460ff19169055815160e08101909252819081526020016040518060400160405280600f81526020016e283ab13634b190383937bb34b232b960891b81525081526020016200074a604051806040016040528060048152602001630c8ccc4d60e21b815250620008ba60201b60201c565b815260006020808301829052604083018290526060830182905260809092018190526000805160206200300c83398151915281529052805160008051602062002fec8339815191528054909190829060ff19166001836004811115620007b457620007b462001373565b02179055506020828101518051620007d39260018501920190620011d7565b506040820151600282015560608201516003808301919091556080830151600483015560a0830151600583015560c0909201516006909101556007546000805160206200300c83398151915260005260008051602062002fac8339815191525560016020527f9d4d959825f0680278e64197773b2a50cd78b2b2cb00711ddbeebf0bf93cd8a4805460ff19169055546200087a906001600160a01b0316620927c0620008ec565b5060045462000896906001600160a01b0316620c3500620008ec565b50600554620008b2906001600160a01b031662061a80620008ec565b505062001389565b600081604051602001620008cf919062001297565b604051602081830303815290604052805190602001209050919050565b60006200092c604051806040016040528060048152602001631cd9595960e21b8152506000805160206200300c8339815191528062000fe060201b60201c565b15156001141562000c75576200094162001155565b15156001141562000b0857336000908152602081905260409020600301548211156200096c57600080fd5b60033360009081526020819052604090205460ff16600481111562000995576200099562001373565b14620009dc5760405162461bcd60e51b81526020600482015260116024820152702cb7bab9103737ba1034b73b32b9ba37b960791b60448201526064015b60405180910390fd5b60036001600160a01b03841660009081526020819052604090205460ff16600481111562000a0e5762000a0e62001373565b1462000a515760405162461bcd60e51b81526020600482015260116024820152702cb7bab9103737ba1034b73b32b9ba37b960791b6044820152606401620009d3565b336000908152602081815260409091206003015462000a7b918490620015dc62001192821b17901c565b33600090815260208181526040808320600301939093556001600160a01b03861682529190206004015462000abb918490620015f8620011b3821b17901c565b6001600160a01b0384166000818152602081815260409182902060040193909355518481529091339160008051602062002fcc83398151915291015b60405180910390a350600162000fda565b3360009081526020819052604090206004015482111562000b2857600080fd5b60033360009081526020819052604090205460ff16600481111562000b515762000b5162001373565b1462000b945760405162461bcd60e51b81526020600482015260116024820152702cb7bab9103737ba1034b73b32b9ba37b960791b6044820152606401620009d3565b60036001600160a01b03841660009081526020819052604090205460ff16600481111562000bc65762000bc662001373565b1462000c095760405162461bcd60e51b81526020600482015260116024820152702cb7bab9103737ba1034b73b32b9ba37b960791b6044820152606401620009d3565b336000908152602081815260409091206004015462000c33918490620015dc62001192821b17901c565b336000908152602081815260408083206004908101949094556001600160a01b03871683529091209091015462000abb918490620015f8620011b3821b17901c565b6040805180820190915260078152667072697661746560c81b602082015262000caf906000805160206200300c8339815191528062000fe0565b15156001141562000e265762000cc462001155565b15156001141562000d9a573360009081526020819052604090206003015482111562000cef57600080fd5b336000908152602081815260409091206003015462000d19918490620015dc62001192821b17901c565b33600090815260208181526040808320600301939093556001600160a01b03861682529190206005015462000d59918490620015f8620011b3821b17901c565b6001600160a01b0384166000818152602081815260409182902060050193909355518481529091339160008051602062002fcc833981519152910162000af7565b3360009081526020819052604090206005015482111562000dba57600080fd5b336000908152602081815260409091206005015462000de4918490620015dc62001192821b17901c565b336000908152602081815260408083206005908101949094556001600160a01b03871683529091209091015462000d59918490620015f8620011b3821b17901c565b6040805180820190915260068152657075626c696360d01b602082015262000e5f906000805160206200300c8339815191528062000fe0565b15156001141562000fd65762000e7462001155565b15156001141562000f4a573360009081526020819052604090206003015482111562000e9f57600080fd5b336000908152602081815260409091206003015462000ec9918490620015dc62001192821b17901c565b33600090815260208181526040808320600301939093556001600160a01b03861682529190206006015462000f09918490620015f8620011b3821b17901c565b6001600160a01b0384166000818152602081815260409182902060060193909355518481529091339160008051602062002fcc833981519152910162000af7565b3360009081526020819052604090206006015482111562000f6a57600080fd5b336000908152602081815260409091206006015462000f94918490620015dc62001192821b17901c565b336000908152602081815260408083206006908101949094556001600160a01b03871683529091209091015462000f09918490620015f8620011b3821b17901c565b5060005b92915050565b60006200100f604051806040016040528060048152602001631cd9595960e21b815250620008ba60201b60201c565b6200101a85620008ba565b14156200107c576001600160a01b03831660009081526001602052604090205460ff161580156200106457506001600160a01b03821660009081526001602052604090205460ff16155b1562001073575060016200114e565b5060006200114e565b6040805180820190915260078152667072697661746560c81b6020820152620010a590620008ba565b620010b085620008ba565b1415620010e8576001600160a01b03831660009081526001602081905260409091205460ff161515141562001073575060016200114e565b6040805180820190915260068152657075626c696360d01b60208201526200111090620008ba565b6200111b85620008ba565b141562001073576001600160a01b03821660009081526001602081905260409091205460ff161515141562001073575060015b9392505050565b6000803360009081526020819052604090205460ff1660048111156200117f576200117f62001373565b14156200118c5750600190565b50600090565b600082821115620011a757620011a762001347565b6200114e8284620012f0565b600080620011c28385620012d5565b9050838110156200114e576200114e62001347565b828054620011e5906200130a565b90600052602060002090601f01602090048101928262001209576000855562001254565b82601f106200122457805160ff191683800117855562001254565b8280016001018555821562001254579182015b828111156200125457825182559160200191906001019062001237565b506200126292915062001266565b5090565b5b8082111562001262576000815560010162001267565b6000602082840312156200129057600080fd5b5051919050565b6000825160005b81811015620012ba57602081860181015185830152016200129e565b81811115620012ca576000828501525b509190910192915050565b60008219821115620012eb57620012eb6200135d565b500190565b6000828210156200130557620013056200135d565b500390565b600181811c908216806200131f57607f821691505b602082108114156200134157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b611c1380620013996000396000f3fe6080604052600436106100dd5760003560e01c8063785963c31161007f5780639d9e7a4b116100595780639d9e7a4b1461029c578063a9059cbb146102bc578063d96a094a146102dc578063dd62ed3e146102ef57600080fd5b8063785963c3146102115780638e4f8c6b1461023357806395d89b411461025357600080fd5b806318160ddd116100bb57806318160ddd1461019557806323b872dd146101aa578063313ce567146101ca57806370a08231146101f157600080fd5b806306fdde03146100e25780630761c8b914610141578063095ea7b314610165575b600080fd5b3480156100ee57600080fd5b5061012b6040518060400160405280600d81526020017f43727970746f4d6f6e737465720000000000000000000000000000000000000081525081565b6040516101389190611a99565b60405180910390f35b34801561014d57600080fd5b5061015760085481565b604051908152602001610138565b34801561017157600080fd5b50610185610180366004611967565b610335565b6040519015158152602001610138565b3480156101a157600080fd5b50600754610157565b3480156101b657600080fd5b506101856101c536600461192b565b6103a2565b3480156101d657600080fd5b506101df600c81565b60405160ff9091168152602001610138565b3480156101fd57600080fd5b5061015761020c3660046118dd565b61091d565b34801561021d57600080fd5b5061023161022c3660046119f0565b610ab4565b005b34801561023f57600080fd5b5061015761024e3660046119b3565b610c85565b34801561025f57600080fd5b5061012b6040518060400160405280600481526020017f434d4f4e0000000000000000000000000000000000000000000000000000000081525081565b3480156102a857600080fd5b506102316102b7366004611991565b610cb5565b3480156102c857600080fd5b506101856102d7366004611967565b610d2b565b6102316102ea366004611a64565b611383565b3480156102fb57600080fd5b5061015761030a3660046118f8565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b3360008181526006602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103909086815260200190565b60405180910390a35060015b92915050565b60006103df604051806040016040528060048152602001631cd9595960e21b81525073ab8483f64d9c6d1ecf9b849ae677dd3315835cb280611617565b151560011415610579576103f1611767565b151560011415610551576001600160a01b03841660009081526020819052604090206003015482111561042357600080fd5b6001600160a01b038416600090815260066020908152604080832033845290915290205482111561045357600080fd5b6001600160a01b03841660009081526020819052604090206004015461047990836115dc565b6001600160a01b0385166000908152602081815260408083206004019390935560068152828220338352905220546104b190836115dc565b6001600160a01b03808616600090815260066020908152604080832033845282528083209490945591861681529081905220600401546104f190836115f8565b6001600160a01b038481166000818152602081815260409182902060040194909455518581529092918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91015b60405180910390a3506001610916565b6001600160a01b03841660009081526020819052604090206004015482111561042357600080fd5b6105b7604051806040016040528060078152602001667072697661746560c81b81525073ab8483f64d9c6d1ecf9b849ae677dd3315835cb280611617565b151560011415610745576105c9611767565b1515600114156105fb576001600160a01b03841660009081526020819052604090206003015482111561042357600080fd5b6001600160a01b03841660009081526020819052604090206005015482111561062357600080fd5b6001600160a01b038416600090815260066020908152604080832033845290915290205482111561065357600080fd5b6001600160a01b03841660009081526020819052604090206005015461067990836115dc565b6001600160a01b0385166000908152602081815260408083206005019390935560068152828220338352905220546106b190836115dc565b6001600160a01b03808616600090815260066020908152604080832033845282528083209490945591861681529081905220600501546106f190836115f8565b6001600160a01b038481166000818152602081815260409182902060050194909455518581529092918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610541565b610782604051806040016040528060068152602001657075626c696360d01b81525073ab8483f64d9c6d1ecf9b849ae677dd3315835cb280611617565b15156001141561091257610794611767565b1515600114156107c6576001600160a01b03841660009081526020819052604090206003015482111561042357600080fd5b6001600160a01b0384166000908152602081905260409020600601548211156107ee57600080fd5b6001600160a01b038416600090815260066020908152604080832033845290915290205482111561081e57600080fd5b6001600160a01b03841660009081526020819052604090206006015461084490836115dc565b6001600160a01b0385166000908152602081815260408083206006908101949094559281528282203383529052205461087d90836115dc565b6001600160a01b0380861660009081526006602081815260408084203385528252808420959095559287168252918190529190912001546108be90836115f8565b6001600160a01b038481166000818152602081815260409182902060060194909455518581529092918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610541565b5060005b9392505050565b73ab8483f64d9c6d1ecf9b849ae677dd3315835cb2600090815260016020527f9d4d959825f0680278e64197773b2a50cd78b2b2cb00711ddbeebf0bf93cd8a45460ff161580156109ad575073ab8483f64d9c6d1ecf9b849ae677dd3315835cb260005260016020527f9d4d959825f0680278e64197773b2a50cd78b2b2cb00711ddbeebf0bf93cd8a45460ff16155b156109d157506001600160a01b031660009081526020819052604090206004015490565b73ab8483f64d9c6d1ecf9b849ae677dd3315835cb2600052600160208190527f9d4d959825f0680278e64197773b2a50cd78b2b2cb00711ddbeebf0bf93cd8a45460ff1615151415610a3c57506001600160a01b031660009081526020819052604090206005015490565b73ab8483f64d9c6d1ecf9b849ae677dd3315835cb2600052600160208190527f9d4d959825f0680278e64197773b2a50cd78b2b2cb00711ddbeebf0bf93cd8a45460ff1615151415610aa757506001600160a01b031660009081526020819052604090206006015490565b506000919050565b919050565b3360009081526002602081905260409091200154600160b01b900460ff161515600114610b285760405162461bcd60e51b815260206004820152601960248201527f4170706c69636174696f6e20616c72656164792073656e74210000000000000060448201526064015b60405180910390fd5b6040805160c08101825284815260208082018590526001600160a01b0384168284015260016060830181905260006080840181905260a084019190915233815260028252929092208151805192939192610b8592849201906117a0565b506020828101518051610b9e92600185019201906117a0565b506040820151600290910180546060840151608085015160a0909501511515600160b01b027fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff951515750100000000000000000000000000000000000000000002959095167fffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffff91151574010000000000000000000000000000000000000000027fffffffffffffffffffffff0000000000000000000000000000000000000000009093166001600160a01b0390951694909417919091171691909117919091179055505050565b600081604051602001610c989190611a7d565b604051602081830303815290604052805190602001209050919050565b60023360009081526020819052604090205460ff166004811115610cdb57610cdb611bb1565b14610d285760405162461bcd60e51b815260206004820152601f60248201527f596f7520617265206e6f74206120707269766174652070726f766964657221006044820152606401610b1f565b50565b6000610d68604051806040016040528060048152602001631cd9595960e21b81525073ab8483f64d9c6d1ecf9b849ae677dd3315835cb280611617565b15156001141561106c57610d7a611767565b151560011415610f265733600090815260208190526040902060030154821115610da357600080fd5b60033360009081526020819052604090205460ff166004811115610dc957610dc9611bb1565b14610e0a5760405162461bcd60e51b81526020600482015260116024820152702cb7bab9103737ba1034b73b32b9ba37b960791b6044820152606401610b1f565b60036001600160a01b03841660009081526020819052604090205460ff166004811115610e3957610e39611bb1565b14610e7a5760405162461bcd60e51b81526020600482015260116024820152702cb7bab9103737ba1034b73b32b9ba37b960791b6044820152606401610b1f565b33600090815260208190526040902060030154610e9790836115dc565b33600090815260208190526040808220600301929092556001600160a01b03851681522060040154610ec990836115f8565b6001600160a01b038416600081815260208181526040918290206004019390935551848152909133917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91015b60405180910390a350600161039c565b33600090815260208190526040902060040154821115610f4557600080fd5b60033360009081526020819052604090205460ff166004811115610f6b57610f6b611bb1565b14610fac5760405162461bcd60e51b81526020600482015260116024820152702cb7bab9103737ba1034b73b32b9ba37b960791b6044820152606401610b1f565b60036001600160a01b03841660009081526020819052604090205460ff166004811115610fdb57610fdb611bb1565b1461101c5760405162461bcd60e51b81526020600482015260116024820152702cb7bab9103737ba1034b73b32b9ba37b960791b6044820152606401610b1f565b3360009081526020819052604090206004015461103990836115dc565b336000908152602081905260408082206004908101939093556001600160a01b038616825290200154610ec990836115f8565b6110aa604051806040016040528060078152602001667072697661746560c81b81525073ab8483f64d9c6d1ecf9b849ae677dd3315835cb280611617565b1515600114156111f4576110bc611767565b15156001141561118557336000908152602081905260409020600301548211156110e557600080fd5b3360009081526020819052604090206003015461110290836115dc565b33600090815260208190526040808220600301929092556001600160a01b0385168152206005015461113490836115f8565b6001600160a01b038416600081815260208181526040918290206005019390935551848152909133917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610f16565b336000908152602081905260409020600501548211156111a457600080fd5b336000908152602081905260409020600501546111c190836115dc565b336000908152602081905260408082206005908101939093556001600160a01b03861682529020015461113490836115f8565b611231604051806040016040528060068152602001657075626c696360d01b81525073ab8483f64d9c6d1ecf9b849ae677dd3315835cb280611617565b15156001141561137b57611243611767565b15156001141561130c573360009081526020819052604090206003015482111561126c57600080fd5b3360009081526020819052604090206003015461128990836115dc565b33600090815260208190526040808220600301929092556001600160a01b038516815220600601546112bb90836115f8565b6001600160a01b038416600081815260208181526040918290206006019390935551848152909133917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610f16565b3360009081526020819052604090206006015482111561132b57600080fd5b3360009081526020819052604090206006015461134890836115dc565b336000908152602081905260408082206006908101939093556001600160a01b0386168252902001546112bb90836115f8565b50600061039c565b6008546113909082611ae4565b34146113de5760405162461bcd60e51b815260206004820181905260248201527f4e65656420746f2073656e6420657861637420616d6f756e74206f66207765696044820152606401610b1f565b73ab8483f64d9c6d1ecf9b849ae677dd3315835cb260005260016020527f9d4d959825f0680278e64197773b2a50cd78b2b2cb00711ddbeebf0bf93cd8a45460ff1615801561146c575073ab8483f64d9c6d1ecf9b849ae677dd3315835cb260005260016020527f9d4d959825f0680278e64197773b2a50cd78b2b2cb00711ddbeebf0bf93cd8a45460ff16155b6114de5760405162461bcd60e51b815260206004820152603b60248201527f447572696e672074686520736565642070686173652c20746865207472616e7360448201527f666572206f6620746f6b656e732069732070726f6869626974656400000000006064820152608401610b1f565b73ab8483f64d9c6d1ecf9b849ae677dd3315835cb2600052600160208190527f9d4d959825f0680278e64197773b2a50cd78b2b2cb00711ddbeebf0bf93cd8a45460ff161515141561155d573360009081526020819052604090206005015461154790826115f8565b3360009081526020819052604090206005015550565b73ab8483f64d9c6d1ecf9b849ae677dd3315835cb2600052600160208190527f9d4d959825f0680278e64197773b2a50cd78b2b2cb00711ddbeebf0bf93cd8a45460ff1615151415610d2857336000908152602081905260409020600601546115c690826115f8565b3360009081526020819052604090206006015550565b6000828211156115ee576115ee611b85565b6109168284611b03565b6000806116058385611acc565b90508381101561091657610916611b85565b600061163e604051806040016040528060048152602001631cd9595960e21b815250610c85565b61164785610c85565b141561169c576001600160a01b03831660009081526001602052604090205460ff1615801561168f57506001600160a01b03821660009081526001602052604090205460ff16155b1561091257506001610916565b6116c4604051806040016040528060078152602001667072697661746560c81b815250610c85565b6116cd85610c85565b1415611702576001600160a01b03831660009081526001602081905260409091205460ff161515141561091257506001610916565b611729604051806040016040528060068152602001657075626c696360d01b815250610c85565b61173285610c85565b1415610912576001600160a01b03821660009081526001602081905260409091205460ff161515141561091257506001610916565b6000803360009081526020819052604090205460ff16600481111561178e5761178e611bb1565b141561179a5750600190565b50600090565b8280546117ac90611b4a565b90600052602060002090601f0160209004810192826117ce5760008555611814565b82601f106117e757805160ff1916838001178555611814565b82800160010185558215611814579182015b828111156118145782518255916020019190600101906117f9565b50611820929150611824565b5090565b5b808211156118205760008155600101611825565b80356001600160a01b0381168114610aaf57600080fd5b600082601f83011261186157600080fd5b813567ffffffffffffffff8082111561187c5761187c611bc7565b604051601f8301601f19908116603f011681019082821181831017156118a4576118a4611bc7565b816040528381528660208588010111156118bd57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156118ef57600080fd5b61091682611839565b6000806040838503121561190b57600080fd5b61191483611839565b915061192260208401611839565b90509250929050565b60008060006060848603121561194057600080fd5b61194984611839565b925061195760208501611839565b9150604084013590509250925092565b6000806040838503121561197a57600080fd5b61198383611839565b946020939093013593505050565b6000602082840312156119a357600080fd5b8135801515811461091657600080fd5b6000602082840312156119c557600080fd5b813567ffffffffffffffff8111156119dc57600080fd5b6119e884828501611850565b949350505050565b600080600060608486031215611a0557600080fd5b833567ffffffffffffffff80821115611a1d57600080fd5b611a2987838801611850565b94506020860135915080821115611a3f57600080fd5b50611a4c86828701611850565b925050611a5b60408501611839565b90509250925092565b600060208284031215611a7657600080fd5b5035919050565b60008251611a8f818460208701611b1a565b9190910192915050565b6020815260008251806020840152611ab8816040850160208701611b1a565b601f01601f19169190910160400192915050565b60008219821115611adf57611adf611b9b565b500190565b6000816000190483118215151615611afe57611afe611b9b565b500290565b600082821015611b1557611b15611b9b565b500390565b60005b83811015611b35578181015183820152602001611b1d565b83811115611b44576000848401525b50505050565b600181811c90821680611b5e57607f821691505b60208210811415611b7f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212205e36ce26871be4e39f0a981a8d72ea692e762a9cf0fed388515cccc459eff83264736f6c63430008070033d0917daa0b256b4ca08bff93fec91cc093247bf3cc8b97e585b3c6329d4b8765ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef1a1017a437881fd8fee8ab135586d886995df9286bd91e5d3c250f79b2327f02000000000000000000000000ab8483f64d9c6d1ecf9b849ae677dd3315835cb2",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH20 0x78731D3CA6B7E34AC0F824C42A7CC18A495CABAB OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD DUP3 AND PUSH20 0x617F2E2FD72FD9D5503197092AC168C91465E7F2 OR SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP1 SWAP2 AND PUSH20 0x17F6AD8EF982297579C203069C1DBFFE4348C372 OR SWAP1 SSTORE PUSH4 0x3B9ACA00 PUSH1 0x8 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x302C CODESIZE SUB DUP1 PUSH3 0x302C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0xA2 SWAP2 PUSH3 0x127D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x496E766573746F7231 PUSH1 0xB8 SHL DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x109 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x199A1899 PUSH1 0xE1 SHL DUP2 MSTORE POP PUSH3 0x8BA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 SWAP1 MSTORE KECCAK256 DUP2 MLOAD DUP2 SLOAD DUP3 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x15F JUMPI PUSH3 0x15F PUSH3 0x1373 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP1 MLOAD PUSH3 0x17E SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 ADD SWAP1 PUSH3 0x11D7 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x1D5 JUMPI PUSH3 0x1D5 PUSH3 0x1373 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x496E766573746F7231 PUSH1 0xB8 SHL DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x22E PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x31343233 PUSH1 0xE0 SHL DUP2 MSTORE POP PUSH3 0x8BA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP1 DUP3 SWAP1 MSTORE SWAP2 SWAP1 KECCAK256 DUP3 MLOAD DUP2 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH1 0xFF NOT SWAP1 SWAP2 AND SWAP1 PUSH1 0x1 SWAP1 DUP5 SWAP1 DUP2 GT ISZERO PUSH3 0x28F JUMPI PUSH3 0x28F PUSH3 0x1373 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP1 MLOAD PUSH3 0x2AE SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 ADD SWAP1 PUSH3 0x11D7 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x305 JUMPI PUSH3 0x305 PUSH3 0x1373 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x10995CDD08199C9A595B99 PUSH1 0xAA SHL DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x360 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0xC8CCC4D PUSH1 0xE2 SHL DUP2 MSTORE POP PUSH3 0x8BA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 SWAP1 MSTORE KECCAK256 DUP2 MLOAD DUP2 SLOAD DUP3 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x3B6 JUMPI PUSH3 0x3B6 PUSH3 0x1373 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP1 MLOAD PUSH3 0x3D5 SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 ADD SWAP1 PUSH3 0x11D7 JUMP JUMPDEST POP PUSH1 0x40 DUP3 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD MLOAD PUSH1 0x6 SWAP1 SWAP2 ADD SSTORE PUSH1 0x7 DUP3 SWAP1 SSTORE DUP1 MLOAD PUSH1 0xE0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x471 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x199A1899 PUSH1 0xE1 SHL DUP2 MSTORE POP PUSH3 0x8BA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 MSTORE PUSH1 0x7 SLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 PUSH1 0x40 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 SWAP1 SWAP3 ADD DUP3 SWAP1 MSTORE PUSH20 0x5B38DA6A701C568545DCFCB03FCB875F56BEDDC4 DUP3 MSTORE MSTORE DUP1 MLOAD PUSH32 0x58F8E73C330DAFFE64653449EB9A999C1162911D5129DD8193C7233D46ADE2D5 DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x4F4 JUMPI PUSH3 0x4F4 PUSH3 0x1373 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP1 MLOAD PUSH3 0x513 SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 ADD SWAP1 PUSH3 0x11D7 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x56A JUMPI PUSH3 0x56A PUSH3 0x1373 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH16 0x283934BB30BA3290383937BB34B232B9 PUSH1 0x81 SHL DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x5CA PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x31343233 PUSH1 0xE0 SHL DUP2 MSTORE POP PUSH3 0x8BA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 SWAP1 SWAP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x300C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE SWAP1 MSTORE DUP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2FEC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x634 JUMPI PUSH3 0x634 PUSH3 0x1373 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP1 MLOAD PUSH3 0x653 SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 ADD SWAP1 PUSH3 0x11D7 JUMP JUMPDEST POP PUSH1 0x40 DUP3 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD MLOAD PUSH1 0x6 SWAP1 SWAP2 ADD SSTORE PUSH1 0x7 SLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x300C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2FAC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH32 0x9D4D959825F0680278E64197773B2A50CD78B2B2CB00711DDBEEBF0BF93CD8A4 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP2 MLOAD PUSH1 0xE0 DUP2 ADD SWAP1 SWAP3 MSTORE DUP2 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH15 0x283AB13634B190383937BB34B232B9 PUSH1 0x89 SHL DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x74A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0xC8CCC4D PUSH1 0xE2 SHL DUP2 MSTORE POP PUSH3 0x8BA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 SWAP1 SWAP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x300C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE SWAP1 MSTORE DUP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2FEC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x7B4 JUMPI PUSH3 0x7B4 PUSH3 0x1373 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP1 MLOAD PUSH3 0x7D3 SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 ADD SWAP1 PUSH3 0x11D7 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD MLOAD PUSH1 0x6 SWAP1 SWAP2 ADD SSTORE PUSH1 0x7 SLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x300C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2FAC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH32 0x9D4D959825F0680278E64197773B2A50CD78B2B2CB00711DDBEEBF0BF93CD8A4 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE SLOAD PUSH3 0x87A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x927C0 PUSH3 0x8EC JUMP JUMPDEST POP PUSH1 0x4 SLOAD PUSH3 0x896 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0xC3500 PUSH3 0x8EC JUMP JUMPDEST POP PUSH1 0x5 SLOAD PUSH3 0x8B2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x61A80 PUSH3 0x8EC JUMP JUMPDEST POP POP PUSH3 0x1389 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x8CF SWAP2 SWAP1 PUSH3 0x1297 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x92C PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x1CD95959 PUSH1 0xE2 SHL DUP2 MSTORE POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x300C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 PUSH3 0xFE0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH3 0xC75 JUMPI PUSH3 0x941 PUSH3 0x1155 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH3 0xB08 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP3 GT ISZERO PUSH3 0x96C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x995 JUMPI PUSH3 0x995 PUSH3 0x1373 JUMP JUMPDEST EQ PUSH3 0x9DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2CB7BAB9103737BA1034B73B32B9BA37B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH3 0xA0E JUMPI PUSH3 0xA0E PUSH3 0x1373 JUMP JUMPDEST EQ PUSH3 0xA51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2CB7BAB9103737BA1034B73B32B9BA37B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x9D3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH3 0xA7B SWAP2 DUP5 SWAP1 PUSH3 0x15DC PUSH3 0x1192 DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x3 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP3 MSTORE SWAP2 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH3 0xABB SWAP2 DUP5 SWAP1 PUSH3 0x15F8 PUSH3 0x11B3 DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x4 ADD SWAP4 SWAP1 SWAP4 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP2 CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2FCC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 PUSH3 0xFDA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD DUP3 GT ISZERO PUSH3 0xB28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH3 0xB51 JUMPI PUSH3 0xB51 PUSH3 0x1373 JUMP JUMPDEST EQ PUSH3 0xB94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2CB7BAB9103737BA1034B73B32B9BA37B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x9D3 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH3 0xBC6 JUMPI PUSH3 0xBC6 PUSH3 0x1373 JUMP JUMPDEST EQ PUSH3 0xC09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2CB7BAB9103737BA1034B73B32B9BA37B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x9D3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH3 0xC33 SWAP2 DUP5 SWAP1 PUSH3 0x15DC PUSH3 0x1192 DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 SWAP1 DUP2 ADD SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP4 MSTORE SWAP1 SWAP2 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH3 0xABB SWAP2 DUP5 SWAP1 PUSH3 0x15F8 PUSH3 0x11B3 DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH7 0x70726976617465 PUSH1 0xC8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0xCAF SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x300C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 PUSH3 0xFE0 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH3 0xE26 JUMPI PUSH3 0xCC4 PUSH3 0x1155 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH3 0xD9A JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP3 GT ISZERO PUSH3 0xCEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH3 0xD19 SWAP2 DUP5 SWAP1 PUSH3 0x15DC PUSH3 0x1192 DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x3 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP3 MSTORE SWAP2 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH3 0xD59 SWAP2 DUP5 SWAP1 PUSH3 0x15F8 PUSH3 0x11B3 DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x5 ADD SWAP4 SWAP1 SWAP4 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP2 CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2FCC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH3 0xAF7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD DUP3 GT ISZERO PUSH3 0xDBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH3 0xDE4 SWAP2 DUP5 SWAP1 PUSH3 0x15DC PUSH3 0x1192 DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 SWAP1 DUP2 ADD SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP4 MSTORE SWAP1 SWAP2 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH3 0xD59 SWAP2 DUP5 SWAP1 PUSH3 0x15F8 PUSH3 0x11B3 DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH6 0x7075626C6963 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0xE5F SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x300C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 PUSH3 0xFE0 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH3 0xFD6 JUMPI PUSH3 0xE74 PUSH3 0x1155 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH3 0xF4A JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP3 GT ISZERO PUSH3 0xE9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH3 0xEC9 SWAP2 DUP5 SWAP1 PUSH3 0x15DC PUSH3 0x1192 DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x3 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP3 MSTORE SWAP2 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH3 0xF09 SWAP2 DUP5 SWAP1 PUSH3 0x15F8 PUSH3 0x11B3 DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x6 ADD SWAP4 SWAP1 SWAP4 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP2 CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2FCC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH3 0xAF7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD DUP3 GT ISZERO PUSH3 0xF6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH3 0xF94 SWAP2 DUP5 SWAP1 PUSH3 0x15DC PUSH3 0x1192 DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x6 SWAP1 DUP2 ADD SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP4 MSTORE SWAP1 SWAP2 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH3 0xF09 SWAP2 DUP5 SWAP1 PUSH3 0x15F8 PUSH3 0x11B3 DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x100F PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x1CD95959 PUSH1 0xE2 SHL DUP2 MSTORE POP PUSH3 0x8BA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x101A DUP6 PUSH3 0x8BA JUMP JUMPDEST EQ ISZERO PUSH3 0x107C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH3 0x1064 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH3 0x1073 JUMPI POP PUSH1 0x1 PUSH3 0x114E JUMP JUMPDEST POP PUSH1 0x0 PUSH3 0x114E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x7 DUP2 MSTORE PUSH7 0x70726976617465 PUSH1 0xC8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0x10A5 SWAP1 PUSH3 0x8BA JUMP JUMPDEST PUSH3 0x10B0 DUP6 PUSH3 0x8BA JUMP JUMPDEST EQ ISZERO PUSH3 0x10E8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH3 0x1073 JUMPI POP PUSH1 0x1 PUSH3 0x114E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH6 0x7075626C6963 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0x1110 SWAP1 PUSH3 0x8BA JUMP JUMPDEST PUSH3 0x111B DUP6 PUSH3 0x8BA JUMP JUMPDEST EQ ISZERO PUSH3 0x1073 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH3 0x1073 JUMPI POP PUSH1 0x1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x117F JUMPI PUSH3 0x117F PUSH3 0x1373 JUMP JUMPDEST EQ ISZERO PUSH3 0x118C JUMPI POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH3 0x11A7 JUMPI PUSH3 0x11A7 PUSH3 0x1347 JUMP JUMPDEST PUSH3 0x114E DUP3 DUP5 PUSH3 0x12F0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x11C2 DUP4 DUP6 PUSH3 0x12D5 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH3 0x114E JUMPI PUSH3 0x114E PUSH3 0x1347 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x11E5 SWAP1 PUSH3 0x130A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1209 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x1254 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1224 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1254 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1254 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1254 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1237 JUMP JUMPDEST POP PUSH3 0x1262 SWAP3 SWAP2 POP PUSH3 0x1266 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1262 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1267 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x12BA JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH3 0x129E JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH3 0x12CA JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x12EB JUMPI PUSH3 0x12EB PUSH3 0x135D JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH3 0x1305 JUMPI PUSH3 0x1305 PUSH3 0x135D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x131F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x1341 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1C13 DUP1 PUSH3 0x1399 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x785963C3 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0x9D9E7A4B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x9D9E7A4B EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xD96A094A EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x785963C3 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x8E4F8C6B EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x761C8B9 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x165 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12B PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43727970746F4D6F6E7374657200000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1A99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x138 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x185 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x1967 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x138 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x157 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x185 PUSH2 0x1C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0x3A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH1 0xC DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x138 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH2 0x20C CALLDATASIZE PUSH1 0x4 PUSH2 0x18DD JUMP JUMPDEST PUSH2 0x91D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x19F0 JUMP JUMPDEST PUSH2 0xAB4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0x19B3 JUMP JUMPDEST PUSH2 0xC85 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12B PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x434D4F4E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1991 JUMP JUMPDEST PUSH2 0xCB5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x185 PUSH2 0x2D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1967 JUMP JUMPDEST PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x231 PUSH2 0x2EA CALLDATASIZE PUSH1 0x4 PUSH2 0x1A64 JUMP JUMPDEST PUSH2 0x1383 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH2 0x30A CALLDATASIZE PUSH1 0x4 PUSH2 0x18F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x390 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x1CD95959 PUSH1 0xE2 SHL DUP2 MSTORE POP PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 DUP1 PUSH2 0x1617 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x579 JUMPI PUSH2 0x3F1 PUSH2 0x1767 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x551 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP3 GT ISZERO PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x479 SWAP1 DUP4 PUSH2 0x15DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x6 DUP2 MSTORE DUP3 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x4B1 SWAP1 DUP4 PUSH2 0x15DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP7 AND DUP2 MSTORE SWAP1 DUP2 SWAP1 MSTORE KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x4F1 SWAP1 DUP4 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x4 ADD SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 PUSH2 0x916 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD DUP3 GT ISZERO PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5B7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x70726976617465 PUSH1 0xC8 SHL DUP2 MSTORE POP PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 DUP1 PUSH2 0x1617 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x745 JUMPI PUSH2 0x5C9 PUSH2 0x1767 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x5FB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP3 GT ISZERO PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD DUP3 GT ISZERO PUSH2 0x623 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x653 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH2 0x679 SWAP1 DUP4 PUSH2 0x15DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x6 DUP2 MSTORE DUP3 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x6B1 SWAP1 DUP4 PUSH2 0x15DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP7 AND DUP2 MSTORE SWAP1 DUP2 SWAP1 MSTORE KECCAK256 PUSH1 0x5 ADD SLOAD PUSH2 0x6F1 SWAP1 DUP4 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x5 ADD SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x541 JUMP JUMPDEST PUSH2 0x782 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x7075626C6963 PUSH1 0xD0 SHL DUP2 MSTORE POP PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 DUP1 PUSH2 0x1617 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x912 JUMPI PUSH2 0x794 PUSH2 0x1767 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x7C6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP3 GT ISZERO PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD DUP3 GT ISZERO PUSH2 0x7EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x81E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0x844 SWAP1 DUP4 PUSH2 0x15DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x6 SWAP1 DUP2 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP3 DUP2 MSTORE DUP3 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x87D SWAP1 DUP4 PUSH2 0x15DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE SWAP3 DUP8 AND DUP3 MSTORE SWAP2 DUP2 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x8BE SWAP1 DUP4 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x6 ADD SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x541 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH32 0x9D4D959825F0680278E64197773B2A50CD78B2B2CB00711DDBEEBF0BF93CD8A4 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x9AD JUMPI POP PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH32 0x9D4D959825F0680278E64197773B2A50CD78B2B2CB00711DDBEEBF0BF93CD8A4 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x9D1 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH32 0x9D4D959825F0680278E64197773B2A50CD78B2B2CB00711DDBEEBF0BF93CD8A4 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0xA3C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH32 0x9D4D959825F0680278E64197773B2A50CD78B2B2CB00711DDBEEBF0BF93CD8A4 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0xAA7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xB28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4170706C69636174696F6E20616C72656164792073656E742100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x80 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER DUP2 MSTORE PUSH1 0x2 DUP3 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH2 0xB85 SWAP3 DUP5 SWAP3 ADD SWAP1 PUSH2 0x17A0 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP1 MLOAD PUSH2 0xB9E SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x17A0 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0xA0 SWAP1 SWAP6 ADD MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xB0 SHL MUL PUSH32 0xFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 ISZERO ISZERO PUSH22 0x1000000000000000000000000000000000000000000 MUL SWAP6 SWAP1 SWAP6 AND PUSH32 0xFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 ISZERO ISZERO PUSH21 0x10000000000000000000000000000000000000000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP2 SWAP1 SWAP2 OR AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC98 SWAP2 SWAP1 PUSH2 0x1A7D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xCDB JUMPI PUSH2 0xCDB PUSH2 0x1BB1 JUMP JUMPDEST EQ PUSH2 0xD28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F74206120707269766174652070726F76696465722100 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB1F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD68 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x1CD95959 PUSH1 0xE2 SHL DUP2 MSTORE POP PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 DUP1 PUSH2 0x1617 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x106C JUMPI PUSH2 0xD7A PUSH2 0x1767 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0xF26 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP3 GT ISZERO PUSH2 0xDA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xDC9 JUMPI PUSH2 0xDC9 PUSH2 0x1BB1 JUMP JUMPDEST EQ PUSH2 0xE0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2CB7BAB9103737BA1034B73B32B9BA37B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE39 JUMPI PUSH2 0xE39 PUSH2 0x1BB1 JUMP JUMPDEST EQ PUSH2 0xE7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2CB7BAB9103737BA1034B73B32B9BA37B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB1F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xE97 SWAP1 DUP4 PUSH2 0x15DC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0xEC9 SWAP1 DUP4 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x4 ADD SWAP4 SWAP1 SWAP4 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP2 CALLER SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 PUSH2 0x39C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD DUP3 GT ISZERO PUSH2 0xF45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xF6B JUMPI PUSH2 0xF6B PUSH2 0x1BB1 JUMP JUMPDEST EQ PUSH2 0xFAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2CB7BAB9103737BA1034B73B32B9BA37B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xFDB JUMPI PUSH2 0xFDB PUSH2 0x1BB1 JUMP JUMPDEST EQ PUSH2 0x101C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2CB7BAB9103737BA1034B73B32B9BA37B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB1F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x1039 SWAP1 DUP4 PUSH2 0x15DC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x4 SWAP1 DUP2 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP3 MSTORE SWAP1 KECCAK256 ADD SLOAD PUSH2 0xEC9 SWAP1 DUP4 PUSH2 0x15F8 JUMP JUMPDEST PUSH2 0x10AA PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x70726976617465 PUSH1 0xC8 SHL DUP2 MSTORE POP PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 DUP1 PUSH2 0x1617 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x11F4 JUMPI PUSH2 0x10BC PUSH2 0x1767 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x1185 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP3 GT ISZERO PUSH2 0x10E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x1102 SWAP1 DUP4 PUSH2 0x15DC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE KECCAK256 PUSH1 0x5 ADD SLOAD PUSH2 0x1134 SWAP1 DUP4 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x5 ADD SWAP4 SWAP1 SWAP4 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP2 CALLER SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0xF16 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD DUP3 GT ISZERO PUSH2 0x11A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH2 0x11C1 SWAP1 DUP4 PUSH2 0x15DC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x5 SWAP1 DUP2 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP3 MSTORE SWAP1 KECCAK256 ADD SLOAD PUSH2 0x1134 SWAP1 DUP4 PUSH2 0x15F8 JUMP JUMPDEST PUSH2 0x1231 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x7075626C6963 PUSH1 0xD0 SHL DUP2 MSTORE POP PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 DUP1 PUSH2 0x1617 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x137B JUMPI PUSH2 0x1243 PUSH2 0x1767 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x130C JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP3 GT ISZERO PUSH2 0x126C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x1289 SWAP1 DUP4 PUSH2 0x15DC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0x12BB SWAP1 DUP4 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x6 ADD SWAP4 SWAP1 SWAP4 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP2 CALLER SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0xF16 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD DUP3 GT ISZERO PUSH2 0x132B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0x1348 SWAP1 DUP4 PUSH2 0x15DC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x6 SWAP1 DUP2 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP3 MSTORE SWAP1 KECCAK256 ADD SLOAD PUSH2 0x12BB SWAP1 DUP4 PUSH2 0x15F8 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x39C JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1390 SWAP1 DUP3 PUSH2 0x1AE4 JUMP JUMPDEST CALLVALUE EQ PUSH2 0x13DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E65656420746F2073656E6420657861637420616D6F756E74206F6620776569 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH32 0x9D4D959825F0680278E64197773B2A50CD78B2B2CB00711DDBEEBF0BF93CD8A4 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x146C JUMPI POP PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH32 0x9D4D959825F0680278E64197773B2A50CD78B2B2CB00711DDBEEBF0BF93CD8A4 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x14DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x447572696E672074686520736565642070686173652C20746865207472616E73 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x666572206F6620746F6B656E732069732070726F686962697465640000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH32 0x9D4D959825F0680278E64197773B2A50CD78B2B2CB00711DDBEEBF0BF93CD8A4 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x155D JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH2 0x1547 SWAP1 DUP3 PUSH2 0x15F8 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SSTORE POP JUMP JUMPDEST PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH32 0x9D4D959825F0680278E64197773B2A50CD78B2B2CB00711DDBEEBF0BF93CD8A4 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0xD28 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0x15C6 SWAP1 DUP3 PUSH2 0x15F8 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x15EE JUMPI PUSH2 0x15EE PUSH2 0x1B85 JUMP JUMPDEST PUSH2 0x916 DUP3 DUP5 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1605 DUP4 DUP6 PUSH2 0x1ACC JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x916 JUMPI PUSH2 0x916 PUSH2 0x1B85 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x163E PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x1CD95959 PUSH1 0xE2 SHL DUP2 MSTORE POP PUSH2 0xC85 JUMP JUMPDEST PUSH2 0x1647 DUP6 PUSH2 0xC85 JUMP JUMPDEST EQ ISZERO PUSH2 0x169C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x168F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x912 JUMPI POP PUSH1 0x1 PUSH2 0x916 JUMP JUMPDEST PUSH2 0x16C4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x70726976617465 PUSH1 0xC8 SHL DUP2 MSTORE POP PUSH2 0xC85 JUMP JUMPDEST PUSH2 0x16CD DUP6 PUSH2 0xC85 JUMP JUMPDEST EQ ISZERO PUSH2 0x1702 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x912 JUMPI POP PUSH1 0x1 PUSH2 0x916 JUMP JUMPDEST PUSH2 0x1729 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x7075626C6963 PUSH1 0xD0 SHL DUP2 MSTORE POP PUSH2 0xC85 JUMP JUMPDEST PUSH2 0x1732 DUP6 PUSH2 0xC85 JUMP JUMPDEST EQ ISZERO PUSH2 0x912 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x912 JUMPI POP PUSH1 0x1 PUSH2 0x916 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x178E JUMPI PUSH2 0x178E PUSH2 0x1BB1 JUMP JUMPDEST EQ ISZERO PUSH2 0x179A JUMPI POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x17AC SWAP1 PUSH2 0x1B4A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x17CE JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1814 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x17E7 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1814 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1814 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1814 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x17F9 JUMP JUMPDEST POP PUSH2 0x1820 SWAP3 SWAP2 POP PUSH2 0x1824 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1820 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1825 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1861 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x187C JUMPI PUSH2 0x187C PUSH2 0x1BC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x18A4 JUMPI PUSH2 0x18A4 PUSH2 0x1BC7 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x18BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x916 DUP3 PUSH2 0x1839 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x190B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1914 DUP4 PUSH2 0x1839 JUMP JUMPDEST SWAP2 POP PUSH2 0x1922 PUSH1 0x20 DUP5 ADD PUSH2 0x1839 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1940 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1949 DUP5 PUSH2 0x1839 JUMP JUMPDEST SWAP3 POP PUSH2 0x1957 PUSH1 0x20 DUP6 ADD PUSH2 0x1839 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x197A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1983 DUP4 PUSH2 0x1839 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x916 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19E8 DUP5 DUP3 DUP6 ADD PUSH2 0x1850 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A29 DUP8 DUP4 DUP9 ADD PUSH2 0x1850 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A4C DUP7 DUP3 DUP8 ADD PUSH2 0x1850 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1A5B PUSH1 0x40 DUP6 ADD PUSH2 0x1839 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1A8F DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1B1A JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1AB8 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1B1A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1ADF JUMPI PUSH2 0x1ADF PUSH2 0x1B9B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1AFE JUMPI PUSH2 0x1AFE PUSH2 0x1B9B JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1B15 JUMPI PUSH2 0x1B15 PUSH2 0x1B9B JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B35 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B1D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1B44 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1B5E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1B7F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E CALLDATASIZE 0xCE 0x26 DUP8 SHL 0xE4 0xE3 SWAP16 EXP SWAP9 BYTE DUP14 PUSH19 0xEA692E762A9CF0FED388515CCCC459EFF83264 PUSH20 0x6F6C63430008070033D0917DAA0B256B4CA08BFF SWAP4 INVALID 0xC9 SHR 0xC0 SWAP4 0x24 PUSH28 0xF3CC8B97E585B3C6329D4B8765DDF252AD1BE2C89B69C2B068FC378D 0xAA SWAP6 0x2B 0xA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF BYTE LT OR LOG4 CALLDATACOPY DUP9 0x1F 0xD8 INVALID 0xE8 0xAB SGT SSTORE DUP7 0xD8 DUP7 SWAP10 0x5D 0xF9 0x28 PUSH12 0xD91E5D3C250F79B2327F0200 STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP STOP 0xAB DUP5 DUP4 0xF6 0x4D SWAP13 PUSH14 0x1ECF9B849AE677DD3315835CB200 ",
							"sourceMap": "377:20563:0:-:0;;;179:69:2;;;-1:-1:-1;;;;;;179:69:2;;;206:42;179:69;;;;269:70;;;;;297:42;269:70;;;359:66;;;;;;383:42;359:66;;;1197:10:0;1168:39;;1775:1599;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;584:74:2;;;;;;;;;;595:13;584:74;;;;;;;;;;;;;;;;;-1:-1:-1;;;584:74:2;;;;;;;624:21;;;;;;;;;;;;;;-1:-1:-1;;;624:21:2;;;:13;;;:21;;:::i;:::-;584:74;;647:1;584:74;;;;;;;;;;;;;;;;;;;;;;;;;;;564:16;;-1:-1:-1;;;;;564:16:2;551:30;;;;;;:107;;;;:30;;-1:-1:-1;;551:107:2;564:16;551:107;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;551:107:2;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;716:73;;;;;;;;727:13;716:73;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;716:73:2;;;;;;;755:21;;;;;;;;;;;;;;-1:-1:-1;;;755:21:2;;;:13;;;:21;;:::i;:::-;716:73;;778:1;716:73;;;;;;;;;;;;;;;;;;;;;;;;;;;695:17;;;-1:-1:-1;;;;;695:17:2;682:31;;;;;;;;;:107;;;;:31;;:107;;:31;;-1:-1:-1;;682:107:2;;;;695:17;;682:107;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;682:107:2;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;843:75;;;;;;;;854:13;843:75;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;843:75:2;;;;;;;884:21;;;;;;;;;;;;;;-1:-1:-1;;;884:21:2;;;:13;;;:21;;:::i;:::-;843:75;;907:1;843:75;;;;;;;;;;;;;;;;;;;;;;;;;;;826:13;;-1:-1:-1;;;;;826:13:2;813:27;;;;;;:105;;;;:27;;-1:-1:-1;;813:105:2;826:13;813:105;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;813:105:2;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;813:105:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1813:12:0;:20;;;1921:84;;;;;;;;;-1:-1:-1;1921:84:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;1921:84:0;;;;;;;1960:21;;;;;;;;;;;;;;-1:-1:-1;;;1960:21:0;;;:13;;;:21;;:::i;:::-;1921:84;;1983:12;;1921:84;;;;;;;;-1:-1:-1;1921:84:0;;;;;;;;;;;;;;;;;;;1461:42;1896:22;;;:109;;:22;:109;;:22;;:109;:22;;-1:-1:-1;;1896:109:0;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;1896:109:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:86;;;;;;;;2095:19;2084:86;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2084:86:0;;;;;;;2136:21;;;;;;;;;;;;;;-1:-1:-1;;;2136:21:0;;;:13;;;:21;;:::i;:::-;2084:86;;2159:1;2084:86;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2049:32:0;;;;:121;;-1:-1:-1;;;;;;;;;;;2049:121:0;;:32;;:121;:32;;-1:-1:-1;;2049:121:0;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;2049:121:0;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2049:121:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2251:12;;-1:-1:-1;;;;;;;;;;;;2211:37:0;-1:-1:-1;;;;;;;;;;;2211:52:0;2402:13;2211:17;2402:33;;;;:53;;-1:-1:-1;;2402:53:0;;;2616:84;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2616:84:0;;;;;;;2666:21;;;;;;;;;;;;;;-1:-1:-1;;;2666:21:0;;;:13;;;:21;;:::i;:::-;2616:84;;2689:1;2616:84;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2582:31:0;;;;:118;;-1:-1:-1;;;;;;;;;;;2582:118:0;;:31;;:118;:31;;-1:-1:-1;;2582:118:0;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;2582:118:0;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2582:118:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2782:12;;-1:-1:-1;;;;;;;;;;;;2743:36:0;-1:-1:-1;;;;;;;;;;;2743:51:0;2933:13;2743:17;2933:32;;:52;;-1:-1:-1;;2933:52:0;;;3207:16;3198:34;;-1:-1:-1;;;;;3207:16:0;3225:6;3198:8;:34::i;:::-;-1:-1:-1;3266:17:0;;3257:35;;-1:-1:-1;;;;;3266:17:0;3285:6;3257:8;:35::i;:::-;-1:-1:-1;3325:13:0;;3316:31;;-1:-1:-1;;;;;3325:13:0;3340:6;3316:8;:31::i;:::-;;1775:1599;377:20563;;144:138:4;208:7;266:5;249:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;239:34;;;;;;232:42;;144:138;;;:::o;5995:7266:0:-;6077:4;6098:60;;;;;;;;;;;;;;-1:-1:-1;;;6098:60:0;;;-1:-1:-1;;;;;;;;;;;1694:42:0;6098:13;;;:60;;:::i;:::-;:68;;6162:4;6098:68;6094:7159;;;6239:15;:13;:15::i;:::-;:23;;6258:4;6239:23;6235:2776;;;6435:10;6422:12;:24;;;;;;;;;;:40;;;6408:54;;;6400:63;;;;;;6647:13;6627:10;6614:12;:24;;;;;;;;;;:29;;;:46;;;;;;;;:::i;:::-;;6605:77;;;;-1:-1:-1;;;6605:77:0;;838:2:9;6605:77:0;;;820:21:9;877:2;857:18;;;850:30;-1:-1:-1;;;896:18:9;;;889:47;953:18;;6605:77:0;;;;;;;;;6853:13;-1:-1:-1;;;;;6821:23:0;;:12;:23;;;;;;;;;;:28;;;:45;;;;;;;;:::i;:::-;;6812:76;;;;-1:-1:-1;;;6812:76:0;;838:2:9;6812:76:0;;;820:21:9;877:2;857:18;;;850:30;-1:-1:-1;;;896:18:9;;;889:47;953:18;;6812:76:0;636:341:9;6812:76:0;7077:10;7064:12;:24;;;;;;;;;;;:40;;;:56;;7109:10;;7064:44;;;;;:56;;:::i;:::-;7034:10;7021:12;:24;;;;;;;;;;;:40;;:99;;;;-1:-1:-1;;;;;7249:23:0;;;;;;;:36;;;:52;;7290:10;;7249:40;;;;;:52;;:::i;:::-;-1:-1:-1;;;;;7210:23:0;;:12;:23;;;;;;;;;;;;:36;;:91;;;;7398:43;1128:25:9;;;7210:23:0;;7407:10;;-1:-1:-1;;;;;;;;;;;7398:43:0;1101:18:9;7398:43:0;;;;;;;;-1:-1:-1;7601:4:0;7594:11;;6235:2776;7825:10;7812:12;:24;;;;;;;;;;:37;;;7798:51;;;7790:60;;;;;;8037:13;8017:10;8004:12;:24;;;;;;;;;;:29;;;:46;;;;;;;;:::i;:::-;;7995:77;;;;-1:-1:-1;;;7995:77:0;;838:2:9;7995:77:0;;;820:21:9;877:2;857:18;;;850:30;-1:-1:-1;;;896:18:9;;;889:47;953:18;;7995:77:0;636:341:9;7995:77:0;8243:13;-1:-1:-1;;;;;8211:23:0;;:12;:23;;;;;;;;;;:28;;;:45;;;;;;;;:::i;:::-;;8202:76;;;;-1:-1:-1;;;8202:76:0;;838:2:9;8202:76:0;;;820:21:9;877:2;857:18;;;850:30;-1:-1:-1;;;896:18:9;;;889:47;953:18;;8202:76:0;636:341:9;8202:76:0;8464:10;8451:12;:24;;;;;;;;;;;:37;;;:53;;8493:10;;8451:41;;;;;:53;;:::i;:::-;8424:10;8411:12;:24;;;;;;;;;;;:37;;;;:93;;;;-1:-1:-1;;;;;8639:23:0;;;;;;;:36;;;;:52;;8680:10;;8639:40;;;;;:52;;:::i;6094:7159::-;9032:63;;;;;;;;;;;;-1:-1:-1;;;9032:63:0;;;;;;-1:-1:-1;;;;;;;;;;;1578:42:0;9032:13;:63::i;:::-;:71;;9099:4;9032:71;9028:4225;;;9169:15;:13;:15::i;:::-;:23;;9188:4;9169:23;9165:1954;;;9365:10;9352:12;:24;;;;;;;;;;:40;;;9338:54;;;9330:63;;;;;;9593:10;9580:12;:24;;;;;;;;;;;:40;;;:56;;9625:10;;9580:44;;;;;:56;;:::i;:::-;9550:10;9537:12;:24;;;;;;;;;;;:40;;:99;;;;-1:-1:-1;;;;;9768:23:0;;;;;;;:39;;;:55;;9812:10;;9768:43;;;;;:55;;:::i;:::-;-1:-1:-1;;;;;9726:23:0;;:12;:23;;;;;;;;;;;;:39;;:97;;;;9917:43;1128:25:9;;;9726:23:0;;9926:10;;-1:-1:-1;;;;;;;;;;;9917:43:0;1101:18:9;9917:43:0;982:177:9;9165:1954:0;10344:10;10331:12;:24;;;;;;;;;;:40;;;10317:54;;;10309:63;;;;;;10572:10;10559:12;:24;;;;;;;;;;;:40;;;:56;;10604:10;;10559:44;;;;;:56;;:::i;:::-;10529:10;10516:12;:24;;;;;;;;;;;:40;;;;:99;;;;-1:-1:-1;;;;;10747:23:0;;;;;;;:39;;;;:55;;10791:10;;10747:43;;;;;:55;;:::i;9028:4225::-;11140:62;;;;;;;;;;;;-1:-1:-1;;;11140:62:0;;;;;;-1:-1:-1;;;;;;;;;;;1578:42:0;11140:13;:62::i;:::-;:70;;11206:4;11140:70;11136:2117;;;11276:15;:13;:15::i;:::-;:23;;11295:4;11276:23;11272:1952;;;11472:10;11459:12;:24;;;;;;;;;;:40;;;11445:54;;;11437:63;;;;;;11700:10;11687:12;:24;;;;;;;;;;;:40;;;:56;;11732:10;;11687:44;;;;;:56;;:::i;:::-;11657:10;11644:12;:24;;;;;;;;;;;:40;;:99;;;;-1:-1:-1;;;;;11874:23:0;;;;;;;:38;;;:54;;11917:10;;11874:42;;;;;:54;;:::i;:::-;-1:-1:-1;;;;;11833:23:0;;:12;:23;;;;;;;;;;;;:38;;:95;;;;12023:43;1128:25:9;;;11833:23:0;;12032:10;;-1:-1:-1;;;;;;;;;;;12023:43:0;1101:18:9;12023:43:0;982:177:9;11272:1952:0;12450:10;12437:12;:24;;;;;;;;;;:39;;;12423:53;;;12415:62;;;;;;12677:10;12664:12;:24;;;;;;;;;;;:39;;;:55;;12708:10;;12664:43;;;;;:55;;:::i;:::-;12635:10;12622:12;:24;;;;;;;;;;;:39;;;;:97;;;;-1:-1:-1;;;;;12852:23:0;;;;;;;:38;;;;:54;;12895:10;;12852:42;;;;;:54;;:::i;11136:2117::-;-1:-1:-1;13248:5:0;11136:2117;5995:7266;;;;:::o;771:1200:5:-;889:4;934:21;;;;;;;;;;;;;;-1:-1:-1;;;934:21:5;;;:13;;;:21;;:::i;:::-;910:20;924:5;910:13;:20::i;:::-;:45;906:1058;;;-1:-1:-1;;;;;976:31:5;;;;;;:13;:31;;;;;:43;;;:52;;;:107;;-1:-1:-1;;;;;;1032:30:5;;;;;;:13;:30;;;;;:42;;;:51;976:107;972:139;;;-1:-1:-1;1107:4:5;1100:11;;972:139;-1:-1:-1;1185:5:5;1178:12;;906:1058;1292:24;;;;;;;;;;;;-1:-1:-1;;;1292:24:5;;;;;;:13;:24::i;:::-;1268:20;1282:5;1268:13;:20::i;:::-;:48;1264:700;;;-1:-1:-1;;;;;1337:31:5;;;;;;:13;:31;;;;;;;;:43;;;:51;;;1333:82;;;-1:-1:-1;1411:4:5;1404:11;;1264:700;1596:23;;;;;;;;;;;;-1:-1:-1;;;1596:23:5;;;;;;:13;:23::i;:::-;1572:20;1586:5;1572:13;:20::i;:::-;:47;1568:396;;;-1:-1:-1;;;;;1640:30:5;;;;;;:13;:30;;;;;;;;:42;;;:50;;;1636:80;;;-1:-1:-1;1712:4:5;1568:396;771:1200;;;;;:::o;405:288::-;453:4;;487:10;474:12;:24;;;;;;;;;;:29;;;:50;;;;;;;;:::i;:::-;;470:80;;;-1:-1:-1;546:4:5;;405:288::o;470:80::-;-1:-1:-1;624:5:5;;405:288::o;2846:119:7:-;2904:7;2934:1;2929;:6;;2922:14;;;;:::i;:::-;2952:5;2956:1;2952;:5;:::i;2422:141::-;2480:7;;2510:5;2514:1;2510;:5;:::i;:::-;2498:17;;2536:1;2531;:6;;2524:14;;;;:::i;377:20563:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;377:20563:0;;;-1:-1:-1;377:20563:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:184:9;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:9;;14:184;-1:-1:-1;14:184:9:o;203:428::-;334:3;372:6;366:13;397:1;407:129;421:6;418:1;415:13;407:129;;;519:4;503:14;;;499:25;;493:32;480:11;;;473:53;436:12;407:129;;;554:6;551:1;548:13;545:48;;;589:1;580:6;575:3;571:16;564:27;545:48;-1:-1:-1;609:16:9;;;;;203:428;-1:-1:-1;;203:428:9:o;1164:128::-;1204:3;1235:1;1231:6;1228:1;1225:13;1222:39;;;1241:18;;:::i;:::-;-1:-1:-1;1277:9:9;;1164:128::o;1297:125::-;1337:4;1365:1;1362;1359:8;1356:34;;;1370:18;;:::i;:::-;-1:-1:-1;1407:9:9;;1297:125::o;1427:380::-;1506:1;1502:12;;;;1549;;;1570:61;;1624:4;1616:6;1612:17;1602:27;;1570:61;1677:2;1669:6;1666:14;1646:18;1643:38;1640:161;;;1723:10;1718:3;1714:20;1711:1;1704:31;1758:4;1755:1;1748:15;1786:4;1783:1;1776:15;1640:161;;1427:380;;;:::o;1812:127::-;1873:10;1868:3;1864:20;1861:1;1854:31;1904:4;1901:1;1894:15;1928:4;1925:1;1918:15;1944:127;2005:10;2000:3;1996:20;1993:1;1986:31;2036:4;2033:1;2026:15;2060:4;2057:1;2050:15;2076:127;2137:10;2132:3;2128:20;2125:1;2118:31;2168:4;2165:1;2158:15;2192:4;2189:1;2182:15;2076:127;377:20563:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@acceptApplication_1280": {
									"entryPoint": 3253,
									"id": 1280,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_1740": {
									"entryPoint": 5624,
									"id": 1740,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_1221": {
									"entryPoint": null,
									"id": 1221,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@application_1262": {
									"entryPoint": 2740,
									"id": 1262,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_1204": {
									"entryPoint": 821,
									"id": 1204,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_297": {
									"entryPoint": 2333,
									"id": 297,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@buy_231": {
									"entryPoint": 4995,
									"id": 231,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_26": {
									"entryPoint": null,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@get_keccak256_1375": {
									"entryPoint": 3205,
									"id": 1375,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_20": {
									"entryPoint": null,
									"id": 20,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_1761": {
									"entryPoint": 5596,
									"id": 1761,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@symbol_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenPrice__37": {
									"entryPoint": null,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_240": {
									"entryPoint": null,
									"id": 240,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1175": {
									"entryPoint": 930,
									"id": 1175,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_686": {
									"entryPoint": 3371,
									"id": 686,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@validateOwner_1403": {
									"entryPoint": 5991,
									"id": 1403,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@validatePhase_1485": {
									"entryPoint": 5655,
									"id": 1485,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 6201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 6224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 6545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 6579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address": {
									"entryPoint": 6640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_19d3e2a9ee1c76e7edeb7619e2ff0e7534e58f7bb978671162fd0659f8514a66__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4051d84e6e5b7b6dd4f339faf4431a8793809c7ef094e92a31341b0d1c457a38__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_85e79f365c05e97e0549fd6e028c30e2005e44c36c25fa3f303e21d2b1054224__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_97560a8dc06e7ebc393b3d32f64f2c70cc4ba72f1d5b74bca5ea1a4d60e7d88d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f1b42555ffaacb2479fbd22497c1ed2c2b4af451fda620715042bfc9de76ccd6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 6938,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x01": {
									"entryPoint": 7045,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 7067,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 7089,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7111,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8556:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:147:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "188:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "197:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "200:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "190:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "190:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "190:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "142:42:9",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:54:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:65:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:73:9"
															},
															"nodeType": "YulIf",
															"src": "111:93:9"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:9",
														"type": ""
													}
												],
												"src": "14:196:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "268:666:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "317:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "326:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "329:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "319:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "319:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "319:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "296:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "304:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "292:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "292:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "311:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "288:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "288:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "281:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "281:35:9"
															},
															"nodeType": "YulIf",
															"src": "278:55:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "342:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "365:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "352:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "352:20:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "346:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "381:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "391:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "385:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "432:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "434:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "434:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "434:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "424:2:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "428:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "421:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "421:10:9"
															},
															"nodeType": "YulIf",
															"src": "418:36:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "463:17:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "477:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "473:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:7:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "467:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "489:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "509:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "503:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "503:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "493:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "521:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "543:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "567:2:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "571:4:9",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "563:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "563:13:9"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "578:2:9"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "559:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "559:22:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "583:2:9",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "555:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "555:31:9"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "588:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "551:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:40:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "539:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:53:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "525:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "651:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "653:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "653:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "653:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "610:10:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "622:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "607:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "607:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "630:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "642:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "627:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "604:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "604:46:9"
															},
															"nodeType": "YulIf",
															"src": "601:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "689:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "693:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "682:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "682:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "682:22:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "720:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "728:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "713:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "713:18:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "713:18:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "779:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "788:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "791:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "781:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "781:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "781:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "754:6:9"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "762:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "750:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "750:15:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "767:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "746:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "746:26:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "774:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "743:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "743:35:9"
															},
															"nodeType": "YulIf",
															"src": "740:55:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "821:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "829:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "817:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "817:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "840:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "848:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "836:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "836:17:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "855:2:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "804:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "804:54:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "804:54:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "882:6:9"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "890:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "878:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "878:15:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "895:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "874:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "874:26:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "902:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "867:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "867:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "867:37:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "913:15:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "922:6:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "913:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "242:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "250:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "258:5:9",
														"type": ""
													}
												],
												"src": "215:719:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1009:116:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1055:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1064:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1067:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1057:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1057:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1057:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1030:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1039:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1026:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1026:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1051:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1022:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1022:32:9"
															},
															"nodeType": "YulIf",
															"src": "1019:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1080:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1109:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1090:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1090:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1080:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "975:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "986:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "998:6:9",
														"type": ""
													}
												],
												"src": "939:186:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1217:173:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1263:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1272:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1275:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1265:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1265:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1265:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1238:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1247:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1234:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1234:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1259:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1230:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1230:32:9"
															},
															"nodeType": "YulIf",
															"src": "1227:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1288:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1317:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1298:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1298:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1288:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1336:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1369:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1380:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1365:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1365:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1346:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1346:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1336:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1175:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1186:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1198:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1206:6:9",
														"type": ""
													}
												],
												"src": "1130:260:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1499:224:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1545:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1554:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1557:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1547:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1547:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1547:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1520:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1529:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1516:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1516:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1541:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1512:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1512:32:9"
															},
															"nodeType": "YulIf",
															"src": "1509:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1570:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1599:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1580:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1580:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1570:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1618:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1651:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1662:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1647:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1647:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1628:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1618:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1675:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1702:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1713:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1698:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1698:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1685:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1685:32:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1675:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1449:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1460:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1472:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1480:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1488:6:9",
														"type": ""
													}
												],
												"src": "1395:328:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1815:167:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1861:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1870:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1873:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1863:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1863:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1863:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1836:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1845:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1832:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1832:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1857:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1828:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1828:32:9"
															},
															"nodeType": "YulIf",
															"src": "1825:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1886:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1915:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1896:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1896:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1886:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1934:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1961:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1972:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1957:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1944:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1944:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1934:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1773:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1784:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1796:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1804:6:9",
														"type": ""
													}
												],
												"src": "1728:254:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2054:206:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2100:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2109:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2112:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2102:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2102:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2102:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2075:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2084:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2071:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2071:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2096:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2067:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2067:32:9"
															},
															"nodeType": "YulIf",
															"src": "2064:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2125:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2151:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2138:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2129:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2214:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2223:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2226:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2216:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2216:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2216:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2183:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2204:5:9"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2197:6:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2197:13:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2190:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2190:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2180:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2180:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2173:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2173:40:9"
															},
															"nodeType": "YulIf",
															"src": "2170:60:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2239:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2020:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2031:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2043:6:9",
														"type": ""
													}
												],
												"src": "1987:273:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2345:242:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2391:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2400:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2403:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2393:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2393:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2393:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2366:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2375:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2362:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2362:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2387:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2358:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2358:32:9"
															},
															"nodeType": "YulIf",
															"src": "2355:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2416:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2443:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2430:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2430:23:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2420:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2496:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2505:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2508:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2498:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2498:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2498:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2476:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2465:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:30:9"
															},
															"nodeType": "YulIf",
															"src": "2462:50:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2521:60:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2553:9:9"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2564:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2549:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2549:22:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2573:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "2531:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2531:50:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2521:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2311:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2322:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2334:6:9",
														"type": ""
													}
												],
												"src": "2265:322:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2716:493:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2762:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2771:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2774:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2764:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2764:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2764:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2737:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2746:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2733:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2733:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2758:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2729:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2729:32:9"
															},
															"nodeType": "YulIf",
															"src": "2726:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2787:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2814:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2801:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2801:23:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2791:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2833:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2843:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2837:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2888:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2897:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2900:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2890:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2890:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2890:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2876:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2884:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2873:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2873:14:9"
															},
															"nodeType": "YulIf",
															"src": "2870:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2913:60:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2945:9:9"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2956:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2941:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2941:22:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2965:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "2923:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2923:50:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2913:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2982:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3015:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3026:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3011:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3011:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2998:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2998:32:9"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "2986:8:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3059:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3068:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3071:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3061:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3061:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3061:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "3045:8:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3055:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3042:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3042:16:9"
															},
															"nodeType": "YulIf",
															"src": "3039:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3084:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3116:9:9"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "3127:8:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3112:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3112:24:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3138:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3094:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3094:52:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3084:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3155:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3188:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3199:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3184:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3184:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3165:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3165:38:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3155:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2666:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2677:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2689:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2697:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2705:6:9",
														"type": ""
													}
												],
												"src": "2592:617:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3284:110:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3330:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3339:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3342:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3332:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3332:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3332:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3305:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3314:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3301:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3301:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3326:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3297:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3297:32:9"
															},
															"nodeType": "YulIf",
															"src": "3294:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3355:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3378:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3365:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3365:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3355:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3250:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3261:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3273:6:9",
														"type": ""
													}
												],
												"src": "3214:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3538:137:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3548:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3568:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3562:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3562:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3552:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3610:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3618:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3606:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3606:17:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3625:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3630:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3584:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3584:53:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3584:53:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3646:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3657:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3662:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3653:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3653:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3646:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3514:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3519:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3530:3:9",
														"type": ""
													}
												],
												"src": "3399:276:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3775:92:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3785:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3797:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3808:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3793:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3793:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3785:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3827:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "3852:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3845:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3845:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3838:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3838:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3820:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3820:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3820:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3744:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3755:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3766:4:9",
														"type": ""
													}
												],
												"src": "3680:187:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3973:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3983:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3995:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4006:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3991:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3991:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3983:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4025:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4036:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4018:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4018:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4018:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3942:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3953:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3964:4:9",
														"type": ""
													}
												],
												"src": "3872:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4175:262:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4192:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4203:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4185:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4185:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4185:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4215:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4235:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4229:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4229:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4219:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4262:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4273:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4258:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4258:18:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4278:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4251:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4251:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4251:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4320:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4328:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4316:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4316:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4337:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4348:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4333:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4333:18:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4353:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4294:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4294:66:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4294:66:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4369:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4385:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "4404:6:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4412:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4400:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4400:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4421:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4417:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4417:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4396:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4396:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4381:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4381:45:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4428:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4377:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4377:54:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4369:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4144:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4155:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4166:4:9",
														"type": ""
													}
												],
												"src": "4054:383:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4616:181:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4633:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4644:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4626:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4626:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4626:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4667:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4678:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4663:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4663:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4683:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4656:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4656:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4656:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4706:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4717:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4702:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4702:18:9"
																	},
																	{
																		"hexValue": "596f7520617265206e6f74206120707269766174652070726f766964657221",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4722:33:9",
																		"type": "",
																		"value": "You are not a private provider!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4695:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4695:61:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4695:61:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4765:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4777:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4773:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4765:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_19d3e2a9ee1c76e7edeb7619e2ff0e7534e58f7bb978671162fd0659f8514a66__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4593:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4607:4:9",
														"type": ""
													}
												],
												"src": "4442:355:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4976:182:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4993:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5004:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4986:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4986:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4986:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5027:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5038:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5023:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5023:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5043:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5016:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5016:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5016:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5066:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5077:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5062:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5062:18:9"
																	},
																	{
																		"hexValue": "4e65656420746f2073656e6420657861637420616d6f756e74206f6620776569",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5082:34:9",
																		"type": "",
																		"value": "Need to send exact amount of wei"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5055:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5055:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5055:62:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5126:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5138:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5149:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5134:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5134:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5126:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4051d84e6e5b7b6dd4f339faf4431a8793809c7ef094e92a31341b0d1c457a38__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4953:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4967:4:9",
														"type": ""
													}
												],
												"src": "4802:356:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5337:249:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5354:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5365:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5347:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5347:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5347:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5388:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5399:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5384:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5384:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5404:2:9",
																		"type": "",
																		"value": "59"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5377:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5377:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5377:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5427:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5438:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5423:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5423:18:9"
																	},
																	{
																		"hexValue": "447572696e672074686520736565642070686173652c20746865207472616e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5443:34:9",
																		"type": "",
																		"value": "During the seed phase, the trans"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5416:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5416:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5416:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5498:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5509:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5494:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5494:18:9"
																	},
																	{
																		"hexValue": "666572206f6620746f6b656e732069732070726f68696269746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5514:29:9",
																		"type": "",
																		"value": "fer of tokens is prohibited"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5487:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5487:57:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5487:57:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5553:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5565:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5576:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5561:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5561:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5553:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_85e79f365c05e97e0549fd6e028c30e2005e44c36c25fa3f303e21d2b1054224__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5314:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5328:4:9",
														"type": ""
													}
												],
												"src": "5163:423:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5765:175:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5782:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5793:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5775:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5775:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5775:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5816:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5827:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5812:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5812:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5832:2:9",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5805:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5805:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5805:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5855:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5866:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5851:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5851:18:9"
																	},
																	{
																		"hexValue": "4170706c69636174696f6e20616c72656164792073656e7421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5871:27:9",
																		"type": "",
																		"value": "Application already sent!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5844:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5844:55:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5844:55:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5908:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5920:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5931:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5916:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5916:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5908:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_97560a8dc06e7ebc393b3d32f64f2c70cc4ba72f1d5b74bca5ea1a4d60e7d88d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5742:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5756:4:9",
														"type": ""
													}
												],
												"src": "5591:349:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6119:167:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6136:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6147:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6129:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6129:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6129:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6170:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6181:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6166:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6166:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6186:2:9",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6159:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6159:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6159:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6209:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6220:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6205:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6205:18:9"
																	},
																	{
																		"hexValue": "596f7572206e6f7420696e766573746f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6225:19:9",
																		"type": "",
																		"value": "Your not investor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6198:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6198:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6198:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6254:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6266:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6277:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6262:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6262:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6254:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f1b42555ffaacb2479fbd22497c1ed2c2b4af451fda620715042bfc9de76ccd6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6096:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6110:4:9",
														"type": ""
													}
												],
												"src": "5945:341:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6392:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6402:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6414:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6425:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6410:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6410:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6402:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6444:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6455:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6437:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6437:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6437:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6361:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6372:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6383:4:9",
														"type": ""
													}
												],
												"src": "6291:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6570:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6580:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6592:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6603:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6588:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6588:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6580:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6622:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6637:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6645:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6633:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6633:17:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6615:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6615:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6615:36:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6539:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6550:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6561:4:9",
														"type": ""
													}
												],
												"src": "6473:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6710:80:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6737:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6739:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6739:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6739:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6726:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6733:1:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6729:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6729:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6723:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6723:13:9"
															},
															"nodeType": "YulIf",
															"src": "6720:39:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6768:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6779:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6782:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6775:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6768:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6693:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6696:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6702:3:9",
														"type": ""
													}
												],
												"src": "6662:128:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6847:116:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6906:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6908:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6908:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6908:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6878:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6871:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6871:9:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6864:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6864:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6886:1:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6897:1:9",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6893:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6893:6:9"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6901:1:9"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6889:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6889:14:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6883:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6883:21:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6860:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6860:45:9"
															},
															"nodeType": "YulIf",
															"src": "6857:71:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6937:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6952:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6955:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6948:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6948:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6937:7:9"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6826:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6829:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6835:7:9",
														"type": ""
													}
												],
												"src": "6795:168:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7017:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7039:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7041:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7041:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7041:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7033:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7036:1:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7030:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7030:8:9"
															},
															"nodeType": "YulIf",
															"src": "7027:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7070:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7082:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7085:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7078:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7078:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "7070:4:9"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6999:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7002:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "7008:4:9",
														"type": ""
													}
												],
												"src": "6968:125:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7151:205:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7161:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7170:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "7165:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7230:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "7255:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7260:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7251:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7251:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "7274:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7279:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7270:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7270:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7264:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7264:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7244:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7244:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7244:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7191:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7194:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7188:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7188:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7202:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7204:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7213:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7216:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7209:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7209:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7204:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7184:3:9",
																"statements": []
															},
															"src": "7180:113:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7319:31:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "7332:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "7337:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7328:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7328:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7346:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7321:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7321:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7321:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7308:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7311:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7305:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7305:13:9"
															},
															"nodeType": "YulIf",
															"src": "7302:48:9"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7129:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "7134:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7139:6:9",
														"type": ""
													}
												],
												"src": "7098:258:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7416:382:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7426:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7440:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7443:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7436:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7436:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7426:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7457:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7487:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7493:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7483:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7483:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "7461:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7534:31:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7536:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "7550:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7558:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7546:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7546:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7536:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7514:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7507:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7507:26:9"
															},
															"nodeType": "YulIf",
															"src": "7504:61:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7624:168:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7645:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7648:77:9",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7638:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7638:88:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7638:88:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7746:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7749:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7739:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7739:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7739:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7774:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7777:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7767:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7767:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7767:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7580:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7603:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7611:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7600:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7600:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7577:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7577:38:9"
															},
															"nodeType": "YulIf",
															"src": "7574:218:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7396:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7405:6:9",
														"type": ""
													}
												],
												"src": "7361:437:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7835:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7852:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7855:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7845:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7845:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7845:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7949:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7952:4:9",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7942:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7942:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7942:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7973:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7976:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7966:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7966:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7966:15:9"
														}
													]
												},
												"name": "panic_error_0x01",
												"nodeType": "YulFunctionDefinition",
												"src": "7803:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8024:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8041:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8044:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8034:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8034:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8034:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8138:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8141:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8131:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8131:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8131:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8162:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8165:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8155:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8155:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8155:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7992:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8213:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8230:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8233:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8223:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8223:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8223:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8327:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8330:4:9",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8320:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8320:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8320:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8351:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8354:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8344:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8344:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8344:15:9"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "8181:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8402:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8419:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8422:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8412:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8412:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8412:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8516:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8519:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8509:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8509:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8509:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8540:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8543:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8533:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8533:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8533:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "8370:184:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_19d3e2a9ee1c76e7edeb7619e2ff0e7534e58f7bb978671162fd0659f8514a66__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"You are not a private provider!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4051d84e6e5b7b6dd4f339faf4431a8793809c7ef094e92a31341b0d1c457a38__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Need to send exact amount of wei\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_85e79f365c05e97e0549fd6e028c30e2005e44c36c25fa3f303e21d2b1054224__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"During the seed phase, the trans\")\n        mstore(add(headStart, 96), \"fer of tokens is prohibited\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_97560a8dc06e7ebc393b3d32f64f2c70cc4ba72f1d5b74bca5ea1a4d60e7d88d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Application already sent!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f1b42555ffaacb2479fbd22497c1ed2c2b4af451fda620715042bfc9de76ccd6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Your not investor\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x01()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100dd5760003560e01c8063785963c31161007f5780639d9e7a4b116100595780639d9e7a4b1461029c578063a9059cbb146102bc578063d96a094a146102dc578063dd62ed3e146102ef57600080fd5b8063785963c3146102115780638e4f8c6b1461023357806395d89b411461025357600080fd5b806318160ddd116100bb57806318160ddd1461019557806323b872dd146101aa578063313ce567146101ca57806370a08231146101f157600080fd5b806306fdde03146100e25780630761c8b914610141578063095ea7b314610165575b600080fd5b3480156100ee57600080fd5b5061012b6040518060400160405280600d81526020017f43727970746f4d6f6e737465720000000000000000000000000000000000000081525081565b6040516101389190611a99565b60405180910390f35b34801561014d57600080fd5b5061015760085481565b604051908152602001610138565b34801561017157600080fd5b50610185610180366004611967565b610335565b6040519015158152602001610138565b3480156101a157600080fd5b50600754610157565b3480156101b657600080fd5b506101856101c536600461192b565b6103a2565b3480156101d657600080fd5b506101df600c81565b60405160ff9091168152602001610138565b3480156101fd57600080fd5b5061015761020c3660046118dd565b61091d565b34801561021d57600080fd5b5061023161022c3660046119f0565b610ab4565b005b34801561023f57600080fd5b5061015761024e3660046119b3565b610c85565b34801561025f57600080fd5b5061012b6040518060400160405280600481526020017f434d4f4e0000000000000000000000000000000000000000000000000000000081525081565b3480156102a857600080fd5b506102316102b7366004611991565b610cb5565b3480156102c857600080fd5b506101856102d7366004611967565b610d2b565b6102316102ea366004611a64565b611383565b3480156102fb57600080fd5b5061015761030a3660046118f8565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b3360008181526006602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103909086815260200190565b60405180910390a35060015b92915050565b60006103df604051806040016040528060048152602001631cd9595960e21b81525073ab8483f64d9c6d1ecf9b849ae677dd3315835cb280611617565b151560011415610579576103f1611767565b151560011415610551576001600160a01b03841660009081526020819052604090206003015482111561042357600080fd5b6001600160a01b038416600090815260066020908152604080832033845290915290205482111561045357600080fd5b6001600160a01b03841660009081526020819052604090206004015461047990836115dc565b6001600160a01b0385166000908152602081815260408083206004019390935560068152828220338352905220546104b190836115dc565b6001600160a01b03808616600090815260066020908152604080832033845282528083209490945591861681529081905220600401546104f190836115f8565b6001600160a01b038481166000818152602081815260409182902060040194909455518581529092918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91015b60405180910390a3506001610916565b6001600160a01b03841660009081526020819052604090206004015482111561042357600080fd5b6105b7604051806040016040528060078152602001667072697661746560c81b81525073ab8483f64d9c6d1ecf9b849ae677dd3315835cb280611617565b151560011415610745576105c9611767565b1515600114156105fb576001600160a01b03841660009081526020819052604090206003015482111561042357600080fd5b6001600160a01b03841660009081526020819052604090206005015482111561062357600080fd5b6001600160a01b038416600090815260066020908152604080832033845290915290205482111561065357600080fd5b6001600160a01b03841660009081526020819052604090206005015461067990836115dc565b6001600160a01b0385166000908152602081815260408083206005019390935560068152828220338352905220546106b190836115dc565b6001600160a01b03808616600090815260066020908152604080832033845282528083209490945591861681529081905220600501546106f190836115f8565b6001600160a01b038481166000818152602081815260409182902060050194909455518581529092918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610541565b610782604051806040016040528060068152602001657075626c696360d01b81525073ab8483f64d9c6d1ecf9b849ae677dd3315835cb280611617565b15156001141561091257610794611767565b1515600114156107c6576001600160a01b03841660009081526020819052604090206003015482111561042357600080fd5b6001600160a01b0384166000908152602081905260409020600601548211156107ee57600080fd5b6001600160a01b038416600090815260066020908152604080832033845290915290205482111561081e57600080fd5b6001600160a01b03841660009081526020819052604090206006015461084490836115dc565b6001600160a01b0385166000908152602081815260408083206006908101949094559281528282203383529052205461087d90836115dc565b6001600160a01b0380861660009081526006602081815260408084203385528252808420959095559287168252918190529190912001546108be90836115f8565b6001600160a01b038481166000818152602081815260409182902060060194909455518581529092918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610541565b5060005b9392505050565b73ab8483f64d9c6d1ecf9b849ae677dd3315835cb2600090815260016020527f9d4d959825f0680278e64197773b2a50cd78b2b2cb00711ddbeebf0bf93cd8a45460ff161580156109ad575073ab8483f64d9c6d1ecf9b849ae677dd3315835cb260005260016020527f9d4d959825f0680278e64197773b2a50cd78b2b2cb00711ddbeebf0bf93cd8a45460ff16155b156109d157506001600160a01b031660009081526020819052604090206004015490565b73ab8483f64d9c6d1ecf9b849ae677dd3315835cb2600052600160208190527f9d4d959825f0680278e64197773b2a50cd78b2b2cb00711ddbeebf0bf93cd8a45460ff1615151415610a3c57506001600160a01b031660009081526020819052604090206005015490565b73ab8483f64d9c6d1ecf9b849ae677dd3315835cb2600052600160208190527f9d4d959825f0680278e64197773b2a50cd78b2b2cb00711ddbeebf0bf93cd8a45460ff1615151415610aa757506001600160a01b031660009081526020819052604090206006015490565b506000919050565b919050565b3360009081526002602081905260409091200154600160b01b900460ff161515600114610b285760405162461bcd60e51b815260206004820152601960248201527f4170706c69636174696f6e20616c72656164792073656e74210000000000000060448201526064015b60405180910390fd5b6040805160c08101825284815260208082018590526001600160a01b0384168284015260016060830181905260006080840181905260a084019190915233815260028252929092208151805192939192610b8592849201906117a0565b506020828101518051610b9e92600185019201906117a0565b506040820151600290910180546060840151608085015160a0909501511515600160b01b027fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff951515750100000000000000000000000000000000000000000002959095167fffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffff91151574010000000000000000000000000000000000000000027fffffffffffffffffffffff0000000000000000000000000000000000000000009093166001600160a01b0390951694909417919091171691909117919091179055505050565b600081604051602001610c989190611a7d565b604051602081830303815290604052805190602001209050919050565b60023360009081526020819052604090205460ff166004811115610cdb57610cdb611bb1565b14610d285760405162461bcd60e51b815260206004820152601f60248201527f596f7520617265206e6f74206120707269766174652070726f766964657221006044820152606401610b1f565b50565b6000610d68604051806040016040528060048152602001631cd9595960e21b81525073ab8483f64d9c6d1ecf9b849ae677dd3315835cb280611617565b15156001141561106c57610d7a611767565b151560011415610f265733600090815260208190526040902060030154821115610da357600080fd5b60033360009081526020819052604090205460ff166004811115610dc957610dc9611bb1565b14610e0a5760405162461bcd60e51b81526020600482015260116024820152702cb7bab9103737ba1034b73b32b9ba37b960791b6044820152606401610b1f565b60036001600160a01b03841660009081526020819052604090205460ff166004811115610e3957610e39611bb1565b14610e7a5760405162461bcd60e51b81526020600482015260116024820152702cb7bab9103737ba1034b73b32b9ba37b960791b6044820152606401610b1f565b33600090815260208190526040902060030154610e9790836115dc565b33600090815260208190526040808220600301929092556001600160a01b03851681522060040154610ec990836115f8565b6001600160a01b038416600081815260208181526040918290206004019390935551848152909133917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91015b60405180910390a350600161039c565b33600090815260208190526040902060040154821115610f4557600080fd5b60033360009081526020819052604090205460ff166004811115610f6b57610f6b611bb1565b14610fac5760405162461bcd60e51b81526020600482015260116024820152702cb7bab9103737ba1034b73b32b9ba37b960791b6044820152606401610b1f565b60036001600160a01b03841660009081526020819052604090205460ff166004811115610fdb57610fdb611bb1565b1461101c5760405162461bcd60e51b81526020600482015260116024820152702cb7bab9103737ba1034b73b32b9ba37b960791b6044820152606401610b1f565b3360009081526020819052604090206004015461103990836115dc565b336000908152602081905260408082206004908101939093556001600160a01b038616825290200154610ec990836115f8565b6110aa604051806040016040528060078152602001667072697661746560c81b81525073ab8483f64d9c6d1ecf9b849ae677dd3315835cb280611617565b1515600114156111f4576110bc611767565b15156001141561118557336000908152602081905260409020600301548211156110e557600080fd5b3360009081526020819052604090206003015461110290836115dc565b33600090815260208190526040808220600301929092556001600160a01b0385168152206005015461113490836115f8565b6001600160a01b038416600081815260208181526040918290206005019390935551848152909133917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610f16565b336000908152602081905260409020600501548211156111a457600080fd5b336000908152602081905260409020600501546111c190836115dc565b336000908152602081905260408082206005908101939093556001600160a01b03861682529020015461113490836115f8565b611231604051806040016040528060068152602001657075626c696360d01b81525073ab8483f64d9c6d1ecf9b849ae677dd3315835cb280611617565b15156001141561137b57611243611767565b15156001141561130c573360009081526020819052604090206003015482111561126c57600080fd5b3360009081526020819052604090206003015461128990836115dc565b33600090815260208190526040808220600301929092556001600160a01b038516815220600601546112bb90836115f8565b6001600160a01b038416600081815260208181526040918290206006019390935551848152909133917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610f16565b3360009081526020819052604090206006015482111561132b57600080fd5b3360009081526020819052604090206006015461134890836115dc565b336000908152602081905260408082206006908101939093556001600160a01b0386168252902001546112bb90836115f8565b50600061039c565b6008546113909082611ae4565b34146113de5760405162461bcd60e51b815260206004820181905260248201527f4e65656420746f2073656e6420657861637420616d6f756e74206f66207765696044820152606401610b1f565b73ab8483f64d9c6d1ecf9b849ae677dd3315835cb260005260016020527f9d4d959825f0680278e64197773b2a50cd78b2b2cb00711ddbeebf0bf93cd8a45460ff1615801561146c575073ab8483f64d9c6d1ecf9b849ae677dd3315835cb260005260016020527f9d4d959825f0680278e64197773b2a50cd78b2b2cb00711ddbeebf0bf93cd8a45460ff16155b6114de5760405162461bcd60e51b815260206004820152603b60248201527f447572696e672074686520736565642070686173652c20746865207472616e7360448201527f666572206f6620746f6b656e732069732070726f6869626974656400000000006064820152608401610b1f565b73ab8483f64d9c6d1ecf9b849ae677dd3315835cb2600052600160208190527f9d4d959825f0680278e64197773b2a50cd78b2b2cb00711ddbeebf0bf93cd8a45460ff161515141561155d573360009081526020819052604090206005015461154790826115f8565b3360009081526020819052604090206005015550565b73ab8483f64d9c6d1ecf9b849ae677dd3315835cb2600052600160208190527f9d4d959825f0680278e64197773b2a50cd78b2b2cb00711ddbeebf0bf93cd8a45460ff1615151415610d2857336000908152602081905260409020600601546115c690826115f8565b3360009081526020819052604090206006015550565b6000828211156115ee576115ee611b85565b6109168284611b03565b6000806116058385611acc565b90508381101561091657610916611b85565b600061163e604051806040016040528060048152602001631cd9595960e21b815250610c85565b61164785610c85565b141561169c576001600160a01b03831660009081526001602052604090205460ff1615801561168f57506001600160a01b03821660009081526001602052604090205460ff16155b1561091257506001610916565b6116c4604051806040016040528060078152602001667072697661746560c81b815250610c85565b6116cd85610c85565b1415611702576001600160a01b03831660009081526001602081905260409091205460ff161515141561091257506001610916565b611729604051806040016040528060068152602001657075626c696360d01b815250610c85565b61173285610c85565b1415610912576001600160a01b03821660009081526001602081905260409091205460ff161515141561091257506001610916565b6000803360009081526020819052604090205460ff16600481111561178e5761178e611bb1565b141561179a5750600190565b50600090565b8280546117ac90611b4a565b90600052602060002090601f0160209004810192826117ce5760008555611814565b82601f106117e757805160ff1916838001178555611814565b82800160010185558215611814579182015b828111156118145782518255916020019190600101906117f9565b50611820929150611824565b5090565b5b808211156118205760008155600101611825565b80356001600160a01b0381168114610aaf57600080fd5b600082601f83011261186157600080fd5b813567ffffffffffffffff8082111561187c5761187c611bc7565b604051601f8301601f19908116603f011681019082821181831017156118a4576118a4611bc7565b816040528381528660208588010111156118bd57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156118ef57600080fd5b61091682611839565b6000806040838503121561190b57600080fd5b61191483611839565b915061192260208401611839565b90509250929050565b60008060006060848603121561194057600080fd5b61194984611839565b925061195760208501611839565b9150604084013590509250925092565b6000806040838503121561197a57600080fd5b61198383611839565b946020939093013593505050565b6000602082840312156119a357600080fd5b8135801515811461091657600080fd5b6000602082840312156119c557600080fd5b813567ffffffffffffffff8111156119dc57600080fd5b6119e884828501611850565b949350505050565b600080600060608486031215611a0557600080fd5b833567ffffffffffffffff80821115611a1d57600080fd5b611a2987838801611850565b94506020860135915080821115611a3f57600080fd5b50611a4c86828701611850565b925050611a5b60408501611839565b90509250925092565b600060208284031215611a7657600080fd5b5035919050565b60008251611a8f818460208701611b1a565b9190910192915050565b6020815260008251806020840152611ab8816040850160208701611b1a565b601f01601f19169190910160400192915050565b60008219821115611adf57611adf611b9b565b500190565b6000816000190483118215151615611afe57611afe611b9b565b500290565b600082821015611b1557611b15611b9b565b500390565b60005b83811015611b35578181015183820152602001611b1d565b83811115611b44576000848401525b50505050565b600181811c90821680611b5e57607f821691505b60208210811415611b7f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212205e36ce26871be4e39f0a981a8d72ea692e762a9cf0fed388515cccc459eff83264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x785963C3 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0x9D9E7A4B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x9D9E7A4B EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xD96A094A EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x785963C3 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x8E4F8C6B EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x761C8B9 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x165 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12B PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43727970746F4D6F6E7374657200000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1A99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x138 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x185 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x1967 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x138 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x157 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x185 PUSH2 0x1C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x192B JUMP JUMPDEST PUSH2 0x3A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH1 0xC DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x138 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH2 0x20C CALLDATASIZE PUSH1 0x4 PUSH2 0x18DD JUMP JUMPDEST PUSH2 0x91D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x19F0 JUMP JUMPDEST PUSH2 0xAB4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0x19B3 JUMP JUMPDEST PUSH2 0xC85 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12B PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x434D4F4E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1991 JUMP JUMPDEST PUSH2 0xCB5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x185 PUSH2 0x2D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1967 JUMP JUMPDEST PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x231 PUSH2 0x2EA CALLDATASIZE PUSH1 0x4 PUSH2 0x1A64 JUMP JUMPDEST PUSH2 0x1383 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH2 0x30A CALLDATASIZE PUSH1 0x4 PUSH2 0x18F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x390 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DF PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x1CD95959 PUSH1 0xE2 SHL DUP2 MSTORE POP PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 DUP1 PUSH2 0x1617 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x579 JUMPI PUSH2 0x3F1 PUSH2 0x1767 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x551 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP3 GT ISZERO PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x453 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x479 SWAP1 DUP4 PUSH2 0x15DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x6 DUP2 MSTORE DUP3 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x4B1 SWAP1 DUP4 PUSH2 0x15DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP7 AND DUP2 MSTORE SWAP1 DUP2 SWAP1 MSTORE KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x4F1 SWAP1 DUP4 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x4 ADD SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 PUSH2 0x916 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD DUP3 GT ISZERO PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5B7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x70726976617465 PUSH1 0xC8 SHL DUP2 MSTORE POP PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 DUP1 PUSH2 0x1617 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x745 JUMPI PUSH2 0x5C9 PUSH2 0x1767 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x5FB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP3 GT ISZERO PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD DUP3 GT ISZERO PUSH2 0x623 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x653 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH2 0x679 SWAP1 DUP4 PUSH2 0x15DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x5 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x6 DUP2 MSTORE DUP3 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x6B1 SWAP1 DUP4 PUSH2 0x15DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP7 AND DUP2 MSTORE SWAP1 DUP2 SWAP1 MSTORE KECCAK256 PUSH1 0x5 ADD SLOAD PUSH2 0x6F1 SWAP1 DUP4 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x5 ADD SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x541 JUMP JUMPDEST PUSH2 0x782 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x7075626C6963 PUSH1 0xD0 SHL DUP2 MSTORE POP PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 DUP1 PUSH2 0x1617 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x912 JUMPI PUSH2 0x794 PUSH2 0x1767 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x7C6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP3 GT ISZERO PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD DUP3 GT ISZERO PUSH2 0x7EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x81E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0x844 SWAP1 DUP4 PUSH2 0x15DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x6 SWAP1 DUP2 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP3 DUP2 MSTORE DUP3 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x87D SWAP1 DUP4 PUSH2 0x15DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE SWAP3 DUP8 AND DUP3 MSTORE SWAP2 DUP2 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x8BE SWAP1 DUP4 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x6 ADD SWAP5 SWAP1 SWAP5 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x541 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH32 0x9D4D959825F0680278E64197773B2A50CD78B2B2CB00711DDBEEBF0BF93CD8A4 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x9AD JUMPI POP PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH32 0x9D4D959825F0680278E64197773B2A50CD78B2B2CB00711DDBEEBF0BF93CD8A4 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x9D1 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH32 0x9D4D959825F0680278E64197773B2A50CD78B2B2CB00711DDBEEBF0BF93CD8A4 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0xA3C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH32 0x9D4D959825F0680278E64197773B2A50CD78B2B2CB00711DDBEEBF0BF93CD8A4 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0xAA7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xB28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4170706C69636174696F6E20616C72656164792073656E742100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x80 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER DUP2 MSTORE PUSH1 0x2 DUP3 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH2 0xB85 SWAP3 DUP5 SWAP3 ADD SWAP1 PUSH2 0x17A0 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP1 MLOAD PUSH2 0xB9E SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x17A0 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0xA0 SWAP1 SWAP6 ADD MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xB0 SHL MUL PUSH32 0xFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 ISZERO ISZERO PUSH22 0x1000000000000000000000000000000000000000000 MUL SWAP6 SWAP1 SWAP6 AND PUSH32 0xFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 ISZERO ISZERO PUSH21 0x10000000000000000000000000000000000000000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP2 SWAP1 SWAP2 OR AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC98 SWAP2 SWAP1 PUSH2 0x1A7D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xCDB JUMPI PUSH2 0xCDB PUSH2 0x1BB1 JUMP JUMPDEST EQ PUSH2 0xD28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F74206120707269766174652070726F76696465722100 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB1F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD68 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x1CD95959 PUSH1 0xE2 SHL DUP2 MSTORE POP PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 DUP1 PUSH2 0x1617 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x106C JUMPI PUSH2 0xD7A PUSH2 0x1767 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0xF26 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP3 GT ISZERO PUSH2 0xDA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xDC9 JUMPI PUSH2 0xDC9 PUSH2 0x1BB1 JUMP JUMPDEST EQ PUSH2 0xE0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2CB7BAB9103737BA1034B73B32B9BA37B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE39 JUMPI PUSH2 0xE39 PUSH2 0x1BB1 JUMP JUMPDEST EQ PUSH2 0xE7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2CB7BAB9103737BA1034B73B32B9BA37B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB1F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xE97 SWAP1 DUP4 PUSH2 0x15DC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0xEC9 SWAP1 DUP4 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x4 ADD SWAP4 SWAP1 SWAP4 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP2 CALLER SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 PUSH2 0x39C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD DUP3 GT ISZERO PUSH2 0xF45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xF6B JUMPI PUSH2 0xF6B PUSH2 0x1BB1 JUMP JUMPDEST EQ PUSH2 0xFAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2CB7BAB9103737BA1034B73B32B9BA37B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH1 0x3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xFDB JUMPI PUSH2 0xFDB PUSH2 0x1BB1 JUMP JUMPDEST EQ PUSH2 0x101C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2CB7BAB9103737BA1034B73B32B9BA37B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB1F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x1039 SWAP1 DUP4 PUSH2 0x15DC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x4 SWAP1 DUP2 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP3 MSTORE SWAP1 KECCAK256 ADD SLOAD PUSH2 0xEC9 SWAP1 DUP4 PUSH2 0x15F8 JUMP JUMPDEST PUSH2 0x10AA PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x70726976617465 PUSH1 0xC8 SHL DUP2 MSTORE POP PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 DUP1 PUSH2 0x1617 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x11F4 JUMPI PUSH2 0x10BC PUSH2 0x1767 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x1185 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP3 GT ISZERO PUSH2 0x10E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x1102 SWAP1 DUP4 PUSH2 0x15DC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE KECCAK256 PUSH1 0x5 ADD SLOAD PUSH2 0x1134 SWAP1 DUP4 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x5 ADD SWAP4 SWAP1 SWAP4 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP2 CALLER SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0xF16 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD DUP3 GT ISZERO PUSH2 0x11A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH2 0x11C1 SWAP1 DUP4 PUSH2 0x15DC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x5 SWAP1 DUP2 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP3 MSTORE SWAP1 KECCAK256 ADD SLOAD PUSH2 0x1134 SWAP1 DUP4 PUSH2 0x15F8 JUMP JUMPDEST PUSH2 0x1231 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x7075626C6963 PUSH1 0xD0 SHL DUP2 MSTORE POP PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 DUP1 PUSH2 0x1617 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x137B JUMPI PUSH2 0x1243 PUSH2 0x1767 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x130C JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP3 GT ISZERO PUSH2 0x126C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x1289 SWAP1 DUP4 PUSH2 0x15DC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0x12BB SWAP1 DUP4 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x6 ADD SWAP4 SWAP1 SWAP4 SSTORE MLOAD DUP5 DUP2 MSTORE SWAP1 SWAP2 CALLER SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0xF16 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD DUP3 GT ISZERO PUSH2 0x132B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0x1348 SWAP1 DUP4 PUSH2 0x15DC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x6 SWAP1 DUP2 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP3 MSTORE SWAP1 KECCAK256 ADD SLOAD PUSH2 0x12BB SWAP1 DUP4 PUSH2 0x15F8 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x39C JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x1390 SWAP1 DUP3 PUSH2 0x1AE4 JUMP JUMPDEST CALLVALUE EQ PUSH2 0x13DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E65656420746F2073656E6420657861637420616D6F756E74206F6620776569 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH32 0x9D4D959825F0680278E64197773B2A50CD78B2B2CB00711DDBEEBF0BF93CD8A4 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x146C JUMPI POP PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH32 0x9D4D959825F0680278E64197773B2A50CD78B2B2CB00711DDBEEBF0BF93CD8A4 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x14DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x447572696E672074686520736565642070686173652C20746865207472616E73 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x666572206F6620746F6B656E732069732070726F686962697465640000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB1F JUMP JUMPDEST PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH32 0x9D4D959825F0680278E64197773B2A50CD78B2B2CB00711DDBEEBF0BF93CD8A4 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x155D JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH2 0x1547 SWAP1 DUP3 PUSH2 0x15F8 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SSTORE POP JUMP JUMPDEST PUSH20 0xAB8483F64D9C6D1ECF9B849AE677DD3315835CB2 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH32 0x9D4D959825F0680278E64197773B2A50CD78B2B2CB00711DDBEEBF0BF93CD8A4 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0xD28 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH2 0x15C6 SWAP1 DUP3 PUSH2 0x15F8 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x15EE JUMPI PUSH2 0x15EE PUSH2 0x1B85 JUMP JUMPDEST PUSH2 0x916 DUP3 DUP5 PUSH2 0x1B03 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1605 DUP4 DUP6 PUSH2 0x1ACC JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x916 JUMPI PUSH2 0x916 PUSH2 0x1B85 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x163E PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x1CD95959 PUSH1 0xE2 SHL DUP2 MSTORE POP PUSH2 0xC85 JUMP JUMPDEST PUSH2 0x1647 DUP6 PUSH2 0xC85 JUMP JUMPDEST EQ ISZERO PUSH2 0x169C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x168F JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x912 JUMPI POP PUSH1 0x1 PUSH2 0x916 JUMP JUMPDEST PUSH2 0x16C4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x70726976617465 PUSH1 0xC8 SHL DUP2 MSTORE POP PUSH2 0xC85 JUMP JUMPDEST PUSH2 0x16CD DUP6 PUSH2 0xC85 JUMP JUMPDEST EQ ISZERO PUSH2 0x1702 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x912 JUMPI POP PUSH1 0x1 PUSH2 0x916 JUMP JUMPDEST PUSH2 0x1729 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH6 0x7075626C6963 PUSH1 0xD0 SHL DUP2 MSTORE POP PUSH2 0xC85 JUMP JUMPDEST PUSH2 0x1732 DUP6 PUSH2 0xC85 JUMP JUMPDEST EQ ISZERO PUSH2 0x912 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x912 JUMPI POP PUSH1 0x1 PUSH2 0x916 JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x178E JUMPI PUSH2 0x178E PUSH2 0x1BB1 JUMP JUMPDEST EQ ISZERO PUSH2 0x179A JUMPI POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x17AC SWAP1 PUSH2 0x1B4A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x17CE JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1814 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x17E7 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1814 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1814 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1814 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x17F9 JUMP JUMPDEST POP PUSH2 0x1820 SWAP3 SWAP2 POP PUSH2 0x1824 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1820 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1825 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1861 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x187C JUMPI PUSH2 0x187C PUSH2 0x1BC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x18A4 JUMPI PUSH2 0x18A4 PUSH2 0x1BC7 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x18BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x916 DUP3 PUSH2 0x1839 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x190B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1914 DUP4 PUSH2 0x1839 JUMP JUMPDEST SWAP2 POP PUSH2 0x1922 PUSH1 0x20 DUP5 ADD PUSH2 0x1839 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1940 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1949 DUP5 PUSH2 0x1839 JUMP JUMPDEST SWAP3 POP PUSH2 0x1957 PUSH1 0x20 DUP6 ADD PUSH2 0x1839 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x197A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1983 DUP4 PUSH2 0x1839 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x916 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19E8 DUP5 DUP3 DUP6 ADD PUSH2 0x1850 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A29 DUP8 DUP4 DUP9 ADD PUSH2 0x1850 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A4C DUP7 DUP3 DUP8 ADD PUSH2 0x1850 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1A5B PUSH1 0x40 DUP6 ADD PUSH2 0x1839 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1A8F DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1B1A JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1AB8 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1B1A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1ADF JUMPI PUSH2 0x1ADF PUSH2 0x1B9B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1AFE JUMPI PUSH2 0x1AFE PUSH2 0x1B9B JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1B15 JUMPI PUSH2 0x1B15 PUSH2 0x1B9B JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B35 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B1D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1B44 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1B5E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1B7F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E CALLDATASIZE 0xCE 0x26 DUP8 SHL 0xE4 0xE3 SWAP16 EXP SWAP9 BYTE DUP14 PUSH19 0xEA692E762A9CF0FED388515CCCC459EFF83264 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "377:20563:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;613:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;1168:39;;;;;;;;;;;;;;;;;;;4018:25:9;;;4006:2;3991:18;1168:39:0;3872:177:9;20144:369:0;;;;;;;;;;-1:-1:-1;20144:369:0;;;;;:::i;:::-;;:::i;:::-;;;3845:14:9;;3838:22;3820:41;;3808:2;3793:18;20144:369:0;3680:187:9;4509:100:0;;;;;;;;;;-1:-1:-1;4589:12:0;;4509:100;;13594:6214;;;;;;;;;;-1:-1:-1;13594:6214:0;;;;;:::i;:::-;;:::i;777:35::-;;;;;;;;;;;;810:2;777:35;;;;;6645:4:9;6633:17;;;6615:36;;6603:2;6588:18;777:35:0;6473:184:9;4819:753:0;;;;;;;;;;-1:-1:-1;4819:753:0;;;;;:::i;:::-;;:::i;224:427:1:-;;;;;;;;;;-1:-1:-1;224:427:1;;;;;:::i;:::-;;:::i;:::-;;144:138:4;;;;;;;;;;-1:-1:-1;144:138:4;;;;;:::i;:::-;;:::i;698:38:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;727:172:1;;;;;;;;;;-1:-1:-1;727:172:1;;;;;:::i;:::-;;:::i;5995:7266:0:-;;;;;;;;;;-1:-1:-1;5995:7266:0;;;;;:::i;:::-;;:::i;3447:860::-;;;;;;:::i;:::-;;:::i;20795:142::-;;;;;;;;;;-1:-1:-1;20795:142:0;;;;;:::i;:::-;-1:-1:-1;;;;;20903:15:0;;;20879:4;20903:15;;;:7;:15;;;;;;;;:26;;;;;;;;;;;;;20795:142;20144:369;20250:10;20225:4;20242:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;20242:30:0;;;;;;;;;;:43;;;20440;20225:4;;20242:30;;20440:43;;;;20275:10;4018:25:9;;4006:2;3991:18;;3872:177;20440:43:0;;;;;;;;-1:-1:-1;20501:4:0;20144:369;;;;;:::o;13594:6214::-;13693:4;13714:60;;;;;;;;;;;;;;-1:-1:-1;;;13714:60:0;;;1578:42;1694;13714:13;:60::i;:::-;:68;;13778:4;13714:68;13710:6090;;;13845:15;:13;:15::i;:::-;:23;;13864:4;13845:23;13841:1894;;;-1:-1:-1;;;;;14034:20:0;;:12;:20;;;;;;;;;;:36;;;14020:50;;;14012:59;;;;;;-1:-1:-1;;;;;14176:15:0;;;;;;:7;:15;;;;;;;;14192:10;14176:27;;;;;;;;14162:41;;;14154:50;;;;;;-1:-1:-1;;;;;14334:20:0;;:12;:20;;;;;;;;;;:33;;;:49;;14372:10;14334:37;:49::i;:::-;-1:-1:-1;;;;;14298:20:0;;:12;:20;;;;;;;;;;;:33;;:85;;;;14484:7;:15;;;;;14500:10;14484:27;;;;;;:43;;14516:10;14484:31;:43::i;:::-;-1:-1:-1;;;;;14454:15:0;;;;;;;:7;:15;;;;;;;;14470:10;14454:27;;;;;;;:73;;;;14646:20;;;;;;;;;;:33;;;:49;;14684:10;14646:37;:49::i;:::-;-1:-1:-1;;;;;14610:20:0;;;:12;:20;;;;;;;;;;;;:33;;:85;;;;14779:36;4018:25:9;;;14610:20:0;;14779:36;;;;;;3991:18:9;14779:36:0;;;;;;;;-1:-1:-1;14841:4:0;14834:11;;13841:1894;-1:-1:-1;;;;;14908:20:0;;:12;:20;;;;;;;;;;:33;;;14894:47;;;14886:56;;;;;13710:6090;15756:63;;;;;;;;;;;;;;-1:-1:-1;;;15756:63:0;;;1578:42;1694;15756:13;:63::i;:::-;:71;;15823:4;15756:71;15752:4048;;;15853:15;:13;:15::i;:::-;:23;;15872:4;15853:23;15849:1909;;;-1:-1:-1;;;;;16042:20:0;;:12;:20;;;;;;;;;;:36;;;16028:50;;;16020:59;;;;;15849:1909;-1:-1:-1;;;;;16916:20:0;;:12;:20;;;;;;;;;;:36;;;16902:50;;;16894:59;;;;;;-1:-1:-1;;;;;17061:15:0;;;;;;:7;:15;;;;;;;;17077:10;17061:27;;;;;;;;17047:41;;;17039:50;;;;;;-1:-1:-1;;;;;17222:20:0;;:12;:20;;;;;;;;;;:36;;;:52;;17263:10;17222:40;:52::i;:::-;-1:-1:-1;;;;;17183:20:0;;:12;:20;;;;;;;;;;;:36;;:91;;;;17375:7;:15;;;;;17391:10;17375:27;;;;;;:43;;17407:10;17375:31;:43::i;:::-;-1:-1:-1;;;;;17345:15:0;;;;;;;:7;:15;;;;;;;;17361:10;17345:27;;;;;;;:73;;;;17540:20;;;;;;;;;;:36;;;:52;;17581:10;17540:40;:52::i;:::-;-1:-1:-1;;;;;17501:20:0;;;:12;:20;;;;;;;;;;;;:36;;:91;;;;17676:36;4018:25:9;;;17501:20:0;;17676:36;;;;;;3991:18:9;17676:36:0;3872:177:9;15752:4048:0;17779:62;;;;;;;;;;;;;;-1:-1:-1;;;17779:62:0;;;1578:42;1694;17779:13;:62::i;:::-;:70;;17845:4;17779:70;17775:2025;;;17871:15;:13;:15::i;:::-;:23;;17890:4;17871:23;17867:1904;;;-1:-1:-1;;;;;18060:20:0;;:12;:20;;;;;;;;;;:36;;;18046:50;;;18038:59;;;;;17867:1904;-1:-1:-1;;;;;18934:20:0;;:12;:20;;;;;;;;;;:35;;;18920:49;;;18912:58;;;;;;-1:-1:-1;;;;;19078:15:0;;;;;;:7;:15;;;;;;;;19094:10;19078:27;;;;;;;;19064:41;;;19056:50;;;;;;-1:-1:-1;;;;;19238:20:0;;:12;:20;;;;;;;;;;:35;;;:51;;19278:10;19238:39;:51::i;:::-;-1:-1:-1;;;;;19200:20:0;;:12;:20;;;;;;;;;;;:35;;;;:89;;;;19390:15;;;;;;19406:10;19390:27;;;;;;:43;;19422:10;19390:31;:43::i;:::-;-1:-1:-1;;;;;19360:15:0;;;;;;;:7;:15;;;;;;;;19376:10;19360:27;;;;;;;:73;;;;19554:20;;;;;;;;;;;;;:35;;:51;;19594:10;19554:39;:51::i;:::-;-1:-1:-1;;;;;19516:20:0;;;:12;:20;;;;;;;;;;;;:35;;:89;;;;19689:36;4018:25:9;;;19516:20:0;;19689:36;;;;;;3991:18:9;19689:36:0;3872:177:9;17775:2025:0;-1:-1:-1;19795:5:0;17775:2025;13594:6214;;;;;:::o;4819:753::-;1578:42;4889:7;4912:33;;;:13;:33;;;:45;;;:54;;;:111;;-1:-1:-1;1694:42:0;4970:32;;:13;:32;;;:44;;;:53;4912:111;4909:655;;;-1:-1:-1;;;;;;5070:25:0;:12;:25;;;;;;;;;;:38;;;;4819:753::o;4909:655::-;1578:42;5130:33;;:13;:33;;;;;:45;;;:53;;;5126:438;;;-1:-1:-1;;;;;;5283:25:0;:12;:25;;;;;;;;;;:41;;;;4819:753::o;5126:438::-;1694:42;5346:32;;:13;:32;;;;;:44;;;:52;;;5342:222;;;-1:-1:-1;;;;;;5498:25:0;:12;:25;;;;;;;;;;:40;;;;4819:753::o;5342:222::-;-1:-1:-1;5563:1:0;;4819:753;-1:-1:-1;4819:753:0:o;5342:222::-;4819:753;;;:::o;224:427:1:-;369:10;350:30;;;;:18;:30;;;;;;;;:36;;-1:-1:-1;;;350:36:1;;;;:44;;390:4;350:44;342:82;;;;-1:-1:-1;;;342:82:1;;5793:2:9;342:82:1;;;5775:21:9;5832:2;5812:18;;;5805:30;5871:27;5851:18;;;5844:55;5916:18;;342:82:1;;;;;;;;;564:79;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;564:79:1;;;;;;625:4;564:79;;;;;;-1:-1:-1;564:79:1;;;;;;;;;;;;;549:10;530:30;;:18;:30;;;;;;:113;;;;564:79;;530:30;;:113;;:30;;:113;;;:::i;:::-;-1:-1:-1;530:113:1;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;530:113:1;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;530:113:1;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;530:113:1;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;224:427:1:o;144:138:4:-;208:7;266:5;249:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;239:34;;;;;;232:42;;144:138;;;:::o;727:172:1:-;834:19;814:10;801:12;:24;;;;;;;;;;:29;;;:52;;;;;;;;:::i;:::-;;793:96;;;;-1:-1:-1;;;793:96:1;;4644:2:9;793:96:1;;;4626:21:9;4683:2;4663:18;;;4656:30;4722:33;4702:18;;;4695:61;4773:18;;793:96:1;4442:355:9;793:96:1;727:172;:::o;5995:7266:0:-;6077:4;6098:60;;;;;;;;;;;;;;-1:-1:-1;;;6098:60:0;;;1578:42;1694;6098:13;:60::i;:::-;:68;;6162:4;6098:68;6094:7159;;;6239:15;:13;:15::i;:::-;:23;;6258:4;6239:23;6235:2776;;;6435:10;6422:12;:24;;;;;;;;;;:40;;;6408:54;;;6400:63;;;;;;6647:13;6627:10;6614:12;:24;;;;;;;;;;:29;;;:46;;;;;;;;:::i;:::-;;6605:77;;;;-1:-1:-1;;;6605:77:0;;6147:2:9;6605:77:0;;;6129:21:9;6186:2;6166:18;;;6159:30;-1:-1:-1;;;6205:18:9;;;6198:47;6262:18;;6605:77:0;5945:341:9;6605:77:0;6853:13;-1:-1:-1;;;;;6821:23:0;;:12;:23;;;;;;;;;;:28;;;:45;;;;;;;;:::i;:::-;;6812:76;;;;-1:-1:-1;;;6812:76:0;;6147:2:9;6812:76:0;;;6129:21:9;6186:2;6166:18;;;6159:30;-1:-1:-1;;;6205:18:9;;;6198:47;6262:18;;6812:76:0;5945:341:9;6812:76:0;7077:10;7064:12;:24;;;;;;;;;;:40;;;:56;;7109:10;7064:44;:56::i;:::-;7034:10;7021:12;:24;;;;;;;;;;;:40;;:99;;;;-1:-1:-1;;;;;7249:23:0;;;;;:36;;;:52;;7290:10;7249:40;:52::i;:::-;-1:-1:-1;;;;;7210:23:0;;:12;:23;;;;;;;;;;;;:36;;:91;;;;7398:43;4018:25:9;;;7210:23:0;;7407:10;;7398:43;;3991:18:9;7398:43:0;;;;;;;;-1:-1:-1;7601:4:0;7594:11;;6235:2776;7825:10;7812:12;:24;;;;;;;;;;:37;;;7798:51;;;7790:60;;;;;;8037:13;8017:10;8004:12;:24;;;;;;;;;;:29;;;:46;;;;;;;;:::i;:::-;;7995:77;;;;-1:-1:-1;;;7995:77:0;;6147:2:9;7995:77:0;;;6129:21:9;6186:2;6166:18;;;6159:30;-1:-1:-1;;;6205:18:9;;;6198:47;6262:18;;7995:77:0;5945:341:9;7995:77:0;8243:13;-1:-1:-1;;;;;8211:23:0;;:12;:23;;;;;;;;;;:28;;;:45;;;;;;;;:::i;:::-;;8202:76;;;;-1:-1:-1;;;8202:76:0;;6147:2:9;8202:76:0;;;6129:21:9;6186:2;6166:18;;;6159:30;-1:-1:-1;;;6205:18:9;;;6198:47;6262:18;;8202:76:0;5945:341:9;8202:76:0;8464:10;8451:12;:24;;;;;;;;;;:37;;;:53;;8493:10;8451:41;:53::i;:::-;8424:10;8411:12;:24;;;;;;;;;;;:37;;;;:93;;;;-1:-1:-1;;;;;8639:23:0;;;;;;:36;;:52;;8680:10;8639:40;:52::i;6094:7159::-;9032:63;;;;;;;;;;;;;;-1:-1:-1;;;9032:63:0;;;1578:42;1694;9032:13;:63::i;:::-;:71;;9099:4;9032:71;9028:4225;;;9169:15;:13;:15::i;:::-;:23;;9188:4;9169:23;9165:1954;;;9365:10;9352:12;:24;;;;;;;;;;:40;;;9338:54;;;9330:63;;;;;;9593:10;9580:12;:24;;;;;;;;;;:40;;;:56;;9625:10;9580:44;:56::i;:::-;9550:10;9537:12;:24;;;;;;;;;;;:40;;:99;;;;-1:-1:-1;;;;;9768:23:0;;;;;:39;;;:55;;9812:10;9768:43;:55::i;:::-;-1:-1:-1;;;;;9726:23:0;;:12;:23;;;;;;;;;;;;:39;;:97;;;;9917:43;4018:25:9;;;9726:23:0;;9926:10;;9917:43;;3991:18:9;9917:43:0;3872:177:9;9165:1954:0;10344:10;10331:12;:24;;;;;;;;;;:40;;;10317:54;;;10309:63;;;;;;10572:10;10559:12;:24;;;;;;;;;;:40;;;:56;;10604:10;10559:44;:56::i;:::-;10529:10;10516:12;:24;;;;;;;;;;;:40;;;;:99;;;;-1:-1:-1;;;;;10747:23:0;;;;;;:39;;:55;;10791:10;10747:43;:55::i;9028:4225::-;11140:62;;;;;;;;;;;;;;-1:-1:-1;;;11140:62:0;;;1578:42;1694;11140:13;:62::i;:::-;:70;;11206:4;11140:70;11136:2117;;;11276:15;:13;:15::i;:::-;:23;;11295:4;11276:23;11272:1952;;;11472:10;11459:12;:24;;;;;;;;;;:40;;;11445:54;;;11437:63;;;;;;11700:10;11687:12;:24;;;;;;;;;;:40;;;:56;;11732:10;11687:44;:56::i;:::-;11657:10;11644:12;:24;;;;;;;;;;;:40;;:99;;;;-1:-1:-1;;;;;11874:23:0;;;;;:38;;;:54;;11917:10;11874:42;:54::i;:::-;-1:-1:-1;;;;;11833:23:0;;:12;:23;;;;;;;;;;;;:38;;:95;;;;12023:43;4018:25:9;;;11833:23:0;;12032:10;;12023:43;;3991:18:9;12023:43:0;3872:177:9;11272:1952:0;12450:10;12437:12;:24;;;;;;;;;;:39;;;12423:53;;;12415:62;;;;;;12677:10;12664:12;:24;;;;;;;;;;:39;;;:55;;12708:10;12664:43;:55::i;:::-;12635:10;12622:12;:24;;;;;;;;;;;:39;;;;:97;;;;-1:-1:-1;;;;;12852:23:0;;;;;;:38;;:54;;12895:10;12852:42;:54::i;11136:2117::-;-1:-1:-1;13248:5:0;13241:12;;3447:860;3680:11;;3670:21;;:7;:21;:::i;:::-;3657:9;:34;3649:79;;;;-1:-1:-1;;;3649:79:0;;5004:2:9;3649:79:0;;;4986:21:9;;;5023:18;;;5016:30;5082:34;5062:18;;;5055:62;5134:18;;3649:79:0;4802:356:9;3649:79:0;1578:42;3747:33;;:13;:33;;;:45;;;:54;;;:111;;-1:-1:-1;1694:42:0;3805:32;;:13;:32;;;:44;;;:53;3747:111;3739:183;;;;-1:-1:-1;;;3739:183:0;;5365:2:9;3739:183:0;;;5347:21:9;5404:2;5384:18;;;5377:30;5443:34;5423:18;;;5416:62;5514:29;5494:18;;;5487:57;5561:19;;3739:183:0;5163:423:9;3739:183:0;1578:42;3937:33;;:13;:33;;;;;:45;;;:53;;;3933:367;;;4063:10;4050:12;:24;;;;;;;;;;:40;;;:53;;4095:7;4050:44;:53::i;:::-;4020:10;4007:12;:24;;;;;;;;;;:40;;:96;727:172:1;:::o;3933:367:0:-;1694:42;4125:32;;:13;:32;;;;;:44;;;:52;;;4121:179;;;4249:10;4236:12;:24;;;;;;;;;;:39;;;:52;;4280:7;4236:43;:52::i;:::-;4207:10;4194:12;:24;;;;;;;;;;:39;;:94;3447:860;:::o;2846:119:7:-;2904:7;2934:1;2929;:6;;2922:14;;;;:::i;:::-;2952:5;2956:1;2952;:5;:::i;2422:141::-;2480:7;;2510:5;2514:1;2510;:5;:::i;:::-;2498:17;;2536:1;2531;:6;;2524:14;;;;:::i;771:1200:5:-;889:4;934:21;;;;;;;;;;;;;;-1:-1:-1;;;934:21:5;;;:13;:21::i;:::-;910:20;924:5;910:13;:20::i;:::-;:45;906:1058;;;-1:-1:-1;;;;;976:31:5;;;;;;:13;:31;;;;;:43;;;:52;;;:107;;-1:-1:-1;;;;;;1032:30:5;;;;;;:13;:30;;;;;:42;;;:51;976:107;972:139;;;-1:-1:-1;1107:4:5;1100:11;;906:1058;1292:24;;;;;;;;;;;;;;-1:-1:-1;;;1292:24:5;;;:13;:24::i;:::-;1268:20;1282:5;1268:13;:20::i;:::-;:48;1264:700;;;-1:-1:-1;;;;;1337:31:5;;;;;;:13;:31;;;;;;;;:43;;;:51;;;1333:82;;;-1:-1:-1;1411:4:5;1404:11;;1264:700;1596:23;;;;;;;;;;;;;;-1:-1:-1;;;1596:23:5;;;:13;:23::i;:::-;1572:20;1586:5;1572:13;:20::i;:::-;:47;1568:396;;;-1:-1:-1;;;;;1640:30:5;;;;;;:13;:30;;;;;;;;:42;;;:50;;;1636:80;;;-1:-1:-1;1712:4:5;1705:11;;405:288;453:4;;487:10;474:12;:24;;;;;;;;;;:29;;;:50;;;;;;;;:::i;:::-;;470:80;;;-1:-1:-1;546:4:5;;405:288::o;470:80::-;-1:-1:-1;624:5:5;;405:288::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:196:9;82:20;;-1:-1:-1;;;;;131:54:9;;121:65;;111:93;;200:1;197;190:12;215:719;258:5;311:3;304:4;296:6;292:17;288:27;278:55;;329:1;326;319:12;278:55;365:6;352:20;391:18;428:2;424;421:10;418:36;;;434:18;;:::i;:::-;509:2;503:9;477:2;563:13;;-1:-1:-1;;559:22:9;;;583:2;555:31;551:40;539:53;;;607:18;;;627:22;;;604:46;601:72;;;653:18;;:::i;:::-;693:10;689:2;682:22;728:2;720:6;713:18;774:3;767:4;762:2;754:6;750:15;746:26;743:35;740:55;;;791:1;788;781:12;740:55;855:2;848:4;840:6;836:17;829:4;821:6;817:17;804:54;902:1;895:4;890:2;882:6;878:15;874:26;867:37;922:6;913:15;;;;;;215:719;;;;:::o;939:186::-;998:6;1051:2;1039:9;1030:7;1026:23;1022:32;1019:52;;;1067:1;1064;1057:12;1019:52;1090:29;1109:9;1090:29;:::i;1130:260::-;1198:6;1206;1259:2;1247:9;1238:7;1234:23;1230:32;1227:52;;;1275:1;1272;1265:12;1227:52;1298:29;1317:9;1298:29;:::i;:::-;1288:39;;1346:38;1380:2;1369:9;1365:18;1346:38;:::i;:::-;1336:48;;1130:260;;;;;:::o;1395:328::-;1472:6;1480;1488;1541:2;1529:9;1520:7;1516:23;1512:32;1509:52;;;1557:1;1554;1547:12;1509:52;1580:29;1599:9;1580:29;:::i;:::-;1570:39;;1628:38;1662:2;1651:9;1647:18;1628:38;:::i;:::-;1618:48;;1713:2;1702:9;1698:18;1685:32;1675:42;;1395:328;;;;;:::o;1728:254::-;1796:6;1804;1857:2;1845:9;1836:7;1832:23;1828:32;1825:52;;;1873:1;1870;1863:12;1825:52;1896:29;1915:9;1896:29;:::i;:::-;1886:39;1972:2;1957:18;;;;1944:32;;-1:-1:-1;;;1728:254:9:o;1987:273::-;2043:6;2096:2;2084:9;2075:7;2071:23;2067:32;2064:52;;;2112:1;2109;2102:12;2064:52;2151:9;2138:23;2204:5;2197:13;2190:21;2183:5;2180:32;2170:60;;2226:1;2223;2216:12;2265:322;2334:6;2387:2;2375:9;2366:7;2362:23;2358:32;2355:52;;;2403:1;2400;2393:12;2355:52;2443:9;2430:23;2476:18;2468:6;2465:30;2462:50;;;2508:1;2505;2498:12;2462:50;2531;2573:7;2564:6;2553:9;2549:22;2531:50;:::i;:::-;2521:60;2265:322;-1:-1:-1;;;;2265:322:9:o;2592:617::-;2689:6;2697;2705;2758:2;2746:9;2737:7;2733:23;2729:32;2726:52;;;2774:1;2771;2764:12;2726:52;2814:9;2801:23;2843:18;2884:2;2876:6;2873:14;2870:34;;;2900:1;2897;2890:12;2870:34;2923:50;2965:7;2956:6;2945:9;2941:22;2923:50;:::i;:::-;2913:60;;3026:2;3015:9;3011:18;2998:32;2982:48;;3055:2;3045:8;3042:16;3039:36;;;3071:1;3068;3061:12;3039:36;;3094:52;3138:7;3127:8;3116:9;3112:24;3094:52;:::i;:::-;3084:62;;;3165:38;3199:2;3188:9;3184:18;3165:38;:::i;:::-;3155:48;;2592:617;;;;;:::o;3214:180::-;3273:6;3326:2;3314:9;3305:7;3301:23;3297:32;3294:52;;;3342:1;3339;3332:12;3294:52;-1:-1:-1;3365:23:9;;3214:180;-1:-1:-1;3214:180:9:o;3399:276::-;3530:3;3568:6;3562:13;3584:53;3630:6;3625:3;3618:4;3610:6;3606:17;3584:53;:::i;:::-;3653:16;;;;;3399:276;-1:-1:-1;;3399:276:9:o;4054:383::-;4203:2;4192:9;4185:21;4166:4;4235:6;4229:13;4278:6;4273:2;4262:9;4258:18;4251:34;4294:66;4353:6;4348:2;4337:9;4333:18;4328:2;4320:6;4316:15;4294:66;:::i;:::-;4421:2;4400:15;-1:-1:-1;;4396:29:9;4381:45;;;;4428:2;4377:54;;4054:383;-1:-1:-1;;4054:383:9:o;6662:128::-;6702:3;6733:1;6729:6;6726:1;6723:13;6720:39;;;6739:18;;:::i;:::-;-1:-1:-1;6775:9:9;;6662:128::o;6795:168::-;6835:7;6901:1;6897;6893:6;6889:14;6886:1;6883:21;6878:1;6871:9;6864:17;6860:45;6857:71;;;6908:18;;:::i;:::-;-1:-1:-1;6948:9:9;;6795:168::o;6968:125::-;7008:4;7036:1;7033;7030:8;7027:34;;;7041:18;;:::i;:::-;-1:-1:-1;7078:9:9;;6968:125::o;7098:258::-;7170:1;7180:113;7194:6;7191:1;7188:13;7180:113;;;7270:11;;;7264:18;7251:11;;;7244:39;7216:2;7209:10;7180:113;;;7311:6;7308:1;7305:13;7302:48;;;7346:1;7337:6;7332:3;7328:16;7321:27;7302:48;;7098:258;;;:::o;7361:437::-;7440:1;7436:12;;;;7483;;;7504:61;;7558:4;7550:6;7546:17;7536:27;;7504:61;7611:2;7603:6;7600:14;7580:18;7577:38;7574:218;;;-1:-1:-1;;;7645:1:9;7638:88;7749:4;7746:1;7739:15;7777:4;7774:1;7767:15;7574:218;;7361:437;;;:::o;7803:184::-;-1:-1:-1;;;7852:1:9;7845:88;7952:4;7949:1;7942:15;7976:4;7973:1;7966:15;7992:184;-1:-1:-1;;;8041:1:9;8034:88;8141:4;8138:1;8131:15;8165:4;8162:1;8155:15;8181:184;-1:-1:-1;;;8230:1:9;8223:88;8330:4;8327:1;8320:15;8354:4;8351:1;8344:15;8370:184;-1:-1:-1;;;8419:1:9;8412:88;8519:4;8516:1;8509:15;8543:4;8540:1;8533:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1437400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptApplication(bool)": "2610",
								"allowance(address,address)": "infinite",
								"application(string,string,address)": "infinite",
								"approve(address,uint256)": "24568",
								"balanceOf(address)": "11271",
								"buy(uint256)": "35601",
								"decimals()": "271",
								"get_keccak256(string)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"tokenPrice_()": "2341",
								"totalSupply()": "2315",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 248,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 179,
									"end": 248,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 179,
									"end": 248,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 179,
									"end": 248,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 179,
									"end": 248,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 179,
									"end": 248,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 206,
									"end": 248,
									"name": "PUSH",
									"source": 2,
									"value": "78731D3CA6B7E34AC0F824C42A7CC18A495CABAB"
								},
								{
									"begin": 179,
									"end": 248,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 179,
									"end": 248,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 179,
									"end": 248,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 179,
									"end": 248,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 269,
									"end": 339,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 269,
									"end": 339,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 269,
									"end": 339,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 269,
									"end": 339,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 269,
									"end": 339,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 297,
									"end": 339,
									"name": "PUSH",
									"source": 2,
									"value": "617F2E2FD72FD9D5503197092AC168C91465E7F2"
								},
								{
									"begin": 269,
									"end": 339,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 269,
									"end": 339,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 269,
									"end": 339,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 359,
									"end": 425,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 359,
									"end": 425,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 359,
									"end": 425,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 359,
									"end": 425,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 359,
									"end": 425,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 359,
									"end": 425,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 383,
									"end": 425,
									"name": "PUSH",
									"source": 2,
									"value": "17F6AD8EF982297579C203069C1DBFFE4348C372"
								},
								{
									"begin": 359,
									"end": 425,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 359,
									"end": 425,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 359,
									"end": 425,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1197,
									"end": 1207,
									"name": "PUSH",
									"source": 0,
									"value": "3B9ACA00"
								},
								{
									"begin": 1168,
									"end": 1207,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1168,
									"end": 1207,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 584,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 595,
									"end": 608,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 584,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 584,
									"end": 658,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 584,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 584,
									"end": 658,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 584,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "496E766573746F7231"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 584,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 624,
									"end": 645,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 624,
									"end": 645,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 624,
									"end": 645,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 624,
									"end": 645,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 624,
									"end": 645,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 624,
									"end": 645,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 624,
									"end": 645,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 624,
									"end": 645,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 624,
									"end": 645,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 624,
									"end": 645,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 624,
									"end": 645,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 624,
									"end": 645,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 624,
									"end": 645,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 624,
									"end": 645,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "199A1899"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 624,
									"end": 645,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 624,
									"end": 645,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 624,
									"end": 645,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 624,
									"end": 637,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 624,
									"end": 637,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 624,
									"end": 637,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 624,
									"end": 645,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 624,
									"end": 645,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 624,
									"end": 645,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 624,
									"end": 645,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 624,
									"end": 645,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 647,
									"end": 648,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 584,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 584,
									"end": 658,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 564,
									"end": 580,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 564,
									"end": 580,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 564,
									"end": 580,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 551,
									"end": 581,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 551,
									"end": 581,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 551,
									"end": 581,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 551,
									"end": 581,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 551,
									"end": 581,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 551,
									"end": 581,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 581,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 551,
									"end": 581,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 551,
									"end": 658,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 564,
									"end": 580,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "C0"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 727,
									"end": 740,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "496E766573746F7231"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 755,
									"end": 776,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 755,
									"end": 776,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 755,
									"end": 776,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 755,
									"end": 776,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 755,
									"end": 776,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 755,
									"end": 776,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 755,
									"end": 776,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 755,
									"end": 776,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 755,
									"end": 776,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 755,
									"end": 776,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 755,
									"end": 776,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 755,
									"end": 776,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 755,
									"end": 776,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 755,
									"end": 776,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "31343233"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 755,
									"end": 776,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 755,
									"end": 776,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 755,
									"end": 776,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 755,
									"end": 768,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 755,
									"end": 768,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 755,
									"end": 768,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 755,
									"end": 776,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 755,
									"end": 776,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 755,
									"end": 776,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 755,
									"end": 776,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 755,
									"end": 776,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 778,
									"end": 779,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 695,
									"end": 712,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 695,
									"end": 712,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 695,
									"end": 712,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 695,
									"end": 712,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 682,
									"end": 713,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 682,
									"end": 713,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 682,
									"end": 713,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 682,
									"end": 713,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 682,
									"end": 713,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 682,
									"end": 713,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 682,
									"end": 713,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 682,
									"end": 713,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 682,
									"end": 713,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 713,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 682,
									"end": 713,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 682,
									"end": 713,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 682,
									"end": 713,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 695,
									"end": 712,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 695,
									"end": 712,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "C0"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 854,
									"end": 867,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "10995CDD08199C9A595B99"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "AA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 884,
									"end": 905,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 884,
									"end": 905,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 884,
									"end": 905,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 884,
									"end": 905,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 884,
									"end": 905,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 884,
									"end": 905,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 884,
									"end": 905,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 884,
									"end": 905,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 884,
									"end": 905,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 884,
									"end": 905,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 884,
									"end": 905,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 884,
									"end": 905,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 884,
									"end": 905,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 884,
									"end": 905,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C8CCC4D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 884,
									"end": 905,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 884,
									"end": 905,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 884,
									"end": 905,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 884,
									"end": 897,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 884,
									"end": 897,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 884,
									"end": 897,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 884,
									"end": 905,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 884,
									"end": 905,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 884,
									"end": 905,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 884,
									"end": 905,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 884,
									"end": 905,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 907,
									"end": 908,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 826,
									"end": 839,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 826,
									"end": 839,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 826,
									"end": 839,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 813,
									"end": 840,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 813,
									"end": 840,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 813,
									"end": 840,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 813,
									"end": 840,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 813,
									"end": 840,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 813,
									"end": 840,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 840,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 813,
									"end": 840,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 813,
									"end": 918,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 826,
									"end": 839,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "C0"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1813,
									"end": 1825,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1813,
									"end": 1833,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1813,
									"end": 1833,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1813,
									"end": 1833,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "37BBB732B9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1960,
									"end": 1981,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 1960,
									"end": 1981,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1960,
									"end": 1981,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1960,
									"end": 1981,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1960,
									"end": 1981,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1960,
									"end": 1981,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1960,
									"end": 1981,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1960,
									"end": 1981,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1960,
									"end": 1981,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1960,
									"end": 1981,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1960,
									"end": 1981,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1960,
									"end": 1981,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1960,
									"end": 1981,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1960,
									"end": 1981,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "199A1899"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1960,
									"end": 1981,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1960,
									"end": 1981,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1960,
									"end": 1981,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1960,
									"end": 1973,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1960,
									"end": 1973,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1960,
									"end": 1973,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1960,
									"end": 1981,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1960,
									"end": 1981,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1960,
									"end": 1981,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1960,
									"end": 1981,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 1960,
									"end": 1981,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1983,
									"end": 1995,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1983,
									"end": 1995,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1921,
									"end": 2005,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1461,
									"end": 1503,
									"name": "PUSH",
									"source": 0,
									"value": "5B38DA6A701C568545DCFCB03FCB875F56BEDDC4"
								},
								{
									"begin": 1896,
									"end": 1918,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 1918,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 1918,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 1918,
									"name": "PUSH",
									"source": 0,
									"value": "58F8E73C330DAFFE64653449EB9A999C1162911D5129DD8193C7233D46ADE2D5"
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 1918,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 1918,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 1918,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 1918,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2005,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2095,
									"end": 2114,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "PUSH",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "283934BB30BA3290383937BB34B232B9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "81"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2136,
									"end": 2157,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 2136,
									"end": 2157,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2136,
									"end": 2157,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2136,
									"end": 2157,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2136,
									"end": 2157,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2136,
									"end": 2157,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2136,
									"end": 2157,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2136,
									"end": 2157,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2136,
									"end": 2157,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2136,
									"end": 2157,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2136,
									"end": 2157,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2136,
									"end": 2157,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2136,
									"end": 2157,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2136,
									"end": 2157,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "31343233"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2136,
									"end": 2157,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2136,
									"end": 2157,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2136,
									"end": 2157,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2136,
									"end": 2149,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2136,
									"end": 2149,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2136,
									"end": 2149,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 2136,
									"end": 2157,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2136,
									"end": 2157,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 2136,
									"end": 2157,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2136,
									"end": 2157,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 2136,
									"end": 2157,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2159,
									"end": 2160,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2084,
									"end": 2170,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "E92B278610CE8B6027EF7AD432103699B0132D8B129C33A54A54AA5151A105A3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 2049,
									"end": 2081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2081,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2081,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2081,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "B419932D51BF6BDFED16BAE3F9F1F38A5DF16D2EF9B0328748B1D9EDD7C1E16C"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2081,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2081,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2081,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2081,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2049,
									"end": 2170,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2251,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2251,
									"end": 2263,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "E92B278610CE8B6027EF7AD432103699B0132D8B129C33A54A54AA5151A105A3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 2211,
									"end": 2248,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "AAFB3744B162F07202C1CEC14B08048E79801D7C878B2C0EAB16DD2801FEC9CE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 2211,
									"end": 2263,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2402,
									"end": 2415,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2211,
									"end": 2228,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2402,
									"end": 2435,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2402,
									"end": 2435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2402,
									"end": 2435,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2402,
									"end": 2435,
									"name": "PUSH",
									"source": 0,
									"value": "9D4D959825F0680278E64197773B2A50CD78B2B2CB00711DDBEEBF0BF93CD8A4"
								},
								{
									"begin": 2402,
									"end": 2455,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2402,
									"end": 2455,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2402,
									"end": 2455,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2402,
									"end": 2455,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2402,
									"end": 2455,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "PUSH",
									"source": 0,
									"value": "F"
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "283AB13634B190383937BB34B232B9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "89"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2666,
									"end": 2687,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 2666,
									"end": 2687,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2666,
									"end": 2687,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2666,
									"end": 2687,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2666,
									"end": 2687,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2666,
									"end": 2687,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2666,
									"end": 2687,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2666,
									"end": 2687,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2666,
									"end": 2687,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2666,
									"end": 2687,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2666,
									"end": 2687,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2666,
									"end": 2687,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2666,
									"end": 2687,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2666,
									"end": 2687,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C8CCC4D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2666,
									"end": 2687,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2666,
									"end": 2687,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2666,
									"end": 2687,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2666,
									"end": 2679,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2666,
									"end": 2679,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2666,
									"end": 2679,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 2666,
									"end": 2687,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2666,
									"end": 2687,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 2666,
									"end": 2687,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2666,
									"end": 2687,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 2666,
									"end": 2687,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2689,
									"end": 2690,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2616,
									"end": 2700,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "E92B278610CE8B6027EF7AD432103699B0132D8B129C33A54A54AA5151A105A3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 2582,
									"end": 2613,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2613,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2613,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "B419932D51BF6BDFED16BAE3F9F1F38A5DF16D2EF9B0328748B1D9EDD7C1E16C"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2613,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "tag",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "tag",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 2700,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2782,
									"end": 2794,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2782,
									"end": 2794,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "E92B278610CE8B6027EF7AD432103699B0132D8B129C33A54A54AA5151A105A3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 2743,
									"end": 2779,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "AAFB3744B162F07202C1CEC14B08048E79801D7C878B2C0EAB16DD2801FEC9CE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 2743,
									"end": 2794,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2933,
									"end": 2946,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2743,
									"end": 2760,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2933,
									"end": 2965,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2933,
									"end": 2965,
									"name": "PUSH",
									"source": 0,
									"value": "9D4D959825F0680278E64197773B2A50CD78B2B2CB00711DDBEEBF0BF93CD8A4"
								},
								{
									"begin": 2933,
									"end": 2985,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2933,
									"end": 2985,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2933,
									"end": 2985,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2933,
									"end": 2985,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2933,
									"end": 2985,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3207,
									"end": 3223,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3198,
									"end": 3232,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 3198,
									"end": 3232,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3207,
									"end": 3223,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3225,
									"end": 3231,
									"name": "PUSH",
									"source": 0,
									"value": "927C0"
								},
								{
									"begin": 3198,
									"end": 3206,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 3198,
									"end": 3232,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 3198,
									"end": 3232,
									"name": "tag",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 3198,
									"end": 3232,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3266,
									"end": 3283,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3266,
									"end": 3283,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3257,
									"end": 3292,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 3257,
									"end": 3292,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3266,
									"end": 3283,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3285,
									"end": 3291,
									"name": "PUSH",
									"source": 0,
									"value": "C3500"
								},
								{
									"begin": 3257,
									"end": 3265,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 3257,
									"end": 3292,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 3257,
									"end": 3292,
									"name": "tag",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 3257,
									"end": 3292,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3325,
									"end": 3338,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3325,
									"end": 3338,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3316,
									"end": 3347,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 3316,
									"end": 3347,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3325,
									"end": 3338,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3340,
									"end": 3346,
									"name": "PUSH",
									"source": 0,
									"value": "61A80"
								},
								{
									"begin": 3316,
									"end": 3324,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 3316,
									"end": 3347,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 3316,
									"end": 3347,
									"name": "tag",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 3316,
									"end": 3347,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3316,
									"end": 3347,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1775,
									"end": 3374,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "173"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 144,
									"end": 282,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 144,
									"end": 282,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 208,
									"end": 215,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 266,
									"end": 271,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 249,
									"end": 272,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 249,
									"end": 272,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 249,
									"end": 272,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 249,
									"end": 272,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 249,
									"end": 272,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 249,
									"end": 272,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 249,
									"end": 272,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 249,
									"end": 272,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 249,
									"end": 272,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 249,
									"end": 272,
									"name": "tag",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 249,
									"end": 272,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 249,
									"end": 272,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 249,
									"end": 272,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 249,
									"end": 272,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 249,
									"end": 272,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 249,
									"end": 272,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 249,
									"end": 272,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 249,
									"end": 272,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 249,
									"end": 272,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 249,
									"end": 272,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 249,
									"end": 272,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 249,
									"end": 272,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 249,
									"end": 272,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 239,
									"end": 273,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 239,
									"end": 273,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 239,
									"end": 273,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 239,
									"end": 273,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 239,
									"end": 273,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 239,
									"end": 273,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 232,
									"end": 274,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 232,
									"end": 274,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 144,
									"end": 282,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 144,
									"end": 282,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 144,
									"end": 282,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 144,
									"end": 282,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 5995,
									"end": 13261,
									"name": "tag",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 5995,
									"end": 13261,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6077,
									"end": 6081,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6098,
									"end": 6158,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "56"
								},
								{
									"begin": 6098,
									"end": 6158,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6098,
									"end": 6158,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6098,
									"end": 6158,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6098,
									"end": 6158,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6098,
									"end": 6158,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6098,
									"end": 6158,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6098,
									"end": 6158,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6098,
									"end": 6158,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6098,
									"end": 6158,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6098,
									"end": 6158,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6098,
									"end": 6158,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6098,
									"end": 6158,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6098,
									"end": 6158,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1CD95959"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6098,
									"end": 6158,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6098,
									"end": 6158,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6098,
									"end": 6158,
									"name": "POP",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "E92B278610CE8B6027EF7AD432103699B0132D8B129C33A54A54AA5151A105A3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1694,
									"end": 1736,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6098,
									"end": 6111,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "57"
								},
								{
									"begin": 6098,
									"end": 6111,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6098,
									"end": 6111,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6098,
									"end": 6158,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6098,
									"end": 6158,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6098,
									"end": 6158,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6098,
									"end": 6158,
									"name": "tag",
									"source": 0,
									"value": "56"
								},
								{
									"begin": 6098,
									"end": 6158,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6098,
									"end": 6166,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6098,
									"end": 6166,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6162,
									"end": 6166,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6098,
									"end": 6166,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 6094,
									"end": 13253,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6094,
									"end": 13253,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "58"
								},
								{
									"begin": 6094,
									"end": 13253,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6239,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "59"
								},
								{
									"begin": 6239,
									"end": 6252,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 6239,
									"end": 6254,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6239,
									"end": 6254,
									"name": "tag",
									"source": 0,
									"value": "59"
								},
								{
									"begin": 6239,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6239,
									"end": 6262,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6239,
									"end": 6262,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6258,
									"end": 6262,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6239,
									"end": 6262,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 6235,
									"end": 9011,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6235,
									"end": 9011,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "61"
								},
								{
									"begin": 6235,
									"end": 9011,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6435,
									"end": 6445,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 6422,
									"end": 6434,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6422,
									"end": 6446,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6422,
									"end": 6446,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6422,
									"end": 6446,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6422,
									"end": 6446,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6422,
									"end": 6446,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6422,
									"end": 6446,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6422,
									"end": 6446,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6422,
									"end": 6446,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6422,
									"end": 6446,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6422,
									"end": 6446,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6422,
									"end": 6462,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6422,
									"end": 6462,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6422,
									"end": 6462,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6408,
									"end": 6462,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6408,
									"end": 6462,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 6408,
									"end": 6462,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6400,
									"end": 6463,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "62"
								},
								{
									"begin": 6400,
									"end": 6463,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6400,
									"end": 6463,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6400,
									"end": 6463,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6400,
									"end": 6463,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6400,
									"end": 6463,
									"name": "tag",
									"source": 0,
									"value": "62"
								},
								{
									"begin": 6400,
									"end": 6463,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6647,
									"end": 6660,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6627,
									"end": 6637,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 6614,
									"end": 6626,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6614,
									"end": 6638,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6614,
									"end": 6638,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6614,
									"end": 6638,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6614,
									"end": 6638,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6614,
									"end": 6638,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6614,
									"end": 6638,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6614,
									"end": 6638,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6614,
									"end": 6638,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6614,
									"end": 6638,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6614,
									"end": 6638,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6614,
									"end": 6643,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6614,
									"end": 6643,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6614,
									"end": 6643,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6614,
									"end": 6660,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6614,
									"end": 6660,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6614,
									"end": 6660,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 6614,
									"end": 6660,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6614,
									"end": 6660,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "66"
								},
								{
									"begin": 6614,
									"end": 6660,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6614,
									"end": 6660,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "66"
								},
								{
									"begin": 6614,
									"end": 6660,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 6614,
									"end": 6660,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6614,
									"end": 6660,
									"name": "tag",
									"source": 0,
									"value": "66"
								},
								{
									"begin": 6614,
									"end": 6660,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6614,
									"end": 6660,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 6605,
									"end": 6682,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "67"
								},
								{
									"begin": 6605,
									"end": 6682,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6605,
									"end": 6682,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6605,
									"end": 6682,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6605,
									"end": 6682,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6605,
									"end": 6682,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 838,
									"end": 840,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6605,
									"end": 6682,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6605,
									"end": 6682,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6605,
									"end": 6682,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 820,
									"end": 841,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 877,
									"end": 879,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 857,
									"end": 875,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 857,
									"end": 875,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 857,
									"end": 875,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 850,
									"end": 880,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2CB7BAB9103737BA1034B73B32B9BA37B9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "79"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 896,
									"end": 914,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 896,
									"end": 914,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 896,
									"end": 914,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 889,
									"end": 936,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 953,
									"end": 971,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 953,
									"end": 971,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6605,
									"end": 6682,
									"name": "tag",
									"source": 0,
									"value": "68"
								},
								{
									"begin": 6605,
									"end": 6682,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6605,
									"end": 6682,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6605,
									"end": 6682,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6605,
									"end": 6682,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6605,
									"end": 6682,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6605,
									"end": 6682,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6605,
									"end": 6682,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6605,
									"end": 6682,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6605,
									"end": 6682,
									"name": "tag",
									"source": 0,
									"value": "67"
								},
								{
									"begin": 6605,
									"end": 6682,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6853,
									"end": 6866,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6821,
									"end": 6844,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6821,
									"end": 6844,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6821,
									"end": 6833,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6821,
									"end": 6844,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6821,
									"end": 6844,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6821,
									"end": 6844,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6821,
									"end": 6844,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6821,
									"end": 6844,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6821,
									"end": 6844,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6821,
									"end": 6844,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6821,
									"end": 6844,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6821,
									"end": 6844,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6821,
									"end": 6844,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6821,
									"end": 6849,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6821,
									"end": 6849,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6821,
									"end": 6849,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6821,
									"end": 6866,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6821,
									"end": 6866,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6821,
									"end": 6866,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 6821,
									"end": 6866,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6821,
									"end": 6866,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6821,
									"end": 6866,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6821,
									"end": 6866,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6821,
									"end": 6866,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 6821,
									"end": 6866,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6821,
									"end": 6866,
									"name": "tag",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6821,
									"end": 6866,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6821,
									"end": 6866,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 6812,
									"end": 6888,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "74"
								},
								{
									"begin": 6812,
									"end": 6888,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6812,
									"end": 6888,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6812,
									"end": 6888,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6812,
									"end": 6888,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6812,
									"end": 6888,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 838,
									"end": 840,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6812,
									"end": 6888,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6812,
									"end": 6888,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6812,
									"end": 6888,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 820,
									"end": 841,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 877,
									"end": 879,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 857,
									"end": 875,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 857,
									"end": 875,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 857,
									"end": 875,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 850,
									"end": 880,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2CB7BAB9103737BA1034B73B32B9BA37B9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "79"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 896,
									"end": 914,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 896,
									"end": 914,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 896,
									"end": 914,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 889,
									"end": 936,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 953,
									"end": 971,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 953,
									"end": 971,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6812,
									"end": 6888,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "68"
								},
								{
									"begin": 636,
									"end": 977,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6812,
									"end": 6888,
									"name": "tag",
									"source": 0,
									"value": "74"
								},
								{
									"begin": 6812,
									"end": 6888,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7077,
									"end": 7087,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 7064,
									"end": 7076,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7064,
									"end": 7088,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7064,
									"end": 7088,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7064,
									"end": 7088,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7064,
									"end": 7088,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7064,
									"end": 7088,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7064,
									"end": 7088,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7064,
									"end": 7088,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7064,
									"end": 7088,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7088,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7064,
									"end": 7088,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7064,
									"end": 7088,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7064,
									"end": 7104,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 7064,
									"end": 7104,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7064,
									"end": 7104,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7064,
									"end": 7120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "76"
								},
								{
									"begin": 7064,
									"end": 7120,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7109,
									"end": 7119,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7109,
									"end": 7119,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7064,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551709"
								},
								{
									"begin": 7064,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "77"
								},
								{
									"begin": 7064,
									"end": 7108,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7064,
									"end": 7108,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 7064,
									"end": 7108,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7064,
									"end": 7120,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7064,
									"end": 7120,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 7064,
									"end": 7120,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 7064,
									"end": 7120,
									"name": "tag",
									"source": 0,
									"value": "76"
								},
								{
									"begin": 7064,
									"end": 7120,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7034,
									"end": 7044,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 7021,
									"end": 7033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7045,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7021,
									"end": 7045,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7021,
									"end": 7045,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7021,
									"end": 7045,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7045,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7021,
									"end": 7045,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7021,
									"end": 7045,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7021,
									"end": 7045,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7021,
									"end": 7045,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7021,
									"end": 7045,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7021,
									"end": 7045,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7021,
									"end": 7061,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 7021,
									"end": 7061,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7021,
									"end": 7120,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 7021,
									"end": 7120,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7021,
									"end": 7120,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 7021,
									"end": 7120,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7249,
									"end": 7272,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 7249,
									"end": 7272,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7249,
									"end": 7272,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7249,
									"end": 7272,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7249,
									"end": 7272,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7249,
									"end": 7272,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7249,
									"end": 7272,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7249,
									"end": 7285,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7249,
									"end": 7285,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7249,
									"end": 7285,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7249,
									"end": 7301,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "78"
								},
								{
									"begin": 7249,
									"end": 7301,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7290,
									"end": 7300,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7290,
									"end": 7300,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7249,
									"end": 7289,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551710"
								},
								{
									"begin": 7249,
									"end": 7289,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "79"
								},
								{
									"begin": 7249,
									"end": 7289,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7249,
									"end": 7289,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 7249,
									"end": 7289,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7249,
									"end": 7301,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7249,
									"end": 7301,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 7249,
									"end": 7301,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 7249,
									"end": 7301,
									"name": "tag",
									"source": 0,
									"value": "78"
								},
								{
									"begin": 7249,
									"end": 7301,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7210,
									"end": 7233,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7210,
									"end": 7233,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7210,
									"end": 7222,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7210,
									"end": 7233,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7210,
									"end": 7233,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7210,
									"end": 7233,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7210,
									"end": 7233,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7210,
									"end": 7233,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7210,
									"end": 7233,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7210,
									"end": 7233,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7210,
									"end": 7233,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7210,
									"end": 7233,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7210,
									"end": 7233,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7210,
									"end": 7233,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7210,
									"end": 7233,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7210,
									"end": 7246,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7210,
									"end": 7246,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7210,
									"end": 7301,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 7210,
									"end": 7301,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7210,
									"end": 7301,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 7210,
									"end": 7301,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7398,
									"end": 7441,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1128,
									"end": 1153,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1128,
									"end": 1153,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1128,
									"end": 1153,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 7210,
									"end": 7233,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7210,
									"end": 7233,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7407,
									"end": 7417,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 7407,
									"end": 7417,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 7398,
									"end": 7441,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1101,
									"end": 1119,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7398,
									"end": 7441,
									"name": "tag",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 7398,
									"end": 7441,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7398,
									"end": 7441,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7398,
									"end": 7441,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7398,
									"end": 7441,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7398,
									"end": 7441,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7398,
									"end": 7441,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7398,
									"end": 7441,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7398,
									"end": 7441,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7601,
									"end": 7605,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7594,
									"end": 7605,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "127"
								},
								{
									"begin": 7594,
									"end": 7605,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6235,
									"end": 9011,
									"name": "tag",
									"source": 0,
									"value": "61"
								},
								{
									"begin": 6235,
									"end": 9011,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7825,
									"end": 7835,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 7812,
									"end": 7824,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7812,
									"end": 7836,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7812,
									"end": 7836,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7812,
									"end": 7836,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7812,
									"end": 7836,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7812,
									"end": 7836,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7812,
									"end": 7836,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7812,
									"end": 7836,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7812,
									"end": 7836,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7812,
									"end": 7836,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7812,
									"end": 7836,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7812,
									"end": 7849,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7812,
									"end": 7849,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7812,
									"end": 7849,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7798,
									"end": 7849,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7798,
									"end": 7849,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 7798,
									"end": 7849,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7790,
									"end": 7850,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "83"
								},
								{
									"begin": 7790,
									"end": 7850,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7790,
									"end": 7850,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7790,
									"end": 7850,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7790,
									"end": 7850,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7790,
									"end": 7850,
									"name": "tag",
									"source": 0,
									"value": "83"
								},
								{
									"begin": 7790,
									"end": 7850,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8037,
									"end": 8050,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 8017,
									"end": 8027,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 8004,
									"end": 8016,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8004,
									"end": 8028,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8004,
									"end": 8028,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8004,
									"end": 8028,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8004,
									"end": 8028,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8004,
									"end": 8028,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8004,
									"end": 8028,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8004,
									"end": 8028,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8004,
									"end": 8028,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8004,
									"end": 8028,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8004,
									"end": 8028,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 8004,
									"end": 8033,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8004,
									"end": 8033,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 8004,
									"end": 8033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8004,
									"end": 8050,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8004,
									"end": 8050,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8004,
									"end": 8050,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 8004,
									"end": 8050,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8004,
									"end": 8050,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "87"
								},
								{
									"begin": 8004,
									"end": 8050,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8004,
									"end": 8050,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "87"
								},
								{
									"begin": 8004,
									"end": 8050,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 8004,
									"end": 8050,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8004,
									"end": 8050,
									"name": "tag",
									"source": 0,
									"value": "87"
								},
								{
									"begin": 8004,
									"end": 8050,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8004,
									"end": 8050,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 7995,
									"end": 8072,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "88"
								},
								{
									"begin": 7995,
									"end": 8072,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7995,
									"end": 8072,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7995,
									"end": 8072,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7995,
									"end": 8072,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7995,
									"end": 8072,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 838,
									"end": 840,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 7995,
									"end": 8072,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7995,
									"end": 8072,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7995,
									"end": 8072,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 820,
									"end": 841,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 877,
									"end": 879,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 857,
									"end": 875,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 857,
									"end": 875,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 857,
									"end": 875,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 850,
									"end": 880,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2CB7BAB9103737BA1034B73B32B9BA37B9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "79"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 896,
									"end": 914,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 896,
									"end": 914,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 896,
									"end": 914,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 889,
									"end": 936,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 953,
									"end": 971,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 953,
									"end": 971,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7995,
									"end": 8072,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "68"
								},
								{
									"begin": 636,
									"end": 977,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7995,
									"end": 8072,
									"name": "tag",
									"source": 0,
									"value": "88"
								},
								{
									"begin": 7995,
									"end": 8072,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8243,
									"end": 8256,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8211,
									"end": 8234,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 8211,
									"end": 8234,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8211,
									"end": 8223,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8211,
									"end": 8234,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8211,
									"end": 8234,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8211,
									"end": 8234,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8211,
									"end": 8234,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8211,
									"end": 8234,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8211,
									"end": 8234,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8211,
									"end": 8234,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8211,
									"end": 8234,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8211,
									"end": 8234,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8211,
									"end": 8234,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 8211,
									"end": 8239,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8211,
									"end": 8239,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 8211,
									"end": 8239,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8211,
									"end": 8256,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8211,
									"end": 8256,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8211,
									"end": 8256,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 8211,
									"end": 8256,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8211,
									"end": 8256,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "93"
								},
								{
									"begin": 8211,
									"end": 8256,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8211,
									"end": 8256,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "93"
								},
								{
									"begin": 8211,
									"end": 8256,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 8211,
									"end": 8256,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8211,
									"end": 8256,
									"name": "tag",
									"source": 0,
									"value": "93"
								},
								{
									"begin": 8211,
									"end": 8256,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8211,
									"end": 8256,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 8202,
									"end": 8278,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "94"
								},
								{
									"begin": 8202,
									"end": 8278,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8202,
									"end": 8278,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8202,
									"end": 8278,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8202,
									"end": 8278,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8202,
									"end": 8278,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 838,
									"end": 840,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8202,
									"end": 8278,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8202,
									"end": 8278,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8202,
									"end": 8278,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 820,
									"end": 841,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 877,
									"end": 879,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 857,
									"end": 875,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 857,
									"end": 875,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 857,
									"end": 875,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 850,
									"end": 880,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2CB7BAB9103737BA1034B73B32B9BA37B9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "79"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 896,
									"end": 914,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 896,
									"end": 914,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 896,
									"end": 914,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 889,
									"end": 936,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 953,
									"end": 971,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 953,
									"end": 971,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8202,
									"end": 8278,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "68"
								},
								{
									"begin": 636,
									"end": 977,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8202,
									"end": 8278,
									"name": "tag",
									"source": 0,
									"value": "94"
								},
								{
									"begin": 8202,
									"end": 8278,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8464,
									"end": 8474,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 8451,
									"end": 8463,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8451,
									"end": 8475,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8451,
									"end": 8475,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8451,
									"end": 8475,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8451,
									"end": 8475,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8451,
									"end": 8475,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8451,
									"end": 8475,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8451,
									"end": 8475,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8451,
									"end": 8475,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8451,
									"end": 8475,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8451,
									"end": 8475,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8451,
									"end": 8475,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 8451,
									"end": 8488,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8451,
									"end": 8488,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8451,
									"end": 8488,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8451,
									"end": 8504,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "96"
								},
								{
									"begin": 8451,
									"end": 8504,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8493,
									"end": 8503,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 8493,
									"end": 8503,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8451,
									"end": 8492,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551709"
								},
								{
									"begin": 8451,
									"end": 8492,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "77"
								},
								{
									"begin": 8451,
									"end": 8492,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8451,
									"end": 8492,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 8451,
									"end": 8492,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8451,
									"end": 8504,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8451,
									"end": 8504,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 8451,
									"end": 8504,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8451,
									"end": 8504,
									"name": "tag",
									"source": 0,
									"value": "96"
								},
								{
									"begin": 8451,
									"end": 8504,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8424,
									"end": 8434,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 8411,
									"end": 8423,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8411,
									"end": 8435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8411,
									"end": 8435,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8411,
									"end": 8435,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8411,
									"end": 8435,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8411,
									"end": 8435,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8411,
									"end": 8435,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8411,
									"end": 8435,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8411,
									"end": 8435,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8411,
									"end": 8435,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8411,
									"end": 8435,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8411,
									"end": 8435,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 8411,
									"end": 8448,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8411,
									"end": 8448,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8411,
									"end": 8448,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8411,
									"end": 8448,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8411,
									"end": 8504,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 8411,
									"end": 8504,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8411,
									"end": 8504,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 8411,
									"end": 8504,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8639,
									"end": 8662,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 8639,
									"end": 8662,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8639,
									"end": 8662,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8639,
									"end": 8662,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8639,
									"end": 8662,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8639,
									"end": 8662,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8639,
									"end": 8662,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 8639,
									"end": 8675,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8639,
									"end": 8675,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8639,
									"end": 8675,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8639,
									"end": 8675,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8639,
									"end": 8691,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "78"
								},
								{
									"begin": 8639,
									"end": 8691,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8680,
									"end": 8690,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 8680,
									"end": 8690,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8639,
									"end": 8679,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551710"
								},
								{
									"begin": 8639,
									"end": 8679,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "79"
								},
								{
									"begin": 8639,
									"end": 8679,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8639,
									"end": 8679,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 8639,
									"end": 8679,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8639,
									"end": 8691,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8639,
									"end": 8691,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 8639,
									"end": 8691,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6094,
									"end": 13253,
									"name": "tag",
									"source": 0,
									"value": "58"
								},
								{
									"begin": 6094,
									"end": 13253,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9032,
									"end": 9095,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 9032,
									"end": 9095,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9032,
									"end": 9095,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 9032,
									"end": 9095,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9032,
									"end": 9095,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9032,
									"end": 9095,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 9032,
									"end": 9095,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9032,
									"end": 9095,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9032,
									"end": 9095,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9032,
									"end": 9095,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 9032,
									"end": 9095,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9032,
									"end": 9095,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "70726976617465"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 9032,
									"end": 9095,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9032,
									"end": 9095,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9032,
									"end": 9095,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 9032,
									"end": 9095,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9032,
									"end": 9095,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 9032,
									"end": 9095,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "E92B278610CE8B6027EF7AD432103699B0132D8B129C33A54A54AA5151A105A3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1578,
									"end": 1620,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9032,
									"end": 9045,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "57"
								},
								{
									"begin": 9032,
									"end": 9095,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 9032,
									"end": 9095,
									"name": "tag",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 9032,
									"end": 9095,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9032,
									"end": 9103,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 9032,
									"end": 9103,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 9099,
									"end": 9103,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9032,
									"end": 9103,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 9028,
									"end": 13253,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 9028,
									"end": 13253,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "101"
								},
								{
									"begin": 9028,
									"end": 13253,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 9169,
									"end": 9184,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "102"
								},
								{
									"begin": 9169,
									"end": 9182,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 9169,
									"end": 9184,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 9169,
									"end": 9184,
									"name": "tag",
									"source": 0,
									"value": "102"
								},
								{
									"begin": 9169,
									"end": 9184,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9169,
									"end": 9192,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 9169,
									"end": 9192,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 9188,
									"end": 9192,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9169,
									"end": 9192,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 9165,
									"end": 11119,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 9165,
									"end": 11119,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "103"
								},
								{
									"begin": 9165,
									"end": 11119,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 9365,
									"end": 9375,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 9352,
									"end": 9364,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9352,
									"end": 9376,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9352,
									"end": 9376,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9352,
									"end": 9376,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9352,
									"end": 9376,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9352,
									"end": 9376,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9352,
									"end": 9376,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9352,
									"end": 9376,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9352,
									"end": 9376,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 9352,
									"end": 9376,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9352,
									"end": 9376,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 9352,
									"end": 9392,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 9352,
									"end": 9392,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 9352,
									"end": 9392,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 9338,
									"end": 9392,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9338,
									"end": 9392,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 9338,
									"end": 9392,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 9330,
									"end": 9393,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "104"
								},
								{
									"begin": 9330,
									"end": 9393,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 9330,
									"end": 9393,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9330,
									"end": 9393,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9330,
									"end": 9393,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 9330,
									"end": 9393,
									"name": "tag",
									"source": 0,
									"value": "104"
								},
								{
									"begin": 9330,
									"end": 9393,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9593,
									"end": 9603,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 9580,
									"end": 9592,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9580,
									"end": 9604,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9580,
									"end": 9604,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9580,
									"end": 9604,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9580,
									"end": 9604,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9580,
									"end": 9604,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9580,
									"end": 9604,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9580,
									"end": 9604,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9580,
									"end": 9604,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 9580,
									"end": 9604,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9580,
									"end": 9604,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9580,
									"end": 9604,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 9580,
									"end": 9620,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 9580,
									"end": 9620,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 9580,
									"end": 9620,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 9580,
									"end": 9636,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "105"
								},
								{
									"begin": 9580,
									"end": 9636,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9625,
									"end": 9635,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 9625,
									"end": 9635,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9580,
									"end": 9624,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551709"
								},
								{
									"begin": 9580,
									"end": 9624,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "77"
								},
								{
									"begin": 9580,
									"end": 9624,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9580,
									"end": 9624,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 9580,
									"end": 9624,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 9580,
									"end": 9636,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9580,
									"end": 9636,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 9580,
									"end": 9636,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 9580,
									"end": 9636,
									"name": "tag",
									"source": 0,
									"value": "105"
								},
								{
									"begin": 9580,
									"end": 9636,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9550,
									"end": 9560,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 9537,
									"end": 9549,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9537,
									"end": 9561,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9537,
									"end": 9561,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9537,
									"end": 9561,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9537,
									"end": 9561,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9537,
									"end": 9561,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9537,
									"end": 9561,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9537,
									"end": 9561,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9537,
									"end": 9561,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 9537,
									"end": 9561,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9537,
									"end": 9561,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 9537,
									"end": 9561,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 9537,
									"end": 9577,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 9537,
									"end": 9577,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 9537,
									"end": 9636,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 9537,
									"end": 9636,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9537,
									"end": 9636,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 9537,
									"end": 9636,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9768,
									"end": 9791,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 9768,
									"end": 9791,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9768,
									"end": 9791,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9768,
									"end": 9791,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9768,
									"end": 9791,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9768,
									"end": 9791,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9768,
									"end": 9791,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 9768,
									"end": 9807,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 9768,
									"end": 9807,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 9768,
									"end": 9807,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 9768,
									"end": 9823,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "106"
								},
								{
									"begin": 9768,
									"end": 9823,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9812,
									"end": 9822,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 9812,
									"end": 9822,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9768,
									"end": 9811,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551710"
								},
								{
									"begin": 9768,
									"end": 9811,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "79"
								},
								{
									"begin": 9768,
									"end": 9811,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9768,
									"end": 9811,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 9768,
									"end": 9811,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 9768,
									"end": 9823,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9768,
									"end": 9823,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 9768,
									"end": 9823,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 9768,
									"end": 9823,
									"name": "tag",
									"source": 0,
									"value": "106"
								},
								{
									"begin": 9768,
									"end": 9823,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9726,
									"end": 9749,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 9726,
									"end": 9749,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9726,
									"end": 9738,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9726,
									"end": 9749,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9726,
									"end": 9749,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9726,
									"end": 9749,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9726,
									"end": 9749,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9726,
									"end": 9749,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9726,
									"end": 9749,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9726,
									"end": 9749,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9726,
									"end": 9749,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 9726,
									"end": 9749,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9726,
									"end": 9749,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9726,
									"end": 9749,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9726,
									"end": 9749,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 9726,
									"end": 9765,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 9726,
									"end": 9765,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 9726,
									"end": 9823,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 9726,
									"end": 9823,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9726,
									"end": 9823,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 9726,
									"end": 9823,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9917,
									"end": 9960,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1128,
									"end": 1153,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1128,
									"end": 1153,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1128,
									"end": 1153,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 9726,
									"end": 9749,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9726,
									"end": 9749,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9926,
									"end": 9936,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 9926,
									"end": 9936,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 9917,
									"end": 9960,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1101,
									"end": 1119,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9917,
									"end": 9960,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 982,
									"end": 1159,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9165,
									"end": 11119,
									"name": "tag",
									"source": 0,
									"value": "103"
								},
								{
									"begin": 9165,
									"end": 11119,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10344,
									"end": 10354,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 10331,
									"end": 10343,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10331,
									"end": 10355,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10331,
									"end": 10355,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10331,
									"end": 10355,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10331,
									"end": 10355,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 10331,
									"end": 10355,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10331,
									"end": 10355,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10331,
									"end": 10355,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10331,
									"end": 10355,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10331,
									"end": 10355,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10331,
									"end": 10355,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 10331,
									"end": 10371,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 10331,
									"end": 10371,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 10331,
									"end": 10371,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 10317,
									"end": 10371,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10317,
									"end": 10371,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 10317,
									"end": 10371,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 10309,
									"end": 10372,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "109"
								},
								{
									"begin": 10309,
									"end": 10372,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 10309,
									"end": 10372,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10309,
									"end": 10372,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10309,
									"end": 10372,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 10309,
									"end": 10372,
									"name": "tag",
									"source": 0,
									"value": "109"
								},
								{
									"begin": 10309,
									"end": 10372,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10572,
									"end": 10582,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 10559,
									"end": 10571,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10559,
									"end": 10583,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10559,
									"end": 10583,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10559,
									"end": 10583,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10559,
									"end": 10583,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 10559,
									"end": 10583,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10559,
									"end": 10583,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10559,
									"end": 10583,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10559,
									"end": 10583,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10559,
									"end": 10583,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10559,
									"end": 10583,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10559,
									"end": 10583,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 10559,
									"end": 10599,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 10559,
									"end": 10599,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 10559,
									"end": 10599,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 10559,
									"end": 10615,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "110"
								},
								{
									"begin": 10559,
									"end": 10615,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10604,
									"end": 10614,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 10604,
									"end": 10614,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10559,
									"end": 10603,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551709"
								},
								{
									"begin": 10559,
									"end": 10603,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "77"
								},
								{
									"begin": 10559,
									"end": 10603,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10559,
									"end": 10603,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 10559,
									"end": 10603,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 10559,
									"end": 10615,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10559,
									"end": 10615,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 10559,
									"end": 10615,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 10559,
									"end": 10615,
									"name": "tag",
									"source": 0,
									"value": "110"
								},
								{
									"begin": 10559,
									"end": 10615,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10529,
									"end": 10539,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 10516,
									"end": 10528,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10516,
									"end": 10540,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10516,
									"end": 10540,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10516,
									"end": 10540,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10516,
									"end": 10540,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 10516,
									"end": 10540,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10516,
									"end": 10540,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10516,
									"end": 10540,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10516,
									"end": 10540,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10516,
									"end": 10540,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10516,
									"end": 10540,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10516,
									"end": 10540,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 10516,
									"end": 10556,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 10516,
									"end": 10556,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10516,
									"end": 10556,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10516,
									"end": 10556,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 10516,
									"end": 10615,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 10516,
									"end": 10615,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10516,
									"end": 10615,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 10516,
									"end": 10615,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 10747,
									"end": 10770,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 10747,
									"end": 10770,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10747,
									"end": 10770,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10747,
									"end": 10770,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10747,
									"end": 10770,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10747,
									"end": 10770,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10747,
									"end": 10770,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 10747,
									"end": 10786,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10747,
									"end": 10786,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10747,
									"end": 10786,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 10747,
									"end": 10786,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 10747,
									"end": 10802,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "106"
								},
								{
									"begin": 10747,
									"end": 10802,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10791,
									"end": 10801,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 10791,
									"end": 10801,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10747,
									"end": 10790,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551710"
								},
								{
									"begin": 10747,
									"end": 10790,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "79"
								},
								{
									"begin": 10747,
									"end": 10790,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10747,
									"end": 10790,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 10747,
									"end": 10790,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 10747,
									"end": 10802,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10747,
									"end": 10802,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 10747,
									"end": 10802,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 9028,
									"end": 13253,
									"name": "tag",
									"source": 0,
									"value": "101"
								},
								{
									"begin": 9028,
									"end": 13253,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11140,
									"end": 11202,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11140,
									"end": 11202,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11140,
									"end": 11202,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11140,
									"end": 11202,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11140,
									"end": 11202,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11140,
									"end": 11202,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11140,
									"end": 11202,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11140,
									"end": 11202,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11140,
									"end": 11202,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11140,
									"end": 11202,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 11140,
									"end": 11202,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11140,
									"end": 11202,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "7075626C6963"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 11140,
									"end": 11202,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11140,
									"end": 11202,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11140,
									"end": 11202,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11140,
									"end": 11202,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11140,
									"end": 11202,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "114"
								},
								{
									"begin": 11140,
									"end": 11202,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "E92B278610CE8B6027EF7AD432103699B0132D8B129C33A54A54AA5151A105A3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1578,
									"end": 1620,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11140,
									"end": 11153,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "57"
								},
								{
									"begin": 11140,
									"end": 11202,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 11140,
									"end": 11202,
									"name": "tag",
									"source": 0,
									"value": "114"
								},
								{
									"begin": 11140,
									"end": 11202,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11140,
									"end": 11210,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11140,
									"end": 11210,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11206,
									"end": 11210,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11140,
									"end": 11210,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 11136,
									"end": 13253,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11136,
									"end": 13253,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "115"
								},
								{
									"begin": 11136,
									"end": 13253,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11276,
									"end": 11291,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "116"
								},
								{
									"begin": 11276,
									"end": 11289,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 11276,
									"end": 11291,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 11276,
									"end": 11291,
									"name": "tag",
									"source": 0,
									"value": "116"
								},
								{
									"begin": 11276,
									"end": 11291,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11276,
									"end": 11299,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11276,
									"end": 11299,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11295,
									"end": 11299,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11276,
									"end": 11299,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 11272,
									"end": 13224,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11272,
									"end": 13224,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "117"
								},
								{
									"begin": 11272,
									"end": 13224,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11472,
									"end": 11482,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 11459,
									"end": 11471,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11459,
									"end": 11483,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11459,
									"end": 11483,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11459,
									"end": 11483,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11459,
									"end": 11483,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11459,
									"end": 11483,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11459,
									"end": 11483,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11459,
									"end": 11483,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11459,
									"end": 11483,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11459,
									"end": 11483,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11459,
									"end": 11483,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 11459,
									"end": 11499,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 11459,
									"end": 11499,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11459,
									"end": 11499,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 11445,
									"end": 11499,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11445,
									"end": 11499,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 11445,
									"end": 11499,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11437,
									"end": 11500,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "118"
								},
								{
									"begin": 11437,
									"end": 11500,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11437,
									"end": 11500,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11437,
									"end": 11500,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11437,
									"end": 11500,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11437,
									"end": 11500,
									"name": "tag",
									"source": 0,
									"value": "118"
								},
								{
									"begin": 11437,
									"end": 11500,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11700,
									"end": 11710,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 11687,
									"end": 11699,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11687,
									"end": 11711,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11687,
									"end": 11711,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11687,
									"end": 11711,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11687,
									"end": 11711,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11687,
									"end": 11711,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11687,
									"end": 11711,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11687,
									"end": 11711,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11687,
									"end": 11711,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11687,
									"end": 11711,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11687,
									"end": 11711,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11687,
									"end": 11711,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 11687,
									"end": 11727,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 11687,
									"end": 11727,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11687,
									"end": 11727,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 11687,
									"end": 11743,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "119"
								},
								{
									"begin": 11687,
									"end": 11743,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11732,
									"end": 11742,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 11732,
									"end": 11742,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11687,
									"end": 11731,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551709"
								},
								{
									"begin": 11687,
									"end": 11731,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "77"
								},
								{
									"begin": 11687,
									"end": 11731,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11687,
									"end": 11731,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 11687,
									"end": 11731,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 11687,
									"end": 11743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11687,
									"end": 11743,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 11687,
									"end": 11743,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 11687,
									"end": 11743,
									"name": "tag",
									"source": 0,
									"value": "119"
								},
								{
									"begin": 11687,
									"end": 11743,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11657,
									"end": 11667,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 11644,
									"end": 11656,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11644,
									"end": 11668,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11644,
									"end": 11668,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11644,
									"end": 11668,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11644,
									"end": 11668,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11644,
									"end": 11668,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11644,
									"end": 11668,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11644,
									"end": 11668,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11644,
									"end": 11668,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11644,
									"end": 11668,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11644,
									"end": 11668,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11644,
									"end": 11668,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 11644,
									"end": 11684,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 11644,
									"end": 11684,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11644,
									"end": 11743,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 11644,
									"end": 11743,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11644,
									"end": 11743,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 11644,
									"end": 11743,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 11874,
									"end": 11897,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 11874,
									"end": 11897,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11874,
									"end": 11897,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11874,
									"end": 11897,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11874,
									"end": 11897,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11874,
									"end": 11897,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11874,
									"end": 11897,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 11874,
									"end": 11912,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 11874,
									"end": 11912,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11874,
									"end": 11912,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 11874,
									"end": 11928,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "120"
								},
								{
									"begin": 11874,
									"end": 11928,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11917,
									"end": 11927,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 11917,
									"end": 11927,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11874,
									"end": 11916,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551710"
								},
								{
									"begin": 11874,
									"end": 11916,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "79"
								},
								{
									"begin": 11874,
									"end": 11916,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11874,
									"end": 11916,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 11874,
									"end": 11916,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 11874,
									"end": 11928,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11874,
									"end": 11928,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 11874,
									"end": 11928,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 11874,
									"end": 11928,
									"name": "tag",
									"source": 0,
									"value": "120"
								},
								{
									"begin": 11874,
									"end": 11928,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 11833,
									"end": 11856,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 11833,
									"end": 11856,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11833,
									"end": 11845,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11833,
									"end": 11856,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11833,
									"end": 11856,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11833,
									"end": 11856,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11833,
									"end": 11856,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11833,
									"end": 11856,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11833,
									"end": 11856,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11833,
									"end": 11856,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11833,
									"end": 11856,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11833,
									"end": 11856,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11833,
									"end": 11856,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11833,
									"end": 11856,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11833,
									"end": 11856,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 11833,
									"end": 11871,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 11833,
									"end": 11871,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11833,
									"end": 11928,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 11833,
									"end": 11928,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11833,
									"end": 11928,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 11833,
									"end": 11928,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12023,
									"end": 12066,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1128,
									"end": 1153,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1128,
									"end": 1153,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1128,
									"end": 1153,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 11833,
									"end": 11856,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11833,
									"end": 11856,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12032,
									"end": 12042,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 12032,
									"end": 12042,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 12023,
									"end": 12066,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1101,
									"end": 1119,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 12023,
									"end": 12066,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 982,
									"end": 1159,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11272,
									"end": 13224,
									"name": "tag",
									"source": 0,
									"value": "117"
								},
								{
									"begin": 11272,
									"end": 13224,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12450,
									"end": 12460,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 12437,
									"end": 12449,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12437,
									"end": 12461,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12437,
									"end": 12461,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12437,
									"end": 12461,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12437,
									"end": 12461,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12437,
									"end": 12461,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12437,
									"end": 12461,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12437,
									"end": 12461,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12437,
									"end": 12461,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12437,
									"end": 12461,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12437,
									"end": 12461,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 12437,
									"end": 12476,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 12437,
									"end": 12476,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12437,
									"end": 12476,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 12423,
									"end": 12476,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12423,
									"end": 12476,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 12423,
									"end": 12476,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 12415,
									"end": 12477,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "123"
								},
								{
									"begin": 12415,
									"end": 12477,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12415,
									"end": 12477,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12415,
									"end": 12477,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12415,
									"end": 12477,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 12415,
									"end": 12477,
									"name": "tag",
									"source": 0,
									"value": "123"
								},
								{
									"begin": 12415,
									"end": 12477,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12677,
									"end": 12687,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 12664,
									"end": 12676,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12664,
									"end": 12688,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12664,
									"end": 12688,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12664,
									"end": 12688,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12664,
									"end": 12688,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12664,
									"end": 12688,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12664,
									"end": 12688,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12664,
									"end": 12688,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12664,
									"end": 12688,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12664,
									"end": 12688,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12664,
									"end": 12688,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12664,
									"end": 12688,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 12664,
									"end": 12703,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 12664,
									"end": 12703,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12664,
									"end": 12703,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 12664,
									"end": 12719,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "124"
								},
								{
									"begin": 12664,
									"end": 12719,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12708,
									"end": 12718,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 12708,
									"end": 12718,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12664,
									"end": 12707,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551709"
								},
								{
									"begin": 12664,
									"end": 12707,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "77"
								},
								{
									"begin": 12664,
									"end": 12707,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12664,
									"end": 12707,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 12664,
									"end": 12707,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 12664,
									"end": 12719,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12664,
									"end": 12719,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 12664,
									"end": 12719,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 12664,
									"end": 12719,
									"name": "tag",
									"source": 0,
									"value": "124"
								},
								{
									"begin": 12664,
									"end": 12719,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12635,
									"end": 12645,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 12622,
									"end": 12634,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12622,
									"end": 12646,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12622,
									"end": 12646,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12622,
									"end": 12646,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12622,
									"end": 12646,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12622,
									"end": 12646,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12622,
									"end": 12646,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12622,
									"end": 12646,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12622,
									"end": 12646,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12622,
									"end": 12646,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12622,
									"end": 12646,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12622,
									"end": 12646,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 12622,
									"end": 12661,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 12622,
									"end": 12661,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12622,
									"end": 12661,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12622,
									"end": 12661,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12622,
									"end": 12719,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 12622,
									"end": 12719,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12622,
									"end": 12719,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 12622,
									"end": 12719,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 12852,
									"end": 12875,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 12852,
									"end": 12875,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12852,
									"end": 12875,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12852,
									"end": 12875,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12852,
									"end": 12875,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12852,
									"end": 12875,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12852,
									"end": 12875,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 12852,
									"end": 12890,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12852,
									"end": 12890,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12852,
									"end": 12890,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12852,
									"end": 12890,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 12852,
									"end": 12906,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "120"
								},
								{
									"begin": 12852,
									"end": 12906,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12895,
									"end": 12905,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 12895,
									"end": 12905,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12852,
									"end": 12894,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551710"
								},
								{
									"begin": 12852,
									"end": 12894,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "79"
								},
								{
									"begin": 12852,
									"end": 12894,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12852,
									"end": 12894,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 12852,
									"end": 12894,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 12852,
									"end": 12906,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12852,
									"end": 12906,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 12852,
									"end": 12906,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 11136,
									"end": 13253,
									"name": "tag",
									"source": 0,
									"value": "115"
								},
								{
									"begin": 11136,
									"end": 13253,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 13248,
									"end": 13253,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11136,
									"end": 13253,
									"name": "tag",
									"source": 0,
									"value": "127"
								},
								{
									"begin": 11136,
									"end": 13253,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5995,
									"end": 13261,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5995,
									"end": 13261,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5995,
									"end": 13261,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5995,
									"end": 13261,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5995,
									"end": 13261,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 771,
									"end": 1971,
									"name": "tag",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 771,
									"end": 1971,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 889,
									"end": 893,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 934,
									"end": 955,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "129"
								},
								{
									"begin": 934,
									"end": 955,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 934,
									"end": 955,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 934,
									"end": 955,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 934,
									"end": 955,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 934,
									"end": 955,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 934,
									"end": 955,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 934,
									"end": 955,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 934,
									"end": 955,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 934,
									"end": 955,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 934,
									"end": 955,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 934,
									"end": 955,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 934,
									"end": 955,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 934,
									"end": 955,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1CD95959"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 934,
									"end": 955,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 934,
									"end": 955,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 934,
									"end": 955,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 934,
									"end": 947,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 934,
									"end": 947,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 934,
									"end": 947,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 934,
									"end": 955,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 934,
									"end": 955,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 934,
									"end": 955,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 934,
									"end": 955,
									"name": "tag",
									"source": 5,
									"value": "129"
								},
								{
									"begin": 934,
									"end": 955,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 910,
									"end": 930,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "130"
								},
								{
									"begin": 924,
									"end": 929,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 910,
									"end": 923,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 910,
									"end": 930,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 910,
									"end": 930,
									"name": "tag",
									"source": 5,
									"value": "130"
								},
								{
									"begin": 910,
									"end": 930,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 910,
									"end": 955,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 906,
									"end": 1964,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 906,
									"end": 1964,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "131"
								},
								{
									"begin": 906,
									"end": 1964,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 976,
									"end": 1007,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 976,
									"end": 1007,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 976,
									"end": 1007,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 976,
									"end": 1007,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 976,
									"end": 1007,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 976,
									"end": 1007,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 976,
									"end": 989,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 976,
									"end": 1007,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 976,
									"end": 1007,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 976,
									"end": 1007,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 976,
									"end": 1007,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 976,
									"end": 1007,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 976,
									"end": 1019,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 976,
									"end": 1019,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 976,
									"end": 1019,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 976,
									"end": 1028,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 976,
									"end": 1028,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 976,
									"end": 1028,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 976,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "132"
								},
								{
									"begin": 976,
									"end": 1083,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1032,
									"end": 1062,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1062,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1062,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1032,
									"end": 1062,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1062,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1062,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1045,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1032,
									"end": 1062,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1032,
									"end": 1062,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1062,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1032,
									"end": 1062,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1062,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1074,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1074,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 1032,
									"end": 1074,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1083,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 976,
									"end": 1083,
									"name": "tag",
									"source": 5,
									"value": "132"
								},
								{
									"begin": 976,
									"end": 1083,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 972,
									"end": 1111,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 972,
									"end": 1111,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "133"
								},
								{
									"begin": 972,
									"end": 1111,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1107,
									"end": 1111,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1100,
									"end": 1111,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "144"
								},
								{
									"begin": 1100,
									"end": 1111,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 972,
									"end": 1111,
									"name": "tag",
									"source": 5,
									"value": "133"
								},
								{
									"begin": 972,
									"end": 1111,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1185,
									"end": 1190,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1178,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "144"
								},
								{
									"begin": 1178,
									"end": 1190,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 906,
									"end": 1964,
									"name": "tag",
									"source": 5,
									"value": "131"
								},
								{
									"begin": 906,
									"end": 1964,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1292,
									"end": 1316,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1292,
									"end": 1316,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1292,
									"end": 1316,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1292,
									"end": 1316,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1292,
									"end": 1316,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1292,
									"end": 1316,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1292,
									"end": 1316,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1292,
									"end": 1316,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1292,
									"end": 1316,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1292,
									"end": 1316,
									"name": "PUSH",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1292,
									"end": 1316,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1292,
									"end": 1316,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "70726976617465"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1292,
									"end": 1316,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1292,
									"end": 1316,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1292,
									"end": 1316,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1292,
									"end": 1316,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1292,
									"end": 1316,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "135"
								},
								{
									"begin": 1292,
									"end": 1316,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1292,
									"end": 1305,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1292,
									"end": 1316,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1292,
									"end": 1316,
									"name": "tag",
									"source": 5,
									"value": "135"
								},
								{
									"begin": 1292,
									"end": 1316,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1268,
									"end": 1288,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "136"
								},
								{
									"begin": 1282,
									"end": 1287,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1268,
									"end": 1281,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1268,
									"end": 1288,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1268,
									"end": 1288,
									"name": "tag",
									"source": 5,
									"value": "136"
								},
								{
									"begin": 1268,
									"end": 1288,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1268,
									"end": 1316,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1264,
									"end": 1964,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1264,
									"end": 1964,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "137"
								},
								{
									"begin": 1264,
									"end": 1964,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1337,
									"end": 1368,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1337,
									"end": 1368,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1337,
									"end": 1368,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1337,
									"end": 1368,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1337,
									"end": 1368,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1337,
									"end": 1368,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1337,
									"end": 1350,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1337,
									"end": 1368,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1337,
									"end": 1368,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1337,
									"end": 1368,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1337,
									"end": 1368,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1337,
									"end": 1368,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1337,
									"end": 1368,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1337,
									"end": 1368,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1337,
									"end": 1368,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 1337,
									"end": 1380,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1337,
									"end": 1380,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 1337,
									"end": 1380,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1337,
									"end": 1388,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1337,
									"end": 1388,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1337,
									"end": 1388,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1415,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1333,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "133"
								},
								{
									"begin": 1333,
									"end": 1415,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1411,
									"end": 1415,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1404,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "144"
								},
								{
									"begin": 1404,
									"end": 1415,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1264,
									"end": 1964,
									"name": "tag",
									"source": 5,
									"value": "137"
								},
								{
									"begin": 1264,
									"end": 1964,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1596,
									"end": 1619,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1596,
									"end": 1619,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1596,
									"end": 1619,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1596,
									"end": 1619,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1596,
									"end": 1619,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1596,
									"end": 1619,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1596,
									"end": 1619,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1596,
									"end": 1619,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1596,
									"end": 1619,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1596,
									"end": 1619,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1596,
									"end": 1619,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1596,
									"end": 1619,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "7075626C6963"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1596,
									"end": 1619,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1596,
									"end": 1619,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1596,
									"end": 1619,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1596,
									"end": 1619,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1596,
									"end": 1619,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "140"
								},
								{
									"begin": 1596,
									"end": 1619,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1596,
									"end": 1609,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1596,
									"end": 1619,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1596,
									"end": 1619,
									"name": "tag",
									"source": 5,
									"value": "140"
								},
								{
									"begin": 1596,
									"end": 1619,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1572,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "141"
								},
								{
									"begin": 1586,
									"end": 1591,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1572,
									"end": 1585,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1572,
									"end": 1592,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1572,
									"end": 1592,
									"name": "tag",
									"source": 5,
									"value": "141"
								},
								{
									"begin": 1572,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1572,
									"end": 1619,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1568,
									"end": 1964,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1568,
									"end": 1964,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "133"
								},
								{
									"begin": 1568,
									"end": 1964,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1640,
									"end": 1670,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1640,
									"end": 1670,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1640,
									"end": 1670,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1640,
									"end": 1670,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1640,
									"end": 1670,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1640,
									"end": 1670,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1640,
									"end": 1653,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1640,
									"end": 1670,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1640,
									"end": 1670,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1640,
									"end": 1670,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1640,
									"end": 1670,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1640,
									"end": 1670,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1640,
									"end": 1670,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1640,
									"end": 1670,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1640,
									"end": 1670,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 1640,
									"end": 1682,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1640,
									"end": 1682,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 1640,
									"end": 1682,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1640,
									"end": 1690,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1640,
									"end": 1690,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1640,
									"end": 1690,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1636,
									"end": 1716,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1636,
									"end": 1716,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "133"
								},
								{
									"begin": 1636,
									"end": 1716,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1712,
									"end": 1716,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1568,
									"end": 1964,
									"name": "tag",
									"source": 5,
									"value": "144"
								},
								{
									"begin": 1568,
									"end": 1964,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 771,
									"end": 1971,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 771,
									"end": 1971,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 771,
									"end": 1971,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 771,
									"end": 1971,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 771,
									"end": 1971,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 771,
									"end": 1971,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 405,
									"end": 693,
									"name": "tag",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 405,
									"end": 693,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 453,
									"end": 457,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 453,
									"end": 457,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 487,
									"end": 497,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 474,
									"end": 486,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 474,
									"end": 498,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 474,
									"end": 498,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 474,
									"end": 498,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 474,
									"end": 498,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 474,
									"end": 498,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 474,
									"end": 498,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 474,
									"end": 498,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 474,
									"end": 498,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 474,
									"end": 498,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 474,
									"end": 498,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 474,
									"end": 503,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 474,
									"end": 503,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 474,
									"end": 503,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 474,
									"end": 524,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 474,
									"end": 524,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 474,
									"end": 524,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 474,
									"end": 524,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 474,
									"end": 524,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "149"
								},
								{
									"begin": 474,
									"end": 524,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 474,
									"end": 524,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "149"
								},
								{
									"begin": 474,
									"end": 524,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 474,
									"end": 524,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 474,
									"end": 524,
									"name": "tag",
									"source": 5,
									"value": "149"
								},
								{
									"begin": 474,
									"end": 524,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 474,
									"end": 524,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 470,
									"end": 550,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 470,
									"end": 550,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "150"
								},
								{
									"begin": 470,
									"end": 550,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 546,
									"end": 550,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 546,
									"end": 550,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 405,
									"end": 693,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 470,
									"end": 550,
									"name": "tag",
									"source": 5,
									"value": "150"
								},
								{
									"begin": 470,
									"end": 550,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 624,
									"end": 629,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 624,
									"end": 629,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 405,
									"end": 693,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2846,
									"end": 2965,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 2846,
									"end": 2965,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2904,
									"end": 2911,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2934,
									"end": 2935,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2929,
									"end": 2930,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2929,
									"end": 2935,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2929,
									"end": 2935,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2922,
									"end": 2936,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 2922,
									"end": 2936,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2922,
									"end": 2936,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 2922,
									"end": 2936,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 2922,
									"end": 2936,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2922,
									"end": 2936,
									"name": "tag",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 2922,
									"end": 2936,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2952,
									"end": 2957,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 2956,
									"end": 2957,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2952,
									"end": 2953,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2952,
									"end": 2957,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 2952,
									"end": 2957,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2422,
									"end": 2563,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 2422,
									"end": 2563,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2480,
									"end": 2487,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2480,
									"end": 2487,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2510,
									"end": 2515,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 2514,
									"end": 2515,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2510,
									"end": 2511,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2510,
									"end": 2515,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 2510,
									"end": 2515,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2510,
									"end": 2515,
									"name": "tag",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 2510,
									"end": 2515,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2498,
									"end": 2515,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2498,
									"end": 2515,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2536,
									"end": 2537,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2531,
									"end": 2532,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2524,
									"end": 2538,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 2524,
									"end": 2538,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2524,
									"end": 2538,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 2524,
									"end": 2538,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 2524,
									"end": 2538,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "162"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "163"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "tag",
									"source": 0,
									"value": "162"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "165"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "168"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "tag",
									"source": 0,
									"value": "165"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "166"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "168"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "tag",
									"source": 0,
									"value": "166"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "168"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "tag",
									"source": 0,
									"value": "167"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "168"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "167"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "tag",
									"source": 0,
									"value": "168"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "169"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "170"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "tag",
									"source": 0,
									"value": "169"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "tag",
									"source": 0,
									"value": "170"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "tag",
									"source": 0,
									"value": "171"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "169"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "171"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 198,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 198,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "175"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 9,
									"value": "175"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 176,
									"end": 192,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 176,
									"end": 192,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 14,
									"end": 198,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 198,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 203,
									"end": 631,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 203,
									"end": 631,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 334,
									"end": 337,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 372,
									"end": 378,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 366,
									"end": 379,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 397,
									"end": 398,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 407,
									"end": 536,
									"name": "tag",
									"source": 9,
									"value": "177"
								},
								{
									"begin": 407,
									"end": 536,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 421,
									"end": 427,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 418,
									"end": 419,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 415,
									"end": 428,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 407,
									"end": 536,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 407,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "179"
								},
								{
									"begin": 407,
									"end": 536,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 519,
									"end": 523,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 503,
									"end": 517,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 503,
									"end": 517,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 503,
									"end": 517,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 499,
									"end": 524,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 499,
									"end": 524,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 493,
									"end": 525,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 480,
									"end": 491,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 480,
									"end": 491,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 480,
									"end": 491,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 473,
									"end": 526,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 436,
									"end": 448,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 407,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "177"
								},
								{
									"begin": 407,
									"end": 536,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 407,
									"end": 536,
									"name": "tag",
									"source": 9,
									"value": "179"
								},
								{
									"begin": 407,
									"end": 536,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 554,
									"end": 560,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 551,
									"end": 552,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 548,
									"end": 561,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 545,
									"end": 593,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 545,
									"end": 593,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "180"
								},
								{
									"begin": 545,
									"end": 593,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 589,
									"end": 590,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 580,
									"end": 586,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 575,
									"end": 578,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 571,
									"end": 587,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 564,
									"end": 591,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 545,
									"end": 593,
									"name": "tag",
									"source": 9,
									"value": "180"
								},
								{
									"begin": 545,
									"end": 593,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 609,
									"end": 625,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 609,
									"end": 625,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 609,
									"end": 625,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 609,
									"end": 625,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 609,
									"end": 625,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 203,
									"end": 631,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 203,
									"end": 631,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1164,
									"end": 1292,
									"name": "tag",
									"source": 9,
									"value": "159"
								},
								{
									"begin": 1164,
									"end": 1292,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1204,
									"end": 1207,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1235,
									"end": 1236,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1237,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1228,
									"end": 1229,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1225,
									"end": 1238,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1222,
									"end": 1261,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1222,
									"end": 1261,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "185"
								},
								{
									"begin": 1222,
									"end": 1261,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1241,
									"end": 1259,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "185"
								},
								{
									"begin": 1241,
									"end": 1259,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "186"
								},
								{
									"begin": 1241,
									"end": 1259,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1241,
									"end": 1259,
									"name": "tag",
									"source": 9,
									"value": "185"
								},
								{
									"begin": 1241,
									"end": 1259,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1277,
									"end": 1286,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1277,
									"end": 1286,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1164,
									"end": 1292,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1297,
									"end": 1422,
									"name": "tag",
									"source": 9,
									"value": "156"
								},
								{
									"begin": 1297,
									"end": 1422,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1337,
									"end": 1341,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1365,
									"end": 1366,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1362,
									"end": 1363,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1359,
									"end": 1367,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1356,
									"end": 1390,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1356,
									"end": 1390,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "189"
								},
								{
									"begin": 1356,
									"end": 1390,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1370,
									"end": 1388,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "189"
								},
								{
									"begin": 1370,
									"end": 1388,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "186"
								},
								{
									"begin": 1370,
									"end": 1388,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1370,
									"end": 1388,
									"name": "tag",
									"source": 9,
									"value": "189"
								},
								{
									"begin": 1370,
									"end": 1388,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1407,
									"end": 1416,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1416,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1422,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1427,
									"end": 1807,
									"name": "tag",
									"source": 9,
									"value": "163"
								},
								{
									"begin": 1427,
									"end": 1807,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1506,
									"end": 1507,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1502,
									"end": 1514,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1502,
									"end": 1514,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1502,
									"end": 1514,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1502,
									"end": 1514,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1549,
									"end": 1561,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1549,
									"end": 1561,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1549,
									"end": 1561,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1570,
									"end": 1631,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "191"
								},
								{
									"begin": 1570,
									"end": 1631,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1624,
									"end": 1628,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 1616,
									"end": 1622,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1612,
									"end": 1629,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1602,
									"end": 1629,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1602,
									"end": 1629,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1570,
									"end": 1631,
									"name": "tag",
									"source": 9,
									"value": "191"
								},
								{
									"begin": 1570,
									"end": 1631,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1677,
									"end": 1679,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1669,
									"end": 1675,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1666,
									"end": 1680,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1646,
									"end": 1664,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1643,
									"end": 1681,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1640,
									"end": 1801,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1640,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "192"
								},
								{
									"begin": 1640,
									"end": 1801,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1723,
									"end": 1733,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 1718,
									"end": 1721,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 1714,
									"end": 1734,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1711,
									"end": 1712,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1704,
									"end": 1735,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1758,
									"end": 1762,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1755,
									"end": 1756,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1748,
									"end": 1763,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1786,
									"end": 1790,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1783,
									"end": 1784,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1776,
									"end": 1791,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1640,
									"end": 1801,
									"name": "tag",
									"source": 9,
									"value": "192"
								},
								{
									"begin": 1640,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1640,
									"end": 1801,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1427,
									"end": 1807,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1427,
									"end": 1807,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1427,
									"end": 1807,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1427,
									"end": 1807,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 1812,
									"end": 1939,
									"name": "tag",
									"source": 9,
									"value": "154"
								},
								{
									"begin": 1812,
									"end": 1939,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1873,
									"end": 1883,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 1868,
									"end": 1871,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 1864,
									"end": 1884,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1861,
									"end": 1862,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1854,
									"end": 1885,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1904,
									"end": 1908,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1901,
									"end": 1902,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1894,
									"end": 1909,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1928,
									"end": 1932,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1925,
									"end": 1926,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1918,
									"end": 1933,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1944,
									"end": 2071,
									"name": "tag",
									"source": 9,
									"value": "186"
								},
								{
									"begin": 1944,
									"end": 2071,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2005,
									"end": 2015,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 2000,
									"end": 2003,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 1996,
									"end": 2016,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1993,
									"end": 1994,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1986,
									"end": 2017,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2036,
									"end": 2040,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 2033,
									"end": 2034,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2026,
									"end": 2041,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2060,
									"end": 2064,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2057,
									"end": 2058,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2050,
									"end": 2065,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2076,
									"end": 2203,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 2076,
									"end": 2203,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2137,
									"end": 2147,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 2132,
									"end": 2135,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 2128,
									"end": 2148,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2125,
									"end": 2126,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2118,
									"end": 2149,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2168,
									"end": 2172,
									"name": "PUSH",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 2165,
									"end": 2166,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2158,
									"end": 2173,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2192,
									"end": 2196,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2189,
									"end": 2190,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2182,
									"end": 2197,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2076,
									"end": 2203,
									"name": "tag",
									"source": 9,
									"value": "173"
								},
								{
									"begin": 2076,
									"end": 2203,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 20940,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205e36ce26871be4e39f0a981a8d72ea692e762a9cf0fed388515cccc459eff83264736f6c63430008070033",
									".code": [
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH",
											"source": 0,
											"value": "785963C3"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH",
											"source": 0,
											"value": "9D9E7A4B"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH",
											"source": 0,
											"value": "9D9E7A4B"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH",
											"source": 0,
											"value": "D96A094A"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH",
											"source": 0,
											"value": "785963C3"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH",
											"source": 0,
											"value": "8E4F8C6B"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH",
											"source": 0,
											"value": "761C8B9"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 377,
											"end": 20940,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 613,
											"end": 658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 613,
											"end": 658,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 613,
											"end": 658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 613,
											"end": 658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 613,
											"end": 658,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 613,
											"end": 658,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 613,
											"end": 658,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 613,
											"end": 658,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 613,
											"end": 658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 613,
											"end": 658,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "PUSH",
											"source": 0,
											"value": "43727970746F4D6F6E7374657200000000000000000000000000000000000000"
										},
										{
											"begin": 613,
											"end": 658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 613,
											"end": 658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 613,
											"end": 658,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 613,
											"end": 658,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 613,
											"end": 658,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 613,
											"end": 658,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 613,
											"end": 658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 613,
											"end": 658,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 613,
											"end": 658,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1207,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1168,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1207,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1207,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1168,
											"end": 1207,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1207,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1207,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1168,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1168,
											"end": 1207,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1168,
											"end": 1207,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1207,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1207,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1168,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1168,
											"end": 1207,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4043,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4018,
											"end": 4043,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4018,
											"end": 4043,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4006,
											"end": 4008,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3991,
											"end": 4009,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1168,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3872,
											"end": 4049,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3845,
											"end": 3859,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3845,
											"end": 3859,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3838,
											"end": 3860,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3861,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3861,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3808,
											"end": 3810,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3793,
											"end": 3811,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3680,
											"end": 3867,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4509,
											"end": 4609,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4509,
											"end": 4609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4509,
											"end": 4609,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4509,
											"end": 4609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4509,
											"end": 4609,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4509,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4509,
											"end": 4609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4509,
											"end": 4609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4509,
											"end": 4609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4509,
											"end": 4609,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4509,
											"end": 4609,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4509,
											"end": 4609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4589,
											"end": 4601,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4589,
											"end": 4601,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4509,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4509,
											"end": 4609,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13594,
											"end": 19808,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13594,
											"end": 19808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13594,
											"end": 19808,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13594,
											"end": 19808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13594,
											"end": 19808,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13594,
											"end": 19808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13594,
											"end": 19808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13594,
											"end": 19808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13594,
											"end": 19808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13594,
											"end": 19808,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13594,
											"end": 19808,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13594,
											"end": 19808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13594,
											"end": 19808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 13594,
											"end": 19808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 13594,
											"end": 19808,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13594,
											"end": 19808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13594,
											"end": 19808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 13594,
											"end": 19808,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13594,
											"end": 19808,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 13594,
											"end": 19808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13594,
											"end": 19808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 13594,
											"end": 19808,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 777,
											"end": 812,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 777,
											"end": 812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 777,
											"end": 812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 777,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 777,
											"end": 812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 777,
											"end": 812,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 777,
											"end": 812,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 777,
											"end": 812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 777,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 810,
											"end": 812,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 777,
											"end": 812,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 777,
											"end": 812,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 777,
											"end": 812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 777,
											"end": 812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6645,
											"end": 6649,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6633,
											"end": 6650,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6615,
											"end": 6651,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6615,
											"end": 6651,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6603,
											"end": 6605,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6588,
											"end": 6606,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 777,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6473,
											"end": 6657,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 224,
											"end": 651,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 224,
											"end": 651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 224,
											"end": 651,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 224,
											"end": 651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 224,
											"end": 651,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 224,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 224,
											"end": 651,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 224,
											"end": 651,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 651,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 224,
											"end": 651,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 224,
											"end": 651,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 224,
											"end": 651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 224,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 224,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 224,
											"end": 651,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 224,
											"end": 651,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 224,
											"end": 651,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 224,
											"end": 651,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 224,
											"end": 651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 224,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 224,
											"end": 651,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 224,
											"end": 651,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 224,
											"end": 651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 224,
											"end": 651,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 144,
											"end": 282,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 698,
											"end": 736,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 698,
											"end": 736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 698,
											"end": 736,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 698,
											"end": 736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 698,
											"end": 736,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 698,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 698,
											"end": 736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 698,
											"end": 736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 698,
											"end": 736,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 698,
											"end": 736,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 698,
											"end": 736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 698,
											"end": 736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 698,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 698,
											"end": 736,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 736,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 698,
											"end": 736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 698,
											"end": 736,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 698,
											"end": 736,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 698,
											"end": 736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 698,
											"end": 736,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 698,
											"end": 736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 698,
											"end": 736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 698,
											"end": 736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 698,
											"end": 736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 698,
											"end": 736,
											"name": "PUSH",
											"source": 0,
											"value": "434D4F4E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 698,
											"end": 736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 698,
											"end": 736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 698,
											"end": 736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 698,
											"end": 736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 698,
											"end": 736,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 727,
											"end": 899,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 727,
											"end": 899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 727,
											"end": 899,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 727,
											"end": 899,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 727,
											"end": 899,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 727,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 727,
											"end": 899,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 727,
											"end": 899,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 899,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 727,
											"end": 899,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 727,
											"end": 899,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 727,
											"end": 899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 727,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 727,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 727,
											"end": 899,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 727,
											"end": 899,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 727,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 727,
											"end": 899,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 727,
											"end": 899,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 727,
											"end": 899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 727,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 727,
											"end": 899,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5995,
											"end": 13261,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5995,
											"end": 13261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5995,
											"end": 13261,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5995,
											"end": 13261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5995,
											"end": 13261,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5995,
											"end": 13261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5995,
											"end": 13261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5995,
											"end": 13261,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5995,
											"end": 13261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5995,
											"end": 13261,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5995,
											"end": 13261,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5995,
											"end": 13261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5995,
											"end": 13261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5995,
											"end": 13261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5995,
											"end": 13261,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5995,
											"end": 13261,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5995,
											"end": 13261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5995,
											"end": 13261,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5995,
											"end": 13261,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5995,
											"end": 13261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5995,
											"end": 13261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5995,
											"end": 13261,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3447,
											"end": 4307,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3447,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3447,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3447,
											"end": 4307,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 4307,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3447,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3447,
											"end": 4307,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3447,
											"end": 4307,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3447,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3447,
											"end": 4307,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20795,
											"end": 20937,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 20795,
											"end": 20937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20795,
											"end": 20937,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 20795,
											"end": 20937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20795,
											"end": 20937,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20795,
											"end": 20937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 20795,
											"end": 20937,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20795,
											"end": 20937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20795,
											"end": 20937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20795,
											"end": 20937,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20795,
											"end": 20937,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 20795,
											"end": 20937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20795,
											"end": 20937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 20795,
											"end": 20937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 20795,
											"end": 20937,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20795,
											"end": 20937,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20795,
											"end": 20937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 20795,
											"end": 20937,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20795,
											"end": 20937,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 20795,
											"end": 20937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20903,
											"end": 20918,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20903,
											"end": 20918,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20903,
											"end": 20918,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20879,
											"end": 20883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20903,
											"end": 20918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20903,
											"end": 20918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20903,
											"end": 20918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20903,
											"end": 20910,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 20903,
											"end": 20918,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20903,
											"end": 20918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20903,
											"end": 20918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20903,
											"end": 20918,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20903,
											"end": 20918,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20903,
											"end": 20918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20903,
											"end": 20918,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20903,
											"end": 20918,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20903,
											"end": 20929,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20903,
											"end": 20929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20903,
											"end": 20929,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 20903,
											"end": 20929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20903,
											"end": 20929,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20903,
											"end": 20929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20903,
											"end": 20929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20903,
											"end": 20929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20903,
											"end": 20929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20903,
											"end": 20929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20903,
											"end": 20929,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20903,
											"end": 20929,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20903,
											"end": 20929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20795,
											"end": 20937,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20250,
											"end": 20260,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20225,
											"end": 20229,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20242,
											"end": 20261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20242,
											"end": 20261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20242,
											"end": 20261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20242,
											"end": 20249,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 20242,
											"end": 20261,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20242,
											"end": 20261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20242,
											"end": 20261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20242,
											"end": 20261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20242,
											"end": 20261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20242,
											"end": 20261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20242,
											"end": 20261,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20242,
											"end": 20261,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20242,
											"end": 20272,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 20242,
											"end": 20272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20242,
											"end": 20272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20242,
											"end": 20272,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20242,
											"end": 20272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20242,
											"end": 20272,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20242,
											"end": 20272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20242,
											"end": 20272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20242,
											"end": 20272,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20242,
											"end": 20272,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20242,
											"end": 20285,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20242,
											"end": 20285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20242,
											"end": 20285,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20440,
											"end": 20483,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20225,
											"end": 20229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20225,
											"end": 20229,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20242,
											"end": 20272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20242,
											"end": 20272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20440,
											"end": 20483,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 20440,
											"end": 20483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20440,
											"end": 20483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 20440,
											"end": 20483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20275,
											"end": 20285,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4043,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4018,
											"end": 4043,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4006,
											"end": 4008,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3991,
											"end": 4009,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3991,
											"end": 4009,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3872,
											"end": 4049,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20440,
											"end": 20483,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 20440,
											"end": 20483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20440,
											"end": 20483,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20440,
											"end": 20483,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20440,
											"end": 20483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20440,
											"end": 20483,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20440,
											"end": 20483,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20440,
											"end": 20483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20440,
											"end": 20483,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20501,
											"end": 20505,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20144,
											"end": 20513,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13594,
											"end": 19808,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 13594,
											"end": 19808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13693,
											"end": 13697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13714,
											"end": 13774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 13714,
											"end": 13774,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13714,
											"end": 13774,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13714,
											"end": 13774,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13714,
											"end": 13774,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13714,
											"end": 13774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13714,
											"end": 13774,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13714,
											"end": 13774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13714,
											"end": 13774,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13714,
											"end": 13774,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13714,
											"end": 13774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13714,
											"end": 13774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13714,
											"end": 13774,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13714,
											"end": 13774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1CD95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13714,
											"end": 13774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13714,
											"end": 13774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13714,
											"end": 13774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1620,
											"name": "PUSH",
											"source": 0,
											"value": "AB8483F64D9C6D1ECF9B849AE677DD3315835CB2"
										},
										{
											"begin": 1694,
											"end": 1736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13714,
											"end": 13727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13714,
											"end": 13774,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13714,
											"end": 13774,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 13714,
											"end": 13774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13714,
											"end": 13782,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13714,
											"end": 13782,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13778,
											"end": 13782,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13714,
											"end": 13782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13710,
											"end": 19800,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13710,
											"end": 19800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 13710,
											"end": 19800,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13845,
											"end": 13860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 13845,
											"end": 13858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 13845,
											"end": 13860,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13845,
											"end": 13860,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 13845,
											"end": 13860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13845,
											"end": 13868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13845,
											"end": 13868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13864,
											"end": 13868,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13845,
											"end": 13868,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13841,
											"end": 15735,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13841,
											"end": 15735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 13841,
											"end": 15735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14034,
											"end": 14054,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14034,
											"end": 14054,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14034,
											"end": 14046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14034,
											"end": 14054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14034,
											"end": 14054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14034,
											"end": 14054,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14034,
											"end": 14054,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14034,
											"end": 14054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14034,
											"end": 14054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14034,
											"end": 14054,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14034,
											"end": 14054,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14034,
											"end": 14054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14034,
											"end": 14054,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14034,
											"end": 14070,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14034,
											"end": 14070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14034,
											"end": 14070,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14020,
											"end": 14070,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14020,
											"end": 14070,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14020,
											"end": 14070,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14012,
											"end": 14071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 14012,
											"end": 14071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14012,
											"end": 14071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14012,
											"end": 14071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14012,
											"end": 14071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14012,
											"end": 14071,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 14012,
											"end": 14071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14176,
											"end": 14191,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14176,
											"end": 14191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14176,
											"end": 14191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14176,
											"end": 14191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14176,
											"end": 14191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14176,
											"end": 14191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14176,
											"end": 14183,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14176,
											"end": 14191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14176,
											"end": 14191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14176,
											"end": 14191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14176,
											"end": 14191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14176,
											"end": 14191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14176,
											"end": 14191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14176,
											"end": 14191,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14176,
											"end": 14191,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14192,
											"end": 14202,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14176,
											"end": 14203,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14176,
											"end": 14203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14176,
											"end": 14203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14176,
											"end": 14203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14176,
											"end": 14203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14176,
											"end": 14203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14176,
											"end": 14203,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14176,
											"end": 14203,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14162,
											"end": 14203,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14162,
											"end": 14203,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14162,
											"end": 14203,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14154,
											"end": 14204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 14154,
											"end": 14204,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14154,
											"end": 14204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14154,
											"end": 14204,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14154,
											"end": 14204,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14154,
											"end": 14204,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 14154,
											"end": 14204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14334,
											"end": 14354,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14334,
											"end": 14354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14334,
											"end": 14346,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14334,
											"end": 14354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14334,
											"end": 14354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14334,
											"end": 14354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14334,
											"end": 14354,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14334,
											"end": 14354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14334,
											"end": 14354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14334,
											"end": 14354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14334,
											"end": 14354,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14334,
											"end": 14354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14334,
											"end": 14354,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14334,
											"end": 14367,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14334,
											"end": 14367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14334,
											"end": 14367,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14334,
											"end": 14383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 14334,
											"end": 14383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14372,
											"end": 14382,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14334,
											"end": 14371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 14334,
											"end": 14383,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14334,
											"end": 14383,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 14334,
											"end": 14383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14298,
											"end": 14318,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14318,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14298,
											"end": 14318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14318,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14298,
											"end": 14318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14298,
											"end": 14318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14318,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14318,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14331,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14298,
											"end": 14331,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14383,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14383,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14298,
											"end": 14383,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14484,
											"end": 14491,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14484,
											"end": 14499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14484,
											"end": 14499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14484,
											"end": 14499,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14484,
											"end": 14499,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14484,
											"end": 14499,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14500,
											"end": 14510,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14484,
											"end": 14511,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14484,
											"end": 14511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14484,
											"end": 14511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14484,
											"end": 14511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14484,
											"end": 14511,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14484,
											"end": 14511,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14484,
											"end": 14527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 14484,
											"end": 14527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14516,
											"end": 14526,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14484,
											"end": 14515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 14484,
											"end": 14527,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14484,
											"end": 14527,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 14484,
											"end": 14527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14454,
											"end": 14469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14454,
											"end": 14469,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14454,
											"end": 14469,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14454,
											"end": 14469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14454,
											"end": 14469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14454,
											"end": 14469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14454,
											"end": 14469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14454,
											"end": 14461,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14454,
											"end": 14469,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14454,
											"end": 14469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14454,
											"end": 14469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14454,
											"end": 14469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14454,
											"end": 14469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14454,
											"end": 14469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14454,
											"end": 14469,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14454,
											"end": 14469,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14470,
											"end": 14480,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14454,
											"end": 14481,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14454,
											"end": 14481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14454,
											"end": 14481,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14454,
											"end": 14481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14454,
											"end": 14481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14454,
											"end": 14481,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14454,
											"end": 14481,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14454,
											"end": 14527,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14454,
											"end": 14527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14454,
											"end": 14527,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14454,
											"end": 14527,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14646,
											"end": 14666,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14646,
											"end": 14666,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14646,
											"end": 14666,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14646,
											"end": 14666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14646,
											"end": 14666,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14646,
											"end": 14666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14646,
											"end": 14666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14646,
											"end": 14666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14646,
											"end": 14666,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14646,
											"end": 14666,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14646,
											"end": 14679,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14646,
											"end": 14679,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14646,
											"end": 14679,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14646,
											"end": 14695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 14646,
											"end": 14695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14684,
											"end": 14694,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14646,
											"end": 14683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 14646,
											"end": 14695,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14646,
											"end": 14695,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 14646,
											"end": 14695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14610,
											"end": 14630,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14610,
											"end": 14630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14610,
											"end": 14630,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14610,
											"end": 14622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14610,
											"end": 14630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14610,
											"end": 14630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14610,
											"end": 14630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14610,
											"end": 14630,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14610,
											"end": 14630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14610,
											"end": 14630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14610,
											"end": 14630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14610,
											"end": 14630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14610,
											"end": 14630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14610,
											"end": 14630,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14610,
											"end": 14630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14610,
											"end": 14630,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14610,
											"end": 14643,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14610,
											"end": 14643,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14610,
											"end": 14695,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14610,
											"end": 14695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14610,
											"end": 14695,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14610,
											"end": 14695,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14779,
											"end": 14815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4043,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4018,
											"end": 4043,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4018,
											"end": 4043,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14610,
											"end": 14630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14610,
											"end": 14630,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14779,
											"end": 14815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14779,
											"end": 14815,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 14779,
											"end": 14815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14779,
											"end": 14815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14779,
											"end": 14815,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 14779,
											"end": 14815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3991,
											"end": 4009,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14779,
											"end": 14815,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 14779,
											"end": 14815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14779,
											"end": 14815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14779,
											"end": 14815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14779,
											"end": 14815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14779,
											"end": 14815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14779,
											"end": 14815,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14779,
											"end": 14815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14779,
											"end": 14815,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14841,
											"end": 14845,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14834,
											"end": 14845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 14834,
											"end": 14845,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13841,
											"end": 15735,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 13841,
											"end": 15735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14908,
											"end": 14928,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14908,
											"end": 14928,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14908,
											"end": 14920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14908,
											"end": 14928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14908,
											"end": 14928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14908,
											"end": 14928,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14908,
											"end": 14928,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14908,
											"end": 14928,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14908,
											"end": 14928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14908,
											"end": 14928,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14908,
											"end": 14928,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14908,
											"end": 14928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14908,
											"end": 14928,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14908,
											"end": 14941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14908,
											"end": 14941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14908,
											"end": 14941,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14941,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 14894,
											"end": 14941,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 14886,
											"end": 14942,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14886,
											"end": 14942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14886,
											"end": 14942,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13710,
											"end": 19800,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 13710,
											"end": 19800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15756,
											"end": 15819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 15756,
											"end": 15819,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15756,
											"end": 15819,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15756,
											"end": 15819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15756,
											"end": 15819,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15756,
											"end": 15819,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15756,
											"end": 15819,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15756,
											"end": 15819,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15756,
											"end": 15819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15756,
											"end": 15819,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 15756,
											"end": 15819,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15756,
											"end": 15819,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15756,
											"end": 15819,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15756,
											"end": 15819,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70726976617465"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15756,
											"end": 15819,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15756,
											"end": 15819,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15756,
											"end": 15819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1620,
											"name": "PUSH",
											"source": 0,
											"value": "AB8483F64D9C6D1ECF9B849AE677DD3315835CB2"
										},
										{
											"begin": 1694,
											"end": 1736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15756,
											"end": 15769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15756,
											"end": 15819,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15756,
											"end": 15819,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 15756,
											"end": 15819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15756,
											"end": 15827,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15756,
											"end": 15827,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15823,
											"end": 15827,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15756,
											"end": 15827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15752,
											"end": 19800,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15752,
											"end": 19800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 15752,
											"end": 19800,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15853,
											"end": 15868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 15853,
											"end": 15866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 15853,
											"end": 15868,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15853,
											"end": 15868,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 15853,
											"end": 15868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15853,
											"end": 15876,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15853,
											"end": 15876,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15872,
											"end": 15876,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15853,
											"end": 15876,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15849,
											"end": 17758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15849,
											"end": 17758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 15849,
											"end": 17758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16042,
											"end": 16062,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16042,
											"end": 16062,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16042,
											"end": 16054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16042,
											"end": 16062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16042,
											"end": 16062,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16042,
											"end": 16062,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16042,
											"end": 16062,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16042,
											"end": 16062,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16042,
											"end": 16062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16042,
											"end": 16062,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16042,
											"end": 16062,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16042,
											"end": 16062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16042,
											"end": 16062,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16042,
											"end": 16078,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16042,
											"end": 16078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16042,
											"end": 16078,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16028,
											"end": 16078,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16028,
											"end": 16078,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16028,
											"end": 16078,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16020,
											"end": 16079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 16020,
											"end": 16079,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16020,
											"end": 16079,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16020,
											"end": 16079,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16020,
											"end": 16079,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15849,
											"end": 17758,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 15849,
											"end": 17758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16916,
											"end": 16936,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16916,
											"end": 16936,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16916,
											"end": 16928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16916,
											"end": 16936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16916,
											"end": 16936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16916,
											"end": 16936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16916,
											"end": 16936,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16916,
											"end": 16936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16916,
											"end": 16936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16916,
											"end": 16936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16916,
											"end": 16936,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16916,
											"end": 16936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16916,
											"end": 16936,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16916,
											"end": 16952,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 16916,
											"end": 16952,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16916,
											"end": 16952,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16902,
											"end": 16952,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16902,
											"end": 16952,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16902,
											"end": 16952,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16894,
											"end": 16953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 16894,
											"end": 16953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16894,
											"end": 16953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16894,
											"end": 16953,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16894,
											"end": 16953,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16894,
											"end": 16953,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 16894,
											"end": 16953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17061,
											"end": 17076,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17061,
											"end": 17076,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17061,
											"end": 17076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17061,
											"end": 17076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17061,
											"end": 17076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17061,
											"end": 17076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17061,
											"end": 17068,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 17061,
											"end": 17076,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17061,
											"end": 17076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17061,
											"end": 17076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17061,
											"end": 17076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17061,
											"end": 17076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17061,
											"end": 17076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17061,
											"end": 17076,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17061,
											"end": 17076,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17077,
											"end": 17087,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17061,
											"end": 17088,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17061,
											"end": 17088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17061,
											"end": 17088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17061,
											"end": 17088,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17061,
											"end": 17088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17061,
											"end": 17088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17061,
											"end": 17088,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17061,
											"end": 17088,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17047,
											"end": 17088,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17047,
											"end": 17088,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17047,
											"end": 17088,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17039,
											"end": 17089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 17039,
											"end": 17089,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17039,
											"end": 17089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17039,
											"end": 17089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17039,
											"end": 17089,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17039,
											"end": 17089,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 17039,
											"end": 17089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17222,
											"end": 17242,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17222,
											"end": 17242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17222,
											"end": 17234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17222,
											"end": 17242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17222,
											"end": 17242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17222,
											"end": 17242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17222,
											"end": 17242,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17222,
											"end": 17242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17222,
											"end": 17242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17222,
											"end": 17242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17222,
											"end": 17242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17222,
											"end": 17242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17222,
											"end": 17242,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17222,
											"end": 17258,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 17222,
											"end": 17258,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17222,
											"end": 17258,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17222,
											"end": 17274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 17222,
											"end": 17274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17263,
											"end": 17273,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17222,
											"end": 17262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 17222,
											"end": 17274,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17222,
											"end": 17274,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 17222,
											"end": 17274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17183,
											"end": 17203,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17195,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17183,
											"end": 17203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17203,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17183,
											"end": 17203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17203,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17203,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17183,
											"end": 17203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17203,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17203,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17219,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 17183,
											"end": 17219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17274,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17274,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17183,
											"end": 17274,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17375,
											"end": 17382,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 17375,
											"end": 17390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17375,
											"end": 17390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17375,
											"end": 17390,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17375,
											"end": 17390,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17375,
											"end": 17390,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17391,
											"end": 17401,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17375,
											"end": 17402,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17375,
											"end": 17402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17375,
											"end": 17402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17375,
											"end": 17402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17375,
											"end": 17402,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17375,
											"end": 17402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17375,
											"end": 17418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 17375,
											"end": 17418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17407,
											"end": 17417,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17375,
											"end": 17406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 17375,
											"end": 17418,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17375,
											"end": 17418,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 17375,
											"end": 17418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17345,
											"end": 17360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17360,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17360,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17360,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17345,
											"end": 17360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17352,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 17345,
											"end": 17360,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17345,
											"end": 17360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17345,
											"end": 17360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17360,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17360,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17361,
											"end": 17371,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17372,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17372,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17372,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17372,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17372,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17372,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17418,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17418,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 17345,
											"end": 17418,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17540,
											"end": 17560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17540,
											"end": 17560,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17540,
											"end": 17560,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17540,
											"end": 17560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17540,
											"end": 17560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17540,
											"end": 17560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17540,
											"end": 17560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17540,
											"end": 17560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17540,
											"end": 17560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17540,
											"end": 17560,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17540,
											"end": 17576,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 17540,
											"end": 17576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17540,
											"end": 17576,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17540,
											"end": 17592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 17540,
											"end": 17592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17581,
											"end": 17591,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17540,
											"end": 17580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 17540,
											"end": 17592,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17540,
											"end": 17592,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 17540,
											"end": 17592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17501,
											"end": 17521,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17501,
											"end": 17521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17501,
											"end": 17521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17501,
											"end": 17513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17501,
											"end": 17521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17501,
											"end": 17521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17501,
											"end": 17521,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17501,
											"end": 17521,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17501,
											"end": 17521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17501,
											"end": 17521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17501,
											"end": 17521,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17501,
											"end": 17521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17501,
											"end": 17521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17501,
											"end": 17521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17501,
											"end": 17521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17501,
											"end": 17521,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17501,
											"end": 17537,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 17501,
											"end": 17537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17501,
											"end": 17592,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 17501,
											"end": 17592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17501,
											"end": 17592,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 17501,
											"end": 17592,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17676,
											"end": 17712,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4043,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4018,
											"end": 4043,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4018,
											"end": 4043,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17501,
											"end": 17521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17501,
											"end": 17521,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17676,
											"end": 17712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17676,
											"end": 17712,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 17676,
											"end": 17712,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17676,
											"end": 17712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17676,
											"end": 17712,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 17676,
											"end": 17712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3991,
											"end": 4009,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17676,
											"end": 17712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3872,
											"end": 4049,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15752,
											"end": 19800,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 15752,
											"end": 19800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17779,
											"end": 17841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 17779,
											"end": 17841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17779,
											"end": 17841,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17779,
											"end": 17841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17779,
											"end": 17841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17779,
											"end": 17841,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17779,
											"end": 17841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17779,
											"end": 17841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17779,
											"end": 17841,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17779,
											"end": 17841,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 17779,
											"end": 17841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17779,
											"end": 17841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17779,
											"end": 17841,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17779,
											"end": 17841,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7075626C6963"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17779,
											"end": 17841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17779,
											"end": 17841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17779,
											"end": 17841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1620,
											"name": "PUSH",
											"source": 0,
											"value": "AB8483F64D9C6D1ECF9B849AE677DD3315835CB2"
										},
										{
											"begin": 1694,
											"end": 1736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17779,
											"end": 17792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 17779,
											"end": 17841,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17779,
											"end": 17841,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 17779,
											"end": 17841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17779,
											"end": 17849,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17779,
											"end": 17849,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17845,
											"end": 17849,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17779,
											"end": 17849,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 19800,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17775,
											"end": 19800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 17775,
											"end": 19800,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 17871,
											"end": 17884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 17871,
											"end": 17886,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17871,
											"end": 17886,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 17871,
											"end": 17886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17894,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17871,
											"end": 17894,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17890,
											"end": 17894,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17871,
											"end": 17894,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17867,
											"end": 19771,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17867,
											"end": 19771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 17867,
											"end": 19771,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18060,
											"end": 18080,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18060,
											"end": 18080,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18060,
											"end": 18072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18060,
											"end": 18080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18060,
											"end": 18080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18060,
											"end": 18080,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18060,
											"end": 18080,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18060,
											"end": 18080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18060,
											"end": 18080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18060,
											"end": 18080,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18060,
											"end": 18080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18060,
											"end": 18080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18060,
											"end": 18080,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18060,
											"end": 18096,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 18060,
											"end": 18096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18060,
											"end": 18096,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18046,
											"end": 18096,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18046,
											"end": 18096,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 18046,
											"end": 18096,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18038,
											"end": 18097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 18038,
											"end": 18097,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18038,
											"end": 18097,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18038,
											"end": 18097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18038,
											"end": 18097,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17867,
											"end": 19771,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 17867,
											"end": 19771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18934,
											"end": 18954,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18934,
											"end": 18954,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18934,
											"end": 18946,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18934,
											"end": 18954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18934,
											"end": 18954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18934,
											"end": 18954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18934,
											"end": 18954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18934,
											"end": 18954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18934,
											"end": 18954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18934,
											"end": 18954,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18934,
											"end": 18954,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18934,
											"end": 18954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18934,
											"end": 18954,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18934,
											"end": 18969,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 18934,
											"end": 18969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18934,
											"end": 18969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18920,
											"end": 18969,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18920,
											"end": 18969,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 18920,
											"end": 18969,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18912,
											"end": 18970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 18912,
											"end": 18970,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18912,
											"end": 18970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18912,
											"end": 18970,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18912,
											"end": 18970,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18912,
											"end": 18970,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 18912,
											"end": 18970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19078,
											"end": 19093,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19078,
											"end": 19093,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19078,
											"end": 19093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19078,
											"end": 19093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19078,
											"end": 19093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19078,
											"end": 19093,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19078,
											"end": 19085,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 19078,
											"end": 19093,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19078,
											"end": 19093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19078,
											"end": 19093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19078,
											"end": 19093,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19078,
											"end": 19093,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19078,
											"end": 19093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19078,
											"end": 19093,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19078,
											"end": 19093,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19094,
											"end": 19104,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19078,
											"end": 19105,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19078,
											"end": 19105,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19078,
											"end": 19105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19078,
											"end": 19105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19078,
											"end": 19105,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19078,
											"end": 19105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19078,
											"end": 19105,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19078,
											"end": 19105,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19064,
											"end": 19105,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19064,
											"end": 19105,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19064,
											"end": 19105,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19056,
											"end": 19106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 19056,
											"end": 19106,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19056,
											"end": 19106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19056,
											"end": 19106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19056,
											"end": 19106,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19056,
											"end": 19106,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 19056,
											"end": 19106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19238,
											"end": 19258,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19258,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19250,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19238,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19238,
											"end": 19258,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19258,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19258,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19238,
											"end": 19258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19258,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19273,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 19238,
											"end": 19273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19273,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 19238,
											"end": 19289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19278,
											"end": 19288,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19238,
											"end": 19277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 19238,
											"end": 19289,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19238,
											"end": 19289,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 19238,
											"end": 19289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19200,
											"end": 19220,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19200,
											"end": 19220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19200,
											"end": 19212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19200,
											"end": 19220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19200,
											"end": 19220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19200,
											"end": 19220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19200,
											"end": 19220,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19200,
											"end": 19220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19200,
											"end": 19220,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19200,
											"end": 19220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19200,
											"end": 19220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19200,
											"end": 19220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19200,
											"end": 19220,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19200,
											"end": 19220,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19200,
											"end": 19235,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 19200,
											"end": 19235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19200,
											"end": 19235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19200,
											"end": 19235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19200,
											"end": 19289,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 19200,
											"end": 19289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19200,
											"end": 19289,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 19200,
											"end": 19289,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19390,
											"end": 19405,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19390,
											"end": 19405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19390,
											"end": 19405,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19390,
											"end": 19405,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19390,
											"end": 19405,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19390,
											"end": 19405,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19406,
											"end": 19416,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19390,
											"end": 19417,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19390,
											"end": 19417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19390,
											"end": 19417,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19390,
											"end": 19417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19390,
											"end": 19417,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19390,
											"end": 19417,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19390,
											"end": 19433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 19390,
											"end": 19433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19422,
											"end": 19432,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19390,
											"end": 19421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 19390,
											"end": 19433,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19390,
											"end": 19433,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 19390,
											"end": 19433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19360,
											"end": 19375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19360,
											"end": 19375,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19360,
											"end": 19375,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19360,
											"end": 19375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19360,
											"end": 19375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19360,
											"end": 19375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19360,
											"end": 19375,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19360,
											"end": 19367,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 19360,
											"end": 19375,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19360,
											"end": 19375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19360,
											"end": 19375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19360,
											"end": 19375,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19360,
											"end": 19375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19360,
											"end": 19375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19360,
											"end": 19375,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19360,
											"end": 19375,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19376,
											"end": 19386,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19360,
											"end": 19387,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19360,
											"end": 19387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19360,
											"end": 19387,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19360,
											"end": 19387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19360,
											"end": 19387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19360,
											"end": 19387,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19360,
											"end": 19387,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19360,
											"end": 19433,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 19360,
											"end": 19433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19360,
											"end": 19433,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 19360,
											"end": 19433,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19554,
											"end": 19574,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19554,
											"end": 19574,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 19554,
											"end": 19574,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19554,
											"end": 19574,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19554,
											"end": 19574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19554,
											"end": 19574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19554,
											"end": 19574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19554,
											"end": 19574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19554,
											"end": 19574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19554,
											"end": 19574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19554,
											"end": 19574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19554,
											"end": 19574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19554,
											"end": 19574,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19554,
											"end": 19589,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19554,
											"end": 19589,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19554,
											"end": 19605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 19554,
											"end": 19605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19594,
											"end": 19604,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19554,
											"end": 19593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 19554,
											"end": 19605,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19554,
											"end": 19605,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 19554,
											"end": 19605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19516,
											"end": 19536,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19516,
											"end": 19536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19516,
											"end": 19536,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19516,
											"end": 19528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19516,
											"end": 19536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19516,
											"end": 19536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19516,
											"end": 19536,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19516,
											"end": 19536,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19516,
											"end": 19536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19516,
											"end": 19536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19516,
											"end": 19536,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19516,
											"end": 19536,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19516,
											"end": 19536,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19516,
											"end": 19536,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19516,
											"end": 19536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19516,
											"end": 19536,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19516,
											"end": 19551,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 19516,
											"end": 19551,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19516,
											"end": 19605,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 19516,
											"end": 19605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19516,
											"end": 19605,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 19516,
											"end": 19605,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19689,
											"end": 19725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4043,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4018,
											"end": 4043,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4018,
											"end": 4043,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19516,
											"end": 19536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19516,
											"end": 19536,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19689,
											"end": 19725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19689,
											"end": 19725,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 19689,
											"end": 19725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19689,
											"end": 19725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19689,
											"end": 19725,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 19689,
											"end": 19725,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3991,
											"end": 4009,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19689,
											"end": 19725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3872,
											"end": 4049,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17775,
											"end": 19800,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 17775,
											"end": 19800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19795,
											"end": 19800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17775,
											"end": 19800,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 17775,
											"end": 19800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13594,
											"end": 19808,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13594,
											"end": 19808,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13594,
											"end": 19808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13594,
											"end": 19808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13594,
											"end": 19808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13594,
											"end": 19808,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1620,
											"name": "PUSH",
											"source": 0,
											"value": "AB8483F64D9C6D1ECF9B849AE677DD3315835CB2"
										},
										{
											"begin": 4889,
											"end": 4896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4912,
											"end": 4945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4912,
											"end": 4945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4912,
											"end": 4945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4912,
											"end": 4925,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4912,
											"end": 4945,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4912,
											"end": 4945,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4912,
											"end": 4945,
											"name": "PUSH",
											"source": 0,
											"value": "9D4D959825F0680278E64197773B2A50CD78B2B2CB00711DDBEEBF0BF93CD8A4"
										},
										{
											"begin": 4912,
											"end": 4957,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4912,
											"end": 4957,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4912,
											"end": 4957,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4912,
											"end": 4966,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4912,
											"end": 4966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4912,
											"end": 4966,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4912,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 4912,
											"end": 5023,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1694,
											"end": 1736,
											"name": "PUSH",
											"source": 0,
											"value": "AB8483F64D9C6D1ECF9B849AE677DD3315835CB2"
										},
										{
											"begin": 4970,
											"end": 5002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4970,
											"end": 5002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4970,
											"end": 4983,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4970,
											"end": 5002,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4970,
											"end": 5002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4970,
											"end": 5002,
											"name": "PUSH",
											"source": 0,
											"value": "9D4D959825F0680278E64197773B2A50CD78B2B2CB00711DDBEEBF0BF93CD8A4"
										},
										{
											"begin": 4970,
											"end": 5014,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4970,
											"end": 5014,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4970,
											"end": 5014,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4970,
											"end": 5023,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4912,
											"end": 5023,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 4912,
											"end": 5023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4909,
											"end": 5564,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4909,
											"end": 5564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 4909,
											"end": 5564,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5070,
											"end": 5095,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5070,
											"end": 5082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5070,
											"end": 5095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5070,
											"end": 5095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5070,
											"end": 5095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5070,
											"end": 5095,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5070,
											"end": 5095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5070,
											"end": 5095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5070,
											"end": 5095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5070,
											"end": 5095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5070,
											"end": 5095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5070,
											"end": 5095,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5070,
											"end": 5108,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5070,
											"end": 5108,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5070,
											"end": 5108,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5070,
											"end": 5108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4909,
											"end": 5564,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 4909,
											"end": 5564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1620,
											"name": "PUSH",
											"source": 0,
											"value": "AB8483F64D9C6D1ECF9B849AE677DD3315835CB2"
										},
										{
											"begin": 5130,
											"end": 5163,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5130,
											"end": 5163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5143,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5130,
											"end": 5163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5130,
											"end": 5163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5163,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5163,
											"name": "PUSH",
											"source": 0,
											"value": "9D4D959825F0680278E64197773B2A50CD78B2B2CB00711DDBEEBF0BF93CD8A4"
										},
										{
											"begin": 5130,
											"end": 5175,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5175,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5130,
											"end": 5175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5183,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5183,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5183,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5126,
											"end": 5564,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5126,
											"end": 5564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5126,
											"end": 5564,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5283,
											"end": 5308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5283,
											"end": 5295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5283,
											"end": 5308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5283,
											"end": 5308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5283,
											"end": 5308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5283,
											"end": 5308,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5283,
											"end": 5308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5283,
											"end": 5308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5283,
											"end": 5308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5283,
											"end": 5308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5283,
											"end": 5308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5283,
											"end": 5308,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5283,
											"end": 5324,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5283,
											"end": 5324,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5283,
											"end": 5324,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5283,
											"end": 5324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5126,
											"end": 5564,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5126,
											"end": 5564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1736,
											"name": "PUSH",
											"source": 0,
											"value": "AB8483F64D9C6D1ECF9B849AE677DD3315835CB2"
										},
										{
											"begin": 5346,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5346,
											"end": 5378,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5359,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5346,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5346,
											"end": 5378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5378,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5378,
											"name": "PUSH",
											"source": 0,
											"value": "9D4D959825F0680278E64197773B2A50CD78B2B2CB00711DDBEEBF0BF93CD8A4"
										},
										{
											"begin": 5346,
											"end": 5390,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5390,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5346,
											"end": 5390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5398,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5398,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5346,
											"end": 5398,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5342,
											"end": 5564,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5342,
											"end": 5564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 5342,
											"end": 5564,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5498,
											"end": 5510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5498,
											"end": 5538,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5498,
											"end": 5538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5498,
											"end": 5538,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5498,
											"end": 5538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5342,
											"end": 5564,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 5342,
											"end": 5564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5563,
											"end": 5564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5563,
											"end": 5564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5342,
											"end": 5564,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 5342,
											"end": 5564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4819,
											"end": 5572,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 224,
											"end": 651,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 224,
											"end": 651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 369,
											"end": 379,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 350,
											"end": 380,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 350,
											"end": 380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 350,
											"end": 380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 350,
											"end": 380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 350,
											"end": 368,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 350,
											"end": 380,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 350,
											"end": 380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 350,
											"end": 380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 350,
											"end": 380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 350,
											"end": 380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 350,
											"end": 380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 350,
											"end": 380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 350,
											"end": 380,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 350,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 350,
											"end": 386,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 350,
											"end": 386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 350,
											"end": 386,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 350,
											"end": 386,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 350,
											"end": 386,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 350,
											"end": 394,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 350,
											"end": 394,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 390,
											"end": 394,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 350,
											"end": 394,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 342,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 342,
											"end": 424,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 342,
											"end": 424,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 342,
											"end": 424,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 342,
											"end": 424,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 342,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5793,
											"end": 5795,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 342,
											"end": 424,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 342,
											"end": 424,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 342,
											"end": 424,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5775,
											"end": 5796,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5832,
											"end": 5834,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 5812,
											"end": 5830,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5812,
											"end": 5830,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5812,
											"end": 5830,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5805,
											"end": 5835,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5871,
											"end": 5898,
											"name": "PUSH",
											"source": 9,
											"value": "4170706C69636174696F6E20616C72656164792073656E742100000000000000"
										},
										{
											"begin": 5851,
											"end": 5869,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5851,
											"end": 5869,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5851,
											"end": 5869,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5844,
											"end": 5899,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 342,
											"end": 424,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 342,
											"end": 424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 342,
											"end": 424,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 342,
											"end": 424,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 342,
											"end": 424,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 342,
											"end": 424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 342,
											"end": 424,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 342,
											"end": 424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 342,
											"end": 424,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 342,
											"end": 424,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 342,
											"end": 424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 564,
											"end": 643,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 564,
											"end": 643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 564,
											"end": 643,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 625,
											"end": 629,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 564,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 564,
											"end": 643,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 564,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 564,
											"end": 643,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 564,
											"end": 643,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 549,
											"end": 559,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 530,
											"end": 560,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 530,
											"end": 560,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 530,
											"end": 548,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 530,
											"end": 560,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 530,
											"end": 560,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 530,
											"end": 560,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 530,
											"end": 560,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 560,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 530,
											"end": 560,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 530,
											"end": 560,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 530,
											"end": 560,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 530,
											"end": 560,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 530,
											"end": 560,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "1000000000000000000000000000000000000000000"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 224,
											"end": 651,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 208,
											"end": 215,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 271,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 239,
											"end": 273,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 239,
											"end": 273,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 239,
											"end": 273,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 239,
											"end": 273,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 239,
											"end": 273,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 239,
											"end": 273,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 232,
											"end": 274,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 274,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 727,
											"end": 899,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 727,
											"end": 899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 834,
											"end": 853,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 814,
											"end": 824,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 801,
											"end": 813,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 801,
											"end": 825,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 801,
											"end": 825,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 801,
											"end": 825,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 801,
											"end": 825,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 801,
											"end": 825,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 801,
											"end": 825,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 801,
											"end": 830,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 801,
											"end": 830,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 801,
											"end": 830,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 801,
											"end": 853,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 801,
											"end": 853,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 801,
											"end": 853,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 801,
											"end": 853,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 801,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 801,
											"end": 853,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 801,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 801,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 801,
											"end": 853,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 801,
											"end": 853,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 801,
											"end": 853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 801,
											"end": 853,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 793,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 793,
											"end": 889,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 793,
											"end": 889,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 889,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 793,
											"end": 889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 793,
											"end": 889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4644,
											"end": 4646,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 793,
											"end": 889,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 793,
											"end": 889,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 793,
											"end": 889,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4626,
											"end": 4647,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 4685,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4663,
											"end": 4681,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4663,
											"end": 4681,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4663,
											"end": 4681,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4656,
											"end": 4686,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4722,
											"end": 4755,
											"name": "PUSH",
											"source": 9,
											"value": "596F7520617265206E6F74206120707269766174652070726F76696465722100"
										},
										{
											"begin": 4702,
											"end": 4720,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4702,
											"end": 4720,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4702,
											"end": 4720,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4695,
											"end": 4756,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4773,
											"end": 4791,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4773,
											"end": 4791,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 793,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 4442,
											"end": 4797,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 793,
											"end": 889,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 793,
											"end": 889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 727,
											"end": 899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 727,
											"end": 899,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5995,
											"end": 13261,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5995,
											"end": 13261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6077,
											"end": 6081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6098,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 6098,
											"end": 6158,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6098,
											"end": 6158,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6098,
											"end": 6158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6098,
											"end": 6158,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6098,
											"end": 6158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6098,
											"end": 6158,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6098,
											"end": 6158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6098,
											"end": 6158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6098,
											"end": 6158,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6098,
											"end": 6158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6098,
											"end": 6158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6098,
											"end": 6158,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6098,
											"end": 6158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1CD95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6098,
											"end": 6158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6098,
											"end": 6158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6098,
											"end": 6158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1620,
											"name": "PUSH",
											"source": 0,
											"value": "AB8483F64D9C6D1ECF9B849AE677DD3315835CB2"
										},
										{
											"begin": 1694,
											"end": 1736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6098,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6098,
											"end": 6158,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6098,
											"end": 6158,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 6098,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6098,
											"end": 6166,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6098,
											"end": 6166,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6162,
											"end": 6166,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6098,
											"end": 6166,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 13253,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 13253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 6094,
											"end": 13253,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6239,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 6239,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6239,
											"end": 6254,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6239,
											"end": 6254,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 6239,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6239,
											"end": 6262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6239,
											"end": 6262,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6258,
											"end": 6262,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6239,
											"end": 6262,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6235,
											"end": 9011,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6235,
											"end": 9011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 6235,
											"end": 9011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6435,
											"end": 6445,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6434,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6422,
											"end": 6446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6422,
											"end": 6446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6446,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6422,
											"end": 6446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6446,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6462,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6422,
											"end": 6462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6462,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6462,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6462,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6408,
											"end": 6462,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 6400,
											"end": 6463,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6400,
											"end": 6463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6463,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6463,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 6400,
											"end": 6463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6647,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6627,
											"end": 6637,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6614,
											"end": 6626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6614,
											"end": 6638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6614,
											"end": 6638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6614,
											"end": 6638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6614,
											"end": 6638,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6614,
											"end": 6638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6614,
											"end": 6638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6614,
											"end": 6638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6614,
											"end": 6638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6614,
											"end": 6638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6614,
											"end": 6638,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6614,
											"end": 6643,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6614,
											"end": 6643,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6614,
											"end": 6643,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6614,
											"end": 6660,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6614,
											"end": 6660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6614,
											"end": 6660,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6614,
											"end": 6660,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6614,
											"end": 6660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6614,
											"end": 6660,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6614,
											"end": 6660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6614,
											"end": 6660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 6614,
											"end": 6660,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6614,
											"end": 6660,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 6614,
											"end": 6660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6614,
											"end": 6660,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6605,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 6605,
											"end": 6682,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6605,
											"end": 6682,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6605,
											"end": 6682,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6605,
											"end": 6682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6605,
											"end": 6682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6147,
											"end": 6149,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6605,
											"end": 6682,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6605,
											"end": 6682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6605,
											"end": 6682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6129,
											"end": 6150,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6186,
											"end": 6188,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6159,
											"end": 6189,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CB7BAB9103737BA1034B73B32B9BA37B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6205,
											"end": 6223,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6205,
											"end": 6223,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6205,
											"end": 6223,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6198,
											"end": 6245,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6262,
											"end": 6280,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6262,
											"end": 6280,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 5945,
											"end": 6286,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6682,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 6605,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6853,
											"end": 6866,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6821,
											"end": 6844,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6821,
											"end": 6844,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6821,
											"end": 6833,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6821,
											"end": 6844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6821,
											"end": 6844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6821,
											"end": 6844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6821,
											"end": 6844,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6821,
											"end": 6844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6821,
											"end": 6844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6821,
											"end": 6844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6821,
											"end": 6844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6821,
											"end": 6844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6821,
											"end": 6844,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6821,
											"end": 6849,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6821,
											"end": 6849,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6821,
											"end": 6849,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6821,
											"end": 6866,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6821,
											"end": 6866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6821,
											"end": 6866,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6821,
											"end": 6866,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6821,
											"end": 6866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 6821,
											"end": 6866,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6821,
											"end": 6866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 6821,
											"end": 6866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 6821,
											"end": 6866,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6821,
											"end": 6866,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 6821,
											"end": 6866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6821,
											"end": 6866,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6812,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 6812,
											"end": 6888,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6812,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6812,
											"end": 6888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6812,
											"end": 6888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6812,
											"end": 6888,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6147,
											"end": 6149,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6812,
											"end": 6888,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6812,
											"end": 6888,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6812,
											"end": 6888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6129,
											"end": 6150,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6186,
											"end": 6188,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6159,
											"end": 6189,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CB7BAB9103737BA1034B73B32B9BA37B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6205,
											"end": 6223,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6205,
											"end": 6223,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6205,
											"end": 6223,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6198,
											"end": 6245,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6262,
											"end": 6280,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6262,
											"end": 6280,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6812,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 5945,
											"end": 6286,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6812,
											"end": 6888,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 6812,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7077,
											"end": 7087,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7064,
											"end": 7088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7088,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7064,
											"end": 7088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7088,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7088,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7064,
											"end": 7104,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7104,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 7064,
											"end": 7120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7119,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 7064,
											"end": 7120,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7064,
											"end": 7120,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 7064,
											"end": 7120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7034,
											"end": 7044,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7021,
											"end": 7033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7021,
											"end": 7045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7021,
											"end": 7045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7021,
											"end": 7045,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7021,
											"end": 7045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7021,
											"end": 7045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7021,
											"end": 7045,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7021,
											"end": 7045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7021,
											"end": 7045,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7021,
											"end": 7045,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7021,
											"end": 7061,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7021,
											"end": 7061,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7021,
											"end": 7120,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7021,
											"end": 7120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7021,
											"end": 7120,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7021,
											"end": 7120,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7249,
											"end": 7272,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7249,
											"end": 7272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7249,
											"end": 7272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7249,
											"end": 7272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7249,
											"end": 7272,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7249,
											"end": 7285,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7249,
											"end": 7285,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7249,
											"end": 7285,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7249,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 7249,
											"end": 7301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7290,
											"end": 7300,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7249,
											"end": 7289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 7249,
											"end": 7301,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7249,
											"end": 7301,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 7249,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7210,
											"end": 7233,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7210,
											"end": 7233,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7210,
											"end": 7222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7210,
											"end": 7233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7210,
											"end": 7233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7210,
											"end": 7233,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7210,
											"end": 7233,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7210,
											"end": 7233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7210,
											"end": 7233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7210,
											"end": 7233,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7210,
											"end": 7233,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7210,
											"end": 7233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7210,
											"end": 7233,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7210,
											"end": 7233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7210,
											"end": 7233,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7210,
											"end": 7246,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7210,
											"end": 7246,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7210,
											"end": 7301,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7210,
											"end": 7301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7210,
											"end": 7301,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7210,
											"end": 7301,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7441,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4043,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4018,
											"end": 4043,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4018,
											"end": 4043,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7210,
											"end": 7233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7210,
											"end": 7233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7407,
											"end": 7417,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7407,
											"end": 7417,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7441,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7398,
											"end": 7441,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3991,
											"end": 4009,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7398,
											"end": 7441,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 7398,
											"end": 7441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7441,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7398,
											"end": 7441,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7441,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7441,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7441,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7601,
											"end": 7605,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7594,
											"end": 7605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 7594,
											"end": 7605,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6235,
											"end": 9011,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 6235,
											"end": 9011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7825,
											"end": 7835,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7812,
											"end": 7824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7812,
											"end": 7836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7812,
											"end": 7836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7812,
											"end": 7836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7812,
											"end": 7836,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7812,
											"end": 7836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7812,
											"end": 7836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7812,
											"end": 7836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7812,
											"end": 7836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7812,
											"end": 7836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7812,
											"end": 7836,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7812,
											"end": 7849,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7812,
											"end": 7849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7812,
											"end": 7849,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7798,
											"end": 7849,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7798,
											"end": 7849,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7798,
											"end": 7849,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7790,
											"end": 7850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 7790,
											"end": 7850,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7790,
											"end": 7850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7790,
											"end": 7850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7790,
											"end": 7850,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7790,
											"end": 7850,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 7790,
											"end": 7850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8037,
											"end": 8050,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8017,
											"end": 8027,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8004,
											"end": 8016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8004,
											"end": 8028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8004,
											"end": 8028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8004,
											"end": 8028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8004,
											"end": 8028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8004,
											"end": 8028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8004,
											"end": 8028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8004,
											"end": 8028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8004,
											"end": 8028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8004,
											"end": 8028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8004,
											"end": 8028,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8004,
											"end": 8033,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8004,
											"end": 8033,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8004,
											"end": 8033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8004,
											"end": 8050,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8004,
											"end": 8050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8004,
											"end": 8050,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8004,
											"end": 8050,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8004,
											"end": 8050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 8004,
											"end": 8050,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8004,
											"end": 8050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 8004,
											"end": 8050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8004,
											"end": 8050,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8004,
											"end": 8050,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 8004,
											"end": 8050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8004,
											"end": 8050,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7995,
											"end": 8072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 7995,
											"end": 8072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7995,
											"end": 8072,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7995,
											"end": 8072,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7995,
											"end": 8072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7995,
											"end": 8072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6147,
											"end": 6149,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7995,
											"end": 8072,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7995,
											"end": 8072,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7995,
											"end": 8072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6129,
											"end": 6150,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6186,
											"end": 6188,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6159,
											"end": 6189,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CB7BAB9103737BA1034B73B32B9BA37B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6205,
											"end": 6223,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6205,
											"end": 6223,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6205,
											"end": 6223,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6198,
											"end": 6245,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6262,
											"end": 6280,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6262,
											"end": 6280,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7995,
											"end": 8072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 5945,
											"end": 6286,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7995,
											"end": 8072,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 7995,
											"end": 8072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8243,
											"end": 8256,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8211,
											"end": 8223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8211,
											"end": 8239,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8211,
											"end": 8239,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8211,
											"end": 8239,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8211,
											"end": 8256,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8211,
											"end": 8256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8211,
											"end": 8256,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8211,
											"end": 8256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8211,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 8211,
											"end": 8256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8211,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 8211,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8211,
											"end": 8256,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8211,
											"end": 8256,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 8211,
											"end": 8256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8211,
											"end": 8256,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8202,
											"end": 8278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 8202,
											"end": 8278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8202,
											"end": 8278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8202,
											"end": 8278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8202,
											"end": 8278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8202,
											"end": 8278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6147,
											"end": 6149,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8202,
											"end": 8278,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8202,
											"end": 8278,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8202,
											"end": 8278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6129,
											"end": 6150,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6186,
											"end": 6188,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6159,
											"end": 6189,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CB7BAB9103737BA1034B73B32B9BA37B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6205,
											"end": 6223,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6205,
											"end": 6223,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6205,
											"end": 6223,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6198,
											"end": 6245,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6262,
											"end": 6280,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6262,
											"end": 6280,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8202,
											"end": 8278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 5945,
											"end": 6286,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8202,
											"end": 8278,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 8202,
											"end": 8278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8464,
											"end": 8474,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8451,
											"end": 8463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8451,
											"end": 8475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8451,
											"end": 8475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8451,
											"end": 8475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8451,
											"end": 8475,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8451,
											"end": 8475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8451,
											"end": 8475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8451,
											"end": 8475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8451,
											"end": 8475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8451,
											"end": 8475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8451,
											"end": 8475,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8451,
											"end": 8488,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8451,
											"end": 8488,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8451,
											"end": 8488,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8451,
											"end": 8504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 8451,
											"end": 8504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8493,
											"end": 8503,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8451,
											"end": 8492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 8451,
											"end": 8504,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8451,
											"end": 8504,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 8451,
											"end": 8504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8424,
											"end": 8434,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8423,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8411,
											"end": 8435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8435,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8435,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8411,
											"end": 8435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8435,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8411,
											"end": 8435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8435,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8435,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8448,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8411,
											"end": 8448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8448,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8504,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8504,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8411,
											"end": 8504,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8639,
											"end": 8662,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8639,
											"end": 8662,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8639,
											"end": 8662,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8639,
											"end": 8662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8639,
											"end": 8662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8639,
											"end": 8662,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8639,
											"end": 8675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8639,
											"end": 8675,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8639,
											"end": 8691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 8639,
											"end": 8691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8680,
											"end": 8690,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8639,
											"end": 8679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 8639,
											"end": 8691,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6094,
											"end": 13253,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 6094,
											"end": 13253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9032,
											"end": 9095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 9032,
											"end": 9095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9032,
											"end": 9095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9032,
											"end": 9095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9032,
											"end": 9095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9032,
											"end": 9095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9032,
											"end": 9095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9032,
											"end": 9095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9032,
											"end": 9095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9032,
											"end": 9095,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9032,
											"end": 9095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9032,
											"end": 9095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9032,
											"end": 9095,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9032,
											"end": 9095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70726976617465"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9032,
											"end": 9095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9032,
											"end": 9095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9032,
											"end": 9095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1620,
											"name": "PUSH",
											"source": 0,
											"value": "AB8483F64D9C6D1ECF9B849AE677DD3315835CB2"
										},
										{
											"begin": 1694,
											"end": 1736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9032,
											"end": 9045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9032,
											"end": 9095,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9032,
											"end": 9095,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 9032,
											"end": 9095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9032,
											"end": 9103,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9032,
											"end": 9103,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9099,
											"end": 9103,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9032,
											"end": 9103,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 13253,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 13253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 9028,
											"end": 13253,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9169,
											"end": 9184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 9169,
											"end": 9182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 9169,
											"end": 9184,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9169,
											"end": 9184,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 9169,
											"end": 9184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9169,
											"end": 9192,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9169,
											"end": 9192,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9188,
											"end": 9192,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9169,
											"end": 9192,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9165,
											"end": 11119,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9165,
											"end": 11119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 9165,
											"end": 11119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9365,
											"end": 9375,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9352,
											"end": 9364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9352,
											"end": 9376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9352,
											"end": 9376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9352,
											"end": 9376,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9352,
											"end": 9376,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9352,
											"end": 9376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9352,
											"end": 9376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9352,
											"end": 9376,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9352,
											"end": 9376,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9352,
											"end": 9376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9352,
											"end": 9376,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9352,
											"end": 9392,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9352,
											"end": 9392,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9352,
											"end": 9392,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9392,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9392,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9330,
											"end": 9393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 9330,
											"end": 9393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9330,
											"end": 9393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9330,
											"end": 9393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9330,
											"end": 9393,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9330,
											"end": 9393,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 9330,
											"end": 9393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9593,
											"end": 9603,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9580,
											"end": 9592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9580,
											"end": 9604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9580,
											"end": 9604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9580,
											"end": 9604,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9580,
											"end": 9604,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9580,
											"end": 9604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9580,
											"end": 9604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9580,
											"end": 9604,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9580,
											"end": 9604,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9580,
											"end": 9604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9580,
											"end": 9604,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9580,
											"end": 9620,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9580,
											"end": 9620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9580,
											"end": 9620,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9580,
											"end": 9636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 9580,
											"end": 9636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9625,
											"end": 9635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9580,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 9580,
											"end": 9636,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9580,
											"end": 9636,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 9580,
											"end": 9636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9550,
											"end": 9560,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9537,
											"end": 9561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9561,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9537,
											"end": 9561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9537,
											"end": 9561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9561,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9561,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9577,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9537,
											"end": 9577,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9636,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9636,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9537,
											"end": 9636,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9768,
											"end": 9791,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9768,
											"end": 9791,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9768,
											"end": 9791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9768,
											"end": 9791,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9768,
											"end": 9791,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9768,
											"end": 9807,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 9768,
											"end": 9807,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9768,
											"end": 9807,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9768,
											"end": 9823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 9768,
											"end": 9823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9812,
											"end": 9822,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9768,
											"end": 9811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 9768,
											"end": 9823,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9768,
											"end": 9823,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 9768,
											"end": 9823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9726,
											"end": 9749,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9726,
											"end": 9749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9726,
											"end": 9738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9726,
											"end": 9749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9726,
											"end": 9749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9726,
											"end": 9749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9726,
											"end": 9749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9726,
											"end": 9749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9726,
											"end": 9749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9726,
											"end": 9749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9726,
											"end": 9749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9726,
											"end": 9749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9726,
											"end": 9749,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9726,
											"end": 9749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9726,
											"end": 9749,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9726,
											"end": 9765,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 9726,
											"end": 9765,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9726,
											"end": 9823,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9726,
											"end": 9823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9726,
											"end": 9823,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9726,
											"end": 9823,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9917,
											"end": 9960,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4043,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4018,
											"end": 4043,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4018,
											"end": 4043,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9726,
											"end": 9749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9726,
											"end": 9749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9926,
											"end": 9936,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9926,
											"end": 9936,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9917,
											"end": 9960,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9917,
											"end": 9960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3991,
											"end": 4009,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9917,
											"end": 9960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 3872,
											"end": 4049,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9165,
											"end": 11119,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 9165,
											"end": 11119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10344,
											"end": 10354,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10331,
											"end": 10343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10331,
											"end": 10355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10331,
											"end": 10355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10331,
											"end": 10355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10331,
											"end": 10355,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10331,
											"end": 10355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10331,
											"end": 10355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10331,
											"end": 10355,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10331,
											"end": 10355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10331,
											"end": 10355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10331,
											"end": 10355,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10331,
											"end": 10371,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10331,
											"end": 10371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10331,
											"end": 10371,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10317,
											"end": 10371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10317,
											"end": 10371,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10317,
											"end": 10371,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10309,
											"end": 10372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 10309,
											"end": 10372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10309,
											"end": 10372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10309,
											"end": 10372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10309,
											"end": 10372,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10309,
											"end": 10372,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 10309,
											"end": 10372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10572,
											"end": 10582,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10559,
											"end": 10571,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10559,
											"end": 10583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10559,
											"end": 10583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10559,
											"end": 10583,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10559,
											"end": 10583,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10559,
											"end": 10583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10559,
											"end": 10583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10559,
											"end": 10583,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10559,
											"end": 10583,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10559,
											"end": 10583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10559,
											"end": 10583,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10559,
											"end": 10599,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10559,
											"end": 10599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10559,
											"end": 10599,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10559,
											"end": 10615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 10559,
											"end": 10615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10604,
											"end": 10614,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10559,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 10559,
											"end": 10615,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10559,
											"end": 10615,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 10559,
											"end": 10615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10539,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10516,
											"end": 10528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10516,
											"end": 10540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10516,
											"end": 10540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10516,
											"end": 10540,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10516,
											"end": 10540,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10516,
											"end": 10540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10516,
											"end": 10540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10516,
											"end": 10540,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10516,
											"end": 10540,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10516,
											"end": 10540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10516,
											"end": 10540,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10516,
											"end": 10540,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10516,
											"end": 10556,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10516,
											"end": 10556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10516,
											"end": 10556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10516,
											"end": 10556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10516,
											"end": 10615,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10516,
											"end": 10615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10516,
											"end": 10615,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10516,
											"end": 10615,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10747,
											"end": 10770,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10747,
											"end": 10770,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10747,
											"end": 10770,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10747,
											"end": 10770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10747,
											"end": 10770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10747,
											"end": 10770,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10747,
											"end": 10786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10747,
											"end": 10786,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10747,
											"end": 10802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 10747,
											"end": 10802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10791,
											"end": 10801,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10747,
											"end": 10790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 10747,
											"end": 10802,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9028,
											"end": 13253,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 9028,
											"end": 13253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11140,
											"end": 11202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 11140,
											"end": 11202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11140,
											"end": 11202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11140,
											"end": 11202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11140,
											"end": 11202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11140,
											"end": 11202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11140,
											"end": 11202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11140,
											"end": 11202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11140,
											"end": 11202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11140,
											"end": 11202,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11140,
											"end": 11202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11140,
											"end": 11202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11140,
											"end": 11202,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11140,
											"end": 11202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7075626C6963"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11140,
											"end": 11202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11140,
											"end": 11202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11140,
											"end": 11202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1620,
											"name": "PUSH",
											"source": 0,
											"value": "AB8483F64D9C6D1ECF9B849AE677DD3315835CB2"
										},
										{
											"begin": 1694,
											"end": 1736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11140,
											"end": 11153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11140,
											"end": 11202,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11140,
											"end": 11202,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 11140,
											"end": 11202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11140,
											"end": 11210,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11140,
											"end": 11210,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11206,
											"end": 11210,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11140,
											"end": 11210,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11136,
											"end": 13253,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11136,
											"end": 13253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 11136,
											"end": 13253,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11276,
											"end": 11291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 11276,
											"end": 11289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 11276,
											"end": 11291,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11276,
											"end": 11291,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 11276,
											"end": 11291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11276,
											"end": 11299,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11276,
											"end": 11299,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11295,
											"end": 11299,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11276,
											"end": 11299,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11272,
											"end": 13224,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11272,
											"end": 13224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 11272,
											"end": 13224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11472,
											"end": 11482,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11459,
											"end": 11471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11459,
											"end": 11483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11459,
											"end": 11483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11459,
											"end": 11483,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11459,
											"end": 11483,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11459,
											"end": 11483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11459,
											"end": 11483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11459,
											"end": 11483,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11459,
											"end": 11483,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11459,
											"end": 11483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11459,
											"end": 11483,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11459,
											"end": 11499,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11459,
											"end": 11499,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11459,
											"end": 11499,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11499,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11499,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11499,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 11437,
											"end": 11500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11437,
											"end": 11500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11500,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11437,
											"end": 11500,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 11437,
											"end": 11500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11700,
											"end": 11710,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11687,
											"end": 11699,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11687,
											"end": 11711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11687,
											"end": 11711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11687,
											"end": 11711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11687,
											"end": 11711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11687,
											"end": 11711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11687,
											"end": 11711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11687,
											"end": 11711,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11687,
											"end": 11711,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11687,
											"end": 11711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11687,
											"end": 11711,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11687,
											"end": 11727,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11687,
											"end": 11727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11687,
											"end": 11727,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11687,
											"end": 11743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 11687,
											"end": 11743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11732,
											"end": 11742,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11687,
											"end": 11731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 11687,
											"end": 11743,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11687,
											"end": 11743,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 11687,
											"end": 11743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11657,
											"end": 11667,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11644,
											"end": 11656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11644,
											"end": 11668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11644,
											"end": 11668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11644,
											"end": 11668,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11644,
											"end": 11668,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11644,
											"end": 11668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11644,
											"end": 11668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11644,
											"end": 11668,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11644,
											"end": 11668,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11644,
											"end": 11668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11644,
											"end": 11668,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11644,
											"end": 11668,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11644,
											"end": 11684,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11644,
											"end": 11684,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11644,
											"end": 11743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11644,
											"end": 11743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11644,
											"end": 11743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11644,
											"end": 11743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11874,
											"end": 11897,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11897,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11912,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11874,
											"end": 11912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11912,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 11874,
											"end": 11928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11917,
											"end": 11927,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11874,
											"end": 11916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 11874,
											"end": 11928,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11874,
											"end": 11928,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 11874,
											"end": 11928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11833,
											"end": 11856,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11833,
											"end": 11856,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11833,
											"end": 11845,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11833,
											"end": 11856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11833,
											"end": 11856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11833,
											"end": 11856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11833,
											"end": 11856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11833,
											"end": 11856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11833,
											"end": 11856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11833,
											"end": 11856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11833,
											"end": 11856,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11833,
											"end": 11856,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11833,
											"end": 11856,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11833,
											"end": 11856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11833,
											"end": 11856,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11833,
											"end": 11871,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11833,
											"end": 11871,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11833,
											"end": 11928,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11833,
											"end": 11928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11833,
											"end": 11928,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11833,
											"end": 11928,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12023,
											"end": 12066,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4018,
											"end": 4043,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4018,
											"end": 4043,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4018,
											"end": 4043,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11833,
											"end": 11856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11833,
											"end": 11856,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12042,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12032,
											"end": 12042,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12023,
											"end": 12066,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12023,
											"end": 12066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3991,
											"end": 4009,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12023,
											"end": 12066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 3872,
											"end": 4049,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11272,
											"end": 13224,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 11272,
											"end": 13224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12450,
											"end": 12460,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12437,
											"end": 12461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12461,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12461,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12461,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12437,
											"end": 12461,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12461,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12461,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12437,
											"end": 12461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12461,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12476,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12437,
											"end": 12476,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12476,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12423,
											"end": 12476,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12423,
											"end": 12476,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12423,
											"end": 12476,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12415,
											"end": 12477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 12415,
											"end": 12477,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12415,
											"end": 12477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12415,
											"end": 12477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12415,
											"end": 12477,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12415,
											"end": 12477,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 12415,
											"end": 12477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12677,
											"end": 12687,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12664,
											"end": 12676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12664,
											"end": 12688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12664,
											"end": 12688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12664,
											"end": 12688,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12664,
											"end": 12688,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12664,
											"end": 12688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12664,
											"end": 12688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12664,
											"end": 12688,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12664,
											"end": 12688,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12664,
											"end": 12688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12664,
											"end": 12688,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12664,
											"end": 12703,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12664,
											"end": 12703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12664,
											"end": 12703,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12664,
											"end": 12719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 12664,
											"end": 12719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12708,
											"end": 12718,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12664,
											"end": 12707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 12664,
											"end": 12719,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12664,
											"end": 12719,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 12664,
											"end": 12719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12635,
											"end": 12645,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12622,
											"end": 12646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12646,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12646,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12622,
											"end": 12646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12646,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12646,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12622,
											"end": 12646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12646,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12646,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12661,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12622,
											"end": 12661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12719,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12719,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12622,
											"end": 12719,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12852,
											"end": 12875,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12852,
											"end": 12875,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12852,
											"end": 12875,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12852,
											"end": 12875,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12852,
											"end": 12875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12852,
											"end": 12875,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12852,
											"end": 12890,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12852,
											"end": 12890,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12852,
											"end": 12906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 12852,
											"end": 12906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12895,
											"end": 12905,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12852,
											"end": 12894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 12852,
											"end": 12906,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11136,
											"end": 13253,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 11136,
											"end": 13253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13248,
											"end": 13253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13241,
											"end": 13253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 13241,
											"end": 13253,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 4307,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3447,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3691,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3680,
											"end": 3691,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3677,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3666,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3657,
											"end": 3691,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 3649,
											"end": 3728,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3649,
											"end": 3728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3649,
											"end": 3728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5004,
											"end": 5006,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3649,
											"end": 3728,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3649,
											"end": 3728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3649,
											"end": 3728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4986,
											"end": 5007,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4986,
											"end": 5007,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4986,
											"end": 5007,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5023,
											"end": 5041,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5023,
											"end": 5041,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5023,
											"end": 5041,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5016,
											"end": 5046,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5082,
											"end": 5116,
											"name": "PUSH",
											"source": 9,
											"value": "4E65656420746F2073656E6420657861637420616D6F756E74206F6620776569"
										},
										{
											"begin": 5062,
											"end": 5080,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5062,
											"end": 5080,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5062,
											"end": 5080,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5055,
											"end": 5117,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5134,
											"end": 5152,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5134,
											"end": 5152,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3649,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 4802,
											"end": 5158,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3649,
											"end": 3728,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 3649,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1620,
											"name": "PUSH",
											"source": 0,
											"value": "AB8483F64D9C6D1ECF9B849AE677DD3315835CB2"
										},
										{
											"begin": 3747,
											"end": 3780,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3747,
											"end": 3780,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3760,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3747,
											"end": 3780,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3747,
											"end": 3780,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3780,
											"name": "PUSH",
											"source": 0,
											"value": "9D4D959825F0680278E64197773B2A50CD78B2B2CB00711DDBEEBF0BF93CD8A4"
										},
										{
											"begin": 3747,
											"end": 3792,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3792,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3747,
											"end": 3792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3801,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3801,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 3747,
											"end": 3858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1694,
											"end": 1736,
											"name": "PUSH",
											"source": 0,
											"value": "AB8483F64D9C6D1ECF9B849AE677DD3315835CB2"
										},
										{
											"begin": 3805,
											"end": 3837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3805,
											"end": 3837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3818,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3805,
											"end": 3837,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3805,
											"end": 3837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3837,
											"name": "PUSH",
											"source": 0,
											"value": "9D4D959825F0680278E64197773B2A50CD78B2B2CB00711DDBEEBF0BF93CD8A4"
										},
										{
											"begin": 3805,
											"end": 3849,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3849,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3805,
											"end": 3849,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3858,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3858,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 3747,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3739,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 3739,
											"end": 3922,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3739,
											"end": 3922,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3739,
											"end": 3922,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3739,
											"end": 3922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3739,
											"end": 3922,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5365,
											"end": 5367,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3739,
											"end": 3922,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3739,
											"end": 3922,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3739,
											"end": 3922,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5347,
											"end": 5368,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5406,
											"name": "PUSH",
											"source": 9,
											"value": "3B"
										},
										{
											"begin": 5384,
											"end": 5402,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5384,
											"end": 5402,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5384,
											"end": 5402,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5377,
											"end": 5407,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5443,
											"end": 5477,
											"name": "PUSH",
											"source": 9,
											"value": "447572696E672074686520736565642070686173652C20746865207472616E73"
										},
										{
											"begin": 5423,
											"end": 5441,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5423,
											"end": 5441,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5423,
											"end": 5441,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5478,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5514,
											"end": 5543,
											"name": "PUSH",
											"source": 9,
											"value": "666572206F6620746F6B656E732069732070726F686962697465640000000000"
										},
										{
											"begin": 5494,
											"end": 5512,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5494,
											"end": 5512,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5512,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5487,
											"end": 5544,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5580,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 5561,
											"end": 5580,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3739,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 5163,
											"end": 5586,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3739,
											"end": 3922,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 3739,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1620,
											"name": "PUSH",
											"source": 0,
											"value": "AB8483F64D9C6D1ECF9B849AE677DD3315835CB2"
										},
										{
											"begin": 3937,
											"end": 3970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3937,
											"end": 3970,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 3950,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3937,
											"end": 3970,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3937,
											"end": 3970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 3970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 3970,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 3970,
											"name": "PUSH",
											"source": 0,
											"value": "9D4D959825F0680278E64197773B2A50CD78B2B2CB00711DDBEEBF0BF93CD8A4"
										},
										{
											"begin": 3937,
											"end": 3982,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 3982,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3937,
											"end": 3982,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 3990,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 3990,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3937,
											"end": 3990,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3933,
											"end": 4300,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3933,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 3933,
											"end": 4300,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4063,
											"end": 4073,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4062,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4050,
											"end": 4074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4074,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4074,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4050,
											"end": 4074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4074,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4074,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4050,
											"end": 4074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4074,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4090,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4050,
											"end": 4090,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4090,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 4050,
											"end": 4103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4095,
											"end": 4102,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 4050,
											"end": 4103,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4050,
											"end": 4103,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 4050,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4030,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4031,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4031,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4007,
											"end": 4031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4031,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4031,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4007,
											"end": 4031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4031,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4047,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4007,
											"end": 4047,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4007,
											"end": 4103,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 727,
											"end": 899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 727,
											"end": 899,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3933,
											"end": 4300,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 3933,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1736,
											"name": "PUSH",
											"source": 0,
											"value": "AB8483F64D9C6D1ECF9B849AE677DD3315835CB2"
										},
										{
											"begin": 4125,
											"end": 4157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4125,
											"end": 4157,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4138,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4125,
											"end": 4157,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4125,
											"end": 4157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4157,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4157,
											"name": "PUSH",
											"source": 0,
											"value": "9D4D959825F0680278E64197773B2A50CD78B2B2CB00711DDBEEBF0BF93CD8A4"
										},
										{
											"begin": 4125,
											"end": 4169,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4169,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4125,
											"end": 4169,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4177,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4177,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4125,
											"end": 4177,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4300,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 4121,
											"end": 4300,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4259,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4248,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4236,
											"end": 4260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4260,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4236,
											"end": 4260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4260,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4260,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4236,
											"end": 4260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4260,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4275,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4236,
											"end": 4275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4275,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 4236,
											"end": 4288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4287,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 4236,
											"end": 4288,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4236,
											"end": 4288,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 4236,
											"end": 4288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4207,
											"end": 4217,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4194,
											"end": 4218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4218,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4194,
											"end": 4218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4194,
											"end": 4218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4218,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4233,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4194,
											"end": 4233,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4194,
											"end": 4288,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 4307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3447,
											"end": 4307,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2846,
											"end": 2965,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 2846,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2911,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2934,
											"end": 2935,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2929,
											"end": 2930,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2929,
											"end": 2935,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2929,
											"end": 2935,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 2922,
											"end": 2936,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 2922,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 2922,
											"end": 2936,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2922,
											"end": 2936,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 2922,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2952,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2956,
											"end": 2957,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2952,
											"end": 2953,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2952,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 2952,
											"end": 2957,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2422,
											"end": 2563,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 2422,
											"end": 2563,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2480,
											"end": 2487,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2487,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2510,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 2514,
											"end": 2515,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2510,
											"end": 2511,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2510,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 2510,
											"end": 2515,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2510,
											"end": 2515,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 2510,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2498,
											"end": 2515,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2498,
											"end": 2515,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2537,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2532,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2524,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2524,
											"end": 2538,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2524,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 2524,
											"end": 2538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 2524,
											"end": 2538,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 771,
											"end": 1971,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 771,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 889,
											"end": 893,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 934,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 934,
											"end": 955,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 955,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 934,
											"end": 955,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 934,
											"end": 955,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 955,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 934,
											"end": 955,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 934,
											"end": 955,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 934,
											"end": 955,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 934,
											"end": 955,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 934,
											"end": 955,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 934,
											"end": 955,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 934,
											"end": 955,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 934,
											"end": 955,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1CD95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 934,
											"end": 955,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 934,
											"end": 955,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 934,
											"end": 955,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 934,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 934,
											"end": 955,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 934,
											"end": 955,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 934,
											"end": 955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 910,
											"end": 930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 924,
											"end": 929,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 910,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 910,
											"end": 930,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 910,
											"end": 930,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 910,
											"end": 930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 910,
											"end": 955,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 906,
											"end": 1964,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 906,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 906,
											"end": 1964,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 976,
											"end": 1007,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 976,
											"end": 1007,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 976,
											"end": 1007,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 976,
											"end": 1007,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 976,
											"end": 1007,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 976,
											"end": 1007,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 976,
											"end": 989,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 976,
											"end": 1007,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 976,
											"end": 1007,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 976,
											"end": 1007,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 976,
											"end": 1007,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 976,
											"end": 1007,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 976,
											"end": 1019,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 976,
											"end": 1019,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 976,
											"end": 1019,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 976,
											"end": 1028,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 976,
											"end": 1028,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 976,
											"end": 1028,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 976,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 976,
											"end": 1083,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1032,
											"end": 1045,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1032,
											"end": 1062,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1032,
											"end": 1074,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1032,
											"end": 1074,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1032,
											"end": 1074,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1032,
											"end": 1083,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 976,
											"end": 1083,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 976,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 972,
											"end": 1111,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 972,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 972,
											"end": 1111,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1107,
											"end": 1111,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1100,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1100,
											"end": 1111,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 906,
											"end": 1964,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 906,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1292,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 1292,
											"end": 1316,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1292,
											"end": 1316,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1292,
											"end": 1316,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1292,
											"end": 1316,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1292,
											"end": 1316,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1292,
											"end": 1316,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1292,
											"end": 1316,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1292,
											"end": 1316,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1292,
											"end": 1316,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1292,
											"end": 1316,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1292,
											"end": 1316,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1292,
											"end": 1316,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1292,
											"end": 1316,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70726976617465"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1292,
											"end": 1316,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1292,
											"end": 1316,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1292,
											"end": 1316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1292,
											"end": 1316,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1292,
											"end": 1316,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 1292,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 1282,
											"end": 1287,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1268,
											"end": 1288,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1268,
											"end": 1288,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 1268,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1268,
											"end": 1316,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1264,
											"end": 1964,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1264,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 1264,
											"end": 1964,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1337,
											"end": 1368,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1368,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1368,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1368,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1368,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1368,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1350,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1337,
											"end": 1368,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1337,
											"end": 1368,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1368,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1368,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1368,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1337,
											"end": 1368,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1368,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1368,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1337,
											"end": 1380,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1388,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1388,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1337,
											"end": 1388,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1333,
											"end": 1415,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1333,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1333,
											"end": 1415,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1411,
											"end": 1415,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1404,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1404,
											"end": 1415,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1264,
											"end": 1964,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 1264,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 1596,
											"end": 1619,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1596,
											"end": 1619,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1619,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1619,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1596,
											"end": 1619,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1619,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1596,
											"end": 1619,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1619,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1619,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1596,
											"end": 1619,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1619,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1619,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1596,
											"end": 1619,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7075626C6963"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1596,
											"end": 1619,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1619,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1619,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1596,
											"end": 1619,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1596,
											"end": 1619,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 1596,
											"end": 1619,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1572,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 1586,
											"end": 1591,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1572,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1572,
											"end": 1592,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1572,
											"end": 1592,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 1572,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1572,
											"end": 1619,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1964,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1568,
											"end": 1964,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1640,
											"end": 1670,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1670,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1670,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1670,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1670,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1670,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1653,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1640,
											"end": 1670,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1640,
											"end": 1670,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1670,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1670,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1670,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1640,
											"end": 1670,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1670,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1670,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1682,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1682,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1640,
											"end": 1682,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1690,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1690,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1690,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1716,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1636,
											"end": 1716,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1712,
											"end": 1716,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1705,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1705,
											"end": 1716,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 405,
											"end": 693,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 405,
											"end": 693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 453,
											"end": 457,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 453,
											"end": 457,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 487,
											"end": 497,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 474,
											"end": 486,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 474,
											"end": 498,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 474,
											"end": 498,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 474,
											"end": 498,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 474,
											"end": 498,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 474,
											"end": 498,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 474,
											"end": 498,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 474,
											"end": 498,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 474,
											"end": 498,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 474,
											"end": 498,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 474,
											"end": 498,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 474,
											"end": 503,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 474,
											"end": 503,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 474,
											"end": 503,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 474,
											"end": 524,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 474,
											"end": 524,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 474,
											"end": 524,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 474,
											"end": 524,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 474,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 474,
											"end": 524,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 474,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 474,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 474,
											"end": 524,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 474,
											"end": 524,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 474,
											"end": 524,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 474,
											"end": 524,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 470,
											"end": 550,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 470,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 470,
											"end": 550,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 546,
											"end": 550,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 546,
											"end": 550,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 405,
											"end": 693,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 470,
											"end": 550,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 470,
											"end": 550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 624,
											"end": 629,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 624,
											"end": 629,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 405,
											"end": 693,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "168"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "300"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "301"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "300"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "303"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "306"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "303"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "304"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "306"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "304"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "306"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "305"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "306"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "305"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "306"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "307"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "308"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "307"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "308"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "309"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "307"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "309"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 210,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 185,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 131,
											"end": 185,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 121,
											"end": 186,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 121,
											"end": 186,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 111,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 111,
											"end": 204,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 200,
											"end": 201,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 198,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 190,
											"end": 202,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 215,
											"end": 934,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 215,
											"end": 934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 258,
											"end": 263,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 311,
											"end": 314,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 304,
											"end": 308,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 296,
											"end": 302,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 292,
											"end": 309,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 288,
											"end": 315,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 278,
											"end": 333,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 278,
											"end": 333,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 329,
											"end": 330,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 326,
											"end": 327,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 319,
											"end": 331,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 278,
											"end": 333,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 278,
											"end": 333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 365,
											"end": 371,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 352,
											"end": 372,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 391,
											"end": 409,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 428,
											"end": 430,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 424,
											"end": 426,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 421,
											"end": 431,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 418,
											"end": 454,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 418,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 418,
											"end": 454,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 434,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 434,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 434,
											"end": 452,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 434,
											"end": 452,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 434,
											"end": 452,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 509,
											"end": 511,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 503,
											"end": 512,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 477,
											"end": 479,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 563,
											"end": 576,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 563,
											"end": 576,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 559,
											"end": 581,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 559,
											"end": 581,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 559,
											"end": 581,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 583,
											"end": 585,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 555,
											"end": 586,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 551,
											"end": 591,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 539,
											"end": 592,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 539,
											"end": 592,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 539,
											"end": 592,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 607,
											"end": 625,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 607,
											"end": 625,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 607,
											"end": 625,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 627,
											"end": 649,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 627,
											"end": 649,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 627,
											"end": 649,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 604,
											"end": 650,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 601,
											"end": 673,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 601,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 601,
											"end": 673,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 653,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 653,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 653,
											"end": 671,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 653,
											"end": 671,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 653,
											"end": 671,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 693,
											"end": 703,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 689,
											"end": 691,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 682,
											"end": 704,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 728,
											"end": 730,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 720,
											"end": 726,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 713,
											"end": 731,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 774,
											"end": 777,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 767,
											"end": 771,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 762,
											"end": 764,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 754,
											"end": 760,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 750,
											"end": 765,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 746,
											"end": 772,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 743,
											"end": 778,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 740,
											"end": 795,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 740,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 740,
											"end": 795,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 791,
											"end": 792,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 788,
											"end": 789,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 781,
											"end": 793,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 740,
											"end": 795,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 740,
											"end": 795,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 855,
											"end": 857,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 848,
											"end": 852,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 840,
											"end": 846,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 836,
											"end": 853,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 829,
											"end": 833,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 804,
											"end": 858,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 902,
											"end": 903,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 899,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 890,
											"end": 892,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 878,
											"end": 893,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 874,
											"end": 900,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 867,
											"end": 904,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 922,
											"end": 928,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 913,
											"end": 928,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 913,
											"end": 928,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 913,
											"end": 928,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 913,
											"end": 928,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 913,
											"end": 928,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 913,
											"end": 928,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 215,
											"end": 934,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 215,
											"end": 934,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 215,
											"end": 934,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 215,
											"end": 934,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 215,
											"end": 934,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 939,
											"end": 1125,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 939,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 998,
											"end": 1004,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1053,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1039,
											"end": 1048,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1030,
											"end": 1037,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1026,
											"end": 1049,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1022,
											"end": 1054,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1019,
											"end": 1071,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1019,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 1019,
											"end": 1071,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1067,
											"end": 1068,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1065,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1057,
											"end": 1069,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1019,
											"end": 1071,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 1019,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1090,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 1090,
											"end": 1119,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1130,
											"end": 1390,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 1130,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1198,
											"end": 1204,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1206,
											"end": 1212,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1261,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1247,
											"end": 1256,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1238,
											"end": 1245,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1234,
											"end": 1257,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1230,
											"end": 1262,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1279,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 1227,
											"end": 1279,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1275,
											"end": 1276,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 1273,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1277,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1279,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 1227,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1298,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 1317,
											"end": 1326,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1298,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 1298,
											"end": 1327,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1298,
											"end": 1327,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 1298,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1327,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1288,
											"end": 1327,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 1380,
											"end": 1382,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1369,
											"end": 1378,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1365,
											"end": 1383,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1346,
											"end": 1384,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 1346,
											"end": 1384,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1346,
											"end": 1384,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 1346,
											"end": 1384,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1336,
											"end": 1384,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1336,
											"end": 1384,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1130,
											"end": 1390,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1130,
											"end": 1390,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1130,
											"end": 1390,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1130,
											"end": 1390,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1130,
											"end": 1390,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1130,
											"end": 1390,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1395,
											"end": 1723,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1395,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1472,
											"end": 1478,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1480,
											"end": 1486,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1541,
											"end": 1543,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1529,
											"end": 1538,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1527,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1516,
											"end": 1539,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1512,
											"end": 1544,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1509,
											"end": 1561,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1509,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 1509,
											"end": 1561,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1557,
											"end": 1558,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1554,
											"end": 1555,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1547,
											"end": 1559,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1509,
											"end": 1561,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 1509,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1580,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 1599,
											"end": 1608,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1580,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 1580,
											"end": 1609,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1580,
											"end": 1609,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 1580,
											"end": 1609,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1570,
											"end": 1609,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1570,
											"end": 1609,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1628,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 1662,
											"end": 1664,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1651,
											"end": 1660,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1647,
											"end": 1665,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1628,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 1628,
											"end": 1666,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1628,
											"end": 1666,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 1628,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1618,
											"end": 1666,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1618,
											"end": 1666,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1713,
											"end": 1715,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1702,
											"end": 1711,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1716,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1685,
											"end": 1717,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1675,
											"end": 1717,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1675,
											"end": 1717,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1723,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1723,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1723,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1723,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1723,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1723,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1728,
											"end": 1982,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1728,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1802,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1804,
											"end": 1810,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1857,
											"end": 1859,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1845,
											"end": 1854,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1836,
											"end": 1843,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1832,
											"end": 1855,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1828,
											"end": 1860,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1877,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 1825,
											"end": 1877,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1874,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1870,
											"end": 1871,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1825,
											"end": 1877,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 1825,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 1915,
											"end": 1924,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 1896,
											"end": 1925,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1896,
											"end": 1925,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 1896,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1886,
											"end": 1925,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1972,
											"end": 1974,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1957,
											"end": 1975,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1957,
											"end": 1975,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1957,
											"end": 1975,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1957,
											"end": 1975,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1944,
											"end": 1976,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1944,
											"end": 1976,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1728,
											"end": 1982,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1987,
											"end": 2260,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 1987,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2043,
											"end": 2049,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2096,
											"end": 2098,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2082,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2071,
											"end": 2094,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2067,
											"end": 2099,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2116,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 2064,
											"end": 2116,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2112,
											"end": 2113,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2109,
											"end": 2110,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2102,
											"end": 2114,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2064,
											"end": 2116,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 2064,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2151,
											"end": 2160,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2138,
											"end": 2161,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2197,
											"end": 2210,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2190,
											"end": 2211,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2183,
											"end": 2188,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2180,
											"end": 2212,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2170,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 2170,
											"end": 2230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2226,
											"end": 2227,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2223,
											"end": 2224,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2265,
											"end": 2587,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 2265,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2334,
											"end": 2340,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2387,
											"end": 2389,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2375,
											"end": 2384,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2366,
											"end": 2373,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2362,
											"end": 2385,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2358,
											"end": 2390,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2355,
											"end": 2407,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2355,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 2355,
											"end": 2407,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2403,
											"end": 2404,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2400,
											"end": 2401,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2355,
											"end": 2407,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 2355,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2443,
											"end": 2452,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2430,
											"end": 2453,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2476,
											"end": 2494,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2468,
											"end": 2474,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2465,
											"end": 2495,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2462,
											"end": 2512,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2462,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 2462,
											"end": 2512,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2508,
											"end": 2509,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2506,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2498,
											"end": 2510,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2462,
											"end": 2512,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 2462,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2531,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 2573,
											"end": 2580,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 2570,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2553,
											"end": 2562,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2549,
											"end": 2571,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2531,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 2531,
											"end": 2581,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2531,
											"end": 2581,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 2531,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2521,
											"end": 2581,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2265,
											"end": 2587,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2265,
											"end": 2587,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2592,
											"end": 3209,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2592,
											"end": 3209,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2689,
											"end": 2695,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2697,
											"end": 2703,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2711,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 2760,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2746,
											"end": 2755,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2737,
											"end": 2744,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2756,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2729,
											"end": 2761,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2778,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 2726,
											"end": 2778,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2774,
											"end": 2775,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2771,
											"end": 2772,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2764,
											"end": 2776,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2726,
											"end": 2778,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 2726,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2814,
											"end": 2823,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2801,
											"end": 2824,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2843,
											"end": 2861,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2884,
											"end": 2886,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2876,
											"end": 2882,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 2887,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2900,
											"end": 2901,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2897,
											"end": 2898,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 2902,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 2870,
											"end": 2904,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2923,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 2965,
											"end": 2972,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2956,
											"end": 2962,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 2954,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2941,
											"end": 2963,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2923,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 2923,
											"end": 2973,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2923,
											"end": 2973,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 2923,
											"end": 2973,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2913,
											"end": 2973,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 2913,
											"end": 2973,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3028,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3015,
											"end": 3024,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3011,
											"end": 3029,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2998,
											"end": 3030,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3030,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3030,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3055,
											"end": 3057,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3053,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3042,
											"end": 3058,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3071,
											"end": 3072,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3068,
											"end": 3069,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3061,
											"end": 3073,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3039,
											"end": 3075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 3138,
											"end": 3145,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3127,
											"end": 3135,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3116,
											"end": 3125,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3112,
											"end": 3136,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 3094,
											"end": 3146,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3094,
											"end": 3146,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 3094,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3146,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3165,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 3199,
											"end": 3201,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3188,
											"end": 3197,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3184,
											"end": 3202,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3165,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 3165,
											"end": 3203,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3165,
											"end": 3203,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 3165,
											"end": 3203,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3155,
											"end": 3203,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3155,
											"end": 3203,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 3209,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 3209,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 3209,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 3209,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 3209,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 3209,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3214,
											"end": 3394,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 3214,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3273,
											"end": 3279,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3328,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3314,
											"end": 3323,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3305,
											"end": 3312,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3301,
											"end": 3324,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3297,
											"end": 3329,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3346,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 3294,
											"end": 3346,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3343,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3340,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3344,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3294,
											"end": 3346,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 3294,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3365,
											"end": 3388,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3365,
											"end": 3388,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3214,
											"end": 3394,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3214,
											"end": 3394,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3399,
											"end": 3675,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 3399,
											"end": 3675,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3530,
											"end": 3533,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3568,
											"end": 3574,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3562,
											"end": 3575,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3584,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 3630,
											"end": 3636,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3625,
											"end": 3628,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3618,
											"end": 3622,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3610,
											"end": 3616,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3606,
											"end": 3623,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3584,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 3584,
											"end": 3637,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3584,
											"end": 3637,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 3584,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3669,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3669,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3653,
											"end": 3669,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3399,
											"end": 3675,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3399,
											"end": 3675,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4054,
											"end": 4437,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 4054,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4203,
											"end": 4205,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4201,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4185,
											"end": 4206,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4170,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4235,
											"end": 4241,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4229,
											"end": 4242,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4278,
											"end": 4284,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4273,
											"end": 4275,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4262,
											"end": 4271,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4258,
											"end": 4276,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4251,
											"end": 4285,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4294,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 4353,
											"end": 4359,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4350,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4337,
											"end": 4346,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4333,
											"end": 4351,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4328,
											"end": 4330,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4320,
											"end": 4326,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4331,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4294,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 4294,
											"end": 4360,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 4294,
											"end": 4360,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 4294,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4421,
											"end": 4423,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4400,
											"end": 4415,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4396,
											"end": 4425,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4381,
											"end": 4426,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4381,
											"end": 4426,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4381,
											"end": 4426,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4381,
											"end": 4426,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4377,
											"end": 4431,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4377,
											"end": 4431,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4054,
											"end": 4437,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4054,
											"end": 4437,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6662,
											"end": 6790,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 6662,
											"end": 6790,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6702,
											"end": 6705,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6733,
											"end": 6734,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6729,
											"end": 6735,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6726,
											"end": 6727,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6723,
											"end": 6736,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 6759,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 6720,
											"end": 6759,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6739,
											"end": 6757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 6739,
											"end": 6757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 6739,
											"end": 6757,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6739,
											"end": 6757,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 6739,
											"end": 6757,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6775,
											"end": 6784,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6775,
											"end": 6784,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6662,
											"end": 6790,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6795,
											"end": 6963,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 6795,
											"end": 6963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6835,
											"end": 6842,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6901,
											"end": 6902,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6897,
											"end": 6898,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6893,
											"end": 6899,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6889,
											"end": 6903,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6886,
											"end": 6887,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6883,
											"end": 6904,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6878,
											"end": 6879,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6871,
											"end": 6880,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6864,
											"end": 6881,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6860,
											"end": 6905,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6857,
											"end": 6928,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6857,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 6857,
											"end": 6928,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6908,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 6908,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 6908,
											"end": 6926,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6908,
											"end": 6926,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 6908,
											"end": 6926,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6948,
											"end": 6957,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6948,
											"end": 6957,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6795,
											"end": 6963,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6968,
											"end": 7093,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 6968,
											"end": 7093,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7008,
											"end": 7012,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7036,
											"end": 7037,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7033,
											"end": 7034,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7030,
											"end": 7038,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7027,
											"end": 7061,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7027,
											"end": 7061,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 7027,
											"end": 7061,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7041,
											"end": 7059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 7041,
											"end": 7059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 7041,
											"end": 7059,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7041,
											"end": 7059,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 7041,
											"end": 7059,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7078,
											"end": 7087,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7078,
											"end": 7087,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6968,
											"end": 7093,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7098,
											"end": 7356,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 7098,
											"end": 7356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7170,
											"end": 7171,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7180,
											"end": 7293,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 7180,
											"end": 7293,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7194,
											"end": 7200,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7191,
											"end": 7192,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7188,
											"end": 7201,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7180,
											"end": 7293,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7180,
											"end": 7293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 7180,
											"end": 7293,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7270,
											"end": 7281,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7270,
											"end": 7281,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7270,
											"end": 7281,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7264,
											"end": 7282,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7251,
											"end": 7262,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7251,
											"end": 7262,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7251,
											"end": 7262,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7244,
											"end": 7283,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7216,
											"end": 7218,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7209,
											"end": 7219,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7180,
											"end": 7293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 7180,
											"end": 7293,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7180,
											"end": 7293,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 7180,
											"end": 7293,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7311,
											"end": 7317,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7309,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7305,
											"end": 7318,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7302,
											"end": 7350,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7302,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 7302,
											"end": 7350,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7346,
											"end": 7347,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7337,
											"end": 7343,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7332,
											"end": 7335,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7328,
											"end": 7344,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7321,
											"end": 7348,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7302,
											"end": 7350,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 7302,
											"end": 7350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7302,
											"end": 7350,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7098,
											"end": 7356,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7098,
											"end": 7356,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7098,
											"end": 7356,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7098,
											"end": 7356,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7361,
											"end": 7798,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 7361,
											"end": 7798,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7440,
											"end": 7441,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7436,
											"end": 7448,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7436,
											"end": 7448,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7436,
											"end": 7448,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 7436,
											"end": 7448,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7483,
											"end": 7495,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7483,
											"end": 7495,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7483,
											"end": 7495,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7504,
											"end": 7565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 7504,
											"end": 7565,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7558,
											"end": 7562,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 7550,
											"end": 7556,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7546,
											"end": 7563,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7536,
											"end": 7563,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7536,
											"end": 7563,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7504,
											"end": 7565,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 7504,
											"end": 7565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7611,
											"end": 7613,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7603,
											"end": 7609,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7600,
											"end": 7614,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7580,
											"end": 7598,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7577,
											"end": 7615,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 7574,
											"end": 7792,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7574,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 7574,
											"end": 7792,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7645,
											"end": 7646,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7638,
											"end": 7726,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7749,
											"end": 7753,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 7746,
											"end": 7747,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7739,
											"end": 7754,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7777,
											"end": 7781,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7774,
											"end": 7775,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7767,
											"end": 7782,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7574,
											"end": 7792,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 7574,
											"end": 7792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7574,
											"end": 7792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7361,
											"end": 7798,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7361,
											"end": 7798,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7361,
											"end": 7798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7361,
											"end": 7798,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7803,
											"end": 7987,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 7803,
											"end": 7987,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7852,
											"end": 7853,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 7933,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7952,
											"end": 7956,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7949,
											"end": 7950,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7942,
											"end": 7957,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7976,
											"end": 7980,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7973,
											"end": 7974,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7966,
											"end": 7981,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7992,
											"end": 8176,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 7992,
											"end": 8176,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8041,
											"end": 8042,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8034,
											"end": 8122,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8141,
											"end": 8145,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 8138,
											"end": 8139,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8131,
											"end": 8146,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8165,
											"end": 8169,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8162,
											"end": 8163,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8155,
											"end": 8170,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8181,
											"end": 8365,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 8181,
											"end": 8365,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8230,
											"end": 8231,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8223,
											"end": 8311,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8330,
											"end": 8334,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 8327,
											"end": 8328,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8320,
											"end": 8335,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8354,
											"end": 8358,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8351,
											"end": 8352,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8344,
											"end": 8359,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8370,
											"end": 8554,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 8370,
											"end": 8554,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8419,
											"end": 8420,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8412,
											"end": 8500,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8519,
											"end": 8523,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 8516,
											"end": 8517,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8509,
											"end": 8524,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8543,
											"end": 8547,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8540,
											"end": 8541,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8533,
											"end": 8548,
											"name": "REVERT",
											"source": 9
										}
									]
								},
								"AAFB3744B162F07202C1CEC14B08048E79801D7C878B2C0EAB16DD2801FEC9CE": "d0917daa0b256b4ca08bff93fec91cc093247bf3cc8b97e585b3c6329d4b8765",
								"ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
								"B419932D51BF6BDFED16BAE3F9F1F38A5DF16D2EF9B0328748B1D9EDD7C1E16C": "1a1017a437881fd8fee8ab135586d886995df9286bd91e5d3c250f79b2327f02",
								"E92B278610CE8B6027EF7AD432103699B0132D8B129C33A54A54AA5151A105A3": "000000000000000000000000ab8483f64d9c6d1ecf9b849ae677dd3315835cb2"
							}
						},
						"methodIdentifiers": {
							"acceptApplication(bool)": "9d9e7a4b",
							"allowance(address,address)": "dd62ed3e",
							"application(string,string,address)": "785963c3",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"buy(uint256)": "d96a094a",
							"decimals()": "313ce567",
							"get_keccak256(string)": "8e4f8c6b",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"tokenPrice_()": "0761c8b9",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_changeStatus\",\"type\":\"bool\"}],\"name\":\"acceptApplication\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_contactForCommunication\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_userAdr\",\"type\":\"address\"}],\"name\":\"application\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_numTokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"get_keccak256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice_\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_numTokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_numTokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":\"CryptoMonster\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol\":{\"keccak256\":\"0x0ebf2f2f94db6bfab21f7c02536d40a85749a2f7bf782cb5409077dd89d96e24\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://79dd0e9c4bdda2c7a2b032082e9b191c4ff186f420a282c08ca48a2a246fc143\",\"dweb:/ipfs/QmNnzp4w79ZY1qqsZg2gHc32P8vCfmJ6SnTS8eHJPa8Aky\"]},\"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":{\"keccak256\":\"0xb10734f833c3608bfda9ce0ef122b8af6de2f149160f414e1fde8251a265a84b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4f6203e623b16f8e532651e491d1567978631fb56c8e47d528e5b322cbfbb949\",\"dweb:/ipfs/Qmbr3eg2r5anpdi18SZGcwHWkHsuFWaLSkPJf16rEUFEpj\"]},\"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":{\"keccak256\":\"0x7eb7196e1b7b443e24557c7b762c5dae41c3a19237ce772fbba576a18ad0aaaa\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8eec3fa265e4675e9e786dbbd60d81f54073a71b3d7c166d8c2aaba5053fe0a9\",\"dweb:/ipfs/QmNWrixnhZwE74CxqxRvG23A71nWd5i1jm8Gub2H36Y1hx\"]},\"Documents/GitHub/contract-token-cryptoMonster/backend/components/main.sol\":{\"keccak256\":\"0x2b6f90db3286bd0b5474121cbe4494f8cf0d80a91fbc07d0c1285f7059dad479\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a27fdbd0670496dcb4858537f21665266b3d6e9d850d9eee9698f8801aa8990c\",\"dweb:/ipfs/QmNSUsQQrBfNEAeeuNuVfYFu2U4TTKDHx6283eTUJbMsLu\"]},\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":{\"keccak256\":\"0x55073c985c0ace969bfd71eedd56019c7349e65b5ece564d2a0518810e901c81\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b29b6d3e009cfcd406945988b1338f5512656f14a49fc8d8825024e81de023fe\",\"dweb:/ipfs/QmVDcL7SM8t2R5ZAAGNFJhAUHvJQEX2wRrKihVWHiNLma2\"]},\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":{\"keccak256\":\"0x55a8643a4e2500eea6f59f7e7f566793931fec76dcb865f101a6f7bd99b6f503\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bb96275c62c97e4259aa8c07867efff9a59d8968a2c668f84e597efba46b9252\",\"dweb:/ipfs/QmPEDXJmNEX1skQRrvGdWtzsguaiW1MkGH3b3xnfoBZ3vG\"]},\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/IERC20.sol\":{\"keccak256\":\"0xaf036a21cac1b39999f4f57c20939eb30c1c818c3ad3ac99010fcbad0badb5ff\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7f0cbb48bb4360ed1412721ecfbb7c2fb5ccd113b76d993fca357f4c999b7dc2\",\"dweb:/ipfs/QmVsEVBc8wG37chWLLCM3AAdwJBppXqEqUBL3SWGuMqw1m\"]},\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":{\"keccak256\":\"0xf430ff20a1998bdd5fa93c6b9e623cce686a19b73e97f317012b06c01de28661\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7a5ff8e7dfa39317a4fb4bcf89c7adcd32fadf8e2614c9c2d313a84fa65449bd\",\"dweb:/ipfs/Qmf9dYztjw9AZdsMuxW4YBNzE8Z9u2Ke9WBFhzSnbffKy4\"]},\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":{\"keccak256\":\"0x3c4d55fff6547a670227273cabf6e5cd6279729590c2415e26148beed5975392\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://31dfe220e5e8f93ca63e6021e3fdf2115f3672410395d5ba5cceb197c48e921f\",\"dweb:/ipfs/QmcMwAuz3HM2QT4HWoHUxny2HqbtibVdu3gDwkeEs9Xyn7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1911,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol:CryptoMonster",
								"label": "structUsers_",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(structUser)1906_storage)"
							},
							{
								"astId": 1921,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol:CryptoMonster",
								"label": "structPhases_",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(structPhase)1916_storage)"
							},
							{
								"astId": 1939,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol:CryptoMonster",
								"label": "strucApplications_",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(structApplication)1934_storage)"
							},
							{
								"astId": 1289,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol:CryptoMonster",
								"label": "investorFirstAdr",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1292,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol:CryptoMonster",
								"label": "investorSecondAdr",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 1295,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol:CryptoMonster",
								"label": "bestFriendAdr",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 32,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol:CryptoMonster",
								"label": "allowed",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 34,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol:CryptoMonster",
								"label": "totalSupply_",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 37,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol:CryptoMonster",
								"label": "tokenPrice_",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(Role)1890": {
								"encoding": "inplace",
								"label": "enum structures.Role",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(structApplication)1934_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structApplication)",
								"numberOfBytes": "32",
								"value": "t_struct(structApplication)1934_storage"
							},
							"t_mapping(t_address,t_struct(structPhase)1916_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structPhase)",
								"numberOfBytes": "32",
								"value": "t_struct(structPhase)1916_storage"
							},
							"t_mapping(t_address,t_struct(structUser)1906_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structUser)",
								"numberOfBytes": "32",
								"value": "t_struct(structUser)1906_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(structApplication)1934_storage": {
								"encoding": "inplace",
								"label": "struct structures.structApplication",
								"members": [
									{
										"astId": 1923,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol:CryptoMonster",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 1925,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol:CryptoMonster",
										"label": "contactForCommunication",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 1927,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol:CryptoMonster",
										"label": "userAdr",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 1929,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol:CryptoMonster",
										"label": "status",
										"offset": 20,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 1931,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol:CryptoMonster",
										"label": "reviewed",
										"offset": 21,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 1933,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol:CryptoMonster",
										"label": "exist",
										"offset": 22,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(structPhase)1916_storage": {
								"encoding": "inplace",
								"label": "struct structures.structPhase",
								"members": [
									{
										"astId": 1913,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol:CryptoMonster",
										"label": "statusPhase",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 1915,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol:CryptoMonster",
										"label": "reviewed",
										"offset": 1,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(structUser)1906_storage": {
								"encoding": "inplace",
								"label": "struct structures.structUser",
								"members": [
									{
										"astId": 1893,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol:CryptoMonster",
										"label": "role",
										"offset": 0,
										"slot": "0",
										"type": "t_enum(Role)1890"
									},
									{
										"astId": 1895,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol:CryptoMonster",
										"label": "login",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 1897,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol:CryptoMonster",
										"label": "password",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									},
									{
										"astId": 1899,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol:CryptoMonster",
										"label": "balance_overall",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1901,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol:CryptoMonster",
										"label": "balance_seed",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1903,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol:CryptoMonster",
										"label": "balance_private",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1905,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol:CryptoMonster",
										"label": "balance_public",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol": {
				"PhasePrivate": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_changeStatus",
									"type": "bool"
								}
							],
							"name": "acceptApplication",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_contactForCommunication",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_userAdr",
									"type": "address"
								}
							],
							"name": "application",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_hash",
									"type": "string"
								}
							],
							"name": "get_keccak256",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":96:902  contract PhasePrivate is Main {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":96:902  contract PhasePrivate is Main {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x785963c3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8e4f8c6b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x9d9e7a4b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":224:651  function application(string memory _name, string memory _contactForCommunication, address _userAdr) public {\r... */\n    tag_3:\n      tag_6\n      tag_7\n      calldatasize\n      0x04\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      stop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":144:282  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n    tag_4:\n      tag_10\n      tag_11\n      calldatasize\n      0x04\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      mload(0x40)\n        /* \"#utility.yul\":2667:2692   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2655:2657   */\n      0x20\n        /* \"#utility.yul\":2640:2658   */\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":144:282  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":727:899  function acceptApplication (bool _changeStatus) public {\r... */\n    tag_5:\n      tag_6\n      tag_17\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":224:651  function application(string memory _name, string memory _contactForCommunication, address _userAdr) public {\r... */\n    tag_9:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":369:379  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":350:380  strucApplications_[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":350:368  strucApplications_ */\n      0x02\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":350:380  strucApplications_[msg.sender] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":350:386  strucApplications_[msg.sender].exist */\n      add\n      sload\n      shl(0xb0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":350:394  strucApplications_[msg.sender].exist == true */\n      iszero\n      iszero\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":390:394  true */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":350:394  strucApplications_[msg.sender].exist == true */\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":342:424  require(strucApplications_[msg.sender].exist == true, \"Application already sent!\") */\n      tag_21\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3265:3267   */\n      0x20\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":342:424  require(strucApplications_[msg.sender].exist == true, \"Application already sent!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3247:3268   */\n      mstore\n        /* \"#utility.yul\":3304:3306   */\n      0x19\n        /* \"#utility.yul\":3284:3302   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3277:3307   */\n      mstore\n        /* \"#utility.yul\":3343:3370   */\n      0x4170706c69636174696f6e20616c72656164792073656e742100000000000000\n        /* \"#utility.yul\":3323:3341   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3316:3371   */\n      mstore\n        /* \"#utility.yul\":3388:3406   */\n      0x64\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":342:424  require(strucApplications_[msg.sender].exist == true, \"Application already sent!\") */\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_21:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":564:643  structApplication(_name, _contactForCommunication, _userAdr, true, false, true) */\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n      dup5\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      dup6\n      swap1\n      mstore\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n      dup3\n      dup5\n      add\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":625:629  true */\n      0x01\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":564:643  structApplication(_name, _contactForCommunication, _userAdr, true, false, true) */\n      0x60\n      dup4\n      add\n      dup2\n      swap1\n      mstore\n      0x00\n      0x80\n      dup5\n      add\n      dup2\n      swap1\n      mstore\n      0xa0\n      dup5\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":549:559  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":530:560  strucApplications_[msg.sender] */\n      dup2\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":530:548  strucApplications_ */\n      0x02\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":530:560  strucApplications_[msg.sender] */\n      dup3\n      mstore\n      swap3\n      swap1\n      swap3\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":530:643  strucApplications_[msg.sender]  = structApplication(_name, _contactForCommunication, _userAdr, true, false, true) */\n      dup2\n      mload\n      dup1\n      mload\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":564:643  structApplication(_name, _contactForCommunication, _userAdr, true, false, true) */\n      swap3\n      swap4\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":530:560  strucApplications_[msg.sender] */\n      swap2\n      swap3\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":530:643  strucApplications_[msg.sender]  = structApplication(_name, _contactForCommunication, _userAdr, true, false, true) */\n      tag_24\n      swap3\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":530:560  strucApplications_[msg.sender] */\n      dup5\n      swap3\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":530:643  strucApplications_[msg.sender]  = structApplication(_name, _contactForCommunication, _userAdr, true, false, true) */\n      add\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      pop\n      0x20\n      dup3\n      dup2\n      add\n      mload\n      dup1\n      mload\n      tag_26\n      swap3\n      0x01\n      dup6\n      add\n      swap3\n      add\n      swap1\n      tag_25\n      jump\t// in\n    tag_26:\n      pop\n      0x40\n      dup3\n      add\n      mload\n      0x02\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      0x60\n      dup5\n      add\n      mload\n      0x80\n      dup6\n      add\n      mload\n      0xa0\n      swap1\n      swap6\n      add\n      mload\n      iszero\n      iszero\n      shl(0xb0, 0x01)\n      mul\n      0xffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff\n      swap6\n      iszero\n      iszero\n      0x01000000000000000000000000000000000000000000\n      mul\n      swap6\n      swap1\n      swap6\n      and\n      0xffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffff\n      swap2\n      iszero\n      iszero\n      0x010000000000000000000000000000000000000000\n      mul\n      0xffffffffffffffffffffff000000000000000000000000000000000000000000\n      swap1\n      swap4\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      or\n      swap2\n      swap1\n      swap2\n      or\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":224:651  function application(string memory _name, string memory _contactForCommunication, address _userAdr) public {\r... */\n      jump\t// out\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":144:282  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n    tag_13:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":208:215  bytes32 */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":266:271  _hash */\n      dup2\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":249:272  abi.encodePacked(_hash) */\n      add(0x20, mload(0x40))\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":239:273  keccak256(abi.encodePacked(_hash)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":232:274  return(keccak256(abi.encodePacked(_hash))) */\n      swap1\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":144:282  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":727:899  function acceptApplication (bool _changeStatus) public {\r... */\n    tag_19:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":834:853  Role.SYSTEM_PRIVATE */\n      0x02\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":814:824  msg.sender */\n      caller\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":801:813  structUsers_ */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":801:825  structUsers_[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":801:830  structUsers_[msg.sender].role */\n      sload\n      0xff\n      and\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":801:853  structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_35\n      jumpi\n      tag_35\n      tag_33\n      jump\t// in\n    tag_35:\n      eq\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":793:889  require(structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"You are not a private provider!\") */\n      tag_36\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2905:2907   */\n      0x20\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":793:889  require(structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"You are not a private provider!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2887:2908   */\n      mstore\n        /* \"#utility.yul\":2944:2946   */\n      0x1f\n        /* \"#utility.yul\":2924:2942   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2917:2947   */\n      mstore\n        /* \"#utility.yul\":2983:3016   */\n      0x596f7520617265206e6f74206120707269766174652070726f76696465722100\n        /* \"#utility.yul\":2963:2981   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2956:3017   */\n      mstore\n        /* \"#utility.yul\":3034:3052   */\n      0x64\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":793:889  require(structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"You are not a private provider!\") */\n      tag_22\n        /* \"#utility.yul\":2703:3058   */\n      jump\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":793:889  require(structUsers_[msg.sender].role == Role.SYSTEM_PRIVATE, \"You are not a private provider!\") */\n    tag_36:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":727:899  function acceptApplication (bool _changeStatus) public {\r... */\n      pop\n      jump\t// out\n    tag_25:\n      dup3\n      dup1\n      sload\n      tag_39\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_42\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_45)\n    tag_42:\n      dup3\n      0x1f\n      lt\n      tag_43\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_45)\n    tag_43:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_45\n      jumpi\n      swap2\n      dup3\n      add\n    tag_44:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_45\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_44)\n    tag_45:\n      pop\n      tag_46\n      swap3\n      swap2\n      pop\n      tag_47\n      jump\t// in\n    tag_46:\n      pop\n      swap1\n      jump\t// out\n    tag_47:\n    tag_48:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_48)\n        /* \"#utility.yul\":14:733   */\n    tag_51:\n        /* \"#utility.yul\":57:62   */\n      0x00\n        /* \"#utility.yul\":110:113   */\n      dup3\n        /* \"#utility.yul\":103:107   */\n      0x1f\n        /* \"#utility.yul\":95:101   */\n      dup4\n        /* \"#utility.yul\":91:108   */\n      add\n        /* \"#utility.yul\":87:114   */\n      slt\n        /* \"#utility.yul\":77:132   */\n      tag_53\n      jumpi\n        /* \"#utility.yul\":128:129   */\n      0x00\n        /* \"#utility.yul\":125:126   */\n      dup1\n        /* \"#utility.yul\":118:130   */\n      revert\n        /* \"#utility.yul\":77:132   */\n    tag_53:\n        /* \"#utility.yul\":164:170   */\n      dup2\n        /* \"#utility.yul\":151:171   */\n      calldataload\n        /* \"#utility.yul\":190:208   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":227:229   */\n      dup1\n        /* \"#utility.yul\":223:225   */\n      dup3\n        /* \"#utility.yul\":220:230   */\n      gt\n        /* \"#utility.yul\":217:253   */\n      iszero\n      tag_55\n      jumpi\n        /* \"#utility.yul\":233:251   */\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":308:310   */\n      0x40\n        /* \"#utility.yul\":302:311   */\n      mload\n        /* \"#utility.yul\":276:278   */\n      0x1f\n        /* \"#utility.yul\":362:375   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":358:380   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":382:384   */\n      0x3f\n        /* \"#utility.yul\":354:385   */\n      add\n        /* \"#utility.yul\":350:390   */\n      and\n        /* \"#utility.yul\":338:391   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":406:424   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":426:448   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":403:449   */\n      or\n        /* \"#utility.yul\":400:472   */\n      iszero\n      tag_58\n      jumpi\n        /* \"#utility.yul\":452:470   */\n      tag_58\n      tag_56\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":492:502   */\n      dup2\n        /* \"#utility.yul\":488:490   */\n      0x40\n        /* \"#utility.yul\":481:503   */\n      mstore\n        /* \"#utility.yul\":527:529   */\n      dup4\n        /* \"#utility.yul\":519:525   */\n      dup2\n        /* \"#utility.yul\":512:530   */\n      mstore\n        /* \"#utility.yul\":573:576   */\n      dup7\n        /* \"#utility.yul\":566:570   */\n      0x20\n        /* \"#utility.yul\":561:563   */\n      dup6\n        /* \"#utility.yul\":553:559   */\n      dup9\n        /* \"#utility.yul\":549:564   */\n      add\n        /* \"#utility.yul\":545:571   */\n      add\n        /* \"#utility.yul\":542:577   */\n      gt\n        /* \"#utility.yul\":539:594   */\n      iszero\n      tag_59\n      jumpi\n        /* \"#utility.yul\":590:591   */\n      0x00\n        /* \"#utility.yul\":587:588   */\n      dup1\n        /* \"#utility.yul\":580:592   */\n      revert\n        /* \"#utility.yul\":539:594   */\n    tag_59:\n        /* \"#utility.yul\":654:656   */\n      dup4\n        /* \"#utility.yul\":647:651   */\n      0x20\n        /* \"#utility.yul\":639:645   */\n      dup8\n        /* \"#utility.yul\":635:652   */\n      add\n        /* \"#utility.yul\":628:632   */\n      0x20\n        /* \"#utility.yul\":620:626   */\n      dup4\n        /* \"#utility.yul\":616:633   */\n      add\n        /* \"#utility.yul\":603:657   */\n      calldatacopy\n        /* \"#utility.yul\":701:702   */\n      0x00\n        /* \"#utility.yul\":694:698   */\n      0x20\n        /* \"#utility.yul\":689:691   */\n      dup6\n        /* \"#utility.yul\":681:687   */\n      dup4\n        /* \"#utility.yul\":677:692   */\n      add\n        /* \"#utility.yul\":673:699   */\n      add\n        /* \"#utility.yul\":666:703   */\n      mstore\n        /* \"#utility.yul\":721:727   */\n      dup1\n        /* \"#utility.yul\":712:727   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:733   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":738:1011   */\n    tag_18:\n        /* \"#utility.yul\":794:800   */\n      0x00\n        /* \"#utility.yul\":847:849   */\n      0x20\n        /* \"#utility.yul\":835:844   */\n      dup3\n        /* \"#utility.yul\":826:833   */\n      dup5\n        /* \"#utility.yul\":822:845   */\n      sub\n        /* \"#utility.yul\":818:850   */\n      slt\n        /* \"#utility.yul\":815:867   */\n      iszero\n      tag_61\n      jumpi\n        /* \"#utility.yul\":863:864   */\n      0x00\n        /* \"#utility.yul\":860:861   */\n      dup1\n        /* \"#utility.yul\":853:865   */\n      revert\n        /* \"#utility.yul\":815:867   */\n    tag_61:\n        /* \"#utility.yul\":902:911   */\n      dup2\n        /* \"#utility.yul\":889:912   */\n      calldataload\n        /* \"#utility.yul\":955:960   */\n      dup1\n        /* \"#utility.yul\":948:961   */\n      iszero\n        /* \"#utility.yul\":941:962   */\n      iszero\n        /* \"#utility.yul\":934:939   */\n      dup2\n        /* \"#utility.yul\":931:963   */\n      eq\n        /* \"#utility.yul\":921:981   */\n      tag_62\n      jumpi\n        /* \"#utility.yul\":977:978   */\n      0x00\n        /* \"#utility.yul\":974:975   */\n      dup1\n        /* \"#utility.yul\":967:979   */\n      revert\n        /* \"#utility.yul\":921:981   */\n    tag_62:\n        /* \"#utility.yul\":1000:1005   */\n      swap4\n        /* \"#utility.yul\":738:1011   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1016:1338   */\n    tag_12:\n        /* \"#utility.yul\":1085:1091   */\n      0x00\n        /* \"#utility.yul\":1138:1140   */\n      0x20\n        /* \"#utility.yul\":1126:1135   */\n      dup3\n        /* \"#utility.yul\":1117:1124   */\n      dup5\n        /* \"#utility.yul\":1113:1136   */\n      sub\n        /* \"#utility.yul\":1109:1141   */\n      slt\n        /* \"#utility.yul\":1106:1158   */\n      iszero\n      tag_64\n      jumpi\n        /* \"#utility.yul\":1154:1155   */\n      0x00\n        /* \"#utility.yul\":1151:1152   */\n      dup1\n        /* \"#utility.yul\":1144:1156   */\n      revert\n        /* \"#utility.yul\":1106:1158   */\n    tag_64:\n        /* \"#utility.yul\":1194:1203   */\n      dup2\n        /* \"#utility.yul\":1181:1204   */\n      calldataload\n        /* \"#utility.yul\":1227:1245   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1219:1225   */\n      dup2\n        /* \"#utility.yul\":1216:1246   */\n      gt\n        /* \"#utility.yul\":1213:1263   */\n      iszero\n      tag_65\n      jumpi\n        /* \"#utility.yul\":1259:1260   */\n      0x00\n        /* \"#utility.yul\":1256:1257   */\n      dup1\n        /* \"#utility.yul\":1249:1261   */\n      revert\n        /* \"#utility.yul\":1213:1263   */\n    tag_65:\n        /* \"#utility.yul\":1282:1332   */\n      tag_66\n        /* \"#utility.yul\":1324:1331   */\n      dup5\n        /* \"#utility.yul\":1315:1321   */\n      dup3\n        /* \"#utility.yul\":1304:1313   */\n      dup6\n        /* \"#utility.yul\":1300:1322   */\n      add\n        /* \"#utility.yul\":1282:1332   */\n      tag_51\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1272:1332   */\n      swap5\n        /* \"#utility.yul\":1016:1338   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1343:2083   */\n    tag_8:\n        /* \"#utility.yul\":1440:1446   */\n      0x00\n        /* \"#utility.yul\":1448:1454   */\n      dup1\n        /* \"#utility.yul\":1456:1462   */\n      0x00\n        /* \"#utility.yul\":1509:1511   */\n      0x60\n        /* \"#utility.yul\":1497:1506   */\n      dup5\n        /* \"#utility.yul\":1488:1495   */\n      dup7\n        /* \"#utility.yul\":1484:1507   */\n      sub\n        /* \"#utility.yul\":1480:1512   */\n      slt\n        /* \"#utility.yul\":1477:1529   */\n      iszero\n      tag_68\n      jumpi\n        /* \"#utility.yul\":1525:1526   */\n      0x00\n        /* \"#utility.yul\":1522:1523   */\n      dup1\n        /* \"#utility.yul\":1515:1527   */\n      revert\n        /* \"#utility.yul\":1477:1529   */\n    tag_68:\n        /* \"#utility.yul\":1565:1574   */\n      dup4\n        /* \"#utility.yul\":1552:1575   */\n      calldataload\n        /* \"#utility.yul\":1594:1612   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1635:1637   */\n      dup1\n        /* \"#utility.yul\":1627:1633   */\n      dup3\n        /* \"#utility.yul\":1624:1638   */\n      gt\n        /* \"#utility.yul\":1621:1655   */\n      iszero\n      tag_69\n      jumpi\n        /* \"#utility.yul\":1651:1652   */\n      0x00\n        /* \"#utility.yul\":1648:1649   */\n      dup1\n        /* \"#utility.yul\":1641:1653   */\n      revert\n        /* \"#utility.yul\":1621:1655   */\n    tag_69:\n        /* \"#utility.yul\":1674:1724   */\n      tag_70\n        /* \"#utility.yul\":1716:1723   */\n      dup8\n        /* \"#utility.yul\":1707:1713   */\n      dup4\n        /* \"#utility.yul\":1696:1705   */\n      dup9\n        /* \"#utility.yul\":1692:1714   */\n      add\n        /* \"#utility.yul\":1674:1724   */\n      tag_51\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1664:1724   */\n      swap5\n      pop\n        /* \"#utility.yul\":1777:1779   */\n      0x20\n        /* \"#utility.yul\":1766:1775   */\n      dup7\n        /* \"#utility.yul\":1762:1780   */\n      add\n        /* \"#utility.yul\":1749:1781   */\n      calldataload\n        /* \"#utility.yul\":1733:1781   */\n      swap2\n      pop\n        /* \"#utility.yul\":1806:1808   */\n      dup1\n        /* \"#utility.yul\":1796:1804   */\n      dup3\n        /* \"#utility.yul\":1793:1809   */\n      gt\n        /* \"#utility.yul\":1790:1826   */\n      iszero\n      tag_71\n      jumpi\n        /* \"#utility.yul\":1822:1823   */\n      0x00\n        /* \"#utility.yul\":1819:1820   */\n      dup1\n        /* \"#utility.yul\":1812:1824   */\n      revert\n        /* \"#utility.yul\":1790:1826   */\n    tag_71:\n      pop\n        /* \"#utility.yul\":1845:1897   */\n      tag_72\n        /* \"#utility.yul\":1889:1896   */\n      dup7\n        /* \"#utility.yul\":1878:1886   */\n      dup3\n        /* \"#utility.yul\":1867:1876   */\n      dup8\n        /* \"#utility.yul\":1863:1887   */\n      add\n        /* \"#utility.yul\":1845:1897   */\n      tag_51\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1835:1897   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":1947:1949   */\n      0x40\n        /* \"#utility.yul\":1936:1945   */\n      dup5\n        /* \"#utility.yul\":1932:1950   */\n      add\n        /* \"#utility.yul\":1919:1951   */\n      calldataload\n        /* \"#utility.yul\":1991:2033   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1984:1989   */\n      dup2\n        /* \"#utility.yul\":1980:2034   */\n      and\n        /* \"#utility.yul\":1973:1978   */\n      dup2\n        /* \"#utility.yul\":1970:2035   */\n      eq\n        /* \"#utility.yul\":1960:2053   */\n      tag_73\n      jumpi\n        /* \"#utility.yul\":2049:2050   */\n      0x00\n        /* \"#utility.yul\":2046:2047   */\n      dup1\n        /* \"#utility.yul\":2039:2051   */\n      revert\n        /* \"#utility.yul\":1960:2053   */\n    tag_73:\n        /* \"#utility.yul\":2072:2077   */\n      dup1\n        /* \"#utility.yul\":2062:2077   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1343:2083   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2088:2516   */\n    tag_29:\n        /* \"#utility.yul\":2219:2222   */\n      0x00\n        /* \"#utility.yul\":2257:2263   */\n      dup3\n        /* \"#utility.yul\":2251:2264   */\n      mload\n        /* \"#utility.yul\":2282:2283   */\n      0x00\n        /* \"#utility.yul\":2292:2421   */\n    tag_75:\n        /* \"#utility.yul\":2306:2312   */\n      dup2\n        /* \"#utility.yul\":2303:2304   */\n      dup2\n        /* \"#utility.yul\":2300:2313   */\n      lt\n        /* \"#utility.yul\":2292:2421   */\n      iszero\n      tag_77\n      jumpi\n        /* \"#utility.yul\":2404:2408   */\n      0x20\n        /* \"#utility.yul\":2388:2402   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":2384:2409   */\n      dup2\n      add\n        /* \"#utility.yul\":2378:2410   */\n      mload\n        /* \"#utility.yul\":2365:2376   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":2358:2411   */\n      mstore\n        /* \"#utility.yul\":2321:2333   */\n      add\n        /* \"#utility.yul\":2292:2421   */\n      jump(tag_75)\n    tag_77:\n        /* \"#utility.yul\":2439:2445   */\n      dup2\n        /* \"#utility.yul\":2436:2437   */\n      dup2\n        /* \"#utility.yul\":2433:2446   */\n      gt\n        /* \"#utility.yul\":2430:2478   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":2474:2475   */\n      0x00\n        /* \"#utility.yul\":2465:2471   */\n      dup3\n        /* \"#utility.yul\":2460:2463   */\n      dup6\n        /* \"#utility.yul\":2456:2472   */\n      add\n        /* \"#utility.yul\":2449:2476   */\n      mstore\n        /* \"#utility.yul\":2430:2478   */\n    tag_78:\n      pop\n        /* \"#utility.yul\":2494:2510   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":2088:2516   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3417:3854   */\n    tag_40:\n        /* \"#utility.yul\":3496:3497   */\n      0x01\n        /* \"#utility.yul\":3492:3504   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3539:3551   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3560:3621   */\n      tag_83\n      jumpi\n        /* \"#utility.yul\":3614:3618   */\n      0x7f\n        /* \"#utility.yul\":3606:3612   */\n      dup3\n        /* \"#utility.yul\":3602:3619   */\n      and\n        /* \"#utility.yul\":3592:3619   */\n      swap2\n      pop\n        /* \"#utility.yul\":3560:3621   */\n    tag_83:\n        /* \"#utility.yul\":3667:3669   */\n      0x20\n        /* \"#utility.yul\":3659:3665   */\n      dup3\n        /* \"#utility.yul\":3656:3670   */\n      lt\n        /* \"#utility.yul\":3636:3654   */\n      dup2\n        /* \"#utility.yul\":3633:3671   */\n      eq\n        /* \"#utility.yul\":3630:3848   */\n      iszero\n      tag_84\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":3701:3702   */\n      0x00\n        /* \"#utility.yul\":3694:3782   */\n      mstore\n        /* \"#utility.yul\":3805:3809   */\n      0x22\n        /* \"#utility.yul\":3802:3803   */\n      0x04\n        /* \"#utility.yul\":3795:3810   */\n      mstore\n        /* \"#utility.yul\":3833:3837   */\n      0x24\n        /* \"#utility.yul\":3830:3831   */\n      0x00\n        /* \"#utility.yul\":3823:3838   */\n      revert\n        /* \"#utility.yul\":3630:3848   */\n    tag_84:\n      pop\n        /* \"#utility.yul\":3417:3854   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3859:4043   */\n    tag_33:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":3908:3909   */\n      0x00\n        /* \"#utility.yul\":3901:3989   */\n      mstore\n        /* \"#utility.yul\":4008:4012   */\n      0x21\n        /* \"#utility.yul\":4005:4006   */\n      0x04\n        /* \"#utility.yul\":3998:4013   */\n      mstore\n        /* \"#utility.yul\":4032:4036   */\n      0x24\n        /* \"#utility.yul\":4029:4030   */\n      0x00\n        /* \"#utility.yul\":4022:4037   */\n      revert\n        /* \"#utility.yul\":4048:4232   */\n    tag_56:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":4097:4098   */\n      0x00\n        /* \"#utility.yul\":4090:4178   */\n      mstore\n        /* \"#utility.yul\":4197:4201   */\n      0x41\n        /* \"#utility.yul\":4194:4195   */\n      0x04\n        /* \"#utility.yul\":4187:4202   */\n      mstore\n        /* \"#utility.yul\":4221:4225   */\n      0x24\n        /* \"#utility.yul\":4218:4219   */\n      0x00\n        /* \"#utility.yul\":4211:4226   */\n      revert\n\n    auxdata: 0xa264697066735822122037c452db4e20d0a6809676a264ff416b0bf14645c6a7dd2ec50fb9a0c408a84c64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610619806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063785963c3146100465780638e4f8c6b1461005b5780639d9e7a4b14610080575b600080fd5b6100596100543660046104b0565b610093565b005b61006e610069366004610473565b61027e565b60405190815260200160405180910390f35b61005961008e36600461044a565b6102ae565b3360009081526002602081905260409091200154600160b01b900460ff1615156001146101075760405162461bcd60e51b815260206004820152601960248201527f4170706c69636174696f6e20616c72656164792073656e74210000000000000060448201526064015b60405180910390fd5b6040805160c081018252848152602080820185905273ffffffffffffffffffffffffffffffffffffffff84168284015260016060830181905260006080840181905260a0840191909152338152600282529290922081518051929391926101719284920190610324565b50602082810151805161018a9260018501920190610324565b506040820151600290910180546060840151608085015160a0909501511515600160b01b027fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff951515750100000000000000000000000000000000000000000002959095167fffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffff91151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00000000000000000000000000000000000000000090931673ffffffffffffffffffffffffffffffffffffffff90951694909417919091171691909117919091179055505050565b6000816040516020016102919190610541565b604051602081830303815290604052805190602001209050919050565b60023360009081526020819052604090205460ff1660048111156102d4576102d46105b7565b146103215760405162461bcd60e51b815260206004820152601f60248201527f596f7520617265206e6f74206120707269766174652070726f7669646572210060448201526064016100fe565b50565b8280546103309061057c565b90600052602060002090601f0160209004810192826103525760008555610398565b82601f1061036b57805160ff1916838001178555610398565b82800160010185558215610398579182015b8281111561039857825182559160200191906001019061037d565b506103a49291506103a8565b5090565b5b808211156103a457600081556001016103a9565b600082601f8301126103ce57600080fd5b813567ffffffffffffffff808211156103e9576103e96105cd565b604051601f8301601f19908116603f01168101908282118183101715610411576104116105cd565b8160405283815286602085880101111561042a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561045c57600080fd5b8135801515811461046c57600080fd5b9392505050565b60006020828403121561048557600080fd5b813567ffffffffffffffff81111561049c57600080fd5b6104a8848285016103bd565b949350505050565b6000806000606084860312156104c557600080fd5b833567ffffffffffffffff808211156104dd57600080fd5b6104e9878388016103bd565b945060208601359150808211156104ff57600080fd5b5061050c868287016103bd565b925050604084013573ffffffffffffffffffffffffffffffffffffffff8116811461053657600080fd5b809150509250925092565b6000825160005b818110156105625760208186018101518583015201610548565b81811115610571576000828501525b509190910192915050565b600181811c9082168061059057607f821691505b602082108114156105b157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122037c452db4e20d0a6809676a264ff416b0bf14645c6a7dd2ec50fb9a0c408a84c64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x619 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x785963C3 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8E4F8C6B EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x9D9E7A4B EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x4B0 JUMP JUMPDEST PUSH2 0x93 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x69 CALLDATASIZE PUSH1 0x4 PUSH2 0x473 JUMP JUMPDEST PUSH2 0x27E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59 PUSH2 0x8E CALLDATASIZE PUSH1 0x4 PUSH2 0x44A JUMP JUMPDEST PUSH2 0x2AE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x107 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4170706C69636174696F6E20616C72656164792073656E742100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND DUP3 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x80 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER DUP2 MSTORE PUSH1 0x2 DUP3 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH2 0x171 SWAP3 DUP5 SWAP3 ADD SWAP1 PUSH2 0x324 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP1 MLOAD PUSH2 0x18A SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x324 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0xA0 SWAP1 SWAP6 ADD MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xB0 SHL MUL PUSH32 0xFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 ISZERO ISZERO PUSH22 0x1000000000000000000000000000000000000000000 MUL SWAP6 SWAP1 SWAP6 AND PUSH32 0xFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 ISZERO ISZERO PUSH21 0x10000000000000000000000000000000000000000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000 SWAP1 SWAP4 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP2 SWAP1 SWAP2 OR AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x541 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2D4 JUMPI PUSH2 0x2D4 PUSH2 0x5B7 JUMP JUMPDEST EQ PUSH2 0x321 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F74206120707269766174652070726F76696465722100 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xFE JUMP JUMPDEST POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x330 SWAP1 PUSH2 0x57C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x352 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x398 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x36B JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x398 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x398 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x398 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x37D JUMP JUMPDEST POP PUSH2 0x3A4 SWAP3 SWAP2 POP PUSH2 0x3A8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3E9 JUMPI PUSH2 0x3E9 PUSH2 0x5CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x411 JUMPI PUSH2 0x411 PUSH2 0x5CD JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x485 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A8 DUP5 DUP3 DUP6 ADD PUSH2 0x3BD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E9 DUP8 DUP4 DUP9 ADD PUSH2 0x3BD JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x50C DUP7 DUP3 DUP8 ADD PUSH2 0x3BD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x536 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x562 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x548 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x571 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x590 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x5B1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0xC4 MSTORE 0xDB 0x4E KECCAK256 0xD0 0xA6 DUP1 SWAP7 PUSH23 0xA264FF416B0BF14645C6A7DD2EC50FB9A0C408A84C6473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "96:806:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@acceptApplication_1280": {
									"entryPoint": 686,
									"id": 1280,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@application_1262": {
									"entryPoint": 147,
									"id": 1262,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@get_keccak256_1375": {
									"entryPoint": 638,
									"id": 1375,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 1098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 1139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address": {
									"entryPoint": 1200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1345,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_19d3e2a9ee1c76e7edeb7619e2ff0e7534e58f7bb978671162fd0659f8514a66__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_97560a8dc06e7ebc393b3d32f64f2c70cc4ba72f1d5b74bca5ea1a4d60e7d88d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 1463,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1485,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4234:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "67:666:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "116:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "125:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "128:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "118:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "118:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "118:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "95:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "103:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "91:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "91:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "110:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "87:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "87:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "80:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "80:35:9"
															},
															"nodeType": "YulIf",
															"src": "77:55:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "141:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "164:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "151:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "151:20:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "145:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "180:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "190:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "184:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "231:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "233:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "233:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "233:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "223:2:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "227:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "220:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "220:10:9"
															},
															"nodeType": "YulIf",
															"src": "217:36:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "262:17:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "276:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "272:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "272:7:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "266:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "288:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "308:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "302:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "292:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "320:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "342:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "366:2:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "370:4:9",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "362:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "362:13:9"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "377:2:9"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "358:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "358:22:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "382:2:9",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "354:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "354:31:9"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "387:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "350:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "350:40:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "338:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "338:53:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "324:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "450:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "452:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "452:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "452:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "409:10:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "421:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "406:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "406:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "429:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "441:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "426:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "403:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "403:46:9"
															},
															"nodeType": "YulIf",
															"src": "400:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "488:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "492:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "481:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "481:22:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "519:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "527:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "512:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "512:18:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "512:18:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "578:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "587:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "590:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "580:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "580:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "580:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "553:6:9"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "561:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "549:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "549:15:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "566:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "545:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "545:26:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "573:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "542:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "542:35:9"
															},
															"nodeType": "YulIf",
															"src": "539:55:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "620:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "628:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "616:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "616:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "639:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "647:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "635:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "635:17:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "654:2:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "603:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "603:54:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "603:54:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "681:6:9"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "689:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "677:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "677:15:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "694:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "673:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "673:26:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "701:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "666:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "666:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "666:37:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "712:15:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "721:6:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "712:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "41:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "49:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "57:5:9",
														"type": ""
													}
												],
												"src": "14:719:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "805:206:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "851:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "860:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "863:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "853:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "853:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "853:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "826:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "835:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "822:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "822:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "847:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "818:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:32:9"
															},
															"nodeType": "YulIf",
															"src": "815:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "876:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "902:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "889:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "889:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "880:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "965:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "974:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "977:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "967:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "967:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "967:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "934:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "955:5:9"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "948:6:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "948:13:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "941:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "941:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "931:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "931:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "924:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:40:9"
															},
															"nodeType": "YulIf",
															"src": "921:60:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "990:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1000:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "990:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "771:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "782:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "794:6:9",
														"type": ""
													}
												],
												"src": "738:273:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1096:242:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1142:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1151:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1154:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1144:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1144:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1144:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1117:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1126:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1113:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1138:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1109:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1109:32:9"
															},
															"nodeType": "YulIf",
															"src": "1106:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1167:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1194:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1181:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1181:23:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1171:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1247:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1256:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1259:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1249:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1249:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1249:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1219:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1227:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1216:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1216:30:9"
															},
															"nodeType": "YulIf",
															"src": "1213:50:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1272:60:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1304:9:9"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1315:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1300:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1300:22:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1324:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1282:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1282:50:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1062:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1073:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1085:6:9",
														"type": ""
													}
												],
												"src": "1016:322:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1467:616:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1513:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1522:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1525:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1515:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1515:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1515:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1488:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1497:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1484:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1484:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1509:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1480:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1480:32:9"
															},
															"nodeType": "YulIf",
															"src": "1477:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1538:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1565:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1552:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1552:23:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1542:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1584:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1594:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1588:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1639:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1648:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1651:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1641:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1641:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1641:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1627:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1635:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1624:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1624:14:9"
															},
															"nodeType": "YulIf",
															"src": "1621:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1664:60:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1696:9:9"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1707:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1692:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1692:22:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1716:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1674:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1674:50:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1664:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1733:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1766:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1777:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1762:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1762:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1749:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:32:9"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1737:8:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1810:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1819:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1822:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1812:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1812:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1812:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1796:8:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1806:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1793:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1793:16:9"
															},
															"nodeType": "YulIf",
															"src": "1790:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1835:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1867:9:9"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1878:8:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1863:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1863:24:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1889:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1845:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1845:52:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1835:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1906:45:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1936:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1947:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1932:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1919:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1919:32:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1910:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2037:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2046:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2049:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2039:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2039:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2039:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1973:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1984:5:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1991:42:9",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1980:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1980:54:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1970:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1970:65:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1963:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1963:73:9"
															},
															"nodeType": "YulIf",
															"src": "1960:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2062:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2072:5:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2062:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1417:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1428:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1440:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1448:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1456:6:9",
														"type": ""
													}
												],
												"src": "1343:740:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2227:289:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2237:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2257:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2251:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2251:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2241:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2273:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2282:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2277:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2344:77:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "2369:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2374:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2365:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2365:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "2392:6:9"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "2400:1:9"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "2388:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2388:14:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2404:4:9",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2384:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2384:25:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2378:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2378:32:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2358:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2358:53:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2358:53:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2303:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2306:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2300:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2300:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2314:21:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2316:17:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2325:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2328:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2321:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2321:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2316:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2296:3:9",
																"statements": []
															},
															"src": "2292:129:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2447:31:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "2460:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2465:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2456:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2456:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2474:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2449:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2449:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2449:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2436:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2439:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2433:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2433:13:9"
															},
															"nodeType": "YulIf",
															"src": "2430:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2487:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2498:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2503:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2494:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2487:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2203:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2208:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2219:3:9",
														"type": ""
													}
												],
												"src": "2088:428:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2632:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2644:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2655:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2640:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2640:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2632:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2674:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2685:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2667:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2667:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2667:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2591:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2602:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2613:4:9",
														"type": ""
													}
												],
												"src": "2521:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2877:181:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2894:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2905:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2887:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2887:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2887:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2928:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2939:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2924:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2924:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2944:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2917:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2917:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2917:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2967:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2978:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2963:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2963:18:9"
																	},
																	{
																		"hexValue": "596f7520617265206e6f74206120707269766174652070726f766964657221",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2983:33:9",
																		"type": "",
																		"value": "You are not a private provider!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2956:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2956:61:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2956:61:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3026:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3038:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3049:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3034:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3034:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3026:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_19d3e2a9ee1c76e7edeb7619e2ff0e7534e58f7bb978671162fd0659f8514a66__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2854:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2868:4:9",
														"type": ""
													}
												],
												"src": "2703:355:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3237:175:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3254:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3265:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3247:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3247:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3247:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3288:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3299:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3284:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3284:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3304:2:9",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3277:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3277:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3277:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3327:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3338:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3323:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3323:18:9"
																	},
																	{
																		"hexValue": "4170706c69636174696f6e20616c72656164792073656e7421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3343:27:9",
																		"type": "",
																		"value": "Application already sent!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3316:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3316:55:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3316:55:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3380:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3392:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3403:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3388:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3388:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3380:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_97560a8dc06e7ebc393b3d32f64f2c70cc4ba72f1d5b74bca5ea1a4d60e7d88d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3214:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3228:4:9",
														"type": ""
													}
												],
												"src": "3063:349:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3472:382:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3482:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3496:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3499:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3492:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3492:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3482:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3513:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3543:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3549:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3539:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3539:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3517:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3590:31:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3592:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3606:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3614:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3602:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3602:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3592:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3570:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3563:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3563:26:9"
															},
															"nodeType": "YulIf",
															"src": "3560:61:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3680:168:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3701:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3704:77:9",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3694:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3694:88:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3694:88:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3802:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3805:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3795:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3795:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3795:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3830:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3833:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3823:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3823:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3823:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3636:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3659:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3667:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3656:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3656:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3633:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3633:38:9"
															},
															"nodeType": "YulIf",
															"src": "3630:218:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3452:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3461:6:9",
														"type": ""
													}
												],
												"src": "3417:437:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3891:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3911:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3901:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3901:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3901:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4005:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4008:4:9",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3998:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3998:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3998:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4029:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4032:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4022:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4022:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4022:15:9"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "3859:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4080:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4097:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4100:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4090:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4090:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4090:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4194:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4197:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4187:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4187:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4187:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4218:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4221:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4211:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4211:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4211:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "4048:184:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        let value := calldataload(add(headStart, 64))\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value2 := value\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_19d3e2a9ee1c76e7edeb7619e2ff0e7534e58f7bb978671162fd0659f8514a66__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"You are not a private provider!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_97560a8dc06e7ebc393b3d32f64f2c70cc4ba72f1d5b74bca5ea1a4d60e7d88d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Application already sent!\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063785963c3146100465780638e4f8c6b1461005b5780639d9e7a4b14610080575b600080fd5b6100596100543660046104b0565b610093565b005b61006e610069366004610473565b61027e565b60405190815260200160405180910390f35b61005961008e36600461044a565b6102ae565b3360009081526002602081905260409091200154600160b01b900460ff1615156001146101075760405162461bcd60e51b815260206004820152601960248201527f4170706c69636174696f6e20616c72656164792073656e74210000000000000060448201526064015b60405180910390fd5b6040805160c081018252848152602080820185905273ffffffffffffffffffffffffffffffffffffffff84168284015260016060830181905260006080840181905260a0840191909152338152600282529290922081518051929391926101719284920190610324565b50602082810151805161018a9260018501920190610324565b506040820151600290910180546060840151608085015160a0909501511515600160b01b027fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff951515750100000000000000000000000000000000000000000002959095167fffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffff91151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00000000000000000000000000000000000000000090931673ffffffffffffffffffffffffffffffffffffffff90951694909417919091171691909117919091179055505050565b6000816040516020016102919190610541565b604051602081830303815290604052805190602001209050919050565b60023360009081526020819052604090205460ff1660048111156102d4576102d46105b7565b146103215760405162461bcd60e51b815260206004820152601f60248201527f596f7520617265206e6f74206120707269766174652070726f7669646572210060448201526064016100fe565b50565b8280546103309061057c565b90600052602060002090601f0160209004810192826103525760008555610398565b82601f1061036b57805160ff1916838001178555610398565b82800160010185558215610398579182015b8281111561039857825182559160200191906001019061037d565b506103a49291506103a8565b5090565b5b808211156103a457600081556001016103a9565b600082601f8301126103ce57600080fd5b813567ffffffffffffffff808211156103e9576103e96105cd565b604051601f8301601f19908116603f01168101908282118183101715610411576104116105cd565b8160405283815286602085880101111561042a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561045c57600080fd5b8135801515811461046c57600080fd5b9392505050565b60006020828403121561048557600080fd5b813567ffffffffffffffff81111561049c57600080fd5b6104a8848285016103bd565b949350505050565b6000806000606084860312156104c557600080fd5b833567ffffffffffffffff808211156104dd57600080fd5b6104e9878388016103bd565b945060208601359150808211156104ff57600080fd5b5061050c868287016103bd565b925050604084013573ffffffffffffffffffffffffffffffffffffffff8116811461053657600080fd5b809150509250925092565b6000825160005b818110156105625760208186018101518583015201610548565b81811115610571576000828501525b509190910192915050565b600181811c9082168061059057607f821691505b602082108114156105b157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122037c452db4e20d0a6809676a264ff416b0bf14645c6a7dd2ec50fb9a0c408a84c64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x785963C3 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8E4F8C6B EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x9D9E7A4B EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x4B0 JUMP JUMPDEST PUSH2 0x93 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x69 CALLDATASIZE PUSH1 0x4 PUSH2 0x473 JUMP JUMPDEST PUSH2 0x27E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59 PUSH2 0x8E CALLDATASIZE PUSH1 0x4 PUSH2 0x44A JUMP JUMPDEST PUSH2 0x2AE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x107 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4170706C69636174696F6E20616C72656164792073656E742100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND DUP3 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x80 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER DUP2 MSTORE PUSH1 0x2 DUP3 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH2 0x171 SWAP3 DUP5 SWAP3 ADD SWAP1 PUSH2 0x324 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP1 MLOAD PUSH2 0x18A SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x324 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 DUP6 ADD MLOAD PUSH1 0xA0 SWAP1 SWAP6 ADD MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xB0 SHL MUL PUSH32 0xFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 ISZERO ISZERO PUSH22 0x1000000000000000000000000000000000000000000 MUL SWAP6 SWAP1 SWAP6 AND PUSH32 0xFFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 ISZERO ISZERO PUSH21 0x10000000000000000000000000000000000000000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000 SWAP1 SWAP4 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP2 SWAP1 SWAP2 OR AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x541 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2D4 JUMPI PUSH2 0x2D4 PUSH2 0x5B7 JUMP JUMPDEST EQ PUSH2 0x321 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520617265206E6F74206120707269766174652070726F76696465722100 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xFE JUMP JUMPDEST POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x330 SWAP1 PUSH2 0x57C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x352 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x398 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x36B JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x398 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x398 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x398 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x37D JUMP JUMPDEST POP PUSH2 0x3A4 SWAP3 SWAP2 POP PUSH2 0x3A8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3E9 JUMPI PUSH2 0x3E9 PUSH2 0x5CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x411 JUMPI PUSH2 0x411 PUSH2 0x5CD JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x485 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A8 DUP5 DUP3 DUP6 ADD PUSH2 0x3BD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E9 DUP8 DUP4 DUP9 ADD PUSH2 0x3BD JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x50C DUP7 DUP3 DUP8 ADD PUSH2 0x3BD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x536 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x562 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x548 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x571 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x590 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x5B1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0xC4 MSTORE 0xDB 0x4E KECCAK256 0xD0 0xA6 DUP1 SWAP7 PUSH23 0xA264FF416B0BF14645C6A7DD2EC50FB9A0C408A84C6473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "96:806:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;224:427;;;;;;:::i;:::-;;:::i;:::-;;144:138:4;;;;;;:::i;:::-;;:::i;:::-;;;2667:25:9;;;2655:2;2640:18;144:138:4;;;;;;;727:172:1;;;;;;:::i;:::-;;:::i;224:427::-;369:10;350:30;;;;:18;:30;;;;;;;;:36;;-1:-1:-1;;;350:36:1;;;;:44;;390:4;350:44;342:82;;;;-1:-1:-1;;;342:82:1;;3265:2:9;342:82:1;;;3247:21:9;3304:2;3284:18;;;3277:30;3343:27;3323:18;;;3316:55;3388:18;;342:82:1;;;;;;;;;564:79;;;;;;;;;;;;;;;;;;;;;;;;;625:4;564:79;;;;;;-1:-1:-1;564:79:1;;;;;;;;;;;;;549:10;530:30;;:18;:30;;;;;;:113;;;;564:79;;530:30;;:113;;:30;;:113;;;:::i;:::-;-1:-1:-1;530:113:1;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;530:113:1;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;530:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;224:427:1:o;144:138:4:-;208:7;266:5;249:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;239:34;;;;;;232:42;;144:138;;;:::o;727:172:1:-;834:19;814:10;801:12;:24;;;;;;;;;;:29;;;:52;;;;;;;;:::i;:::-;;793:96;;;;-1:-1:-1;;;793:96:1;;2905:2:9;793:96:1;;;2887:21:9;2944:2;2924:18;;;2917:30;2983:33;2963:18;;;2956:61;3034:18;;793:96:1;2703:355:9;793:96:1;727:172;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:719:9;57:5;110:3;103:4;95:6;91:17;87:27;77:55;;128:1;125;118:12;77:55;164:6;151:20;190:18;227:2;223;220:10;217:36;;;233:18;;:::i;:::-;308:2;302:9;276:2;362:13;;-1:-1:-1;;358:22:9;;;382:2;354:31;350:40;338:53;;;406:18;;;426:22;;;403:46;400:72;;;452:18;;:::i;:::-;492:10;488:2;481:22;527:2;519:6;512:18;573:3;566:4;561:2;553:6;549:15;545:26;542:35;539:55;;;590:1;587;580:12;539:55;654:2;647:4;639:6;635:17;628:4;620:6;616:17;603:54;701:1;694:4;689:2;681:6;677:15;673:26;666:37;721:6;712:15;;;;;;14:719;;;;:::o;738:273::-;794:6;847:2;835:9;826:7;822:23;818:32;815:52;;;863:1;860;853:12;815:52;902:9;889:23;955:5;948:13;941:21;934:5;931:32;921:60;;977:1;974;967:12;921:60;1000:5;738:273;-1:-1:-1;;;738:273:9:o;1016:322::-;1085:6;1138:2;1126:9;1117:7;1113:23;1109:32;1106:52;;;1154:1;1151;1144:12;1106:52;1194:9;1181:23;1227:18;1219:6;1216:30;1213:50;;;1259:1;1256;1249:12;1213:50;1282;1324:7;1315:6;1304:9;1300:22;1282:50;:::i;:::-;1272:60;1016:322;-1:-1:-1;;;;1016:322:9:o;1343:740::-;1440:6;1448;1456;1509:2;1497:9;1488:7;1484:23;1480:32;1477:52;;;1525:1;1522;1515:12;1477:52;1565:9;1552:23;1594:18;1635:2;1627:6;1624:14;1621:34;;;1651:1;1648;1641:12;1621:34;1674:50;1716:7;1707:6;1696:9;1692:22;1674:50;:::i;:::-;1664:60;;1777:2;1766:9;1762:18;1749:32;1733:48;;1806:2;1796:8;1793:16;1790:36;;;1822:1;1819;1812:12;1790:36;;1845:52;1889:7;1878:8;1867:9;1863:24;1845:52;:::i;:::-;1835:62;;;1947:2;1936:9;1932:18;1919:32;1991:42;1984:5;1980:54;1973:5;1970:65;1960:93;;2049:1;2046;2039:12;1960:93;2072:5;2062:15;;;1343:740;;;;;:::o;2088:428::-;2219:3;2257:6;2251:13;2282:1;2292:129;2306:6;2303:1;2300:13;2292:129;;;2404:4;2388:14;;;2384:25;;2378:32;2365:11;;;2358:53;2321:12;2292:129;;;2439:6;2436:1;2433:13;2430:48;;;2474:1;2465:6;2460:3;2456:16;2449:27;2430:48;-1:-1:-1;2494:16:9;;;;;2088:428;-1:-1:-1;;2088:428:9:o;3417:437::-;3496:1;3492:12;;;;3539;;;3560:61;;3614:4;3606:6;3602:17;3592:27;;3560:61;3667:2;3659:6;3656:14;3636:18;3633:38;3630:218;;;-1:-1:-1;;;3701:1:9;3694:88;3805:4;3802:1;3795:15;3833:4;3830:1;3823:15;3630:218;;3417:437;;;:::o;3859:184::-;-1:-1:-1;;;3908:1:9;3901:88;4008:4;4005:1;3998:15;4032:4;4029:1;4022:15;4048:184;-1:-1:-1;;;4097:1:9;4090:88;4197:4;4194:1;4187:15;4221:4;4218:1;4211:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "312200",
								"executionCost": "349",
								"totalCost": "312549"
							},
							"external": {
								"acceptApplication(bool)": "2610",
								"application(string,string,address)": "infinite",
								"get_keccak256(string)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 96,
									"end": 902,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 96,
									"end": 902,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 96,
									"end": 902,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 96,
									"end": 902,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 96,
									"end": 902,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 96,
									"end": 902,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 96,
									"end": 902,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 96,
									"end": 902,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 96,
									"end": 902,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 96,
									"end": 902,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 96,
									"end": 902,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 96,
									"end": 902,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 96,
									"end": 902,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 96,
									"end": 902,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 96,
									"end": 902,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 96,
									"end": 902,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 96,
									"end": 902,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 96,
									"end": 902,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 96,
									"end": 902,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 96,
									"end": 902,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 96,
									"end": 902,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122037c452db4e20d0a6809676a264ff416b0bf14645c6a7dd2ec50fb9a0c408a84c64736f6c63430008070033",
									".code": [
										{
											"begin": 96,
											"end": 902,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 96,
											"end": 902,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 96,
											"end": 902,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 96,
											"end": 902,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 96,
											"end": 902,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 96,
											"end": 902,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 96,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 96,
											"end": 902,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 96,
											"end": 902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 96,
											"end": 902,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 96,
											"end": 902,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 96,
											"end": 902,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 96,
											"end": 902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 96,
											"end": 902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 96,
											"end": 902,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 96,
											"end": 902,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 96,
											"end": 902,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 96,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 96,
											"end": 902,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 96,
											"end": 902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 96,
											"end": 902,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 96,
											"end": 902,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 96,
											"end": 902,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 96,
											"end": 902,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 96,
											"end": 902,
											"name": "PUSH",
											"source": 1,
											"value": "785963C3"
										},
										{
											"begin": 96,
											"end": 902,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 96,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 96,
											"end": 902,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 96,
											"end": 902,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 96,
											"end": 902,
											"name": "PUSH",
											"source": 1,
											"value": "8E4F8C6B"
										},
										{
											"begin": 96,
											"end": 902,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 96,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 96,
											"end": 902,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 96,
											"end": 902,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 96,
											"end": 902,
											"name": "PUSH",
											"source": 1,
											"value": "9D9E7A4B"
										},
										{
											"begin": 96,
											"end": 902,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 96,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 96,
											"end": 902,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 96,
											"end": 902,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 96,
											"end": 902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 96,
											"end": 902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 96,
											"end": 902,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 96,
											"end": 902,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 224,
											"end": 651,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 224,
											"end": 651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 224,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 224,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 224,
											"end": 651,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 224,
											"end": 651,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 224,
											"end": 651,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 224,
											"end": 651,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 224,
											"end": 651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 224,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 224,
											"end": 651,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 224,
											"end": 651,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 224,
											"end": 651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 224,
											"end": 651,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 144,
											"end": 282,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2667,
											"end": 2692,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2667,
											"end": 2692,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2667,
											"end": 2692,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2655,
											"end": 2657,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2640,
											"end": 2658,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 727,
											"end": 899,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 727,
											"end": 899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 727,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 727,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 727,
											"end": 899,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 727,
											"end": 899,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 727,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 727,
											"end": 899,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 727,
											"end": 899,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 727,
											"end": 899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 727,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 727,
											"end": 899,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 224,
											"end": 651,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 224,
											"end": 651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 369,
											"end": 379,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 350,
											"end": 380,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 350,
											"end": 380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 350,
											"end": 380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 350,
											"end": 380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 350,
											"end": 368,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 350,
											"end": 380,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 350,
											"end": 380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 350,
											"end": 380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 350,
											"end": 380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 350,
											"end": 380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 350,
											"end": 380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 350,
											"end": 380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 350,
											"end": 380,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 350,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 350,
											"end": 386,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 350,
											"end": 386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 350,
											"end": 386,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 350,
											"end": 386,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 350,
											"end": 386,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 350,
											"end": 394,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 350,
											"end": 394,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 390,
											"end": 394,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 350,
											"end": 394,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 342,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 342,
											"end": 424,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 342,
											"end": 424,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 342,
											"end": 424,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 342,
											"end": 424,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 342,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3265,
											"end": 3267,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 342,
											"end": 424,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 342,
											"end": 424,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 342,
											"end": 424,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3247,
											"end": 3268,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3304,
											"end": 3306,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 3284,
											"end": 3302,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3284,
											"end": 3302,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3284,
											"end": 3302,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3277,
											"end": 3307,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3343,
											"end": 3370,
											"name": "PUSH",
											"source": 9,
											"value": "4170706C69636174696F6E20616C72656164792073656E742100000000000000"
										},
										{
											"begin": 3323,
											"end": 3341,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3323,
											"end": 3341,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3323,
											"end": 3341,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3316,
											"end": 3371,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3388,
											"end": 3406,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3388,
											"end": 3406,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 342,
											"end": 424,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 342,
											"end": 424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 342,
											"end": 424,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 342,
											"end": 424,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 342,
											"end": 424,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 342,
											"end": 424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 342,
											"end": 424,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 342,
											"end": 424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 342,
											"end": 424,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 342,
											"end": 424,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 342,
											"end": 424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 564,
											"end": 643,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 564,
											"end": 643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 564,
											"end": 643,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 564,
											"end": 643,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 625,
											"end": 629,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 564,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 564,
											"end": 643,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 564,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 564,
											"end": 643,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 564,
											"end": 643,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 549,
											"end": 559,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 530,
											"end": 560,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 530,
											"end": 560,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 530,
											"end": 548,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 530,
											"end": 560,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 530,
											"end": 560,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 530,
											"end": 560,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 530,
											"end": 560,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 560,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 530,
											"end": 560,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 564,
											"end": 643,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 530,
											"end": 560,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 530,
											"end": 560,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 530,
											"end": 560,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 530,
											"end": 560,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "1000000000000000000000000000000000000000000"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "10000000000000000000000000000000000000000"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 530,
											"end": 643,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 224,
											"end": 651,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 208,
											"end": 215,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 271,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 239,
											"end": 273,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 239,
											"end": 273,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 239,
											"end": 273,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 239,
											"end": 273,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 239,
											"end": 273,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 239,
											"end": 273,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 232,
											"end": 274,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 274,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 727,
											"end": 899,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 727,
											"end": 899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 834,
											"end": 853,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 814,
											"end": 824,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 801,
											"end": 813,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 801,
											"end": 825,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 801,
											"end": 825,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 801,
											"end": 825,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 801,
											"end": 825,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 801,
											"end": 825,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 801,
											"end": 825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 801,
											"end": 825,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 801,
											"end": 830,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 801,
											"end": 830,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 801,
											"end": 830,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 801,
											"end": 853,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 801,
											"end": 853,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 801,
											"end": 853,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 801,
											"end": 853,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 801,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 801,
											"end": 853,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 801,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 801,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 801,
											"end": 853,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 801,
											"end": 853,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 801,
											"end": 853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 801,
											"end": 853,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 793,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 793,
											"end": 889,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 793,
											"end": 889,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 889,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 793,
											"end": 889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 793,
											"end": 889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2907,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 793,
											"end": 889,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 793,
											"end": 889,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 793,
											"end": 889,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2887,
											"end": 2908,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2944,
											"end": 2946,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2924,
											"end": 2942,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2924,
											"end": 2942,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 2942,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2917,
											"end": 2947,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 3016,
											"name": "PUSH",
											"source": 9,
											"value": "596F7520617265206E6F74206120707269766174652070726F76696465722100"
										},
										{
											"begin": 2963,
											"end": 2981,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2963,
											"end": 2981,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2963,
											"end": 2981,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2956,
											"end": 3017,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3034,
											"end": 3052,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3034,
											"end": 3052,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 793,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2703,
											"end": 3058,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 793,
											"end": 889,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 793,
											"end": 889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 727,
											"end": 899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 727,
											"end": 899,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "25"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "45"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "43"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "45"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "43"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "45"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "44"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "45"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "44"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "45"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "46"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "47"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "46"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "47"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "48"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "46"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "48"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 733,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 14,
											"end": 733,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 57,
											"end": 62,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 110,
											"end": 113,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 103,
											"end": 107,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 95,
											"end": 101,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 91,
											"end": 108,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 87,
											"end": 114,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 77,
											"end": 132,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 77,
											"end": 132,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 129,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 126,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 118,
											"end": 130,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 77,
											"end": 132,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 77,
											"end": 132,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 164,
											"end": 170,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 151,
											"end": 171,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 190,
											"end": 208,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 227,
											"end": 229,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 223,
											"end": 225,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 220,
											"end": 230,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 217,
											"end": 253,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 217,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 217,
											"end": 253,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 233,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 233,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 233,
											"end": 251,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 233,
											"end": 251,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 233,
											"end": 251,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 308,
											"end": 310,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 302,
											"end": 311,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 276,
											"end": 278,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 362,
											"end": 375,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 362,
											"end": 375,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 358,
											"end": 380,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 358,
											"end": 380,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 358,
											"end": 380,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 382,
											"end": 384,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 354,
											"end": 385,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 350,
											"end": 390,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 338,
											"end": 391,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 338,
											"end": 391,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 338,
											"end": 391,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 406,
											"end": 424,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 406,
											"end": 424,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 406,
											"end": 424,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 426,
											"end": 448,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 426,
											"end": 448,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 426,
											"end": 448,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 403,
											"end": 449,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 400,
											"end": 472,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 400,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 400,
											"end": 472,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 452,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 452,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 452,
											"end": 470,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 452,
											"end": 470,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 452,
											"end": 470,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 492,
											"end": 502,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 488,
											"end": 490,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 481,
											"end": 503,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 527,
											"end": 529,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 519,
											"end": 525,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 512,
											"end": 530,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 573,
											"end": 576,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 566,
											"end": 570,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 561,
											"end": 563,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 549,
											"end": 564,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 545,
											"end": 571,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 542,
											"end": 577,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 539,
											"end": 594,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 539,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 539,
											"end": 594,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 590,
											"end": 591,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 588,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 580,
											"end": 592,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 539,
											"end": 594,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 539,
											"end": 594,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 654,
											"end": 656,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 647,
											"end": 651,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 639,
											"end": 645,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 635,
											"end": 652,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 628,
											"end": 632,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 620,
											"end": 626,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 616,
											"end": 633,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 603,
											"end": 657,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 701,
											"end": 702,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 694,
											"end": 698,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 689,
											"end": 691,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 681,
											"end": 687,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 677,
											"end": 692,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 673,
											"end": 699,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 666,
											"end": 703,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 721,
											"end": 727,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 712,
											"end": 727,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 712,
											"end": 727,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 712,
											"end": 727,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 712,
											"end": 727,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 712,
											"end": 727,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 712,
											"end": 727,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 733,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14,
											"end": 733,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14,
											"end": 733,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 733,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 733,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 738,
											"end": 1011,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 738,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 794,
											"end": 800,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 847,
											"end": 849,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 835,
											"end": 844,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 826,
											"end": 833,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 822,
											"end": 845,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 818,
											"end": 850,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 815,
											"end": 867,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 815,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 815,
											"end": 867,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 863,
											"end": 864,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 860,
											"end": 861,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 853,
											"end": 865,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 815,
											"end": 867,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 815,
											"end": 867,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 902,
											"end": 911,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 889,
											"end": 912,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 955,
											"end": 960,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 948,
											"end": 961,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 941,
											"end": 962,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 934,
											"end": 939,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 931,
											"end": 963,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 921,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 921,
											"end": 981,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 977,
											"end": 978,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 974,
											"end": 975,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 967,
											"end": 979,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 921,
											"end": 981,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 921,
											"end": 981,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1000,
											"end": 1005,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 738,
											"end": 1011,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 738,
											"end": 1011,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1016,
											"end": 1338,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 1016,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1085,
											"end": 1091,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1138,
											"end": 1140,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1126,
											"end": 1135,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1117,
											"end": 1124,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1113,
											"end": 1136,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1141,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1158,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1158,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1106,
											"end": 1158,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1154,
											"end": 1155,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1152,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1156,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1106,
											"end": 1158,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1106,
											"end": 1158,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1194,
											"end": 1203,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1181,
											"end": 1204,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1245,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1219,
											"end": 1225,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1216,
											"end": 1246,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1263,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 1213,
											"end": 1263,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1259,
											"end": 1260,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 1257,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1249,
											"end": 1261,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1263,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 1213,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1282,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1324,
											"end": 1331,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1315,
											"end": 1321,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1304,
											"end": 1313,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1300,
											"end": 1322,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1282,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1282,
											"end": 1332,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1282,
											"end": 1332,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1282,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1272,
											"end": 1332,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1016,
											"end": 1338,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1016,
											"end": 1338,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1343,
											"end": 2083,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1343,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1446,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1454,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1456,
											"end": 1462,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1509,
											"end": 1511,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1497,
											"end": 1506,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1488,
											"end": 1495,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1507,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1480,
											"end": 1512,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1477,
											"end": 1529,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1477,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 1477,
											"end": 1529,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1525,
											"end": 1526,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1522,
											"end": 1523,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1515,
											"end": 1527,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1477,
											"end": 1529,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 1477,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1565,
											"end": 1574,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1552,
											"end": 1575,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1594,
											"end": 1612,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1635,
											"end": 1637,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1627,
											"end": 1633,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1638,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1621,
											"end": 1655,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1621,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 1621,
											"end": 1655,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1651,
											"end": 1652,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1648,
											"end": 1649,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1621,
											"end": 1655,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 1621,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1674,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 1716,
											"end": 1723,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1696,
											"end": 1705,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1692,
											"end": 1714,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1674,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1674,
											"end": 1724,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1674,
											"end": 1724,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 1674,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1724,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1664,
											"end": 1724,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1777,
											"end": 1779,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1766,
											"end": 1775,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1762,
											"end": 1780,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1749,
											"end": 1781,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1733,
											"end": 1781,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1733,
											"end": 1781,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1804,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1793,
											"end": 1809,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1826,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 1790,
											"end": 1826,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1822,
											"end": 1823,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1820,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1812,
											"end": 1824,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1826,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 1790,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1790,
											"end": 1826,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1845,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 1889,
											"end": 1896,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1878,
											"end": 1886,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1867,
											"end": 1876,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1863,
											"end": 1887,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1845,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1845,
											"end": 1897,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1845,
											"end": 1897,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 1845,
											"end": 1897,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1835,
											"end": 1897,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1835,
											"end": 1897,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1835,
											"end": 1897,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1947,
											"end": 1949,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1932,
											"end": 1950,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1919,
											"end": 1951,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 2033,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1984,
											"end": 1989,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 2034,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1973,
											"end": 1978,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1970,
											"end": 2035,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1960,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 1960,
											"end": 2053,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2049,
											"end": 2050,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2047,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2039,
											"end": 2051,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1960,
											"end": 2053,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 1960,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2077,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2062,
											"end": 2077,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2062,
											"end": 2077,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2062,
											"end": 2077,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1343,
											"end": 2083,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1343,
											"end": 2083,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1343,
											"end": 2083,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1343,
											"end": 2083,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1343,
											"end": 2083,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1343,
											"end": 2083,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2088,
											"end": 2516,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 2088,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2222,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2257,
											"end": 2263,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2251,
											"end": 2264,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2282,
											"end": 2283,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2292,
											"end": 2421,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 2292,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2306,
											"end": 2312,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2304,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2300,
											"end": 2313,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2292,
											"end": 2421,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2292,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 2292,
											"end": 2421,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2404,
											"end": 2408,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2388,
											"end": 2402,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2402,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2402,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2384,
											"end": 2409,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2384,
											"end": 2409,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2378,
											"end": 2410,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2365,
											"end": 2376,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2365,
											"end": 2376,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2365,
											"end": 2376,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2358,
											"end": 2411,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2321,
											"end": 2333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2292,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 2292,
											"end": 2421,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2292,
											"end": 2421,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 2292,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2439,
											"end": 2445,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2437,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2433,
											"end": 2446,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2430,
											"end": 2478,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2430,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 2430,
											"end": 2478,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2474,
											"end": 2475,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2465,
											"end": 2471,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2463,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2456,
											"end": 2472,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2449,
											"end": 2476,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2430,
											"end": 2478,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 2430,
											"end": 2478,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2494,
											"end": 2510,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2510,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2510,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2510,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2510,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2088,
											"end": 2516,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2088,
											"end": 2516,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3417,
											"end": 3854,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3417,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3497,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3492,
											"end": 3504,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3492,
											"end": 3504,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3492,
											"end": 3504,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 3492,
											"end": 3504,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3539,
											"end": 3551,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3539,
											"end": 3551,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3539,
											"end": 3551,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3560,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 3560,
											"end": 3621,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3614,
											"end": 3618,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 3606,
											"end": 3612,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3602,
											"end": 3619,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3592,
											"end": 3619,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3592,
											"end": 3619,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3560,
											"end": 3621,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 3560,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3669,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3659,
											"end": 3665,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3656,
											"end": 3670,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3636,
											"end": 3654,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3633,
											"end": 3671,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3848,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3848,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3630,
											"end": 3848,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3701,
											"end": 3702,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3694,
											"end": 3782,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3809,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 3802,
											"end": 3803,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3795,
											"end": 3810,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3837,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3830,
											"end": 3831,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3823,
											"end": 3838,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3848,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3630,
											"end": 3848,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3630,
											"end": 3848,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3854,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3854,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3854,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3854,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3859,
											"end": 4043,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 3859,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3908,
											"end": 3909,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3989,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4008,
											"end": 4012,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 4005,
											"end": 4006,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4013,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4036,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4029,
											"end": 4030,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4022,
											"end": 4037,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4048,
											"end": 4232,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 4048,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4097,
											"end": 4098,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4090,
											"end": 4178,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4197,
											"end": 4201,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 4194,
											"end": 4195,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4187,
											"end": 4202,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4221,
											"end": 4225,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4218,
											"end": 4219,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4211,
											"end": 4226,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"acceptApplication(bool)": "9d9e7a4b",
							"application(string,string,address)": "785963c3",
							"get_keccak256(string)": "8e4f8c6b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_changeStatus\",\"type\":\"bool\"}],\"name\":\"acceptApplication\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_contactForCommunication\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_userAdr\",\"type\":\"address\"}],\"name\":\"application\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"get_keccak256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":\"PhasePrivate\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol\":{\"keccak256\":\"0xb10734f833c3608bfda9ce0ef122b8af6de2f149160f414e1fde8251a265a84b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4f6203e623b16f8e532651e491d1567978631fb56c8e47d528e5b322cbfbb949\",\"dweb:/ipfs/Qmbr3eg2r5anpdi18SZGcwHWkHsuFWaLSkPJf16rEUFEpj\"]},\"Documents/GitHub/contract-token-cryptoMonster/backend/components/main.sol\":{\"keccak256\":\"0x2b6f90db3286bd0b5474121cbe4494f8cf0d80a91fbc07d0c1285f7059dad479\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a27fdbd0670496dcb4858537f21665266b3d6e9d850d9eee9698f8801aa8990c\",\"dweb:/ipfs/QmNSUsQQrBfNEAeeuNuVfYFu2U4TTKDHx6283eTUJbMsLu\"]},\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":{\"keccak256\":\"0x55073c985c0ace969bfd71eedd56019c7349e65b5ece564d2a0518810e901c81\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b29b6d3e009cfcd406945988b1338f5512656f14a49fc8d8825024e81de023fe\",\"dweb:/ipfs/QmVDcL7SM8t2R5ZAAGNFJhAUHvJQEX2wRrKihVWHiNLma2\"]},\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":{\"keccak256\":\"0x55a8643a4e2500eea6f59f7e7f566793931fec76dcb865f101a6f7bd99b6f503\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bb96275c62c97e4259aa8c07867efff9a59d8968a2c668f84e597efba46b9252\",\"dweb:/ipfs/QmPEDXJmNEX1skQRrvGdWtzsguaiW1MkGH3b3xnfoBZ3vG\"]},\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":{\"keccak256\":\"0x3c4d55fff6547a670227273cabf6e5cd6279729590c2415e26148beed5975392\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://31dfe220e5e8f93ca63e6021e3fdf2115f3672410395d5ba5cceb197c48e921f\",\"dweb:/ipfs/QmcMwAuz3HM2QT4HWoHUxny2HqbtibVdu3gDwkeEs9Xyn7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1911,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol:PhasePrivate",
								"label": "structUsers_",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(structUser)1906_storage)"
							},
							{
								"astId": 1921,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol:PhasePrivate",
								"label": "structPhases_",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(structPhase)1916_storage)"
							},
							{
								"astId": 1939,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol:PhasePrivate",
								"label": "strucApplications_",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(structApplication)1934_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(Role)1890": {
								"encoding": "inplace",
								"label": "enum structures.Role",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(structApplication)1934_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structApplication)",
								"numberOfBytes": "32",
								"value": "t_struct(structApplication)1934_storage"
							},
							"t_mapping(t_address,t_struct(structPhase)1916_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structPhase)",
								"numberOfBytes": "32",
								"value": "t_struct(structPhase)1916_storage"
							},
							"t_mapping(t_address,t_struct(structUser)1906_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structUser)",
								"numberOfBytes": "32",
								"value": "t_struct(structUser)1906_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(structApplication)1934_storage": {
								"encoding": "inplace",
								"label": "struct structures.structApplication",
								"members": [
									{
										"astId": 1923,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol:PhasePrivate",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 1925,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol:PhasePrivate",
										"label": "contactForCommunication",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 1927,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol:PhasePrivate",
										"label": "userAdr",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 1929,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol:PhasePrivate",
										"label": "status",
										"offset": 20,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 1931,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol:PhasePrivate",
										"label": "reviewed",
										"offset": 21,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 1933,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol:PhasePrivate",
										"label": "exist",
										"offset": 22,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(structPhase)1916_storage": {
								"encoding": "inplace",
								"label": "struct structures.structPhase",
								"members": [
									{
										"astId": 1913,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol:PhasePrivate",
										"label": "statusPhase",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 1915,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol:PhasePrivate",
										"label": "reviewed",
										"offset": 1,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(structUser)1906_storage": {
								"encoding": "inplace",
								"label": "struct structures.structUser",
								"members": [
									{
										"astId": 1893,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol:PhasePrivate",
										"label": "role",
										"offset": 0,
										"slot": "0",
										"type": "t_enum(Role)1890"
									},
									{
										"astId": 1895,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol:PhasePrivate",
										"label": "login",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 1897,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol:PhasePrivate",
										"label": "password",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									},
									{
										"astId": 1899,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol:PhasePrivate",
										"label": "balance_overall",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1901,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol:PhasePrivate",
										"label": "balance_seed",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1903,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol:PhasePrivate",
										"label": "balance_private",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1905,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol:PhasePrivate",
										"label": "balance_public",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol": {
				"PhaseSeed": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_hash",
									"type": "string"
								}
							],
							"name": "get_keccak256",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":145:946  contract PhaseSeed is Main {\r... */\n  mstore(0x40, 0x80)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":179:248  address investorFirstAdr = 0x78731D3Ca6b7E34aC0F824c42a7cC18A495cabaB */\n  0x03\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":206:248  0x78731D3Ca6b7E34aC0F824c42a7cC18A495cabaB */\n  0x78731d3ca6b7e34ac0f824c42a7cc18a495cabab\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":179:248  address investorFirstAdr = 0x78731D3Ca6b7E34aC0F824c42a7cC18A495cabaB */\n  or\n  swap1\n  swap2\n  sstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":269:339  address investorSecondAdr = 0x617F2E2fD72FD9D5503197092aC168c91465E7f2 */\n  0x04\n  dup1\n  sload\n  dup3\n  and\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":297:339  0x617F2E2fD72FD9D5503197092aC168c91465E7f2 */\n  0x617f2e2fd72fd9d5503197092ac168c91465e7f2\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":269:339  address investorSecondAdr = 0x617F2E2fD72FD9D5503197092aC168c91465E7f2 */\n  or\n  swap1\n  sstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":359:425  address bestFriendAdr = 0x17F6AD8Ef982297579C203069C1DbfFE4348c372 */\n  0x05\n  dup1\n  sload\n  swap1\n  swap2\n  and\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":383:425  0x17F6AD8Ef982297579C203069C1DbfFE4348c372 */\n  0x17f6ad8ef982297579c203069c1dbffe4348c372\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":359:425  address bestFriendAdr = 0x17F6AD8Ef982297579C203069C1DbfFE4348c372 */\n  or\n  swap1\n  sstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":526:943  constructor() {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":584:658  structUser(Role.INVESTOR , \"Investor1\", get_keccak256(\"3412\"), 0, 0, 0, 0) */\n  0x40\n  dup1\n  mload\n  0xe0\n  dup2\n  add\n  swap1\n  swap2\n  mstore\n  dup1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":595:608  Role.INVESTOR */\n  0x03\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":584:658  structUser(Role.INVESTOR , \"Investor1\", get_keccak256(\"3412\"), 0, 0, 0, 0) */\n  dup2\n  mstore\n  0x20\n  add\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xb8, 0x496e766573746f7231)\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":624:645  get_keccak256(\"3412\") */\n  tag_7\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe1, 0x199a1899)\n  dup2\n  mstore\n  pop\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":624:637  get_keccak256 */\n  shl(0x20, tag_8)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":624:645  get_keccak256(\"3412\") */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":584:658  structUser(Role.INVESTOR , \"Investor1\", get_keccak256(\"3412\"), 0, 0, 0, 0) */\n  dup2\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":647:648  0 */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":584:658  structUser(Role.INVESTOR , \"Investor1\", get_keccak256(\"3412\"), 0, 0, 0, 0) */\n  0x20\n  dup1\n  dup4\n  add\n  dup3\n  swap1\n  mstore\n  0x40\n  dup1\n  dup5\n  add\n  dup4\n  swap1\n  mstore\n  0x60\n  dup5\n  add\n  dup4\n  swap1\n  mstore\n  0x80\n  swap1\n  swap4\n  add\n  dup3\n  swap1\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":564:580  investorFirstAdr */\n  and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":551:581  structUsers_[investorFirstAdr] */\n  dup3\n  mstore\n  dup2\n  swap1\n  mstore\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":551:658  structUsers_[investorFirstAdr] = structUser(Role.INVESTOR , \"Investor1\", get_keccak256(\"3412\"), 0, 0, 0, 0) */\n  dup2\n  mload\n  dup2\n  sload\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":551:581  structUsers_[investorFirstAdr] */\n  dup3\n  swap1\n  not(0xff)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":551:658  structUsers_[investorFirstAdr] = structUser(Role.INVESTOR , \"Investor1\", get_keccak256(\"3412\"), 0, 0, 0, 0) */\n  and\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":564:580  investorFirstAdr */\n  0x01\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":551:658  structUsers_[investorFirstAdr] = structUser(Role.INVESTOR , \"Investor1\", get_keccak256(\"3412\"), 0, 0, 0, 0) */\n  dup4\n  0x04\n  dup2\n  gt\n  iszero\n  tag_10\n  jumpi\n  tag_10\n  tag_6\n  jump\t// in\ntag_10:\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x20\n  dup3\n  dup2\n  add\n  mload\n  dup1\n  mload\n  tag_11\n  swap3\n  0x01\n  dup6\n  add\n  swap3\n  add\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  pop\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  0x60\n  dup3\n  add\n  mload\n  dup2\n  0x03\n  add\n  sstore\n  0x80\n  dup3\n  add\n  mload\n  dup2\n  0x04\n  add\n  sstore\n  0xa0\n  dup3\n  add\n  mload\n  dup2\n  0x05\n  add\n  sstore\n  0xc0\n  dup3\n  add\n  mload\n  dup2\n  0x06\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":716:789  structUser(Role.INVESTOR, \"Investor1\", get_keccak256(\"1423\"), 0, 0, 0, 0) */\n  mload(0x40)\n  dup1\n  0xe0\n  add\n  0x40\n  mstore\n  dup1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":727:740  Role.INVESTOR */\n  0x03\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":716:789  structUser(Role.INVESTOR, \"Investor1\", get_keccak256(\"1423\"), 0, 0, 0, 0) */\n  0x04\n  dup2\n  gt\n  iszero\n  tag_14\n  jumpi\n  tag_14\n  tag_6\n  jump\t// in\ntag_14:\n  dup2\n  mstore\n  0x20\n  add\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xb8, 0x496e766573746f7231)\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":755:776  get_keccak256(\"1423\") */\n  tag_15\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe0, 0x31343233)\n  dup2\n  mstore\n  pop\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":755:768  get_keccak256 */\n  shl(0x20, tag_8)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":755:776  get_keccak256(\"1423\") */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":716:789  structUser(Role.INVESTOR, \"Investor1\", get_keccak256(\"1423\"), 0, 0, 0, 0) */\n  dup2\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":778:779  0 */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":716:789  structUser(Role.INVESTOR, \"Investor1\", get_keccak256(\"1423\"), 0, 0, 0, 0) */\n  0x20\n  dup1\n  dup4\n  add\n  dup3\n  swap1\n  mstore\n  0x40\n  dup1\n  dup5\n  add\n  dup4\n  swap1\n  mstore\n  0x60\n  dup5\n  add\n  dup4\n  swap1\n  mstore\n  0x80\n  swap1\n  swap4\n  add\n  dup3\n  swap1\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":695:712  investorSecondAdr */\n  0x04\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":682:713  structUsers_[investorSecondAdr] */\n  dup4\n  mstore\n  swap1\n  dup3\n  swap1\n  mstore\n  swap2\n  swap1\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":682:789  structUsers_[investorSecondAdr] = structUser(Role.INVESTOR, \"Investor1\", get_keccak256(\"1423\"), 0, 0, 0, 0) */\n  dup3\n  mload\n  dup2\n  sload\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":682:713  structUsers_[investorSecondAdr] */\n  swap2\n  swap3\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":682:789  structUsers_[investorSecondAdr] = structUser(Role.INVESTOR, \"Investor1\", get_keccak256(\"1423\"), 0, 0, 0, 0) */\n  swap1\n  swap2\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":682:713  structUsers_[investorSecondAdr] */\n  dup4\n  swap2\n  not(0xff)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":682:789  structUsers_[investorSecondAdr] = structUser(Role.INVESTOR, \"Investor1\", get_keccak256(\"1423\"), 0, 0, 0, 0) */\n  swap1\n  swap2\n  and\n  swap1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":695:712  investorSecondAdr */\n  0x01\n  swap1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":682:789  structUsers_[investorSecondAdr] = structUser(Role.INVESTOR, \"Investor1\", get_keccak256(\"1423\"), 0, 0, 0, 0) */\n  dup5\n  swap1\n  dup2\n  gt\n  iszero\n  tag_17\n  jumpi\n  tag_17\n  tag_6\n  jump\t// in\ntag_17:\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x20\n  dup3\n  dup2\n  add\n  mload\n  dup1\n  mload\n  tag_18\n  swap3\n  0x01\n  dup6\n  add\n  swap3\n  add\n  swap1\n  tag_12\n  jump\t// in\ntag_18:\n  pop\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  0x60\n  dup3\n  add\n  mload\n  dup2\n  0x03\n  add\n  sstore\n  0x80\n  dup3\n  add\n  mload\n  dup2\n  0x04\n  add\n  sstore\n  0xa0\n  dup3\n  add\n  mload\n  dup2\n  0x05\n  add\n  sstore\n  0xc0\n  dup3\n  add\n  mload\n  dup2\n  0x06\n  add\n  sstore\n  swap1\n  pop\n  pop\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":843:918  structUser(Role.INVESTOR, \"Best friend\", get_keccak256(\"2314\"), 0, 0, 0, 0) */\n  mload(0x40)\n  dup1\n  0xe0\n  add\n  0x40\n  mstore\n  dup1\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":854:867  Role.INVESTOR */\n  0x03\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":843:918  structUser(Role.INVESTOR, \"Best friend\", get_keccak256(\"2314\"), 0, 0, 0, 0) */\n  0x04\n  dup2\n  gt\n  iszero\n  tag_20\n  jumpi\n  tag_20\n  tag_6\n  jump\t// in\ntag_20:\n  dup2\n  mstore\n  0x20\n  add\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xaa, 0x10995cdd08199c9a595b99)\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":884:905  get_keccak256(\"2314\") */\n  tag_21\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe2, 0x0c8ccc4d)\n  dup2\n  mstore\n  pop\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":884:897  get_keccak256 */\n  shl(0x20, tag_8)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":884:905  get_keccak256(\"2314\") */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":843:918  structUser(Role.INVESTOR, \"Best friend\", get_keccak256(\"2314\"), 0, 0, 0, 0) */\n  dup2\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":907:908  0 */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":843:918  structUser(Role.INVESTOR, \"Best friend\", get_keccak256(\"2314\"), 0, 0, 0, 0) */\n  0x20\n  dup1\n  dup4\n  add\n  dup3\n  swap1\n  mstore\n  0x40\n  dup1\n  dup5\n  add\n  dup4\n  swap1\n  mstore\n  0x60\n  dup5\n  add\n  dup4\n  swap1\n  mstore\n  0x80\n  swap1\n  swap4\n  add\n  dup3\n  swap1\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":826:839  bestFriendAdr */\n  and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":813:840  structUsers_[bestFriendAdr] */\n  dup3\n  mstore\n  dup2\n  swap1\n  mstore\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":813:918  structUsers_[bestFriendAdr] = structUser(Role.INVESTOR, \"Best friend\", get_keccak256(\"2314\"), 0, 0, 0, 0) */\n  dup2\n  mload\n  dup2\n  sload\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":813:840  structUsers_[bestFriendAdr] */\n  dup3\n  swap1\n  not(0xff)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":813:918  structUsers_[bestFriendAdr] = structUser(Role.INVESTOR, \"Best friend\", get_keccak256(\"2314\"), 0, 0, 0, 0) */\n  and\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":826:839  bestFriendAdr */\n  0x01\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":813:918  structUsers_[bestFriendAdr] = structUser(Role.INVESTOR, \"Best friend\", get_keccak256(\"2314\"), 0, 0, 0, 0) */\n  dup4\n  0x04\n  dup2\n  gt\n  iszero\n  tag_23\n  jumpi\n  tag_23\n  tag_6\n  jump\t// in\ntag_23:\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0x20\n  dup3\n  dup2\n  add\n  mload\n  dup1\n  mload\n  tag_24\n  swap3\n  0x01\n  dup6\n  add\n  swap3\n  add\n  swap1\n  tag_12\n  jump\t// in\ntag_24:\n  pop\n  0x40\n  dup3\n  add\n  mload\n  0x02\n  dup3\n  add\n  sstore\n  0x60\n  dup3\n  add\n  mload\n  0x03\n  dup3\n  add\n  sstore\n  0x80\n  dup3\n  add\n  mload\n  0x04\n  dup3\n  add\n  sstore\n  0xa0\n  dup3\n  add\n  mload\n  0x05\n  dup3\n  add\n  sstore\n  0xc0\n  swap1\n  swap2\n  add\n  mload\n  0x06\n  swap1\n  swap2\n  add\n  sstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":145:946  contract PhaseSeed is Main {\r... */\n  jump(tag_40)\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":144:282  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\ntag_8:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":208:215  bytes32 */\n  0x00\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":266:271  _hash */\n  dup2\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":249:272  abi.encodePacked(_hash) */\n  add(0x20, mload(0x40))\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":239:273  keccak256(abi.encodePacked(_hash)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":232:274  return(keccak256(abi.encodePacked(_hash))) */\n  swap1\n  pop\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":144:282  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":145:946  contract PhaseSeed is Main {\r... */\ntag_12:\n  dup3\n  dup1\n  sload\n  tag_29\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_32\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_35)\ntag_32:\n  dup3\n  0x1f\n  lt\n  tag_33\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_35)\ntag_33:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_35\n  jumpi\n  swap2\n  dup3\n  add\ntag_34:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_35\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_34)\ntag_35:\n  pop\n  tag_36\n  swap3\n  swap2\n  pop\n  tag_37\n  jump\t// in\ntag_36:\n  pop\n  swap1\n  jump\t// out\ntag_37:\ntag_38:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_36\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_38)\n    /* \"#utility.yul\":14:442   */\ntag_28:\n    /* \"#utility.yul\":145:148   */\n  0x00\n    /* \"#utility.yul\":183:189   */\n  dup3\n    /* \"#utility.yul\":177:190   */\n  mload\n    /* \"#utility.yul\":208:209   */\n  0x00\n    /* \"#utility.yul\":218:347   */\ntag_42:\n    /* \"#utility.yul\":232:238   */\n  dup2\n    /* \"#utility.yul\":229:230   */\n  dup2\n    /* \"#utility.yul\":226:239   */\n  lt\n    /* \"#utility.yul\":218:347   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":330:334   */\n  0x20\n    /* \"#utility.yul\":314:328   */\n  dup2\n  dup7\n  add\n    /* \"#utility.yul\":310:335   */\n  dup2\n  add\n    /* \"#utility.yul\":304:336   */\n  mload\n    /* \"#utility.yul\":291:302   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":284:337   */\n  mstore\n    /* \"#utility.yul\":247:259   */\n  add\n    /* \"#utility.yul\":218:347   */\n  jump(tag_42)\ntag_44:\n    /* \"#utility.yul\":365:371   */\n  dup2\n    /* \"#utility.yul\":362:363   */\n  dup2\n    /* \"#utility.yul\":359:372   */\n  gt\n    /* \"#utility.yul\":356:404   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":400:401   */\n  0x00\n    /* \"#utility.yul\":391:397   */\n  dup3\n    /* \"#utility.yul\":386:389   */\n  dup6\n    /* \"#utility.yul\":382:398   */\n  add\n    /* \"#utility.yul\":375:402   */\n  mstore\n    /* \"#utility.yul\":356:404   */\ntag_45:\n  pop\n    /* \"#utility.yul\":420:436   */\n  swap2\n  swap1\n  swap2\n  add\n  swap3\n    /* \"#utility.yul\":14:442   */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":447:827   */\ntag_30:\n    /* \"#utility.yul\":526:527   */\n  0x01\n    /* \"#utility.yul\":522:534   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":569:581   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":590:651   */\n  tag_47\n  jumpi\n    /* \"#utility.yul\":644:648   */\n  0x7f\n    /* \"#utility.yul\":636:642   */\n  dup3\n    /* \"#utility.yul\":632:649   */\n  and\n    /* \"#utility.yul\":622:649   */\n  swap2\n  pop\n    /* \"#utility.yul\":590:651   */\ntag_47:\n    /* \"#utility.yul\":697:699   */\n  0x20\n    /* \"#utility.yul\":689:695   */\n  dup3\n    /* \"#utility.yul\":686:700   */\n  lt\n    /* \"#utility.yul\":666:684   */\n  dup2\n    /* \"#utility.yul\":663:701   */\n  eq\n    /* \"#utility.yul\":660:821   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":743:753   */\n  0x4e487b71\n    /* \"#utility.yul\":738:741   */\n  0xe0\n    /* \"#utility.yul\":734:754   */\n  shl\n    /* \"#utility.yul\":731:732   */\n  0x00\n    /* \"#utility.yul\":724:755   */\n  mstore\n    /* \"#utility.yul\":778:782   */\n  0x22\n    /* \"#utility.yul\":775:776   */\n  0x04\n    /* \"#utility.yul\":768:783   */\n  mstore\n    /* \"#utility.yul\":806:810   */\n  0x24\n    /* \"#utility.yul\":803:804   */\n  0x00\n    /* \"#utility.yul\":796:811   */\n  revert\n    /* \"#utility.yul\":660:821   */\ntag_48:\n  pop\n    /* \"#utility.yul\":447:827   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":832:959   */\ntag_6:\n    /* \"#utility.yul\":893:903   */\n  0x4e487b71\n    /* \"#utility.yul\":888:891   */\n  0xe0\n    /* \"#utility.yul\":884:904   */\n  shl\n    /* \"#utility.yul\":881:882   */\n  0x00\n    /* \"#utility.yul\":874:905   */\n  mstore\n    /* \"#utility.yul\":924:928   */\n  0x21\n    /* \"#utility.yul\":921:922   */\n  0x04\n    /* \"#utility.yul\":914:929   */\n  mstore\n    /* \"#utility.yul\":948:952   */\n  0x24\n    /* \"#utility.yul\":945:946   */\n  0x00\n    /* \"#utility.yul\":938:953   */\n  revert\n    /* \"#utility.yul\":832:959   */\ntag_40:\n    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":145:946  contract PhaseSeed is Main {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":145:946  contract PhaseSeed is Main {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8e4f8c6b\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":144:282  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n    tag_3:\n      tag_4\n      tag_5\n      calldatasize\n      0x04\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n        /* \"#utility.yul\":1520:1545   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1508:1510   */\n      0x20\n        /* \"#utility.yul\":1493:1511   */\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":144:282  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":208:215  bytes32 */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":266:271  _hash */\n      dup2\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":249:272  abi.encodePacked(_hash) */\n      add(0x20, mload(0x40))\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":239:273  keccak256(abi.encodePacked(_hash)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":232:274  return(keccak256(abi.encodePacked(_hash))) */\n      swap1\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":144:282  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:936   */\n    tag_6:\n        /* \"#utility.yul\":83:89   */\n      0x00\n        /* \"#utility.yul\":136:138   */\n      0x20\n        /* \"#utility.yul\":124:133   */\n      dup3\n        /* \"#utility.yul\":115:122   */\n      dup5\n        /* \"#utility.yul\":111:134   */\n      sub\n        /* \"#utility.yul\":107:139   */\n      slt\n        /* \"#utility.yul\":104:156   */\n      iszero\n      tag_15\n      jumpi\n        /* \"#utility.yul\":152:153   */\n      0x00\n        /* \"#utility.yul\":149:150   */\n      dup1\n        /* \"#utility.yul\":142:154   */\n      revert\n        /* \"#utility.yul\":104:156   */\n    tag_15:\n        /* \"#utility.yul\":192:201   */\n      dup2\n        /* \"#utility.yul\":179:202   */\n      calldataload\n        /* \"#utility.yul\":221:239   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":262:264   */\n      dup1\n        /* \"#utility.yul\":254:260   */\n      dup3\n        /* \"#utility.yul\":251:265   */\n      gt\n        /* \"#utility.yul\":248:282   */\n      iszero\n      tag_16\n      jumpi\n        /* \"#utility.yul\":278:279   */\n      0x00\n        /* \"#utility.yul\":275:276   */\n      dup1\n        /* \"#utility.yul\":268:280   */\n      revert\n        /* \"#utility.yul\":248:282   */\n    tag_16:\n        /* \"#utility.yul\":316:322   */\n      dup2\n        /* \"#utility.yul\":305:314   */\n      dup5\n        /* \"#utility.yul\":301:323   */\n      add\n        /* \"#utility.yul\":291:323   */\n      swap2\n      pop\n        /* \"#utility.yul\":361:368   */\n      dup5\n        /* \"#utility.yul\":354:358   */\n      0x1f\n        /* \"#utility.yul\":350:352   */\n      dup4\n        /* \"#utility.yul\":346:359   */\n      add\n        /* \"#utility.yul\":342:369   */\n      slt\n        /* \"#utility.yul\":332:387   */\n      tag_17\n      jumpi\n        /* \"#utility.yul\":383:384   */\n      0x00\n        /* \"#utility.yul\":380:381   */\n      dup1\n        /* \"#utility.yul\":373:385   */\n      revert\n        /* \"#utility.yul\":332:387   */\n    tag_17:\n        /* \"#utility.yul\":419:421   */\n      dup2\n        /* \"#utility.yul\":406:422   */\n      calldataload\n        /* \"#utility.yul\":441:443   */\n      dup2\n        /* \"#utility.yul\":437:439   */\n      dup2\n        /* \"#utility.yul\":434:444   */\n      gt\n        /* \"#utility.yul\":431:467   */\n      iszero\n      tag_19\n      jumpi\n        /* \"#utility.yul\":447:465   */\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":522:524   */\n      0x40\n        /* \"#utility.yul\":516:525   */\n      mload\n        /* \"#utility.yul\":490:492   */\n      0x1f\n        /* \"#utility.yul\":576:589   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":572:594   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":596:598   */\n      0x3f\n        /* \"#utility.yul\":568:599   */\n      add\n        /* \"#utility.yul\":564:604   */\n      and\n        /* \"#utility.yul\":552:605   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":620:638   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":640:662   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":617:663   */\n      or\n        /* \"#utility.yul\":614:686   */\n      iszero\n      tag_22\n      jumpi\n        /* \"#utility.yul\":666:684   */\n      tag_22\n      tag_20\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":706:716   */\n      dup2\n        /* \"#utility.yul\":702:704   */\n      0x40\n        /* \"#utility.yul\":695:717   */\n      mstore\n        /* \"#utility.yul\":741:743   */\n      dup3\n        /* \"#utility.yul\":733:739   */\n      dup2\n        /* \"#utility.yul\":726:744   */\n      mstore\n        /* \"#utility.yul\":781:788   */\n      dup8\n        /* \"#utility.yul\":776:778   */\n      0x20\n        /* \"#utility.yul\":771:773   */\n      dup5\n        /* \"#utility.yul\":767:769   */\n      dup8\n        /* \"#utility.yul\":763:774   */\n      add\n        /* \"#utility.yul\":759:779   */\n      add\n        /* \"#utility.yul\":756:789   */\n      gt\n        /* \"#utility.yul\":753:806   */\n      iszero\n      tag_23\n      jumpi\n        /* \"#utility.yul\":802:803   */\n      0x00\n        /* \"#utility.yul\":799:800   */\n      dup1\n        /* \"#utility.yul\":792:804   */\n      revert\n        /* \"#utility.yul\":753:806   */\n    tag_23:\n        /* \"#utility.yul\":858:860   */\n      dup3\n        /* \"#utility.yul\":853:855   */\n      0x20\n        /* \"#utility.yul\":849:851   */\n      dup7\n        /* \"#utility.yul\":845:856   */\n      add\n        /* \"#utility.yul\":840:842   */\n      0x20\n        /* \"#utility.yul\":832:838   */\n      dup4\n        /* \"#utility.yul\":828:843   */\n      add\n        /* \"#utility.yul\":815:861   */\n      calldatacopy\n        /* \"#utility.yul\":903:904   */\n      0x00\n        /* \"#utility.yul\":881:896   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":898:900   */\n      0x20\n        /* \"#utility.yul\":877:901   */\n      add\n        /* \"#utility.yul\":870:905   */\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n        /* \"#utility.yul\":885:891   */\n      swap6\n        /* \"#utility.yul\":14:936   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":941:1369   */\n    tag_12:\n        /* \"#utility.yul\":1072:1075   */\n      0x00\n        /* \"#utility.yul\":1110:1116   */\n      dup3\n        /* \"#utility.yul\":1104:1117   */\n      mload\n        /* \"#utility.yul\":1135:1136   */\n      0x00\n        /* \"#utility.yul\":1145:1274   */\n    tag_25:\n        /* \"#utility.yul\":1159:1165   */\n      dup2\n        /* \"#utility.yul\":1156:1157   */\n      dup2\n        /* \"#utility.yul\":1153:1166   */\n      lt\n        /* \"#utility.yul\":1145:1274   */\n      iszero\n      tag_27\n      jumpi\n        /* \"#utility.yul\":1257:1261   */\n      0x20\n        /* \"#utility.yul\":1241:1255   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":1237:1262   */\n      dup2\n      add\n        /* \"#utility.yul\":1231:1263   */\n      mload\n        /* \"#utility.yul\":1218:1229   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":1211:1264   */\n      mstore\n        /* \"#utility.yul\":1174:1186   */\n      add\n        /* \"#utility.yul\":1145:1274   */\n      jump(tag_25)\n    tag_27:\n        /* \"#utility.yul\":1292:1298   */\n      dup2\n        /* \"#utility.yul\":1289:1290   */\n      dup2\n        /* \"#utility.yul\":1286:1299   */\n      gt\n        /* \"#utility.yul\":1283:1331   */\n      iszero\n      tag_28\n      jumpi\n        /* \"#utility.yul\":1327:1328   */\n      0x00\n        /* \"#utility.yul\":1318:1324   */\n      dup3\n        /* \"#utility.yul\":1313:1316   */\n      dup6\n        /* \"#utility.yul\":1309:1325   */\n      add\n        /* \"#utility.yul\":1302:1329   */\n      mstore\n        /* \"#utility.yul\":1283:1331   */\n    tag_28:\n      pop\n        /* \"#utility.yul\":1347:1363   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":941:1369   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1556:1740   */\n    tag_20:\n        /* \"#utility.yul\":1608:1685   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1605:1606   */\n      0x00\n        /* \"#utility.yul\":1598:1686   */\n      mstore\n        /* \"#utility.yul\":1705:1709   */\n      0x41\n        /* \"#utility.yul\":1702:1703   */\n      0x04\n        /* \"#utility.yul\":1695:1710   */\n      mstore\n        /* \"#utility.yul\":1729:1733   */\n      0x24\n        /* \"#utility.yul\":1726:1727   */\n      0x00\n        /* \"#utility.yul\":1719:1734   */\n      revert\n\n    auxdata: 0xa26469706673582212201dfe82837366e83fa1ed1c6749116ea6971aedb8f13161b777a94c14df04449164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1350": {
									"entryPoint": null,
									"id": 1350,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@get_keccak256_1375": {
									"entryPoint": 969,
									"id": 1375,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 1288,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:961:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "153:289:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "163:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "183:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "177:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "177:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "167:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "199:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "208:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "203:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "270:77:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "295:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "300:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "291:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "291:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "318:6:9"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "326:1:9"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "314:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "314:14:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "330:4:9",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "310:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "310:25:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "304:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "304:32:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "284:53:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "284:53:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "229:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "232:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "226:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "226:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "240:21:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "242:17:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "251:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "254:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "247:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "247:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "242:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "222:3:9",
																"statements": []
															},
															"src": "218:129:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "373:31:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "386:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "391:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "382:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "382:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "400:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "375:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "375:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "375:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "362:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "365:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "359:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "359:13:9"
															},
															"nodeType": "YulIf",
															"src": "356:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "413:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "424:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "429:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "420:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "420:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "413:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "129:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "134:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "145:3:9",
														"type": ""
													}
												],
												"src": "14:428:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "502:325:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "512:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "526:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "529:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "522:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "512:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "543:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "573:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "569:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "547:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "620:31:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "622:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "636:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "644:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "632:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "632:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "622:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "600:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "593:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "593:26:9"
															},
															"nodeType": "YulIf",
															"src": "590:61:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "710:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "731:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "738:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "743:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "734:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "734:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "724:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "724:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "724:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "775:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "778:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "768:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "768:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "768:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "803:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "806:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "796:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "796:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "796:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "666:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "689:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "697:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "686:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "686:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "663:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "663:38:9"
															},
															"nodeType": "YulIf",
															"src": "660:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "482:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "491:6:9",
														"type": ""
													}
												],
												"src": "447:380:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "864:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "881:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "888:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "893:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "884:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "884:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "874:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "874:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "874:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "921:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:4:9",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "914:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "914:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "914:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "945:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "948:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "938:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "938:15:9"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "832:127:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600380546001600160a01b03199081167378731d3ca6b7e34ac0f824c42a7cc18a495cabab1790915560048054821673617f2e2fd72fd9d5503197092ac168c91465e7f2179055600580549091167317f6ad8ef982297579c203069c1dbffe4348c37217905534801561007657600080fd5b506040805160e08101909152806003815260200160405180604001604052806009815260200168496e766573746f723160b81b81525081526020016100dc60405180604001604052806004815260200163199a189960e11b8152506103c960201b60201c565b81526000602080830182905260408084018390526060840183905260809093018290526003546001600160a01b031682528190522081518154829060ff1916600183600481111561012f5761012f610508565b0217905550602082810151805161014c92600185019201906103f9565b5060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c082015181600601559050506040518060e00160405280600360048111156101a0576101a0610508565b815260200160405180604001604052806009815260200168496e766573746f723160b81b81525081526020016101f7604051806040016040528060048152602001633134323360e01b8152506103c960201b60201c565b8152600060208083018290526040808401839052606084018390526080909301829052600480546001600160a01b03168352908290529190208251815491929091839160ff1990911690600190849081111561025557610255610508565b0217905550602082810151805161027292600185019201906103f9565b5060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c082015181600601559050506040518060e00160405280600360048111156102c6576102c6610508565b81526020016040518060400160405280600b81526020016a10995cdd08199c9a595b9960aa1b815250815260200161031f604051806040016040528060048152602001630c8ccc4d60e21b8152506103c960201b60201c565b81526000602080830182905260408084018390526060840183905260809093018290526005546001600160a01b031682528190522081518154829060ff1916600183600481111561037257610372610508565b0217905550602082810151805161038f92600185019201906103f9565b5060408201516002820155606082015160038201556080820151600482015560a0820151600582015560c09091015160069091015561051e565b6000816040516020016103dc9190610492565b604051602081830303815290604052805190602001209050919050565b828054610405906104cd565b90600052602060002090601f016020900481019282610427576000855561046d565b82601f1061044057805160ff191683800117855561046d565b8280016001018555821561046d579182015b8281111561046d578251825591602001919060010190610452565b5061047992915061047d565b5090565b5b80821115610479576000815560010161047e565b6000825160005b818110156104b35760208186018101518583015201610499565b818111156104c2576000828501525b509190910192915050565b600181811c908216806104e157607f821691505b6020821081141561050257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b6101d68061052d6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638e4f8c6b14610030575b600080fd5b61004361003e366004610085565b610055565b60405190815260200160405180910390f35b6000816040516020016100689190610136565b604051602081830303815290604052805190602001209050919050565b60006020828403121561009757600080fd5b813567ffffffffffffffff808211156100af57600080fd5b818401915084601f8301126100c357600080fd5b8135818111156100d5576100d5610171565b604051601f8201601f19908116603f011681019083821181831017156100fd576100fd610171565b8160405282815287602084870101111561011657600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000825160005b81811015610157576020818601810151858301520161013d565b81811115610166576000828501525b509190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea26469706673582212201dfe82837366e83fa1ed1c6749116ea6971aedb8f13161b777a94c14df04449164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH20 0x78731D3CA6B7E34AC0F824C42A7CC18A495CABAB OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD DUP3 AND PUSH20 0x617F2E2FD72FD9D5503197092AC168C91465E7F2 OR SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP1 SWAP2 AND PUSH20 0x17F6AD8EF982297579C203069C1DBFFE4348C372 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x496E766573746F7231 PUSH1 0xB8 SHL DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDC PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x199A1899 PUSH1 0xE1 SHL DUP2 MSTORE POP PUSH2 0x3C9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 SWAP1 MSTORE KECCAK256 DUP2 MLOAD DUP2 SLOAD DUP3 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x12F JUMPI PUSH2 0x12F PUSH2 0x508 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP1 MLOAD PUSH2 0x14C SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x3F9 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1A0 JUMPI PUSH2 0x1A0 PUSH2 0x508 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x496E766573746F7231 PUSH1 0xB8 SHL DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x31343233 PUSH1 0xE0 SHL DUP2 MSTORE POP PUSH2 0x3C9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP1 DUP3 SWAP1 MSTORE SWAP2 SWAP1 KECCAK256 DUP3 MLOAD DUP2 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH1 0xFF NOT SWAP1 SWAP2 AND SWAP1 PUSH1 0x1 SWAP1 DUP5 SWAP1 DUP2 GT ISZERO PUSH2 0x255 JUMPI PUSH2 0x255 PUSH2 0x508 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP1 MLOAD PUSH2 0x272 SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x3F9 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2C6 JUMPI PUSH2 0x2C6 PUSH2 0x508 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x10995CDD08199C9A595B99 PUSH1 0xAA SHL DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x31F PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0xC8CCC4D PUSH1 0xE2 SHL DUP2 MSTORE POP PUSH2 0x3C9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 SWAP1 MSTORE KECCAK256 DUP2 MLOAD DUP2 SLOAD DUP3 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x372 JUMPI PUSH2 0x372 PUSH2 0x508 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD DUP1 MLOAD PUSH2 0x38F SWAP3 PUSH1 0x1 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x3F9 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0xC0 SWAP1 SWAP2 ADD MLOAD PUSH1 0x6 SWAP1 SWAP2 ADD SSTORE PUSH2 0x51E JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x492 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x405 SWAP1 PUSH2 0x4CD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x427 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x46D JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x440 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x46D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x46D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x46D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x452 JUMP JUMPDEST POP PUSH2 0x479 SWAP3 SWAP2 POP PUSH2 0x47D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x479 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x47E JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4B3 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x499 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x4E1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x502 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1D6 DUP1 PUSH2 0x52D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E4F8C6B EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x85 JUMP JUMPDEST PUSH2 0x55 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x68 SWAP2 SWAP1 PUSH2 0x136 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xD5 JUMPI PUSH2 0xD5 PUSH2 0x171 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xFD JUMPI PUSH2 0xFD PUSH2 0x171 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x157 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x13D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR INVALID DUP3 DUP4 PUSH20 0x66E83FA1ED1C6749116EA6971AEDB8F13161B777 0xA9 0x4C EQ 0xDF DIV DIFFICULTY SWAP2 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "145:801:2:-:0;;;179:69;;;-1:-1:-1;;;;;;179:69:2;;;206:42;179:69;;;;269:70;;;;;297:42;269:70;;;359:66;;;;;;383:42;359:66;;;526:417;;;;;;;;;-1:-1:-1;584:74:2;;;;;;;;;;595:13;584:74;;;;;;;;;;;;;;;;;-1:-1:-1;;;584:74:2;;;;;;;624:21;;;;;;;;;;;;;;-1:-1:-1;;;624:21:2;;;:13;;;:21;;:::i;:::-;584:74;;647:1;584:74;;;;;;;;;;;;;;;;;;;;;;;;;;;564:16;;-1:-1:-1;;;;;564:16:2;551:30;;;;;;:107;;;;:30;;-1:-1:-1;;551:107:2;564:16;551:107;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;551:107:2;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;716:73;;;;;;;;727:13;716:73;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;716:73:2;;;;;;;755:21;;;;;;;;;;;;;;-1:-1:-1;;;755:21:2;;;:13;;;:21;;:::i;:::-;716:73;;778:1;716:73;;;;;;;;;;;;;;;;;;;;;;;;;;;695:17;;;-1:-1:-1;;;;;695:17:2;682:31;;;;;;;;;:107;;;;:31;;:107;;:31;;-1:-1:-1;;682:107:2;;;;695:17;;682:107;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;682:107:2;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;843:75;;;;;;;;854:13;843:75;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;843:75:2;;;;;;;884:21;;;;;;;;;;;;;;-1:-1:-1;;;884:21:2;;;:13;;;:21;;:::i;:::-;843:75;;907:1;843:75;;;;;;;;;;;;;;;;;;;;;;;;;;;826:13;;-1:-1:-1;;;;;826:13:2;813:27;;;;;;:105;;;;:27;;-1:-1:-1;;813:105:2;826:13;813:105;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;813:105:2;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;813:105:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;145:801;;144:138:4;208:7;266:5;249:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;239:34;;;;;;232:42;;144:138;;;:::o;145:801:2:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;145:801:2;;;-1:-1:-1;145:801:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:428:9;145:3;183:6;177:13;208:1;218:129;232:6;229:1;226:13;218:129;;;330:4;314:14;;;310:25;;304:32;291:11;;;284:53;247:12;218:129;;;365:6;362:1;359:13;356:48;;;400:1;391:6;386:3;382:16;375:27;356:48;-1:-1:-1;420:16:9;;;;;14:428;-1:-1:-1;;14:428:9:o;447:380::-;526:1;522:12;;;;569;;;590:61;;644:4;636:6;632:17;622:27;;590:61;697:2;689:6;686:14;666:18;663:38;660:161;;;743:10;738:3;734:20;731:1;724:31;778:4;775:1;768:15;806:4;803:1;796:15;660:161;;447:380;;;:::o;832:127::-;893:10;888:3;884:20;881:1;874:31;924:4;921:1;914:15;948:4;945:1;938:15;832:127;145:801:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@get_keccak256_1375": {
									"entryPoint": 85,
									"id": 1375,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 369,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1742:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "94:842:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "140:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "149:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "152:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "142:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "142:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "142:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "115:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "124:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "111:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "111:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "136:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "107:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:32:9"
															},
															"nodeType": "YulIf",
															"src": "104:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "165:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "192:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "179:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:23:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "169:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "211:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "221:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "215:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "266:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "275:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "278:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "268:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "268:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "268:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "254:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "262:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "251:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "251:14:9"
															},
															"nodeType": "YulIf",
															"src": "248:34:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "291:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "305:9:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "316:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "301:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "301:22:9"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "295:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "371:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "380:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "383:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "373:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "373:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "373:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "350:2:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "354:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "346:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "346:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "361:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "342:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "342:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "335:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:35:9"
															},
															"nodeType": "YulIf",
															"src": "332:55:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "396:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "419:2:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "406:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "406:16:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "400:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "445:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "447:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "447:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "447:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "437:2:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "441:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "434:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "434:10:9"
															},
															"nodeType": "YulIf",
															"src": "431:36:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "476:17:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "490:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "486:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "486:7:9"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "480:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "502:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "522:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "516:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "506:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "534:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "556:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "580:2:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "584:4:9",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "576:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "576:13:9"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "591:2:9"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "572:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "572:22:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "596:2:9",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "568:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "568:31:9"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "601:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "564:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "564:40:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "552:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "552:53:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "538:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "664:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "666:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "666:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "666:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "623:10:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "635:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "620:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "620:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "643:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "655:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "640:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "640:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "617:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:46:9"
															},
															"nodeType": "YulIf",
															"src": "614:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "702:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "706:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "695:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "695:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "695:22:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "733:6:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "741:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:18:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:18:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "790:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "799:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "802:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "792:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "792:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "792:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "767:2:9"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "771:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "763:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "763:11:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "776:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "759:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "759:20:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "781:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "756:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "756:33:9"
															},
															"nodeType": "YulIf",
															"src": "753:53:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "832:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "840:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "828:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "828:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "849:2:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "853:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "845:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "845:11:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "858:2:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "815:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "815:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "815:46:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "885:6:9"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "893:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "881:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "881:15:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "898:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "877:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "877:24:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "903:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "870:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "870:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "870:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "914:16:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "924:6:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "914:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "60:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "71:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "83:6:9",
														"type": ""
													}
												],
												"src": "14:922:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1080:289:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1090:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1110:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1104:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1104:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1094:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1126:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1135:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1130:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1197:77:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1222:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1227:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1218:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1218:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1245:6:9"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1253:1:9"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1241:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1241:14:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1257:4:9",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1237:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1237:25:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1231:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1231:32:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1211:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1211:53:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1211:53:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1156:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1159:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1153:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1153:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1167:21:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1169:17:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1178:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1181:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1174:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1174:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1169:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1149:3:9",
																"statements": []
															},
															"src": "1145:129:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1300:31:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1313:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1318:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1309:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1309:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1327:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1302:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1302:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1302:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1289:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1292:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1286:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1286:13:9"
															},
															"nodeType": "YulIf",
															"src": "1283:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1340:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1351:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1356:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1347:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1347:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1340:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1056:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1061:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1072:3:9",
														"type": ""
													}
												],
												"src": "941:428:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1475:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1485:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1497:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1508:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1493:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1493:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1485:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1527:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1538:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1520:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1520:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1444:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1466:4:9",
														"type": ""
													}
												],
												"src": "1374:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1588:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1605:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1608:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1598:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1598:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1702:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1705:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1695:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1695:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1695:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1726:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1729:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1719:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1719:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1719:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1556:184:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80638e4f8c6b14610030575b600080fd5b61004361003e366004610085565b610055565b60405190815260200160405180910390f35b6000816040516020016100689190610136565b604051602081830303815290604052805190602001209050919050565b60006020828403121561009757600080fd5b813567ffffffffffffffff808211156100af57600080fd5b818401915084601f8301126100c357600080fd5b8135818111156100d5576100d5610171565b604051601f8201601f19908116603f011681019083821181831017156100fd576100fd610171565b8160405282815287602084870101111561011657600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000825160005b81811015610157576020818601810151858301520161013d565b81811115610166576000828501525b509190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea26469706673582212201dfe82837366e83fa1ed1c6749116ea6971aedb8f13161b777a94c14df04449164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E4F8C6B EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x85 JUMP JUMPDEST PUSH2 0x55 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x68 SWAP2 SWAP1 PUSH2 0x136 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xD5 JUMPI PUSH2 0xD5 PUSH2 0x171 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xFD JUMPI PUSH2 0xFD PUSH2 0x171 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x157 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x13D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR INVALID DUP3 DUP4 PUSH20 0x66E83FA1ED1C6749116EA6971AEDB8F13161B777 0xA9 0x4C EQ 0xDF DIV DIFFICULTY SWAP2 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "145:801:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;144:138:4;;;;;;:::i;:::-;;:::i;:::-;;;1520:25:9;;;1508:2;1493:18;144:138:4;;;;;;;;208:7;266:5;249:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;239:34;;;;;;232:42;;144:138;;;:::o;14:922:9:-;83:6;136:2;124:9;115:7;111:23;107:32;104:52;;;152:1;149;142:12;104:52;192:9;179:23;221:18;262:2;254:6;251:14;248:34;;;278:1;275;268:12;248:34;316:6;305:9;301:22;291:32;;361:7;354:4;350:2;346:13;342:27;332:55;;383:1;380;373:12;332:55;419:2;406:16;441:2;437;434:10;431:36;;;447:18;;:::i;:::-;522:2;516:9;490:2;576:13;;-1:-1:-1;;572:22:9;;;596:2;568:31;564:40;552:53;;;620:18;;;640:22;;;617:46;614:72;;;666:18;;:::i;:::-;706:10;702:2;695:22;741:2;733:6;726:18;781:7;776:2;771;767;763:11;759:20;756:33;753:53;;;802:1;799;792:12;753:53;858:2;853;849;845:11;840:2;832:6;828:15;815:46;903:1;881:15;;;898:2;877:24;870:35;;;;-1:-1:-1;885:6:9;14:922;-1:-1:-1;;;;;14:922:9:o;941:428::-;1072:3;1110:6;1104:13;1135:1;1145:129;1159:6;1156:1;1153:13;1145:129;;;1257:4;1241:14;;;1237:25;;1231:32;1218:11;;;1211:53;1174:12;1145:129;;;1292:6;1289:1;1286:13;1283:48;;;1327:1;1318:6;1313:3;1309:16;1302:27;1283:48;-1:-1:-1;1347:16:9;;;;;941:428;-1:-1:-1;;941:428:9:o;1556:184::-;1608:77;1605:1;1598:88;1705:4;1702:1;1695:15;1729:4;1726:1;1719:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "94000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"get_keccak256(string)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 179,
									"end": 248,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 179,
									"end": 248,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 179,
									"end": 248,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 179,
									"end": 248,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 179,
									"end": 248,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 179,
									"end": 248,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 206,
									"end": 248,
									"name": "PUSH",
									"source": 2,
									"value": "78731D3CA6B7E34AC0F824C42A7CC18A495CABAB"
								},
								{
									"begin": 179,
									"end": 248,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 179,
									"end": 248,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 179,
									"end": 248,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 179,
									"end": 248,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 269,
									"end": 339,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 269,
									"end": 339,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 269,
									"end": 339,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 269,
									"end": 339,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 269,
									"end": 339,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 297,
									"end": 339,
									"name": "PUSH",
									"source": 2,
									"value": "617F2E2FD72FD9D5503197092AC168C91465E7F2"
								},
								{
									"begin": 269,
									"end": 339,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 269,
									"end": 339,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 269,
									"end": 339,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 359,
									"end": 425,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 359,
									"end": 425,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 359,
									"end": 425,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 359,
									"end": 425,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 359,
									"end": 425,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 359,
									"end": 425,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 383,
									"end": 425,
									"name": "PUSH",
									"source": 2,
									"value": "17F6AD8EF982297579C203069C1DBFFE4348C372"
								},
								{
									"begin": 359,
									"end": 425,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 359,
									"end": 425,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 359,
									"end": 425,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 526,
									"end": 943,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 526,
									"end": 943,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 526,
									"end": 943,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 526,
									"end": 943,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 526,
									"end": 943,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 526,
									"end": 943,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 943,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 526,
									"end": 943,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 526,
									"end": 943,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 526,
									"end": 943,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 584,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 595,
									"end": 608,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 584,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 584,
									"end": 658,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 584,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 584,
									"end": 658,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 584,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "496E766573746F7231"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 584,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 624,
									"end": 645,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 624,
									"end": 645,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 624,
									"end": 645,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 624,
									"end": 645,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 624,
									"end": 645,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 624,
									"end": 645,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 624,
									"end": 645,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 624,
									"end": 645,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 624,
									"end": 645,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 624,
									"end": 645,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 624,
									"end": 645,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 624,
									"end": 645,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 624,
									"end": 645,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 624,
									"end": 645,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "199A1899"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 624,
									"end": 645,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 624,
									"end": 645,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 624,
									"end": 645,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 624,
									"end": 637,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 624,
									"end": 637,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 624,
									"end": 637,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 624,
									"end": 645,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 624,
									"end": 645,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 624,
									"end": 645,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 624,
									"end": 645,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 624,
									"end": 645,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 647,
									"end": 648,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 584,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 584,
									"end": 658,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 584,
									"end": 658,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 564,
									"end": 580,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 564,
									"end": 580,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 564,
									"end": 580,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 551,
									"end": 581,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 551,
									"end": 581,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 551,
									"end": 581,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 551,
									"end": 581,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 551,
									"end": 581,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 551,
									"end": 581,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 581,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 551,
									"end": 581,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 551,
									"end": 658,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 564,
									"end": 580,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "C0"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 551,
									"end": 658,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 551,
									"end": 658,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 727,
									"end": 740,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "496E766573746F7231"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 755,
									"end": 776,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 755,
									"end": 776,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 755,
									"end": 776,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 755,
									"end": 776,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 755,
									"end": 776,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 755,
									"end": 776,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 755,
									"end": 776,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 755,
									"end": 776,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 755,
									"end": 776,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 755,
									"end": 776,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 755,
									"end": 776,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 755,
									"end": 776,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 755,
									"end": 776,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 755,
									"end": 776,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "31343233"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 755,
									"end": 776,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 755,
									"end": 776,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 755,
									"end": 776,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 755,
									"end": 768,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 755,
									"end": 768,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 755,
									"end": 768,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 755,
									"end": 776,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 755,
									"end": 776,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 755,
									"end": 776,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 755,
									"end": 776,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 755,
									"end": 776,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 778,
									"end": 779,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 716,
									"end": 789,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 716,
									"end": 789,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 695,
									"end": 712,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 695,
									"end": 712,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 695,
									"end": 712,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 695,
									"end": 712,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 682,
									"end": 713,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 682,
									"end": 713,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 682,
									"end": 713,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 682,
									"end": 713,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 682,
									"end": 713,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 682,
									"end": 713,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 682,
									"end": 713,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 682,
									"end": 713,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 682,
									"end": 713,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 713,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 682,
									"end": 713,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 682,
									"end": 713,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 682,
									"end": 713,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 695,
									"end": 712,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 695,
									"end": 712,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "C0"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 682,
									"end": 789,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 682,
									"end": 789,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 854,
									"end": 867,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "10995CDD08199C9A595B99"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "AA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 884,
									"end": 905,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 884,
									"end": 905,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 884,
									"end": 905,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 884,
									"end": 905,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 884,
									"end": 905,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 884,
									"end": 905,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 884,
									"end": 905,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 884,
									"end": 905,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 884,
									"end": 905,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 884,
									"end": 905,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 884,
									"end": 905,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 884,
									"end": 905,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 884,
									"end": 905,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 884,
									"end": 905,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C8CCC4D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 884,
									"end": 905,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 884,
									"end": 905,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 884,
									"end": 905,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 884,
									"end": 897,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 884,
									"end": 897,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 884,
									"end": 897,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 884,
									"end": 905,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 884,
									"end": 905,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 884,
									"end": 905,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 884,
									"end": 905,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 884,
									"end": 905,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 907,
									"end": 908,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 843,
									"end": 918,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 843,
									"end": 918,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 826,
									"end": 839,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 826,
									"end": 839,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 826,
									"end": 839,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 813,
									"end": 840,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 813,
									"end": 840,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 813,
									"end": 840,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 813,
									"end": 840,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 813,
									"end": 840,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 813,
									"end": 840,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 840,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 813,
									"end": 840,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 813,
									"end": 918,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 826,
									"end": 839,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "C0"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 813,
									"end": 918,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 813,
									"end": 918,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 144,
									"end": 282,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 144,
									"end": 282,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 208,
									"end": 215,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 266,
									"end": 271,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 249,
									"end": 272,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 249,
									"end": 272,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 249,
									"end": 272,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 249,
									"end": 272,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 249,
									"end": 272,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 249,
									"end": 272,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 249,
									"end": 272,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 249,
									"end": 272,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 249,
									"end": 272,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 249,
									"end": 272,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 249,
									"end": 272,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 249,
									"end": 272,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 249,
									"end": 272,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 249,
									"end": 272,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 249,
									"end": 272,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 249,
									"end": 272,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 249,
									"end": 272,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 249,
									"end": 272,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 249,
									"end": 272,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 249,
									"end": 272,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 249,
									"end": 272,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 249,
									"end": 272,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 249,
									"end": 272,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 239,
									"end": 273,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 239,
									"end": 273,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 239,
									"end": 273,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 239,
									"end": 273,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 239,
									"end": 273,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 239,
									"end": 273,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 232,
									"end": 274,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 232,
									"end": 274,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 144,
									"end": 282,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 144,
									"end": 282,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 144,
									"end": 282,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 144,
									"end": 282,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 442,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 14,
									"end": 442,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 145,
									"end": 148,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 189,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 177,
									"end": 190,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 208,
									"end": 209,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 218,
									"end": 347,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 218,
									"end": 347,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 232,
									"end": 238,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 229,
									"end": 230,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 226,
									"end": 239,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 218,
									"end": 347,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 218,
									"end": 347,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 218,
									"end": 347,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 330,
									"end": 334,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 314,
									"end": 328,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 314,
									"end": 328,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 314,
									"end": 328,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 310,
									"end": 335,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 310,
									"end": 335,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 304,
									"end": 336,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 291,
									"end": 302,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 291,
									"end": 302,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 291,
									"end": 302,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 284,
									"end": 337,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 247,
									"end": 259,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 218,
									"end": 347,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 218,
									"end": 347,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 218,
									"end": 347,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 218,
									"end": 347,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 365,
									"end": 371,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 362,
									"end": 363,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 359,
									"end": 372,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 356,
									"end": 404,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 356,
									"end": 404,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 356,
									"end": 404,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 400,
									"end": 401,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 391,
									"end": 397,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 386,
									"end": 389,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 382,
									"end": 398,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 375,
									"end": 402,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 356,
									"end": 404,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 356,
									"end": 404,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 420,
									"end": 436,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 420,
									"end": 436,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 420,
									"end": 436,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 420,
									"end": 436,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 420,
									"end": 436,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 14,
									"end": 442,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 442,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 447,
									"end": 827,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 447,
									"end": 827,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 526,
									"end": 527,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 522,
									"end": 534,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 522,
									"end": 534,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 522,
									"end": 534,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 522,
									"end": 534,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 569,
									"end": 581,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 569,
									"end": 581,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 569,
									"end": 581,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 590,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 590,
									"end": 651,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 644,
									"end": 648,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 636,
									"end": 642,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 632,
									"end": 649,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 622,
									"end": 649,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 622,
									"end": 649,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 590,
									"end": 651,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 590,
									"end": 651,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 697,
									"end": 699,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 689,
									"end": 695,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 686,
									"end": 700,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 666,
									"end": 684,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 663,
									"end": 701,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 660,
									"end": 821,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 660,
									"end": 821,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 660,
									"end": 821,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 743,
									"end": 753,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 738,
									"end": 741,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 734,
									"end": 754,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 731,
									"end": 732,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 724,
									"end": 755,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 778,
									"end": 782,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 775,
									"end": 776,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 768,
									"end": 783,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 806,
									"end": 810,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 803,
									"end": 804,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 796,
									"end": 811,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 660,
									"end": 821,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 660,
									"end": 821,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 660,
									"end": 821,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 447,
									"end": 827,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 447,
									"end": 827,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 447,
									"end": 827,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 447,
									"end": 827,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 832,
									"end": 959,
									"name": "tag",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 832,
									"end": 959,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 893,
									"end": 903,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 888,
									"end": 891,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 884,
									"end": 904,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 881,
									"end": 882,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 874,
									"end": 905,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 924,
									"end": 928,
									"name": "PUSH",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 921,
									"end": 922,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 914,
									"end": 929,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 948,
									"end": 952,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 945,
									"end": 946,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 938,
									"end": 953,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 832,
									"end": 959,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 832,
									"end": 959,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 145,
									"end": 946,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 946,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201dfe82837366e83fa1ed1c6749116ea6971aedb8f13161b777a94c14df04449164736f6c63430008070033",
									".code": [
										{
											"begin": 145,
											"end": 946,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 145,
											"end": 946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 145,
											"end": 946,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 145,
											"end": 946,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 145,
											"end": 946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 145,
											"end": 946,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 145,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 145,
											"end": 946,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 145,
											"end": 946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 145,
											"end": 946,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 145,
											"end": 946,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 145,
											"end": 946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 145,
											"end": 946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 145,
											"end": 946,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 145,
											"end": 946,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 145,
											"end": 946,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 145,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 145,
											"end": 946,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 145,
											"end": 946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 946,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 145,
											"end": 946,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 145,
											"end": 946,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 145,
											"end": 946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 145,
											"end": 946,
											"name": "PUSH",
											"source": 2,
											"value": "8E4F8C6B"
										},
										{
											"begin": 145,
											"end": 946,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 145,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 145,
											"end": 946,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 145,
											"end": 946,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 145,
											"end": 946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 145,
											"end": 946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 145,
											"end": 946,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 144,
											"end": 282,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1520,
											"end": 1545,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1545,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1545,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1508,
											"end": 1510,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1493,
											"end": 1511,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 208,
											"end": 215,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 271,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 239,
											"end": 273,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 239,
											"end": 273,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 239,
											"end": 273,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 239,
											"end": 273,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 239,
											"end": 273,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 239,
											"end": 273,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 232,
											"end": 274,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 274,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 936,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 14,
											"end": 936,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 83,
											"end": 89,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 136,
											"end": 138,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 133,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 115,
											"end": 122,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 111,
											"end": 134,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 107,
											"end": 139,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 104,
											"end": 156,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 104,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 104,
											"end": 156,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 152,
											"end": 153,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 149,
											"end": 150,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 142,
											"end": 154,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 104,
											"end": 156,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 104,
											"end": 156,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 192,
											"end": 201,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 179,
											"end": 202,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 221,
											"end": 239,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 254,
											"end": 260,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 251,
											"end": 265,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 248,
											"end": 282,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 248,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 248,
											"end": 282,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 278,
											"end": 279,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 275,
											"end": 276,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 268,
											"end": 280,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 248,
											"end": 282,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 248,
											"end": 282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 316,
											"end": 322,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 305,
											"end": 314,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 301,
											"end": 323,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 291,
											"end": 323,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 291,
											"end": 323,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 361,
											"end": 368,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 354,
											"end": 358,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 350,
											"end": 352,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 346,
											"end": 359,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 342,
											"end": 369,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 332,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 332,
											"end": 387,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 383,
											"end": 384,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 380,
											"end": 381,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 373,
											"end": 385,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 332,
											"end": 387,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 332,
											"end": 387,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 419,
											"end": 421,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 406,
											"end": 422,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 441,
											"end": 443,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 437,
											"end": 439,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 434,
											"end": 444,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 431,
											"end": 467,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 431,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 431,
											"end": 467,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 447,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 447,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 447,
											"end": 465,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 447,
											"end": 465,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 447,
											"end": 465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 522,
											"end": 524,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 516,
											"end": 525,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 490,
											"end": 492,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 576,
											"end": 589,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 576,
											"end": 589,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 572,
											"end": 594,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 572,
											"end": 594,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 572,
											"end": 594,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 596,
											"end": 598,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 568,
											"end": 599,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 564,
											"end": 604,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 552,
											"end": 605,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 552,
											"end": 605,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 552,
											"end": 605,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 620,
											"end": 638,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 620,
											"end": 638,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 620,
											"end": 638,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 640,
											"end": 662,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 640,
											"end": 662,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 640,
											"end": 662,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 617,
											"end": 663,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 614,
											"end": 686,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 614,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 614,
											"end": 686,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 666,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 666,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 666,
											"end": 684,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 666,
											"end": 684,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 666,
											"end": 684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 706,
											"end": 716,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 702,
											"end": 704,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 695,
											"end": 717,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 741,
											"end": 743,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 726,
											"end": 744,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 781,
											"end": 788,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 776,
											"end": 778,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 771,
											"end": 773,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 767,
											"end": 769,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 763,
											"end": 774,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 759,
											"end": 779,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 756,
											"end": 789,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 753,
											"end": 806,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 753,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 753,
											"end": 806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 802,
											"end": 803,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 799,
											"end": 800,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 792,
											"end": 804,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 753,
											"end": 806,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 753,
											"end": 806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 858,
											"end": 860,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 853,
											"end": 855,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 849,
											"end": 851,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 845,
											"end": 856,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 840,
											"end": 842,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 832,
											"end": 838,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 828,
											"end": 843,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 815,
											"end": 861,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 903,
											"end": 904,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 881,
											"end": 896,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 881,
											"end": 896,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 881,
											"end": 896,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 898,
											"end": 900,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 877,
											"end": 901,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 870,
											"end": 905,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 870,
											"end": 905,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 870,
											"end": 905,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 870,
											"end": 905,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 885,
											"end": 891,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 14,
											"end": 936,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 936,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 941,
											"end": 1369,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 941,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1075,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1116,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1104,
											"end": 1117,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1135,
											"end": 1136,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1165,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1156,
											"end": 1157,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1153,
											"end": 1166,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1257,
											"end": 1261,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1237,
											"end": 1262,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1237,
											"end": 1262,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1231,
											"end": 1263,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1229,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1229,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1229,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1264,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1174,
											"end": 1186,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1292,
											"end": 1298,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1289,
											"end": 1290,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1286,
											"end": 1299,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1331,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1283,
											"end": 1331,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1327,
											"end": 1328,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1324,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1313,
											"end": 1316,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1309,
											"end": 1325,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1329,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1331,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1283,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1347,
											"end": 1363,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1363,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1363,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1363,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1363,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 941,
											"end": 1369,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 941,
											"end": 1369,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1556,
											"end": 1740,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1556,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1608,
											"end": 1685,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1605,
											"end": 1606,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1686,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1705,
											"end": 1709,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1702,
											"end": 1703,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1729,
											"end": 1733,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1726,
											"end": 1727,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1719,
											"end": 1734,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"get_keccak256(string)": "8e4f8c6b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"get_keccak256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":\"PhaseSeed\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol\":{\"keccak256\":\"0x7eb7196e1b7b443e24557c7b762c5dae41c3a19237ce772fbba576a18ad0aaaa\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8eec3fa265e4675e9e786dbbd60d81f54073a71b3d7c166d8c2aaba5053fe0a9\",\"dweb:/ipfs/QmNWrixnhZwE74CxqxRvG23A71nWd5i1jm8Gub2H36Y1hx\"]},\"Documents/GitHub/contract-token-cryptoMonster/backend/components/main.sol\":{\"keccak256\":\"0x2b6f90db3286bd0b5474121cbe4494f8cf0d80a91fbc07d0c1285f7059dad479\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a27fdbd0670496dcb4858537f21665266b3d6e9d850d9eee9698f8801aa8990c\",\"dweb:/ipfs/QmNSUsQQrBfNEAeeuNuVfYFu2U4TTKDHx6283eTUJbMsLu\"]},\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":{\"keccak256\":\"0x55073c985c0ace969bfd71eedd56019c7349e65b5ece564d2a0518810e901c81\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b29b6d3e009cfcd406945988b1338f5512656f14a49fc8d8825024e81de023fe\",\"dweb:/ipfs/QmVDcL7SM8t2R5ZAAGNFJhAUHvJQEX2wRrKihVWHiNLma2\"]},\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":{\"keccak256\":\"0x55a8643a4e2500eea6f59f7e7f566793931fec76dcb865f101a6f7bd99b6f503\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bb96275c62c97e4259aa8c07867efff9a59d8968a2c668f84e597efba46b9252\",\"dweb:/ipfs/QmPEDXJmNEX1skQRrvGdWtzsguaiW1MkGH3b3xnfoBZ3vG\"]},\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":{\"keccak256\":\"0x3c4d55fff6547a670227273cabf6e5cd6279729590c2415e26148beed5975392\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://31dfe220e5e8f93ca63e6021e3fdf2115f3672410395d5ba5cceb197c48e921f\",\"dweb:/ipfs/QmcMwAuz3HM2QT4HWoHUxny2HqbtibVdu3gDwkeEs9Xyn7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1911,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol:PhaseSeed",
								"label": "structUsers_",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(structUser)1906_storage)"
							},
							{
								"astId": 1921,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol:PhaseSeed",
								"label": "structPhases_",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(structPhase)1916_storage)"
							},
							{
								"astId": 1939,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol:PhaseSeed",
								"label": "strucApplications_",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(structApplication)1934_storage)"
							},
							{
								"astId": 1289,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol:PhaseSeed",
								"label": "investorFirstAdr",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1292,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol:PhaseSeed",
								"label": "investorSecondAdr",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 1295,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol:PhaseSeed",
								"label": "bestFriendAdr",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(Role)1890": {
								"encoding": "inplace",
								"label": "enum structures.Role",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(structApplication)1934_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structApplication)",
								"numberOfBytes": "32",
								"value": "t_struct(structApplication)1934_storage"
							},
							"t_mapping(t_address,t_struct(structPhase)1916_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structPhase)",
								"numberOfBytes": "32",
								"value": "t_struct(structPhase)1916_storage"
							},
							"t_mapping(t_address,t_struct(structUser)1906_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structUser)",
								"numberOfBytes": "32",
								"value": "t_struct(structUser)1906_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(structApplication)1934_storage": {
								"encoding": "inplace",
								"label": "struct structures.structApplication",
								"members": [
									{
										"astId": 1923,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol:PhaseSeed",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 1925,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol:PhaseSeed",
										"label": "contactForCommunication",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 1927,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol:PhaseSeed",
										"label": "userAdr",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 1929,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol:PhaseSeed",
										"label": "status",
										"offset": 20,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 1931,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol:PhaseSeed",
										"label": "reviewed",
										"offset": 21,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 1933,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol:PhaseSeed",
										"label": "exist",
										"offset": 22,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(structPhase)1916_storage": {
								"encoding": "inplace",
								"label": "struct structures.structPhase",
								"members": [
									{
										"astId": 1913,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol:PhaseSeed",
										"label": "statusPhase",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 1915,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol:PhaseSeed",
										"label": "reviewed",
										"offset": 1,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(structUser)1906_storage": {
								"encoding": "inplace",
								"label": "struct structures.structUser",
								"members": [
									{
										"astId": 1893,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol:PhaseSeed",
										"label": "role",
										"offset": 0,
										"slot": "0",
										"type": "t_enum(Role)1890"
									},
									{
										"astId": 1895,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol:PhaseSeed",
										"label": "login",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 1897,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol:PhaseSeed",
										"label": "password",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									},
									{
										"astId": 1899,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol:PhaseSeed",
										"label": "balance_overall",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1901,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol:PhaseSeed",
										"label": "balance_seed",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1903,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol:PhaseSeed",
										"label": "balance_private",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1905,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol:PhaseSeed",
										"label": "balance_public",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/components/main.sol": {
				"Main": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_hash",
									"type": "string"
								}
							],
							"name": "get_keccak256",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/main.sol\":225:262  contract Main is validateFuncs {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/components/main.sol\":225:262  contract Main is validateFuncs {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8e4f8c6b\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":144:282  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n    tag_3:\n      tag_4\n      tag_5\n      calldatasize\n      0x04\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n        /* \"#utility.yul\":1520:1545   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1508:1510   */\n      0x20\n        /* \"#utility.yul\":1493:1511   */\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":144:282  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":208:215  bytes32 */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":266:271  _hash */\n      dup2\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":249:272  abi.encodePacked(_hash) */\n      add(0x20, mload(0x40))\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":239:273  keccak256(abi.encodePacked(_hash)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":232:274  return(keccak256(abi.encodePacked(_hash))) */\n      swap1\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":144:282  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:936   */\n    tag_6:\n        /* \"#utility.yul\":83:89   */\n      0x00\n        /* \"#utility.yul\":136:138   */\n      0x20\n        /* \"#utility.yul\":124:133   */\n      dup3\n        /* \"#utility.yul\":115:122   */\n      dup5\n        /* \"#utility.yul\":111:134   */\n      sub\n        /* \"#utility.yul\":107:139   */\n      slt\n        /* \"#utility.yul\":104:156   */\n      iszero\n      tag_15\n      jumpi\n        /* \"#utility.yul\":152:153   */\n      0x00\n        /* \"#utility.yul\":149:150   */\n      dup1\n        /* \"#utility.yul\":142:154   */\n      revert\n        /* \"#utility.yul\":104:156   */\n    tag_15:\n        /* \"#utility.yul\":192:201   */\n      dup2\n        /* \"#utility.yul\":179:202   */\n      calldataload\n        /* \"#utility.yul\":221:239   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":262:264   */\n      dup1\n        /* \"#utility.yul\":254:260   */\n      dup3\n        /* \"#utility.yul\":251:265   */\n      gt\n        /* \"#utility.yul\":248:282   */\n      iszero\n      tag_16\n      jumpi\n        /* \"#utility.yul\":278:279   */\n      0x00\n        /* \"#utility.yul\":275:276   */\n      dup1\n        /* \"#utility.yul\":268:280   */\n      revert\n        /* \"#utility.yul\":248:282   */\n    tag_16:\n        /* \"#utility.yul\":316:322   */\n      dup2\n        /* \"#utility.yul\":305:314   */\n      dup5\n        /* \"#utility.yul\":301:323   */\n      add\n        /* \"#utility.yul\":291:323   */\n      swap2\n      pop\n        /* \"#utility.yul\":361:368   */\n      dup5\n        /* \"#utility.yul\":354:358   */\n      0x1f\n        /* \"#utility.yul\":350:352   */\n      dup4\n        /* \"#utility.yul\":346:359   */\n      add\n        /* \"#utility.yul\":342:369   */\n      slt\n        /* \"#utility.yul\":332:387   */\n      tag_17\n      jumpi\n        /* \"#utility.yul\":383:384   */\n      0x00\n        /* \"#utility.yul\":380:381   */\n      dup1\n        /* \"#utility.yul\":373:385   */\n      revert\n        /* \"#utility.yul\":332:387   */\n    tag_17:\n        /* \"#utility.yul\":419:421   */\n      dup2\n        /* \"#utility.yul\":406:422   */\n      calldataload\n        /* \"#utility.yul\":441:443   */\n      dup2\n        /* \"#utility.yul\":437:439   */\n      dup2\n        /* \"#utility.yul\":434:444   */\n      gt\n        /* \"#utility.yul\":431:467   */\n      iszero\n      tag_19\n      jumpi\n        /* \"#utility.yul\":447:465   */\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":522:524   */\n      0x40\n        /* \"#utility.yul\":516:525   */\n      mload\n        /* \"#utility.yul\":490:492   */\n      0x1f\n        /* \"#utility.yul\":576:589   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":572:594   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":596:598   */\n      0x3f\n        /* \"#utility.yul\":568:599   */\n      add\n        /* \"#utility.yul\":564:604   */\n      and\n        /* \"#utility.yul\":552:605   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":620:638   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":640:662   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":617:663   */\n      or\n        /* \"#utility.yul\":614:686   */\n      iszero\n      tag_22\n      jumpi\n        /* \"#utility.yul\":666:684   */\n      tag_22\n      tag_20\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":706:716   */\n      dup2\n        /* \"#utility.yul\":702:704   */\n      0x40\n        /* \"#utility.yul\":695:717   */\n      mstore\n        /* \"#utility.yul\":741:743   */\n      dup3\n        /* \"#utility.yul\":733:739   */\n      dup2\n        /* \"#utility.yul\":726:744   */\n      mstore\n        /* \"#utility.yul\":781:788   */\n      dup8\n        /* \"#utility.yul\":776:778   */\n      0x20\n        /* \"#utility.yul\":771:773   */\n      dup5\n        /* \"#utility.yul\":767:769   */\n      dup8\n        /* \"#utility.yul\":763:774   */\n      add\n        /* \"#utility.yul\":759:779   */\n      add\n        /* \"#utility.yul\":756:789   */\n      gt\n        /* \"#utility.yul\":753:806   */\n      iszero\n      tag_23\n      jumpi\n        /* \"#utility.yul\":802:803   */\n      0x00\n        /* \"#utility.yul\":799:800   */\n      dup1\n        /* \"#utility.yul\":792:804   */\n      revert\n        /* \"#utility.yul\":753:806   */\n    tag_23:\n        /* \"#utility.yul\":858:860   */\n      dup3\n        /* \"#utility.yul\":853:855   */\n      0x20\n        /* \"#utility.yul\":849:851   */\n      dup7\n        /* \"#utility.yul\":845:856   */\n      add\n        /* \"#utility.yul\":840:842   */\n      0x20\n        /* \"#utility.yul\":832:838   */\n      dup4\n        /* \"#utility.yul\":828:843   */\n      add\n        /* \"#utility.yul\":815:861   */\n      calldatacopy\n        /* \"#utility.yul\":903:904   */\n      0x00\n        /* \"#utility.yul\":881:896   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":898:900   */\n      0x20\n        /* \"#utility.yul\":877:901   */\n      add\n        /* \"#utility.yul\":870:905   */\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n        /* \"#utility.yul\":885:891   */\n      swap6\n        /* \"#utility.yul\":14:936   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":941:1369   */\n    tag_12:\n        /* \"#utility.yul\":1072:1075   */\n      0x00\n        /* \"#utility.yul\":1110:1116   */\n      dup3\n        /* \"#utility.yul\":1104:1117   */\n      mload\n        /* \"#utility.yul\":1135:1136   */\n      0x00\n        /* \"#utility.yul\":1145:1274   */\n    tag_25:\n        /* \"#utility.yul\":1159:1165   */\n      dup2\n        /* \"#utility.yul\":1156:1157   */\n      dup2\n        /* \"#utility.yul\":1153:1166   */\n      lt\n        /* \"#utility.yul\":1145:1274   */\n      iszero\n      tag_27\n      jumpi\n        /* \"#utility.yul\":1257:1261   */\n      0x20\n        /* \"#utility.yul\":1241:1255   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":1237:1262   */\n      dup2\n      add\n        /* \"#utility.yul\":1231:1263   */\n      mload\n        /* \"#utility.yul\":1218:1229   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":1211:1264   */\n      mstore\n        /* \"#utility.yul\":1174:1186   */\n      add\n        /* \"#utility.yul\":1145:1274   */\n      jump(tag_25)\n    tag_27:\n        /* \"#utility.yul\":1292:1298   */\n      dup2\n        /* \"#utility.yul\":1289:1290   */\n      dup2\n        /* \"#utility.yul\":1286:1299   */\n      gt\n        /* \"#utility.yul\":1283:1331   */\n      iszero\n      tag_28\n      jumpi\n        /* \"#utility.yul\":1327:1328   */\n      0x00\n        /* \"#utility.yul\":1318:1324   */\n      dup3\n        /* \"#utility.yul\":1313:1316   */\n      dup6\n        /* \"#utility.yul\":1309:1325   */\n      add\n        /* \"#utility.yul\":1302:1329   */\n      mstore\n        /* \"#utility.yul\":1283:1331   */\n    tag_28:\n      pop\n        /* \"#utility.yul\":1347:1363   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":941:1369   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1556:1740   */\n    tag_20:\n        /* \"#utility.yul\":1608:1685   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1605:1606   */\n      0x00\n        /* \"#utility.yul\":1598:1686   */\n      mstore\n        /* \"#utility.yul\":1705:1709   */\n      0x41\n        /* \"#utility.yul\":1702:1703   */\n      0x04\n        /* \"#utility.yul\":1695:1710   */\n      mstore\n        /* \"#utility.yul\":1729:1733   */\n      0x24\n        /* \"#utility.yul\":1726:1727   */\n      0x00\n        /* \"#utility.yul\":1719:1734   */\n      revert\n\n    auxdata: 0xa264697066735822122040af8ce016989c9a94f94f5ce7823e9baf9368e21e1ff94b2235c95d4d61cc4564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101d6806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638e4f8c6b14610030575b600080fd5b61004361003e366004610085565b610055565b60405190815260200160405180910390f35b6000816040516020016100689190610136565b604051602081830303815290604052805190602001209050919050565b60006020828403121561009757600080fd5b813567ffffffffffffffff808211156100af57600080fd5b818401915084601f8301126100c357600080fd5b8135818111156100d5576100d5610171565b604051601f8201601f19908116603f011681019083821181831017156100fd576100fd610171565b8160405282815287602084870101111561011657600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000825160005b81811015610157576020818601810151858301520161013d565b81811115610166576000828501525b509190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea264697066735822122040af8ce016989c9a94f94f5ce7823e9baf9368e21e1ff94b2235c95d4d61cc4564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E4F8C6B EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x85 JUMP JUMPDEST PUSH2 0x55 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x68 SWAP2 SWAP1 PUSH2 0x136 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xD5 JUMPI PUSH2 0xD5 PUSH2 0x171 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xFD JUMPI PUSH2 0xFD PUSH2 0x171 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x157 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x13D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0xAF DUP13 0xE0 AND SWAP9 SWAP13 SWAP11 SWAP5 0xF9 0x4F 0x5C 0xE7 DUP3 RETURNDATACOPY SWAP12 0xAF SWAP4 PUSH9 0xE21E1FF94B2235C95D 0x4D PUSH2 0xCC45 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "225:37:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@get_keccak256_1375": {
									"entryPoint": 85,
									"id": 1375,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 369,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1742:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "94:842:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "140:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "149:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "152:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "142:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "142:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "142:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "115:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "124:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "111:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "111:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "136:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "107:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:32:9"
															},
															"nodeType": "YulIf",
															"src": "104:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "165:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "192:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "179:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:23:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "169:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "211:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "221:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "215:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "266:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "275:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "278:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "268:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "268:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "268:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "254:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "262:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "251:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "251:14:9"
															},
															"nodeType": "YulIf",
															"src": "248:34:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "291:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "305:9:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "316:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "301:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "301:22:9"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "295:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "371:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "380:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "383:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "373:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "373:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "373:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "350:2:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "354:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "346:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "346:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "361:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "342:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "342:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "335:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:35:9"
															},
															"nodeType": "YulIf",
															"src": "332:55:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "396:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "419:2:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "406:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "406:16:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "400:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "445:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "447:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "447:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "447:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "437:2:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "441:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "434:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "434:10:9"
															},
															"nodeType": "YulIf",
															"src": "431:36:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "476:17:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "490:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "486:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "486:7:9"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "480:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "502:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "522:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "516:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "506:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "534:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "556:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "580:2:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "584:4:9",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "576:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "576:13:9"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "591:2:9"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "572:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "572:22:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "596:2:9",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "568:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "568:31:9"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "601:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "564:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "564:40:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "552:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "552:53:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "538:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "664:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "666:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "666:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "666:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "623:10:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "635:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "620:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "620:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "643:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "655:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "640:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "640:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "617:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:46:9"
															},
															"nodeType": "YulIf",
															"src": "614:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "702:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "706:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "695:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "695:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "695:22:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "733:6:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "741:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:18:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:18:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "790:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "799:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "802:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "792:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "792:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "792:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "767:2:9"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "771:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "763:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "763:11:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "776:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "759:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "759:20:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "781:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "756:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "756:33:9"
															},
															"nodeType": "YulIf",
															"src": "753:53:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "832:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "840:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "828:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "828:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "849:2:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "853:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "845:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "845:11:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "858:2:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "815:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "815:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "815:46:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "885:6:9"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "893:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "881:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "881:15:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "898:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "877:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "877:24:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "903:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "870:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "870:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "870:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "914:16:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "924:6:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "914:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "60:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "71:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "83:6:9",
														"type": ""
													}
												],
												"src": "14:922:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1080:289:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1090:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1110:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1104:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1104:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1094:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1126:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1135:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1130:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1197:77:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1222:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1227:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1218:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1218:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1245:6:9"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1253:1:9"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1241:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1241:14:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1257:4:9",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1237:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1237:25:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1231:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1231:32:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1211:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1211:53:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1211:53:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1156:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1159:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1153:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1153:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1167:21:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1169:17:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1178:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1181:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1174:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1174:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1169:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1149:3:9",
																"statements": []
															},
															"src": "1145:129:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1300:31:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1313:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1318:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1309:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1309:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1327:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1302:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1302:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1302:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1289:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1292:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1286:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1286:13:9"
															},
															"nodeType": "YulIf",
															"src": "1283:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1340:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1351:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1356:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1347:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1347:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1340:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1056:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1061:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1072:3:9",
														"type": ""
													}
												],
												"src": "941:428:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1475:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1485:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1497:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1508:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1493:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1493:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1485:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1527:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1538:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1520:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1520:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1444:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1466:4:9",
														"type": ""
													}
												],
												"src": "1374:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1588:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1605:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1608:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1598:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1598:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1702:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1705:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1695:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1695:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1695:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1726:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1729:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1719:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1719:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1719:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1556:184:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80638e4f8c6b14610030575b600080fd5b61004361003e366004610085565b610055565b60405190815260200160405180910390f35b6000816040516020016100689190610136565b604051602081830303815290604052805190602001209050919050565b60006020828403121561009757600080fd5b813567ffffffffffffffff808211156100af57600080fd5b818401915084601f8301126100c357600080fd5b8135818111156100d5576100d5610171565b604051601f8201601f19908116603f011681019083821181831017156100fd576100fd610171565b8160405282815287602084870101111561011657600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000825160005b81811015610157576020818601810151858301520161013d565b81811115610166576000828501525b509190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea264697066735822122040af8ce016989c9a94f94f5ce7823e9baf9368e21e1ff94b2235c95d4d61cc4564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E4F8C6B EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x85 JUMP JUMPDEST PUSH2 0x55 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x68 SWAP2 SWAP1 PUSH2 0x136 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xD5 JUMPI PUSH2 0xD5 PUSH2 0x171 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xFD JUMPI PUSH2 0xFD PUSH2 0x171 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x157 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x13D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0xAF DUP13 0xE0 AND SWAP9 SWAP13 SWAP11 SWAP5 0xF9 0x4F 0x5C 0xE7 DUP3 RETURNDATACOPY SWAP12 0xAF SWAP4 PUSH9 0xE21E1FF94B2235C95D 0x4D PUSH2 0xCC45 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "225:37:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;144:138:4;;;;;;:::i;:::-;;:::i;:::-;;;1520:25:9;;;1508:2;1493:18;144:138:4;;;;;;;;208:7;266:5;249:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;239:34;;;;;;232:42;;144:138;;;:::o;14:922:9:-;83:6;136:2;124:9;115:7;111:23;107:32;104:52;;;152:1;149;142:12;104:52;192:9;179:23;221:18;262:2;254:6;251:14;248:34;;;278:1;275;268:12;248:34;316:6;305:9;301:22;291:32;;361:7;354:4;350:2;346:13;342:27;332:55;;383:1;380;373:12;332:55;419:2;406:16;441:2;437;434:10;431:36;;;447:18;;:::i;:::-;522:2;516:9;490:2;576:13;;-1:-1:-1;;572:22:9;;;596:2;568:31;564:40;552:53;;;620:18;;;640:22;;;617:46;614:72;;;666:18;;:::i;:::-;706:10;702:2;695:22;741:2;733:6;726:18;781:7;776:2;771;767;763:11;759:20;756:33;753:53;;;802:1;799;792:12;753:53;858:2;853;849;845:11;840:2;832:6;828:15;815:46;903:1;881:15;;;898:2;877:24;870:35;;;;-1:-1:-1;885:6:9;14:922;-1:-1:-1;;;;;14:922:9:o;941:428::-;1072:3;1110:6;1104:13;1135:1;1145:129;1159:6;1156:1;1153:13;1145:129;;;1257:4;1241:14;;;1237:25;;1231:32;1218:11;;;1211:53;1174:12;1145:129;;;1292:6;1289:1;1286:13;1283:48;;;1327:1;1318:6;1313:3;1309:16;1302:27;1283:48;-1:-1:-1;1347:16:9;;;;;941:428;-1:-1:-1;;941:428:9:o;1556:184::-;1608:77;1605:1;1598:88;1705:4;1702:1;1695:15;1729:4;1726:1;1719:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "94000",
								"executionCost": "141",
								"totalCost": "94141"
							},
							"external": {
								"get_keccak256(string)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 225,
									"end": 262,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 225,
									"end": 262,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 225,
									"end": 262,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 225,
									"end": 262,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 225,
									"end": 262,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 225,
									"end": 262,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 225,
									"end": 262,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 225,
									"end": 262,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 225,
									"end": 262,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 225,
									"end": 262,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 225,
									"end": 262,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 225,
									"end": 262,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 225,
									"end": 262,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 225,
									"end": 262,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 225,
									"end": 262,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 225,
									"end": 262,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 225,
									"end": 262,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 225,
									"end": 262,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 225,
									"end": 262,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 225,
									"end": 262,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 225,
									"end": 262,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122040af8ce016989c9a94f94f5ce7823e9baf9368e21e1ff94b2235c95d4d61cc4564736f6c63430008070033",
									".code": [
										{
											"begin": 225,
											"end": 262,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 225,
											"end": 262,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 225,
											"end": 262,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 225,
											"end": 262,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 225,
											"end": 262,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 225,
											"end": 262,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 225,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 225,
											"end": 262,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 225,
											"end": 262,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 262,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 225,
											"end": 262,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 225,
											"end": 262,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 225,
											"end": 262,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 225,
											"end": 262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 225,
											"end": 262,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 225,
											"end": 262,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 225,
											"end": 262,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 225,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 225,
											"end": 262,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 225,
											"end": 262,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 262,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 225,
											"end": 262,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 225,
											"end": 262,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 225,
											"end": 262,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 225,
											"end": 262,
											"name": "PUSH",
											"source": 3,
											"value": "8E4F8C6B"
										},
										{
											"begin": 225,
											"end": 262,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 225,
											"end": 262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 225,
											"end": 262,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 225,
											"end": 262,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 225,
											"end": 262,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 225,
											"end": 262,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 262,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 225,
											"end": 262,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 144,
											"end": 282,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1520,
											"end": 1545,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1545,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1545,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1508,
											"end": 1510,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1493,
											"end": 1511,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 208,
											"end": 215,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 271,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 239,
											"end": 273,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 239,
											"end": 273,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 239,
											"end": 273,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 239,
											"end": 273,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 239,
											"end": 273,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 239,
											"end": 273,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 232,
											"end": 274,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 274,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 936,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 14,
											"end": 936,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 83,
											"end": 89,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 136,
											"end": 138,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 133,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 115,
											"end": 122,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 111,
											"end": 134,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 107,
											"end": 139,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 104,
											"end": 156,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 104,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 104,
											"end": 156,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 152,
											"end": 153,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 149,
											"end": 150,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 142,
											"end": 154,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 104,
											"end": 156,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 104,
											"end": 156,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 192,
											"end": 201,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 179,
											"end": 202,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 221,
											"end": 239,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 254,
											"end": 260,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 251,
											"end": 265,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 248,
											"end": 282,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 248,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 248,
											"end": 282,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 278,
											"end": 279,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 275,
											"end": 276,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 268,
											"end": 280,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 248,
											"end": 282,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 248,
											"end": 282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 316,
											"end": 322,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 305,
											"end": 314,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 301,
											"end": 323,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 291,
											"end": 323,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 291,
											"end": 323,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 361,
											"end": 368,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 354,
											"end": 358,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 350,
											"end": 352,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 346,
											"end": 359,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 342,
											"end": 369,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 332,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 332,
											"end": 387,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 383,
											"end": 384,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 380,
											"end": 381,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 373,
											"end": 385,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 332,
											"end": 387,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 332,
											"end": 387,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 419,
											"end": 421,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 406,
											"end": 422,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 441,
											"end": 443,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 437,
											"end": 439,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 434,
											"end": 444,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 431,
											"end": 467,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 431,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 431,
											"end": 467,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 447,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 447,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 447,
											"end": 465,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 447,
											"end": 465,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 447,
											"end": 465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 522,
											"end": 524,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 516,
											"end": 525,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 490,
											"end": 492,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 576,
											"end": 589,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 576,
											"end": 589,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 572,
											"end": 594,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 572,
											"end": 594,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 572,
											"end": 594,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 596,
											"end": 598,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 568,
											"end": 599,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 564,
											"end": 604,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 552,
											"end": 605,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 552,
											"end": 605,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 552,
											"end": 605,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 620,
											"end": 638,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 620,
											"end": 638,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 620,
											"end": 638,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 640,
											"end": 662,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 640,
											"end": 662,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 640,
											"end": 662,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 617,
											"end": 663,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 614,
											"end": 686,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 614,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 614,
											"end": 686,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 666,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 666,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 666,
											"end": 684,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 666,
											"end": 684,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 666,
											"end": 684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 706,
											"end": 716,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 702,
											"end": 704,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 695,
											"end": 717,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 741,
											"end": 743,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 726,
											"end": 744,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 781,
											"end": 788,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 776,
											"end": 778,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 771,
											"end": 773,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 767,
											"end": 769,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 763,
											"end": 774,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 759,
											"end": 779,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 756,
											"end": 789,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 753,
											"end": 806,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 753,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 753,
											"end": 806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 802,
											"end": 803,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 799,
											"end": 800,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 792,
											"end": 804,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 753,
											"end": 806,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 753,
											"end": 806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 858,
											"end": 860,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 853,
											"end": 855,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 849,
											"end": 851,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 845,
											"end": 856,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 840,
											"end": 842,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 832,
											"end": 838,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 828,
											"end": 843,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 815,
											"end": 861,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 903,
											"end": 904,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 881,
											"end": 896,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 881,
											"end": 896,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 881,
											"end": 896,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 898,
											"end": 900,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 877,
											"end": 901,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 870,
											"end": 905,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 870,
											"end": 905,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 870,
											"end": 905,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 870,
											"end": 905,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 885,
											"end": 891,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 14,
											"end": 936,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 936,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 941,
											"end": 1369,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 941,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1075,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1116,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1104,
											"end": 1117,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1135,
											"end": 1136,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1165,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1156,
											"end": 1157,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1153,
											"end": 1166,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1257,
											"end": 1261,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1237,
											"end": 1262,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1237,
											"end": 1262,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1231,
											"end": 1263,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1229,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1229,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1229,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1264,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1174,
											"end": 1186,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1292,
											"end": 1298,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1289,
											"end": 1290,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1286,
											"end": 1299,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1331,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1283,
											"end": 1331,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1327,
											"end": 1328,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1324,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1313,
											"end": 1316,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1309,
											"end": 1325,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1329,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1331,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1283,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1347,
											"end": 1363,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1363,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1363,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1363,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1363,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 941,
											"end": 1369,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 941,
											"end": 1369,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1556,
											"end": 1740,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1556,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1608,
											"end": 1685,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1605,
											"end": 1606,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1686,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1705,
											"end": 1709,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1702,
											"end": 1703,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1729,
											"end": 1733,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1726,
											"end": 1727,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1719,
											"end": 1734,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"get_keccak256(string)": "8e4f8c6b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"get_keccak256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Documents/GitHub/contract-token-cryptoMonster/backend/components/main.sol\":\"Main\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"Documents/GitHub/contract-token-cryptoMonster/backend/components/main.sol\":{\"keccak256\":\"0x2b6f90db3286bd0b5474121cbe4494f8cf0d80a91fbc07d0c1285f7059dad479\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a27fdbd0670496dcb4858537f21665266b3d6e9d850d9eee9698f8801aa8990c\",\"dweb:/ipfs/QmNSUsQQrBfNEAeeuNuVfYFu2U4TTKDHx6283eTUJbMsLu\"]},\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":{\"keccak256\":\"0x55073c985c0ace969bfd71eedd56019c7349e65b5ece564d2a0518810e901c81\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b29b6d3e009cfcd406945988b1338f5512656f14a49fc8d8825024e81de023fe\",\"dweb:/ipfs/QmVDcL7SM8t2R5ZAAGNFJhAUHvJQEX2wRrKihVWHiNLma2\"]},\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":{\"keccak256\":\"0x55a8643a4e2500eea6f59f7e7f566793931fec76dcb865f101a6f7bd99b6f503\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bb96275c62c97e4259aa8c07867efff9a59d8968a2c668f84e597efba46b9252\",\"dweb:/ipfs/QmPEDXJmNEX1skQRrvGdWtzsguaiW1MkGH3b3xnfoBZ3vG\"]},\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":{\"keccak256\":\"0x3c4d55fff6547a670227273cabf6e5cd6279729590c2415e26148beed5975392\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://31dfe220e5e8f93ca63e6021e3fdf2115f3672410395d5ba5cceb197c48e921f\",\"dweb:/ipfs/QmcMwAuz3HM2QT4HWoHUxny2HqbtibVdu3gDwkeEs9Xyn7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1911,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/main.sol:Main",
								"label": "structUsers_",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(structUser)1906_storage)"
							},
							{
								"astId": 1921,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/main.sol:Main",
								"label": "structPhases_",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(structPhase)1916_storage)"
							},
							{
								"astId": 1939,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/main.sol:Main",
								"label": "strucApplications_",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(structApplication)1934_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(Role)1890": {
								"encoding": "inplace",
								"label": "enum structures.Role",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(structApplication)1934_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structApplication)",
								"numberOfBytes": "32",
								"value": "t_struct(structApplication)1934_storage"
							},
							"t_mapping(t_address,t_struct(structPhase)1916_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structPhase)",
								"numberOfBytes": "32",
								"value": "t_struct(structPhase)1916_storage"
							},
							"t_mapping(t_address,t_struct(structUser)1906_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structUser)",
								"numberOfBytes": "32",
								"value": "t_struct(structUser)1906_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(structApplication)1934_storage": {
								"encoding": "inplace",
								"label": "struct structures.structApplication",
								"members": [
									{
										"astId": 1923,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/main.sol:Main",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 1925,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/main.sol:Main",
										"label": "contactForCommunication",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 1927,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/main.sol:Main",
										"label": "userAdr",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 1929,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/main.sol:Main",
										"label": "status",
										"offset": 20,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 1931,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/main.sol:Main",
										"label": "reviewed",
										"offset": 21,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 1933,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/main.sol:Main",
										"label": "exist",
										"offset": 22,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(structPhase)1916_storage": {
								"encoding": "inplace",
								"label": "struct structures.structPhase",
								"members": [
									{
										"astId": 1913,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/main.sol:Main",
										"label": "statusPhase",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 1915,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/main.sol:Main",
										"label": "reviewed",
										"offset": 1,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(structUser)1906_storage": {
								"encoding": "inplace",
								"label": "struct structures.structUser",
								"members": [
									{
										"astId": 1893,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/main.sol:Main",
										"label": "role",
										"offset": 0,
										"slot": "0",
										"type": "t_enum(Role)1890"
									},
									{
										"astId": 1895,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/main.sol:Main",
										"label": "login",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 1897,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/main.sol:Main",
										"label": "password",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									},
									{
										"astId": 1899,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/main.sol:Main",
										"label": "balance_overall",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1901,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/main.sol:Main",
										"label": "balance_seed",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1903,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/main.sol:Main",
										"label": "balance_private",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1905,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/components/main.sol:Main",
										"label": "balance_public",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol": {
				"getFuncs": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_hash",
									"type": "string"
								}
							],
							"name": "get_keccak256",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":72:285  contract getFuncs {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":72:285  contract getFuncs {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8e4f8c6b\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":144:282  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n    tag_3:\n      tag_4\n      tag_5\n      calldatasize\n      0x04\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n        /* \"#utility.yul\":1520:1545   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1508:1510   */\n      0x20\n        /* \"#utility.yul\":1493:1511   */\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":144:282  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":208:215  bytes32 */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":266:271  _hash */\n      dup2\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":249:272  abi.encodePacked(_hash) */\n      add(0x20, mload(0x40))\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":239:273  keccak256(abi.encodePacked(_hash)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":232:274  return(keccak256(abi.encodePacked(_hash))) */\n      swap1\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":144:282  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:936   */\n    tag_6:\n        /* \"#utility.yul\":83:89   */\n      0x00\n        /* \"#utility.yul\":136:138   */\n      0x20\n        /* \"#utility.yul\":124:133   */\n      dup3\n        /* \"#utility.yul\":115:122   */\n      dup5\n        /* \"#utility.yul\":111:134   */\n      sub\n        /* \"#utility.yul\":107:139   */\n      slt\n        /* \"#utility.yul\":104:156   */\n      iszero\n      tag_15\n      jumpi\n        /* \"#utility.yul\":152:153   */\n      0x00\n        /* \"#utility.yul\":149:150   */\n      dup1\n        /* \"#utility.yul\":142:154   */\n      revert\n        /* \"#utility.yul\":104:156   */\n    tag_15:\n        /* \"#utility.yul\":192:201   */\n      dup2\n        /* \"#utility.yul\":179:202   */\n      calldataload\n        /* \"#utility.yul\":221:239   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":262:264   */\n      dup1\n        /* \"#utility.yul\":254:260   */\n      dup3\n        /* \"#utility.yul\":251:265   */\n      gt\n        /* \"#utility.yul\":248:282   */\n      iszero\n      tag_16\n      jumpi\n        /* \"#utility.yul\":278:279   */\n      0x00\n        /* \"#utility.yul\":275:276   */\n      dup1\n        /* \"#utility.yul\":268:280   */\n      revert\n        /* \"#utility.yul\":248:282   */\n    tag_16:\n        /* \"#utility.yul\":316:322   */\n      dup2\n        /* \"#utility.yul\":305:314   */\n      dup5\n        /* \"#utility.yul\":301:323   */\n      add\n        /* \"#utility.yul\":291:323   */\n      swap2\n      pop\n        /* \"#utility.yul\":361:368   */\n      dup5\n        /* \"#utility.yul\":354:358   */\n      0x1f\n        /* \"#utility.yul\":350:352   */\n      dup4\n        /* \"#utility.yul\":346:359   */\n      add\n        /* \"#utility.yul\":342:369   */\n      slt\n        /* \"#utility.yul\":332:387   */\n      tag_17\n      jumpi\n        /* \"#utility.yul\":383:384   */\n      0x00\n        /* \"#utility.yul\":380:381   */\n      dup1\n        /* \"#utility.yul\":373:385   */\n      revert\n        /* \"#utility.yul\":332:387   */\n    tag_17:\n        /* \"#utility.yul\":419:421   */\n      dup2\n        /* \"#utility.yul\":406:422   */\n      calldataload\n        /* \"#utility.yul\":441:443   */\n      dup2\n        /* \"#utility.yul\":437:439   */\n      dup2\n        /* \"#utility.yul\":434:444   */\n      gt\n        /* \"#utility.yul\":431:467   */\n      iszero\n      tag_19\n      jumpi\n        /* \"#utility.yul\":447:465   */\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":522:524   */\n      0x40\n        /* \"#utility.yul\":516:525   */\n      mload\n        /* \"#utility.yul\":490:492   */\n      0x1f\n        /* \"#utility.yul\":576:589   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":572:594   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":596:598   */\n      0x3f\n        /* \"#utility.yul\":568:599   */\n      add\n        /* \"#utility.yul\":564:604   */\n      and\n        /* \"#utility.yul\":552:605   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":620:638   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":640:662   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":617:663   */\n      or\n        /* \"#utility.yul\":614:686   */\n      iszero\n      tag_22\n      jumpi\n        /* \"#utility.yul\":666:684   */\n      tag_22\n      tag_20\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":706:716   */\n      dup2\n        /* \"#utility.yul\":702:704   */\n      0x40\n        /* \"#utility.yul\":695:717   */\n      mstore\n        /* \"#utility.yul\":741:743   */\n      dup3\n        /* \"#utility.yul\":733:739   */\n      dup2\n        /* \"#utility.yul\":726:744   */\n      mstore\n        /* \"#utility.yul\":781:788   */\n      dup8\n        /* \"#utility.yul\":776:778   */\n      0x20\n        /* \"#utility.yul\":771:773   */\n      dup5\n        /* \"#utility.yul\":767:769   */\n      dup8\n        /* \"#utility.yul\":763:774   */\n      add\n        /* \"#utility.yul\":759:779   */\n      add\n        /* \"#utility.yul\":756:789   */\n      gt\n        /* \"#utility.yul\":753:806   */\n      iszero\n      tag_23\n      jumpi\n        /* \"#utility.yul\":802:803   */\n      0x00\n        /* \"#utility.yul\":799:800   */\n      dup1\n        /* \"#utility.yul\":792:804   */\n      revert\n        /* \"#utility.yul\":753:806   */\n    tag_23:\n        /* \"#utility.yul\":858:860   */\n      dup3\n        /* \"#utility.yul\":853:855   */\n      0x20\n        /* \"#utility.yul\":849:851   */\n      dup7\n        /* \"#utility.yul\":845:856   */\n      add\n        /* \"#utility.yul\":840:842   */\n      0x20\n        /* \"#utility.yul\":832:838   */\n      dup4\n        /* \"#utility.yul\":828:843   */\n      add\n        /* \"#utility.yul\":815:861   */\n      calldatacopy\n        /* \"#utility.yul\":903:904   */\n      0x00\n        /* \"#utility.yul\":881:896   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":898:900   */\n      0x20\n        /* \"#utility.yul\":877:901   */\n      add\n        /* \"#utility.yul\":870:905   */\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n        /* \"#utility.yul\":885:891   */\n      swap6\n        /* \"#utility.yul\":14:936   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":941:1369   */\n    tag_12:\n        /* \"#utility.yul\":1072:1075   */\n      0x00\n        /* \"#utility.yul\":1110:1116   */\n      dup3\n        /* \"#utility.yul\":1104:1117   */\n      mload\n        /* \"#utility.yul\":1135:1136   */\n      0x00\n        /* \"#utility.yul\":1145:1274   */\n    tag_25:\n        /* \"#utility.yul\":1159:1165   */\n      dup2\n        /* \"#utility.yul\":1156:1157   */\n      dup2\n        /* \"#utility.yul\":1153:1166   */\n      lt\n        /* \"#utility.yul\":1145:1274   */\n      iszero\n      tag_27\n      jumpi\n        /* \"#utility.yul\":1257:1261   */\n      0x20\n        /* \"#utility.yul\":1241:1255   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":1237:1262   */\n      dup2\n      add\n        /* \"#utility.yul\":1231:1263   */\n      mload\n        /* \"#utility.yul\":1218:1229   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":1211:1264   */\n      mstore\n        /* \"#utility.yul\":1174:1186   */\n      add\n        /* \"#utility.yul\":1145:1274   */\n      jump(tag_25)\n    tag_27:\n        /* \"#utility.yul\":1292:1298   */\n      dup2\n        /* \"#utility.yul\":1289:1290   */\n      dup2\n        /* \"#utility.yul\":1286:1299   */\n      gt\n        /* \"#utility.yul\":1283:1331   */\n      iszero\n      tag_28\n      jumpi\n        /* \"#utility.yul\":1327:1328   */\n      0x00\n        /* \"#utility.yul\":1318:1324   */\n      dup3\n        /* \"#utility.yul\":1313:1316   */\n      dup6\n        /* \"#utility.yul\":1309:1325   */\n      add\n        /* \"#utility.yul\":1302:1329   */\n      mstore\n        /* \"#utility.yul\":1283:1331   */\n    tag_28:\n      pop\n        /* \"#utility.yul\":1347:1363   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":941:1369   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1556:1740   */\n    tag_20:\n        /* \"#utility.yul\":1608:1685   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1605:1606   */\n      0x00\n        /* \"#utility.yul\":1598:1686   */\n      mstore\n        /* \"#utility.yul\":1705:1709   */\n      0x41\n        /* \"#utility.yul\":1702:1703   */\n      0x04\n        /* \"#utility.yul\":1695:1710   */\n      mstore\n        /* \"#utility.yul\":1729:1733   */\n      0x24\n        /* \"#utility.yul\":1726:1727   */\n      0x00\n        /* \"#utility.yul\":1719:1734   */\n      revert\n\n    auxdata: 0xa2646970667358221220159db2e94f2c37878b7d8d96f93e20b1747ee4743b507475678b0920cea2186764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101d6806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638e4f8c6b14610030575b600080fd5b61004361003e366004610085565b610055565b60405190815260200160405180910390f35b6000816040516020016100689190610136565b604051602081830303815290604052805190602001209050919050565b60006020828403121561009757600080fd5b813567ffffffffffffffff808211156100af57600080fd5b818401915084601f8301126100c357600080fd5b8135818111156100d5576100d5610171565b604051601f8201601f19908116603f011681019083821181831017156100fd576100fd610171565b8160405282815287602084870101111561011657600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000825160005b81811015610157576020818601810151858301520161013d565b81811115610166576000828501525b509190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220159db2e94f2c37878b7d8d96f93e20b1747ee4743b507475678b0920cea2186764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E4F8C6B EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x85 JUMP JUMPDEST PUSH2 0x55 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x68 SWAP2 SWAP1 PUSH2 0x136 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xD5 JUMPI PUSH2 0xD5 PUSH2 0x171 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xFD JUMPI PUSH2 0xFD PUSH2 0x171 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x157 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x13D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO SWAP14 0xB2 0xE9 0x4F 0x2C CALLDATACOPY DUP8 DUP12 PUSH30 0x8D96F93E20B1747EE4743B507475678B0920CEA2186764736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "72:213:4:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@get_keccak256_1375": {
									"entryPoint": 85,
									"id": 1375,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 369,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1742:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "94:842:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "140:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "149:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "152:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "142:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "142:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "142:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "115:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "124:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "111:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "111:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "136:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "107:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:32:9"
															},
															"nodeType": "YulIf",
															"src": "104:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "165:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "192:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "179:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:23:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "169:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "211:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "221:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "215:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "266:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "275:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "278:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "268:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "268:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "268:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "254:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "262:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "251:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "251:14:9"
															},
															"nodeType": "YulIf",
															"src": "248:34:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "291:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "305:9:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "316:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "301:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "301:22:9"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "295:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "371:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "380:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "383:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "373:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "373:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "373:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "350:2:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "354:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "346:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "346:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "361:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "342:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "342:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "335:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:35:9"
															},
															"nodeType": "YulIf",
															"src": "332:55:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "396:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "419:2:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "406:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "406:16:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "400:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "445:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "447:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "447:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "447:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "437:2:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "441:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "434:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "434:10:9"
															},
															"nodeType": "YulIf",
															"src": "431:36:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "476:17:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "490:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "486:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "486:7:9"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "480:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "502:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "522:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "516:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "506:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "534:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "556:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "580:2:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "584:4:9",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "576:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "576:13:9"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "591:2:9"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "572:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "572:22:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "596:2:9",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "568:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "568:31:9"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "601:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "564:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "564:40:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "552:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "552:53:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "538:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "664:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "666:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "666:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "666:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "623:10:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "635:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "620:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "620:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "643:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "655:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "640:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "640:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "617:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:46:9"
															},
															"nodeType": "YulIf",
															"src": "614:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "702:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "706:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "695:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "695:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "695:22:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "733:6:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "741:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:18:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:18:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "790:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "799:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "802:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "792:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "792:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "792:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "767:2:9"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "771:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "763:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "763:11:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "776:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "759:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "759:20:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "781:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "756:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "756:33:9"
															},
															"nodeType": "YulIf",
															"src": "753:53:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "832:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "840:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "828:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "828:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "849:2:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "853:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "845:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "845:11:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "858:2:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "815:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "815:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "815:46:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "885:6:9"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "893:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "881:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "881:15:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "898:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "877:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "877:24:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "903:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "870:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "870:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "870:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "914:16:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "924:6:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "914:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "60:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "71:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "83:6:9",
														"type": ""
													}
												],
												"src": "14:922:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1080:289:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1090:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1110:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1104:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1104:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1094:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1126:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1135:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1130:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1197:77:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1222:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1227:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1218:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1218:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1245:6:9"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1253:1:9"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1241:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1241:14:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1257:4:9",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1237:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1237:25:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1231:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1231:32:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1211:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1211:53:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1211:53:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1156:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1159:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1153:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1153:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1167:21:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1169:17:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1178:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1181:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1174:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1174:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1169:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1149:3:9",
																"statements": []
															},
															"src": "1145:129:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1300:31:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1313:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1318:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1309:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1309:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1327:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1302:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1302:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1302:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1289:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1292:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1286:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1286:13:9"
															},
															"nodeType": "YulIf",
															"src": "1283:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1340:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1351:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1356:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1347:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1347:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1340:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1056:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1061:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1072:3:9",
														"type": ""
													}
												],
												"src": "941:428:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1475:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1485:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1497:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1508:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1493:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1493:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1485:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1527:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1538:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1520:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1520:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1444:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1466:4:9",
														"type": ""
													}
												],
												"src": "1374:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1588:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1605:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1608:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1598:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1598:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1702:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1705:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1695:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1695:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1695:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1726:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1729:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1719:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1719:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1719:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1556:184:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80638e4f8c6b14610030575b600080fd5b61004361003e366004610085565b610055565b60405190815260200160405180910390f35b6000816040516020016100689190610136565b604051602081830303815290604052805190602001209050919050565b60006020828403121561009757600080fd5b813567ffffffffffffffff808211156100af57600080fd5b818401915084601f8301126100c357600080fd5b8135818111156100d5576100d5610171565b604051601f8201601f19908116603f011681019083821181831017156100fd576100fd610171565b8160405282815287602084870101111561011657600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000825160005b81811015610157576020818601810151858301520161013d565b81811115610166576000828501525b509190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220159db2e94f2c37878b7d8d96f93e20b1747ee4743b507475678b0920cea2186764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E4F8C6B EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x85 JUMP JUMPDEST PUSH2 0x55 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x68 SWAP2 SWAP1 PUSH2 0x136 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xD5 JUMPI PUSH2 0xD5 PUSH2 0x171 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xFD JUMPI PUSH2 0xFD PUSH2 0x171 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x157 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x13D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO SWAP14 0xB2 0xE9 0x4F 0x2C CALLDATACOPY DUP8 DUP12 PUSH30 0x8D96F93E20B1747EE4743B507475678B0920CEA2186764736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "72:213:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;144:138;;;;;;:::i;:::-;;:::i;:::-;;;1520:25:9;;;1508:2;1493:18;144:138:4;;;;;;;;208:7;266:5;249:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;239:34;;;;;;232:42;;144:138;;;:::o;14:922:9:-;83:6;136:2;124:9;115:7;111:23;107:32;104:52;;;152:1;149;142:12;104:52;192:9;179:23;221:18;262:2;254:6;251:14;248:34;;;278:1;275;268:12;248:34;316:6;305:9;301:22;291:32;;361:7;354:4;350:2;346:13;342:27;332:55;;383:1;380;373:12;332:55;419:2;406:16;441:2;437;434:10;431:36;;;447:18;;:::i;:::-;522:2;516:9;490:2;576:13;;-1:-1:-1;;572:22:9;;;596:2;568:31;564:40;552:53;;;620:18;;;640:22;;;617:46;614:72;;;666:18;;:::i;:::-;706:10;702:2;695:22;741:2;733:6;726:18;781:7;776:2;771;767;763:11;759:20;756:33;753:53;;;802:1;799;792:12;753:53;858:2;853;849;845:11;840:2;832:6;828:15;815:46;903:1;881:15;;;898:2;877:24;870:35;;;;-1:-1:-1;885:6:9;14:922;-1:-1:-1;;;;;14:922:9:o;941:428::-;1072:3;1110:6;1104:13;1135:1;1145:129;1159:6;1156:1;1153:13;1145:129;;;1257:4;1241:14;;;1237:25;;1231:32;1218:11;;;1211:53;1174:12;1145:129;;;1292:6;1289:1;1286:13;1283:48;;;1327:1;1318:6;1313:3;1309:16;1302:27;1283:48;-1:-1:-1;1347:16:9;;;;;941:428;-1:-1:-1;;941:428:9:o;1556:184::-;1608:77;1605:1;1598:88;1705:4;1702:1;1695:15;1729:4;1726:1;1719:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "94000",
								"executionCost": "141",
								"totalCost": "94141"
							},
							"external": {
								"get_keccak256(string)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 72,
									"end": 285,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 72,
									"end": 285,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 72,
									"end": 285,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 72,
									"end": 285,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 72,
									"end": 285,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 72,
									"end": 285,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 72,
									"end": 285,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 72,
									"end": 285,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 72,
									"end": 285,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 285,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 72,
									"end": 285,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 72,
									"end": 285,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 72,
									"end": 285,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 72,
									"end": 285,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 72,
									"end": 285,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 285,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 72,
									"end": 285,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 285,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 285,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 72,
									"end": 285,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 285,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220159db2e94f2c37878b7d8d96f93e20b1747ee4743b507475678b0920cea2186764736f6c63430008070033",
									".code": [
										{
											"begin": 72,
											"end": 285,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 72,
											"end": 285,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 72,
											"end": 285,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 72,
											"end": 285,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 72,
											"end": 285,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 72,
											"end": 285,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 72,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 72,
											"end": 285,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 72,
											"end": 285,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 285,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 72,
											"end": 285,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 72,
											"end": 285,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 72,
											"end": 285,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 72,
											"end": 285,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 72,
											"end": 285,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 72,
											"end": 285,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 72,
											"end": 285,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 72,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 72,
											"end": 285,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 72,
											"end": 285,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 285,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 72,
											"end": 285,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 72,
											"end": 285,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 72,
											"end": 285,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 72,
											"end": 285,
											"name": "PUSH",
											"source": 4,
											"value": "8E4F8C6B"
										},
										{
											"begin": 72,
											"end": 285,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 72,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 72,
											"end": 285,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 72,
											"end": 285,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 72,
											"end": 285,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 72,
											"end": 285,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 285,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 72,
											"end": 285,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1520,
											"end": 1545,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1545,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1545,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1508,
											"end": 1510,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1493,
											"end": 1511,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 208,
											"end": 215,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 271,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 239,
											"end": 273,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 239,
											"end": 273,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 239,
											"end": 273,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 239,
											"end": 273,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 239,
											"end": 273,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 239,
											"end": 273,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 232,
											"end": 274,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 274,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 936,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 14,
											"end": 936,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 83,
											"end": 89,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 136,
											"end": 138,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 133,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 115,
											"end": 122,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 111,
											"end": 134,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 107,
											"end": 139,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 104,
											"end": 156,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 104,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 104,
											"end": 156,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 152,
											"end": 153,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 149,
											"end": 150,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 142,
											"end": 154,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 104,
											"end": 156,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 104,
											"end": 156,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 192,
											"end": 201,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 179,
											"end": 202,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 221,
											"end": 239,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 254,
											"end": 260,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 251,
											"end": 265,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 248,
											"end": 282,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 248,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 248,
											"end": 282,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 278,
											"end": 279,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 275,
											"end": 276,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 268,
											"end": 280,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 248,
											"end": 282,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 248,
											"end": 282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 316,
											"end": 322,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 305,
											"end": 314,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 301,
											"end": 323,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 291,
											"end": 323,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 291,
											"end": 323,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 361,
											"end": 368,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 354,
											"end": 358,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 350,
											"end": 352,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 346,
											"end": 359,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 342,
											"end": 369,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 332,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 332,
											"end": 387,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 383,
											"end": 384,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 380,
											"end": 381,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 373,
											"end": 385,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 332,
											"end": 387,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 332,
											"end": 387,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 419,
											"end": 421,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 406,
											"end": 422,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 441,
											"end": 443,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 437,
											"end": 439,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 434,
											"end": 444,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 431,
											"end": 467,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 431,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 431,
											"end": 467,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 447,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 447,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 447,
											"end": 465,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 447,
											"end": 465,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 447,
											"end": 465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 522,
											"end": 524,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 516,
											"end": 525,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 490,
											"end": 492,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 576,
											"end": 589,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 576,
											"end": 589,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 572,
											"end": 594,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 572,
											"end": 594,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 572,
											"end": 594,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 596,
											"end": 598,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 568,
											"end": 599,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 564,
											"end": 604,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 552,
											"end": 605,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 552,
											"end": 605,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 552,
											"end": 605,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 620,
											"end": 638,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 620,
											"end": 638,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 620,
											"end": 638,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 640,
											"end": 662,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 640,
											"end": 662,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 640,
											"end": 662,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 617,
											"end": 663,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 614,
											"end": 686,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 614,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 614,
											"end": 686,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 666,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 666,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 666,
											"end": 684,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 666,
											"end": 684,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 666,
											"end": 684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 706,
											"end": 716,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 702,
											"end": 704,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 695,
											"end": 717,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 741,
											"end": 743,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 726,
											"end": 744,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 781,
											"end": 788,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 776,
											"end": 778,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 771,
											"end": 773,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 767,
											"end": 769,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 763,
											"end": 774,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 759,
											"end": 779,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 756,
											"end": 789,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 753,
											"end": 806,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 753,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 753,
											"end": 806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 802,
											"end": 803,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 799,
											"end": 800,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 792,
											"end": 804,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 753,
											"end": 806,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 753,
											"end": 806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 858,
											"end": 860,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 853,
											"end": 855,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 849,
											"end": 851,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 845,
											"end": 856,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 840,
											"end": 842,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 832,
											"end": 838,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 828,
											"end": 843,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 815,
											"end": 861,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 903,
											"end": 904,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 881,
											"end": 896,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 881,
											"end": 896,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 881,
											"end": 896,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 898,
											"end": 900,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 877,
											"end": 901,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 870,
											"end": 905,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 870,
											"end": 905,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 870,
											"end": 905,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 870,
											"end": 905,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 885,
											"end": 891,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 14,
											"end": 936,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 936,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 941,
											"end": 1369,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 941,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1075,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1116,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1104,
											"end": 1117,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1135,
											"end": 1136,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1165,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1156,
											"end": 1157,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1153,
											"end": 1166,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1257,
											"end": 1261,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1237,
											"end": 1262,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1237,
											"end": 1262,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1231,
											"end": 1263,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1229,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1229,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1229,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1264,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1174,
											"end": 1186,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1292,
											"end": 1298,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1289,
											"end": 1290,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1286,
											"end": 1299,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1331,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1283,
											"end": 1331,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1327,
											"end": 1328,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1324,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1313,
											"end": 1316,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1309,
											"end": 1325,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1329,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1331,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1283,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1347,
											"end": 1363,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1363,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1363,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1363,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1363,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 941,
											"end": 1369,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 941,
											"end": 1369,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1556,
											"end": 1740,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1556,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1608,
											"end": 1685,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1605,
											"end": 1606,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1686,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1705,
											"end": 1709,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1702,
											"end": 1703,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1729,
											"end": 1733,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1726,
											"end": 1727,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1719,
											"end": 1734,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"get_keccak256(string)": "8e4f8c6b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"get_keccak256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":\"getFuncs\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":{\"keccak256\":\"0x55073c985c0ace969bfd71eedd56019c7349e65b5ece564d2a0518810e901c81\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b29b6d3e009cfcd406945988b1338f5512656f14a49fc8d8825024e81de023fe\",\"dweb:/ipfs/QmVDcL7SM8t2R5ZAAGNFJhAUHvJQEX2wRrKihVWHiNLma2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol": {
				"validateFuncs": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_hash",
									"type": "string"
								}
							],
							"name": "get_keccak256",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":267:1978  contract validateFuncs is structures, getFuncs {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":267:1978  contract validateFuncs is structures, getFuncs {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8e4f8c6b\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":144:282  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n    tag_3:\n      tag_4\n      tag_5\n      calldatasize\n      0x04\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n        /* \"#utility.yul\":1520:1545   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1508:1510   */\n      0x20\n        /* \"#utility.yul\":1493:1511   */\n      add\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":144:282  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":208:215  bytes32 */\n      0x00\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":266:271  _hash */\n      dup2\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":249:272  abi.encodePacked(_hash) */\n      add(0x20, mload(0x40))\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":239:273  keccak256(abi.encodePacked(_hash)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":232:274  return(keccak256(abi.encodePacked(_hash))) */\n      swap1\n      pop\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":144:282  function get_keccak256(string memory _hash) public pure returns(bytes32) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:936   */\n    tag_6:\n        /* \"#utility.yul\":83:89   */\n      0x00\n        /* \"#utility.yul\":136:138   */\n      0x20\n        /* \"#utility.yul\":124:133   */\n      dup3\n        /* \"#utility.yul\":115:122   */\n      dup5\n        /* \"#utility.yul\":111:134   */\n      sub\n        /* \"#utility.yul\":107:139   */\n      slt\n        /* \"#utility.yul\":104:156   */\n      iszero\n      tag_15\n      jumpi\n        /* \"#utility.yul\":152:153   */\n      0x00\n        /* \"#utility.yul\":149:150   */\n      dup1\n        /* \"#utility.yul\":142:154   */\n      revert\n        /* \"#utility.yul\":104:156   */\n    tag_15:\n        /* \"#utility.yul\":192:201   */\n      dup2\n        /* \"#utility.yul\":179:202   */\n      calldataload\n        /* \"#utility.yul\":221:239   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":262:264   */\n      dup1\n        /* \"#utility.yul\":254:260   */\n      dup3\n        /* \"#utility.yul\":251:265   */\n      gt\n        /* \"#utility.yul\":248:282   */\n      iszero\n      tag_16\n      jumpi\n        /* \"#utility.yul\":278:279   */\n      0x00\n        /* \"#utility.yul\":275:276   */\n      dup1\n        /* \"#utility.yul\":268:280   */\n      revert\n        /* \"#utility.yul\":248:282   */\n    tag_16:\n        /* \"#utility.yul\":316:322   */\n      dup2\n        /* \"#utility.yul\":305:314   */\n      dup5\n        /* \"#utility.yul\":301:323   */\n      add\n        /* \"#utility.yul\":291:323   */\n      swap2\n      pop\n        /* \"#utility.yul\":361:368   */\n      dup5\n        /* \"#utility.yul\":354:358   */\n      0x1f\n        /* \"#utility.yul\":350:352   */\n      dup4\n        /* \"#utility.yul\":346:359   */\n      add\n        /* \"#utility.yul\":342:369   */\n      slt\n        /* \"#utility.yul\":332:387   */\n      tag_17\n      jumpi\n        /* \"#utility.yul\":383:384   */\n      0x00\n        /* \"#utility.yul\":380:381   */\n      dup1\n        /* \"#utility.yul\":373:385   */\n      revert\n        /* \"#utility.yul\":332:387   */\n    tag_17:\n        /* \"#utility.yul\":419:421   */\n      dup2\n        /* \"#utility.yul\":406:422   */\n      calldataload\n        /* \"#utility.yul\":441:443   */\n      dup2\n        /* \"#utility.yul\":437:439   */\n      dup2\n        /* \"#utility.yul\":434:444   */\n      gt\n        /* \"#utility.yul\":431:467   */\n      iszero\n      tag_19\n      jumpi\n        /* \"#utility.yul\":447:465   */\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":522:524   */\n      0x40\n        /* \"#utility.yul\":516:525   */\n      mload\n        /* \"#utility.yul\":490:492   */\n      0x1f\n        /* \"#utility.yul\":576:589   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":572:594   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":596:598   */\n      0x3f\n        /* \"#utility.yul\":568:599   */\n      add\n        /* \"#utility.yul\":564:604   */\n      and\n        /* \"#utility.yul\":552:605   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":620:638   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":640:662   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":617:663   */\n      or\n        /* \"#utility.yul\":614:686   */\n      iszero\n      tag_22\n      jumpi\n        /* \"#utility.yul\":666:684   */\n      tag_22\n      tag_20\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":706:716   */\n      dup2\n        /* \"#utility.yul\":702:704   */\n      0x40\n        /* \"#utility.yul\":695:717   */\n      mstore\n        /* \"#utility.yul\":741:743   */\n      dup3\n        /* \"#utility.yul\":733:739   */\n      dup2\n        /* \"#utility.yul\":726:744   */\n      mstore\n        /* \"#utility.yul\":781:788   */\n      dup8\n        /* \"#utility.yul\":776:778   */\n      0x20\n        /* \"#utility.yul\":771:773   */\n      dup5\n        /* \"#utility.yul\":767:769   */\n      dup8\n        /* \"#utility.yul\":763:774   */\n      add\n        /* \"#utility.yul\":759:779   */\n      add\n        /* \"#utility.yul\":756:789   */\n      gt\n        /* \"#utility.yul\":753:806   */\n      iszero\n      tag_23\n      jumpi\n        /* \"#utility.yul\":802:803   */\n      0x00\n        /* \"#utility.yul\":799:800   */\n      dup1\n        /* \"#utility.yul\":792:804   */\n      revert\n        /* \"#utility.yul\":753:806   */\n    tag_23:\n        /* \"#utility.yul\":858:860   */\n      dup3\n        /* \"#utility.yul\":853:855   */\n      0x20\n        /* \"#utility.yul\":849:851   */\n      dup7\n        /* \"#utility.yul\":845:856   */\n      add\n        /* \"#utility.yul\":840:842   */\n      0x20\n        /* \"#utility.yul\":832:838   */\n      dup4\n        /* \"#utility.yul\":828:843   */\n      add\n        /* \"#utility.yul\":815:861   */\n      calldatacopy\n        /* \"#utility.yul\":903:904   */\n      0x00\n        /* \"#utility.yul\":881:896   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":898:900   */\n      0x20\n        /* \"#utility.yul\":877:901   */\n      add\n        /* \"#utility.yul\":870:905   */\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n        /* \"#utility.yul\":885:891   */\n      swap6\n        /* \"#utility.yul\":14:936   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":941:1369   */\n    tag_12:\n        /* \"#utility.yul\":1072:1075   */\n      0x00\n        /* \"#utility.yul\":1110:1116   */\n      dup3\n        /* \"#utility.yul\":1104:1117   */\n      mload\n        /* \"#utility.yul\":1135:1136   */\n      0x00\n        /* \"#utility.yul\":1145:1274   */\n    tag_25:\n        /* \"#utility.yul\":1159:1165   */\n      dup2\n        /* \"#utility.yul\":1156:1157   */\n      dup2\n        /* \"#utility.yul\":1153:1166   */\n      lt\n        /* \"#utility.yul\":1145:1274   */\n      iszero\n      tag_27\n      jumpi\n        /* \"#utility.yul\":1257:1261   */\n      0x20\n        /* \"#utility.yul\":1241:1255   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":1237:1262   */\n      dup2\n      add\n        /* \"#utility.yul\":1231:1263   */\n      mload\n        /* \"#utility.yul\":1218:1229   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":1211:1264   */\n      mstore\n        /* \"#utility.yul\":1174:1186   */\n      add\n        /* \"#utility.yul\":1145:1274   */\n      jump(tag_25)\n    tag_27:\n        /* \"#utility.yul\":1292:1298   */\n      dup2\n        /* \"#utility.yul\":1289:1290   */\n      dup2\n        /* \"#utility.yul\":1286:1299   */\n      gt\n        /* \"#utility.yul\":1283:1331   */\n      iszero\n      tag_28\n      jumpi\n        /* \"#utility.yul\":1327:1328   */\n      0x00\n        /* \"#utility.yul\":1318:1324   */\n      dup3\n        /* \"#utility.yul\":1313:1316   */\n      dup6\n        /* \"#utility.yul\":1309:1325   */\n      add\n        /* \"#utility.yul\":1302:1329   */\n      mstore\n        /* \"#utility.yul\":1283:1331   */\n    tag_28:\n      pop\n        /* \"#utility.yul\":1347:1363   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":941:1369   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1556:1740   */\n    tag_20:\n        /* \"#utility.yul\":1608:1685   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1605:1606   */\n      0x00\n        /* \"#utility.yul\":1598:1686   */\n      mstore\n        /* \"#utility.yul\":1705:1709   */\n      0x41\n        /* \"#utility.yul\":1702:1703   */\n      0x04\n        /* \"#utility.yul\":1695:1710   */\n      mstore\n        /* \"#utility.yul\":1729:1733   */\n      0x24\n        /* \"#utility.yul\":1726:1727   */\n      0x00\n        /* \"#utility.yul\":1719:1734   */\n      revert\n\n    auxdata: 0xa2646970667358221220ca082f79c80e09ea8af4599f48470637062f22db451828002b1dc180875a9de564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101d6806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638e4f8c6b14610030575b600080fd5b61004361003e366004610085565b610055565b60405190815260200160405180910390f35b6000816040516020016100689190610136565b604051602081830303815290604052805190602001209050919050565b60006020828403121561009757600080fd5b813567ffffffffffffffff808211156100af57600080fd5b818401915084601f8301126100c357600080fd5b8135818111156100d5576100d5610171565b604051601f8201601f19908116603f011681019083821181831017156100fd576100fd610171565b8160405282815287602084870101111561011657600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000825160005b81811015610157576020818601810151858301520161013d565b81811115610166576000828501525b509190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220ca082f79c80e09ea8af4599f48470637062f22db451828002b1dc180875a9de564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E4F8C6B EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x85 JUMP JUMPDEST PUSH2 0x55 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x68 SWAP2 SWAP1 PUSH2 0x136 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xD5 JUMPI PUSH2 0xD5 PUSH2 0x171 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xFD JUMPI PUSH2 0xFD PUSH2 0x171 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x157 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x13D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA ADDMOD 0x2F PUSH26 0xC80E09EA8AF4599F48470637062F22DB451828002B1DC180875A SWAP14 0xE5 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "267:1711:5:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@get_keccak256_1375": {
									"entryPoint": 85,
									"id": 1375,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 369,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1742:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "94:842:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "140:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "149:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "152:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "142:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "142:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "142:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "115:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "124:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "111:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "111:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "136:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "107:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:32:9"
															},
															"nodeType": "YulIf",
															"src": "104:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "165:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "192:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "179:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:23:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "169:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "211:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "221:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "215:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "266:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "275:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "278:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "268:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "268:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "268:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "254:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "262:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "251:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "251:14:9"
															},
															"nodeType": "YulIf",
															"src": "248:34:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "291:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "305:9:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "316:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "301:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "301:22:9"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "295:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "371:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "380:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "383:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "373:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "373:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "373:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "350:2:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "354:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "346:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "346:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "361:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "342:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "342:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "335:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:35:9"
															},
															"nodeType": "YulIf",
															"src": "332:55:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "396:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "419:2:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "406:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "406:16:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "400:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "445:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "447:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "447:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "447:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "437:2:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "441:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "434:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "434:10:9"
															},
															"nodeType": "YulIf",
															"src": "431:36:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "476:17:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "490:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "486:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "486:7:9"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "480:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "502:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "522:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "516:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "506:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "534:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "556:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "580:2:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "584:4:9",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "576:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "576:13:9"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "591:2:9"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "572:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "572:22:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "596:2:9",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "568:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "568:31:9"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "601:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "564:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "564:40:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "552:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "552:53:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "538:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "664:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "666:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "666:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "666:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "623:10:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "635:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "620:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "620:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "643:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "655:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "640:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "640:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "617:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:46:9"
															},
															"nodeType": "YulIf",
															"src": "614:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "702:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "706:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "695:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "695:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "695:22:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "733:6:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "741:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:18:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:18:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "790:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "799:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "802:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "792:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "792:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "792:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "767:2:9"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "771:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "763:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "763:11:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "776:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "759:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "759:20:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "781:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "756:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "756:33:9"
															},
															"nodeType": "YulIf",
															"src": "753:53:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "832:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "840:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "828:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "828:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "849:2:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "853:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "845:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "845:11:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "858:2:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "815:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "815:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "815:46:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "885:6:9"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "893:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "881:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "881:15:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "898:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "877:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "877:24:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "903:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "870:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "870:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "870:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "914:16:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "924:6:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "914:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "60:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "71:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "83:6:9",
														"type": ""
													}
												],
												"src": "14:922:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1080:289:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1090:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1110:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1104:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1104:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1094:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1126:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1135:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1130:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1197:77:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1222:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1227:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1218:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1218:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1245:6:9"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1253:1:9"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1241:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1241:14:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1257:4:9",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1237:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1237:25:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1231:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1231:32:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1211:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1211:53:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1211:53:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1156:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1159:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1153:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1153:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1167:21:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1169:17:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1178:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1181:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1174:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1174:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1169:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1149:3:9",
																"statements": []
															},
															"src": "1145:129:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1300:31:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1313:3:9"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1318:6:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1309:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1309:16:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1327:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1302:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1302:27:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1302:27:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1289:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1292:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1286:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1286:13:9"
															},
															"nodeType": "YulIf",
															"src": "1283:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1340:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1351:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1356:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1347:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1347:16:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1340:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1056:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1061:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1072:3:9",
														"type": ""
													}
												],
												"src": "941:428:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1475:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1485:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1497:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1508:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1493:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1493:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1485:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1527:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1538:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1520:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1520:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1444:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1466:4:9",
														"type": ""
													}
												],
												"src": "1374:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1588:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1605:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1608:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1598:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1598:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1702:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1705:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1695:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1695:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1695:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1726:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1729:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1719:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1719:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1719:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1556:184:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80638e4f8c6b14610030575b600080fd5b61004361003e366004610085565b610055565b60405190815260200160405180910390f35b6000816040516020016100689190610136565b604051602081830303815290604052805190602001209050919050565b60006020828403121561009757600080fd5b813567ffffffffffffffff808211156100af57600080fd5b818401915084601f8301126100c357600080fd5b8135818111156100d5576100d5610171565b604051601f8201601f19908116603f011681019083821181831017156100fd576100fd610171565b8160405282815287602084870101111561011657600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000825160005b81811015610157576020818601810151858301520161013d565b81811115610166576000828501525b509190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220ca082f79c80e09ea8af4599f48470637062f22db451828002b1dc180875a9de564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E4F8C6B EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x85 JUMP JUMPDEST PUSH2 0x55 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x68 SWAP2 SWAP1 PUSH2 0x136 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xD5 JUMPI PUSH2 0xD5 PUSH2 0x171 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xFD JUMPI PUSH2 0xFD PUSH2 0x171 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x157 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x13D JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA ADDMOD 0x2F PUSH26 0xC80E09EA8AF4599F48470637062F22DB451828002B1DC180875A SWAP14 0xE5 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "267:1711:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;144:138:4;;;;;;:::i;:::-;;:::i;:::-;;;1520:25:9;;;1508:2;1493:18;144:138:4;;;;;;;;208:7;266:5;249:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;239:34;;;;;;232:42;;144:138;;;:::o;14:922:9:-;83:6;136:2;124:9;115:7;111:23;107:32;104:52;;;152:1;149;142:12;104:52;192:9;179:23;221:18;262:2;254:6;251:14;248:34;;;278:1;275;268:12;248:34;316:6;305:9;301:22;291:32;;361:7;354:4;350:2;346:13;342:27;332:55;;383:1;380;373:12;332:55;419:2;406:16;441:2;437;434:10;431:36;;;447:18;;:::i;:::-;522:2;516:9;490:2;576:13;;-1:-1:-1;;572:22:9;;;596:2;568:31;564:40;552:53;;;620:18;;;640:22;;;617:46;614:72;;;666:18;;:::i;:::-;706:10;702:2;695:22;741:2;733:6;726:18;781:7;776:2;771;767;763:11;759:20;756:33;753:53;;;802:1;799;792:12;753:53;858:2;853;849;845:11;840:2;832:6;828:15;815:46;903:1;881:15;;;898:2;877:24;870:35;;;;-1:-1:-1;885:6:9;14:922;-1:-1:-1;;;;;14:922:9:o;941:428::-;1072:3;1110:6;1104:13;1135:1;1145:129;1159:6;1156:1;1153:13;1145:129;;;1257:4;1241:14;;;1237:25;;1231:32;1218:11;;;1211:53;1174:12;1145:129;;;1292:6;1289:1;1286:13;1283:48;;;1327:1;1318:6;1313:3;1309:16;1302:27;1283:48;-1:-1:-1;1347:16:9;;;;;941:428;-1:-1:-1;;941:428:9:o;1556:184::-;1608:77;1605:1;1598:88;1705:4;1702:1;1695:15;1729:4;1726:1;1719:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "94000",
								"executionCost": "141",
								"totalCost": "94141"
							},
							"external": {
								"get_keccak256(string)": "infinite"
							},
							"internal": {
								"validateOwner()": "infinite",
								"validatePhase(string memory,address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 267,
									"end": 1978,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 267,
									"end": 1978,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 267,
									"end": 1978,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 267,
									"end": 1978,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 267,
									"end": 1978,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 267,
									"end": 1978,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 267,
									"end": 1978,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 267,
									"end": 1978,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 267,
									"end": 1978,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 1978,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 267,
									"end": 1978,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 267,
									"end": 1978,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 267,
									"end": 1978,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 267,
									"end": 1978,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 267,
									"end": 1978,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 267,
									"end": 1978,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 267,
									"end": 1978,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 267,
									"end": 1978,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 1978,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 267,
									"end": 1978,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 1978,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ca082f79c80e09ea8af4599f48470637062f22db451828002b1dc180875a9de564736f6c63430008070033",
									".code": [
										{
											"begin": 267,
											"end": 1978,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 267,
											"end": 1978,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 267,
											"end": 1978,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 267,
											"end": 1978,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 267,
											"end": 1978,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 267,
											"end": 1978,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 267,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 267,
											"end": 1978,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 267,
											"end": 1978,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 1978,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 267,
											"end": 1978,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 267,
											"end": 1978,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 267,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 267,
											"end": 1978,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 267,
											"end": 1978,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 267,
											"end": 1978,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 267,
											"end": 1978,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 267,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 267,
											"end": 1978,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 267,
											"end": 1978,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 1978,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 267,
											"end": 1978,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 267,
											"end": 1978,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 267,
											"end": 1978,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 267,
											"end": 1978,
											"name": "PUSH",
											"source": 5,
											"value": "8E4F8C6B"
										},
										{
											"begin": 267,
											"end": 1978,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 267,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 267,
											"end": 1978,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 267,
											"end": 1978,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 267,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 267,
											"end": 1978,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 1978,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 267,
											"end": 1978,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 144,
											"end": 282,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1520,
											"end": 1545,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1545,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1545,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1508,
											"end": 1510,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1493,
											"end": 1511,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 144,
											"end": 282,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 208,
											"end": 215,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 266,
											"end": 271,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 249,
											"end": 272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 249,
											"end": 272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 239,
											"end": 273,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 239,
											"end": 273,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 239,
											"end": 273,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 239,
											"end": 273,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 239,
											"end": 273,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 239,
											"end": 273,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 232,
											"end": 274,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 232,
											"end": 274,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 144,
											"end": 282,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 936,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 14,
											"end": 936,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 83,
											"end": 89,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 136,
											"end": 138,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 124,
											"end": 133,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 115,
											"end": 122,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 111,
											"end": 134,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 107,
											"end": 139,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 104,
											"end": 156,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 104,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 104,
											"end": 156,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 152,
											"end": 153,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 149,
											"end": 150,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 142,
											"end": 154,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 104,
											"end": 156,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 104,
											"end": 156,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 192,
											"end": 201,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 179,
											"end": 202,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 221,
											"end": 239,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 254,
											"end": 260,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 251,
											"end": 265,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 248,
											"end": 282,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 248,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 248,
											"end": 282,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 278,
											"end": 279,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 275,
											"end": 276,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 268,
											"end": 280,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 248,
											"end": 282,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 248,
											"end": 282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 316,
											"end": 322,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 305,
											"end": 314,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 301,
											"end": 323,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 291,
											"end": 323,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 291,
											"end": 323,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 361,
											"end": 368,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 354,
											"end": 358,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 350,
											"end": 352,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 346,
											"end": 359,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 342,
											"end": 369,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 332,
											"end": 387,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 332,
											"end": 387,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 383,
											"end": 384,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 380,
											"end": 381,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 373,
											"end": 385,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 332,
											"end": 387,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 332,
											"end": 387,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 419,
											"end": 421,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 406,
											"end": 422,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 441,
											"end": 443,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 437,
											"end": 439,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 434,
											"end": 444,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 431,
											"end": 467,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 431,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 431,
											"end": 467,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 447,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 447,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 447,
											"end": 465,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 447,
											"end": 465,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 447,
											"end": 465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 522,
											"end": 524,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 516,
											"end": 525,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 490,
											"end": 492,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 576,
											"end": 589,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 576,
											"end": 589,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 572,
											"end": 594,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 572,
											"end": 594,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 572,
											"end": 594,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 596,
											"end": 598,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 568,
											"end": 599,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 564,
											"end": 604,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 552,
											"end": 605,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 552,
											"end": 605,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 552,
											"end": 605,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 620,
											"end": 638,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 620,
											"end": 638,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 620,
											"end": 638,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 640,
											"end": 662,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 640,
											"end": 662,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 640,
											"end": 662,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 617,
											"end": 663,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 614,
											"end": 686,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 614,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 614,
											"end": 686,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 666,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 666,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 666,
											"end": 684,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 666,
											"end": 684,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 666,
											"end": 684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 706,
											"end": 716,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 702,
											"end": 704,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 695,
											"end": 717,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 741,
											"end": 743,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 726,
											"end": 744,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 781,
											"end": 788,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 776,
											"end": 778,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 771,
											"end": 773,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 767,
											"end": 769,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 763,
											"end": 774,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 759,
											"end": 779,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 756,
											"end": 789,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 753,
											"end": 806,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 753,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 753,
											"end": 806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 802,
											"end": 803,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 799,
											"end": 800,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 792,
											"end": 804,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 753,
											"end": 806,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 753,
											"end": 806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 858,
											"end": 860,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 853,
											"end": 855,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 849,
											"end": 851,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 845,
											"end": 856,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 840,
											"end": 842,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 832,
											"end": 838,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 828,
											"end": 843,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 815,
											"end": 861,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 903,
											"end": 904,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 881,
											"end": 896,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 881,
											"end": 896,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 881,
											"end": 896,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 898,
											"end": 900,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 877,
											"end": 901,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 870,
											"end": 905,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 870,
											"end": 905,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 870,
											"end": 905,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 870,
											"end": 905,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 885,
											"end": 891,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 14,
											"end": 936,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 936,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 941,
											"end": 1369,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 941,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1072,
											"end": 1075,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1116,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1104,
											"end": 1117,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1135,
											"end": 1136,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1165,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1156,
											"end": 1157,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1153,
											"end": 1166,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1257,
											"end": 1261,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1237,
											"end": 1262,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1237,
											"end": 1262,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1231,
											"end": 1263,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1229,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1229,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1229,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1264,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1174,
											"end": 1186,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1145,
											"end": 1274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1292,
											"end": 1298,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1289,
											"end": 1290,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1286,
											"end": 1299,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1331,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1283,
											"end": 1331,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1327,
											"end": 1328,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1324,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1313,
											"end": 1316,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1309,
											"end": 1325,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1329,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1331,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1283,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1347,
											"end": 1363,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1363,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1363,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1363,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1347,
											"end": 1363,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 941,
											"end": 1369,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 941,
											"end": 1369,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1556,
											"end": 1740,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1556,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1608,
											"end": 1685,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1605,
											"end": 1606,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1686,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1705,
											"end": 1709,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1702,
											"end": 1703,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1729,
											"end": 1733,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1726,
											"end": 1727,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1719,
											"end": 1734,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"get_keccak256(string)": "8e4f8c6b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"get_keccak256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":\"validateFuncs\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol\":{\"keccak256\":\"0x55073c985c0ace969bfd71eedd56019c7349e65b5ece564d2a0518810e901c81\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b29b6d3e009cfcd406945988b1338f5512656f14a49fc8d8825024e81de023fe\",\"dweb:/ipfs/QmVDcL7SM8t2R5ZAAGNFJhAUHvJQEX2wRrKihVWHiNLma2\"]},\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol\":{\"keccak256\":\"0x55a8643a4e2500eea6f59f7e7f566793931fec76dcb865f101a6f7bd99b6f503\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bb96275c62c97e4259aa8c07867efff9a59d8968a2c668f84e597efba46b9252\",\"dweb:/ipfs/QmPEDXJmNEX1skQRrvGdWtzsguaiW1MkGH3b3xnfoBZ3vG\"]},\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":{\"keccak256\":\"0x3c4d55fff6547a670227273cabf6e5cd6279729590c2415e26148beed5975392\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://31dfe220e5e8f93ca63e6021e3fdf2115f3672410395d5ba5cceb197c48e921f\",\"dweb:/ipfs/QmcMwAuz3HM2QT4HWoHUxny2HqbtibVdu3gDwkeEs9Xyn7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1911,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
								"label": "structUsers_",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(structUser)1906_storage)"
							},
							{
								"astId": 1921,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
								"label": "structPhases_",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(structPhase)1916_storage)"
							},
							{
								"astId": 1939,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
								"label": "strucApplications_",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(structApplication)1934_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(Role)1890": {
								"encoding": "inplace",
								"label": "enum structures.Role",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(structApplication)1934_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structApplication)",
								"numberOfBytes": "32",
								"value": "t_struct(structApplication)1934_storage"
							},
							"t_mapping(t_address,t_struct(structPhase)1916_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structPhase)",
								"numberOfBytes": "32",
								"value": "t_struct(structPhase)1916_storage"
							},
							"t_mapping(t_address,t_struct(structUser)1906_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structUser)",
								"numberOfBytes": "32",
								"value": "t_struct(structUser)1906_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(structApplication)1934_storage": {
								"encoding": "inplace",
								"label": "struct structures.structApplication",
								"members": [
									{
										"astId": 1923,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 1925,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
										"label": "contactForCommunication",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 1927,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
										"label": "userAdr",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 1929,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
										"label": "status",
										"offset": 20,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 1931,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
										"label": "reviewed",
										"offset": 21,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 1933,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
										"label": "exist",
										"offset": 22,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(structPhase)1916_storage": {
								"encoding": "inplace",
								"label": "struct structures.structPhase",
								"members": [
									{
										"astId": 1913,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
										"label": "statusPhase",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 1915,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
										"label": "reviewed",
										"offset": 1,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(structUser)1906_storage": {
								"encoding": "inplace",
								"label": "struct structures.structUser",
								"members": [
									{
										"astId": 1893,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
										"label": "role",
										"offset": 0,
										"slot": "0",
										"type": "t_enum(Role)1890"
									},
									{
										"astId": 1895,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
										"label": "login",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 1897,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
										"label": "password",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									},
									{
										"astId": 1899,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
										"label": "balance_overall",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1901,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
										"label": "balance_seed",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1903,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
										"label": "balance_private",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1905,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol:validateFuncs",
										"label": "balance_public",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/IERC20.sol\":{\"keccak256\":\"0xaf036a21cac1b39999f4f57c20939eb30c1c818c3ad3ac99010fcbad0badb5ff\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7f0cbb48bb4360ed1412721ecfbb7c2fb5ccd113b76d993fca357f4c999b7dc2\",\"dweb:/ipfs/QmVsEVBc8wG37chWLLCM3AAdwJBppXqEqUBL3SWGuMqw1m\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":72:6543  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":72:6543  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fe72b363aedcfe2f6baeafbcd55774cb8b2360bcd43e5ba96c3e5487dabb71ca64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fe72b363aedcfe2f6baeafbcd55774cb8b2360bcd43e5ba96c3e5487dabb71ca64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID PUSH19 0xB363AEDCFE2F6BAEAFBCD55774CB8B2360BCD4 RETURNDATACOPY JUMPDEST 0xA9 PUSH13 0x3E5487DABB71CA64736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "72:6471:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;72:6471:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fe72b363aedcfe2f6baeafbcd55774cb8b2360bcd43e5ba96c3e5487dabb71ca64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID PUSH19 0xB363AEDCFE2F6BAEAFBCD55774CB8B2360BCD4 RETURNDATACOPY JUMPDEST 0xA9 PUSH13 0x3E5487DABB71CA64736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "72:6471:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 72,
									"end": 6543,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 72,
									"end": 6543,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fe72b363aedcfe2f6baeafbcd55774cb8b2360bcd43e5ba96c3e5487dabb71ca64736f6c63430008070033",
									".code": [
										{
											"begin": 72,
											"end": 6543,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 72,
											"end": 6543,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 72,
											"end": 6543,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 72,
											"end": 6543,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 72,
											"end": 6543,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 72,
											"end": 6543,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 72,
											"end": 6543,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 6543,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 72,
											"end": 6543,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol\":{\"keccak256\":\"0xf430ff20a1998bdd5fa93c6b9e623cce686a19b73e97f317012b06c01de28661\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7a5ff8e7dfa39317a4fb4bcf89c7adcd32fadf8e2614c9c2d313a84fa65449bd\",\"dweb:/ipfs/Qmf9dYztjw9AZdsMuxW4YBNzE8Z9u2Ke9WBFhzSnbffKy4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol": {
				"structures": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":72:1988  contract structures {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":72:1988  contract structures {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205aeb46b1a8a2ca13cb79fe18463d72b4affa36d21d27b3ee27dea75034fdb38d64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212205aeb46b1a8a2ca13cb79fe18463d72b4affa36d21d27b3ee27dea75034fdb38d64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS 0xEB CHAINID 0xB1 0xA8 LOG2 0xCA SGT 0xCB PUSH26 0xFE18463D72B4AFFA36D21D27B3EE27DEA75034FDB38D64736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "72:1916:8:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212205aeb46b1a8a2ca13cb79fe18463d72b4affa36d21d27b3ee27dea75034fdb38d64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS 0xEB CHAINID 0xB1 0xA8 LOG2 0xCA SGT 0xCB PUSH26 0xFE18463D72B4AFFA36D21D27B3EE27DEA75034FDB38D64736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "72:1916:8:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 72,
									"end": 1988,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 72,
									"end": 1988,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205aeb46b1a8a2ca13cb79fe18463d72b4affa36d21d27b3ee27dea75034fdb38d64736f6c63430008070033",
									".code": [
										{
											"begin": 72,
											"end": 1988,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 72,
											"end": 1988,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 72,
											"end": 1988,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 72,
											"end": 1988,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 72,
											"end": 1988,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 72,
											"end": 1988,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":\"structures\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol\":{\"keccak256\":\"0x3c4d55fff6547a670227273cabf6e5cd6279729590c2415e26148beed5975392\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://31dfe220e5e8f93ca63e6021e3fdf2115f3672410395d5ba5cceb197c48e921f\",\"dweb:/ipfs/QmcMwAuz3HM2QT4HWoHUxny2HqbtibVdu3gDwkeEs9Xyn7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1911,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "structUsers_",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(structUser)1906_storage)"
							},
							{
								"astId": 1921,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "structPhases_",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(structPhase)1916_storage)"
							},
							{
								"astId": 1939,
								"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
								"label": "strucApplications_",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(structApplication)1934_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(Role)1890": {
								"encoding": "inplace",
								"label": "enum structures.Role",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(structApplication)1934_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structApplication)",
								"numberOfBytes": "32",
								"value": "t_struct(structApplication)1934_storage"
							},
							"t_mapping(t_address,t_struct(structPhase)1916_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structPhase)",
								"numberOfBytes": "32",
								"value": "t_struct(structPhase)1916_storage"
							},
							"t_mapping(t_address,t_struct(structUser)1906_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct structures.structUser)",
								"numberOfBytes": "32",
								"value": "t_struct(structUser)1906_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(structApplication)1934_storage": {
								"encoding": "inplace",
								"label": "struct structures.structApplication",
								"members": [
									{
										"astId": 1923,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 1925,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "contactForCommunication",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 1927,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "userAdr",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 1929,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "status",
										"offset": 20,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 1931,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "reviewed",
										"offset": 21,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 1933,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "exist",
										"offset": 22,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(structPhase)1916_storage": {
								"encoding": "inplace",
								"label": "struct structures.structPhase",
								"members": [
									{
										"astId": 1913,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "statusPhase",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 1915,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "reviewed",
										"offset": 1,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(structUser)1906_storage": {
								"encoding": "inplace",
								"label": "struct structures.structUser",
								"members": [
									{
										"astId": 1893,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "role",
										"offset": 0,
										"slot": "0",
										"type": "t_enum(Role)1890"
									},
									{
										"astId": 1895,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "login",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 1897,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "password",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									},
									{
										"astId": 1899,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "balance_overall",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1901,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "balance_seed",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1903,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "balance_private",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1905,
										"contract": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol:structures",
										"label": "balance_public",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol:14:33:\n   |\n14 |     function acceptApplication (bool _changeStatus) public {\n   |                                 ^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 773,
					"file": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol",
					"start": 755
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to view\n  --> Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol:14:5:\n   |\n14 |     function acceptApplication (bool _changeStatus) public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 899,
					"file": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol",
					"start": 727
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol": {
				"ast": {
					"absolutePath": "Documents/GitHub/contract-token-cryptoMonster/backend/components/CryptoMonster.sol",
					"exportedSymbols": {
						"CryptoMonster": [
							1222
						],
						"IERC20": [
							1555
						],
						"Main": [
							1357
						],
						"PhasePrivate": [
							1281
						],
						"PhaseSeed": [
							1351
						],
						"SafeMath": [
							1882
						],
						"getFuncs": [
							1376
						],
						"structures": [
							1940
						],
						"validateFuncs": [
							1486
						]
					},
					"id": 1223,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"absolutePath": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol",
							"file": "../shared/lib/SafeMath.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1883,
							"src": "92:36:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/IERC20.sol",
							"file": "../shared/lib/IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1556,
							"src": "211:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Documents/GitHub/contract-token-cryptoMonster/backend/components/main.sol",
							"file": "./main.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1358,
							"src": "296:20:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol",
							"file": "./PhaseSeed.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1352,
							"src": "318:25:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol",
							"file": "./PhasePrivate.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1223,
							"sourceUnit": 1282,
							"src": "345:28:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1555,
										"src": "403:6:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "403:6:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "Main",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1357,
										"src": "411:4:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "411:4:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "PhaseSeed",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1351,
										"src": "417:9:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "417:9:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "PhasePrivate",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1281,
										"src": "428:12:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "428:12:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1222,
							"linearizedBaseContracts": [
								1222,
								1281,
								1351,
								1357,
								1486,
								1376,
								1940,
								1555
							],
							"name": "CryptoMonster",
							"nameLocation": "386:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 17,
									"libraryName": {
										"id": 15,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1882,
										"src": "454:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "448:27:0",
									"typeName": {
										"id": 16,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "467:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "06fdde03",
									"id": 20,
									"mutability": "constant",
									"name": "name",
									"nameLocation": "636:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1222,
									"src": "613:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 18,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "613:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "43727970746f4d6f6e73746572",
										"id": 19,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "643:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_89ac219436a16babcfc919d8ca1835134e6c91424e36f4e24261f1714a498a1b",
											"typeString": "literal_string \"CryptoMonster\""
										},
										"value": "CryptoMonster"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "95d89b41",
									"id": 23,
									"mutability": "constant",
									"name": "symbol",
									"nameLocation": "721:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1222,
									"src": "698:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 21,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "698:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "434d4f4e",
										"id": 22,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "730:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_e86e9d249e78803464a390917ee9c0c208ae91b8492ba4f486bfcebff4d0b2a3",
											"typeString": "literal_string \"CMON\""
										},
										"value": "CMON"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "313ce567",
									"id": 26,
									"mutability": "constant",
									"name": "decimals",
									"nameLocation": "799:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1222,
									"src": "777:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 24,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "777:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3132",
										"id": 25,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "810:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_12_by_1",
											"typeString": "int_const 12"
										},
										"value": "12"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 32,
									"mutability": "mutable",
									"name": "allowed",
									"nameLocation": "975:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1222,
									"src": "926:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 31,
										"keyType": {
											"id": 27,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "934:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "926:48:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 30,
											"keyType": {
												"id": 28,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "954:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "945:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 29,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "965:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 34,
									"mutability": "mutable",
									"name": "totalSupply_",
									"nameLocation": "1054:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1222,
									"src": "1046:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 33,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1046:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "0761c8b9",
									"id": 37,
									"mutability": "mutable",
									"name": "tokenPrice_",
									"nameLocation": "1183:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1222,
									"src": "1168:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 35,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1168:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030303030303030",
										"id": 36,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1197:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000_by_1",
											"typeString": "int_const 1000000000"
										},
										"value": "1000000000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 40,
									"mutability": "constant",
									"name": "ownerAdr",
									"nameLocation": "1450:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1222,
									"src": "1433:70:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 38,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1433:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307835423338446136613730316335363835343564436663423033466342383735663536626564644334",
										"id": 39,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1461:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x5B38Da6a701c568545dCfcB03FcB875f56beddC4"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 43,
									"mutability": "constant",
									"name": "privateProviderAdr",
									"nameLocation": "1557:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1222,
									"src": "1540:80:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 41,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1540:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307841623834383346363464394336643145634639623834394165363737644433333135383335636232",
										"id": 42,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1578:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 46,
									"mutability": "constant",
									"name": "publicProviderAdr",
									"nameLocation": "1674:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 1222,
									"src": "1657:79:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 44,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1657:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307841623834383346363464394336643145634639623834394165363737644433333135383335636232",
										"id": 45,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1694:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "1802:1572:0",
										"statements": [
											{
												"expression": {
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 51,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "1813:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 52,
														"name": "total",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "1828:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1813:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "1813:20:0"
											},
											{
												"expression": {
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 55,
															"name": "structUsers_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1911,
															"src": "1896:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																"typeString": "mapping(address => struct structures.structUser storage ref)"
															}
														},
														"id": 57,
														"indexExpression": {
															"id": 56,
															"name": "ownerAdr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "1909:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1896:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_structUser_$1906_storage",
															"typeString": "struct structures.structUser storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 59,
																	"name": "Role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1890,
																	"src": "1932:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Role_$1890_$",
																		"typeString": "type(enum structures.Role)"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "SYSTEM_OWNER",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1885,
																"src": "1932:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$1890",
																	"typeString": "enum structures.Role"
																}
															},
															{
																"hexValue": "6f776e6572",
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1951:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_02016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c0",
																	"typeString": "literal_string \"owner\""
																},
																"value": "owner"
															},
															{
																"arguments": [
																	{
																		"hexValue": "33343132",
																		"id": 63,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1974:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_66ad679a6ab6b7624d6cbe7f5b8e4651463ae1f5bcef33b44f1e540209f7341b",
																			"typeString": "literal_string \"3412\""
																		},
																		"value": "3412"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_66ad679a6ab6b7624d6cbe7f5b8e4651463ae1f5bcef33b44f1e540209f7341b",
																			"typeString": "literal_string \"3412\""
																		}
																	],
																	"id": 62,
																	"name": "get_keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1375,
																	"src": "1960:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (string memory) pure returns (bytes32)"
																	}
																},
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1960:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 65,
																"name": "totalSupply_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "1983:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1997:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2000:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2003:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Role_$1890",
																	"typeString": "enum structures.Role"
																},
																{
																	"typeIdentifier": "t_stringliteral_02016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c0",
																	"typeString": "literal_string \"owner\""
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 58,
															"name": "structUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1906,
															"src": "1921:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_structUser_$1906_storage_ptr_$",
																"typeString": "type(struct structures.structUser storage pointer)"
															}
														},
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1921:84:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_structUser_$1906_memory_ptr",
															"typeString": "struct structures.structUser memory"
														}
													},
													"src": "1896:109:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_structUser_$1906_storage",
														"typeString": "struct structures.structUser storage ref"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "1896:109:0"
											},
											{
												"expression": {
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 72,
															"name": "structUsers_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1911,
															"src": "2049:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																"typeString": "mapping(address => struct structures.structUser storage ref)"
															}
														},
														"id": 74,
														"indexExpression": {
															"id": 73,
															"name": "privateProviderAdr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2062:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2049:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_structUser_$1906_storage",
															"typeString": "struct structures.structUser storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 76,
																	"name": "Role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1890,
																	"src": "2095:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Role_$1890_$",
																		"typeString": "type(enum structures.Role)"
																	}
																},
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "SYSTEM_PRIVATE",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1887,
																"src": "2095:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$1890",
																	"typeString": "enum structures.Role"
																}
															},
															{
																"hexValue": "507269766174652070726f7669646572",
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2116:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_ef677c2d05e598b747f17ac65bea55a8bbf259253d5d9b83bd56eb64ed4c9730",
																	"typeString": "literal_string \"Private provider\""
																},
																"value": "Private provider"
															},
															{
																"arguments": [
																	{
																		"hexValue": "31343233",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2150:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_560f53f9e6643f63dace8b2695c9680c3b0d96473ff0914d6a3517970d490ef6",
																			"typeString": "literal_string \"1423\""
																		},
																		"value": "1423"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_560f53f9e6643f63dace8b2695c9680c3b0d96473ff0914d6a3517970d490ef6",
																			"typeString": "literal_string \"1423\""
																		}
																	],
																	"id": 79,
																	"name": "get_keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1375,
																	"src": "2136:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (string memory) pure returns (bytes32)"
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2136:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"hexValue": "30",
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2159:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2162:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 84,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2165:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2168:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Role_$1890",
																	"typeString": "enum structures.Role"
																},
																{
																	"typeIdentifier": "t_stringliteral_ef677c2d05e598b747f17ac65bea55a8bbf259253d5d9b83bd56eb64ed4c9730",
																	"typeString": "literal_string \"Private provider\""
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 75,
															"name": "structUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1906,
															"src": "2084:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_structUser_$1906_storage_ptr_$",
																"typeString": "type(struct structures.structUser storage pointer)"
															}
														},
														"id": 86,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2084:86:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_structUser_$1906_memory_ptr",
															"typeString": "struct structures.structUser memory"
														}
													},
													"src": "2049:121:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_structUser_$1906_storage",
														"typeString": "struct structures.structUser storage ref"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "2049:121:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 89,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "2211:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 92,
															"indexExpression": {
																"id": 90,
																"name": "ownerAdr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "2219:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2211:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 93,
														"indexExpression": {
															"id": 91,
															"name": "privateProviderAdr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2229:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2211:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "2251:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2211:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2211:52:0"
											},
											{
												"expression": {
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 97,
																"name": "structPhases_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1921,
																"src": "2402:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structPhase_$1916_storage_$",
																	"typeString": "mapping(address => struct structures.structPhase storage ref)"
																}
															},
															"id": 99,
															"indexExpression": {
																"id": 98,
																"name": "privateProviderAdr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2416:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2402:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_structPhase_$1916_storage",
																"typeString": "struct structures.structPhase storage ref"
															}
														},
														"id": 100,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "statusPhase",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1913,
														"src": "2402:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2450:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2402:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "2402:53:0"
											},
											{
												"expression": {
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 104,
															"name": "structUsers_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1911,
															"src": "2582:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																"typeString": "mapping(address => struct structures.structUser storage ref)"
															}
														},
														"id": 106,
														"indexExpression": {
															"id": 105,
															"name": "publicProviderAdr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "2595:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2582:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_structUser_$1906_storage",
															"typeString": "struct structures.structUser storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 108,
																	"name": "Role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1890,
																	"src": "2627:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Role_$1890_$",
																		"typeString": "type(enum structures.Role)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "SYSTEM_PUBLIC",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1886,
																"src": "2627:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$1890",
																	"typeString": "enum structures.Role"
																}
															},
															{
																"hexValue": "5075626c69632070726f7669646572",
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_53031dc3550f14549a1eee78136c783bc231711c1679c1861d7ee04802cfdfb4",
																	"typeString": "literal_string \"Public provider\""
																},
																"value": "Public provider"
															},
															{
																"arguments": [
																	{
																		"hexValue": "32333134",
																		"id": 112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2680:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_a409469d725e39628d34ea5526ee949dc3293805e6f24e1ea217e96c641b8155",
																			"typeString": "literal_string \"2314\""
																		},
																		"value": "2314"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_a409469d725e39628d34ea5526ee949dc3293805e6f24e1ea217e96c641b8155",
																			"typeString": "literal_string \"2314\""
																		}
																	],
																	"id": 111,
																	"name": "get_keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1375,
																	"src": "2666:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (string memory) pure returns (bytes32)"
																	}
																},
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2666:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"hexValue": "30",
																"id": 114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2689:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2692:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2695:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2698:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Role_$1890",
																	"typeString": "enum structures.Role"
																},
																{
																	"typeIdentifier": "t_stringliteral_53031dc3550f14549a1eee78136c783bc231711c1679c1861d7ee04802cfdfb4",
																	"typeString": "literal_string \"Public provider\""
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 107,
															"name": "structUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1906,
															"src": "2616:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_structUser_$1906_storage_ptr_$",
																"typeString": "type(struct structures.structUser storage pointer)"
															}
														},
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2616:84:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_structUser_$1906_memory_ptr",
															"typeString": "struct structures.structUser memory"
														}
													},
													"src": "2582:118:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_structUser_$1906_storage",
														"typeString": "struct structures.structUser storage ref"
													}
												},
												"id": 120,
												"nodeType": "ExpressionStatement",
												"src": "2582:118:0"
											},
											{
												"expression": {
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 121,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "2743:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 124,
															"indexExpression": {
																"id": 122,
																"name": "ownerAdr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "2751:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2743:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 125,
														"indexExpression": {
															"id": 123,
															"name": "publicProviderAdr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "2761:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2743:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 126,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "2782:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2743:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "2743:51:0"
											},
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 129,
																"name": "structPhases_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1921,
																"src": "2933:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structPhase_$1916_storage_$",
																	"typeString": "mapping(address => struct structures.structPhase storage ref)"
																}
															},
															"id": 131,
															"indexExpression": {
																"id": 130,
																"name": "publicProviderAdr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "2947:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2933:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_structPhase_$1916_storage",
																"typeString": "struct structures.structPhase storage ref"
															}
														},
														"id": 132,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "statusPhase",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1913,
														"src": "2933:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2980:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2933:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "2933:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 137,
															"name": "investorFirstAdr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "3207:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "363030303030",
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3225:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_600000_by_1",
																"typeString": "int_const 600000"
															},
															"value": "600000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_600000_by_1",
																"typeString": "int_const 600000"
															}
														],
														"id": 136,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "3198:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3198:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "3198:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "investorSecondAdr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "3266:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "383030303030",
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3285:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_800000_by_1",
																"typeString": "int_const 800000"
															},
															"value": "800000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_800000_by_1",
																"typeString": "int_const 800000"
															}
														],
														"id": 141,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "3257:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3257:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "3257:35:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 147,
															"name": "bestFriendAdr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "3325:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "343030303030",
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3340:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_400000_by_1",
																"typeString": "int_const 400000"
															},
															"value": "400000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_400000_by_1",
																"typeString": "int_const 400000"
															}
														],
														"id": 146,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "3316:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3316:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 150,
												"nodeType": "ExpressionStatement",
												"src": "3316:31:0"
											}
										]
									},
									"id": 152,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "total",
												"nameLocation": "1795:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "1787:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1787:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1786:15:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1802:0:0"
									},
									"scope": 1222,
									"src": "1775:1599:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "3494:813:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 158,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3657:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "3657:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 160,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 154,
																	"src": "3670:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 161,
																	"name": "tokenPrice_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "3680:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3670:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3657:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e65656420746f2073656e6420657861637420616d6f756e74206f6620776569",
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3693:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4051d84e6e5b7b6dd4f339faf4431a8793809c7ef094e92a31341b0d1c457a38",
																"typeString": "literal_string \"Need to send exact amount of wei\""
															},
															"value": "Need to send exact amount of wei"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4051d84e6e5b7b6dd4f339faf4431a8793809c7ef094e92a31341b0d1c457a38",
																"typeString": "literal_string \"Need to send exact amount of wei\""
															}
														],
														"id": 157,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3649:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3649:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 166,
												"nodeType": "ExpressionStatement",
												"src": "3649:79:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 168,
																			"name": "structPhases_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1921,
																			"src": "3747:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structPhase_$1916_storage_$",
																				"typeString": "mapping(address => struct structures.structPhase storage ref)"
																			}
																		},
																		"id": 170,
																		"indexExpression": {
																			"id": 169,
																			"name": "privateProviderAdr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 43,
																			"src": "3761:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3747:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_structPhase_$1916_storage",
																			"typeString": "struct structures.structPhase storage ref"
																		}
																	},
																	"id": 171,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "statusPhase",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1913,
																	"src": "3747:45:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "66616c7365",
																	"id": 172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3796:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3747:54:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 174,
																			"name": "structPhases_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1921,
																			"src": "3805:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structPhase_$1916_storage_$",
																				"typeString": "mapping(address => struct structures.structPhase storage ref)"
																			}
																		},
																		"id": 176,
																		"indexExpression": {
																			"id": 175,
																			"name": "publicProviderAdr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 46,
																			"src": "3819:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3805:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_structPhase_$1916_storage",
																			"typeString": "struct structures.structPhase storage ref"
																		}
																	},
																	"id": 177,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "statusPhase",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1913,
																	"src": "3805:44:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "66616c7365",
																	"id": 178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3853:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3805:53:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3747:111:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "447572696e672074686520736565642070686173652c20746865207472616e73666572206f6620746f6b656e732069732070726f68696269746564",
															"id": 181,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3860:61:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_85e79f365c05e97e0549fd6e028c30e2005e44c36c25fa3f303e21d2b1054224",
																"typeString": "literal_string \"During the seed phase, the transfer of tokens is prohibited\""
															},
															"value": "During the seed phase, the transfer of tokens is prohibited"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_85e79f365c05e97e0549fd6e028c30e2005e44c36c25fa3f303e21d2b1054224",
																"typeString": "literal_string \"During the seed phase, the transfer of tokens is prohibited\""
															}
														],
														"id": 167,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3739:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3739:183:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "3739:183:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 184,
																"name": "structPhases_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1921,
																"src": "3937:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structPhase_$1916_storage_$",
																	"typeString": "mapping(address => struct structures.structPhase storage ref)"
																}
															},
															"id": 186,
															"indexExpression": {
																"id": 185,
																"name": "privateProviderAdr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "3951:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3937:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_structPhase_$1916_storage",
																"typeString": "struct structures.structPhase storage ref"
															}
														},
														"id": 187,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "statusPhase",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1913,
														"src": "3937:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 188,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3986:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3937:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 206,
																	"name": "structPhases_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1921,
																	"src": "4125:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structPhase_$1916_storage_$",
																		"typeString": "mapping(address => struct structures.structPhase storage ref)"
																	}
																},
																"id": 208,
																"indexExpression": {
																	"id": 207,
																	"name": "publicProviderAdr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "4139:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4125:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_structPhase_$1916_storage",
																	"typeString": "struct structures.structPhase storage ref"
																}
															},
															"id": 209,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "statusPhase",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1913,
															"src": "4125:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "74727565",
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4173:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"src": "4125:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 228,
													"nodeType": "IfStatement",
													"src": "4121:179:0",
													"trueBody": {
														"id": 227,
														"nodeType": "Block",
														"src": "4179:121:0",
														"statements": [
															{
																"expression": {
																	"id": 225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 212,
																				"name": "structUsers_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1911,
																				"src": "4194:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																					"typeString": "mapping(address => struct structures.structUser storage ref)"
																				}
																			},
																			"id": 215,
																			"indexExpression": {
																				"expression": {
																					"id": 213,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "4207:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 214,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "4207:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4194:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_structUser_$1906_storage",
																				"typeString": "struct structures.structUser storage ref"
																			}
																		},
																		"id": 216,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "balance_public",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1905,
																		"src": "4194:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 223,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 154,
																				"src": "4280:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"expression": {
																					"baseExpression": {
																						"id": 217,
																						"name": "structUsers_",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1911,
																						"src": "4236:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																							"typeString": "mapping(address => struct structures.structUser storage ref)"
																						}
																					},
																					"id": 220,
																					"indexExpression": {
																						"expression": {
																							"id": 218,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "4249:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 219,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "4249:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4236:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_structUser_$1906_storage",
																						"typeString": "struct structures.structUser storage ref"
																					}
																				},
																				"id": 221,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "balance_public",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1905,
																				"src": "4236:39:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "add",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1740,
																			"src": "4236:43:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4236:52:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4194:94:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 226,
																"nodeType": "ExpressionStatement",
																"src": "4194:94:0"
															}
														]
													}
												},
												"id": 229,
												"nodeType": "IfStatement",
												"src": "3933:367:0",
												"trueBody": {
													"id": 205,
													"nodeType": "Block",
													"src": "3992:123:0",
													"statements": [
														{
															"expression": {
																"id": 203,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 190,
																			"name": "structUsers_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1911,
																			"src": "4007:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																				"typeString": "mapping(address => struct structures.structUser storage ref)"
																			}
																		},
																		"id": 193,
																		"indexExpression": {
																			"expression": {
																				"id": 191,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4020:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4020:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4007:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_structUser_$1906_storage",
																			"typeString": "struct structures.structUser storage ref"
																		}
																	},
																	"id": 194,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "balance_private",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1903,
																	"src": "4007:40:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 201,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 154,
																			"src": "4095:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"baseExpression": {
																					"id": 195,
																					"name": "structUsers_",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1911,
																					"src": "4050:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																						"typeString": "mapping(address => struct structures.structUser storage ref)"
																					}
																				},
																				"id": 198,
																				"indexExpression": {
																					"expression": {
																						"id": 196,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "4063:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 197,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "4063:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4050:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_structUser_$1906_storage",
																					"typeString": "struct structures.structUser storage ref"
																				}
																			},
																			"id": 199,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "balance_private",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1903,
																			"src": "4050:40:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1740,
																		"src": "4050:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4050:53:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4007:96:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 204,
															"nodeType": "ExpressionStatement",
															"src": "4007:96:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "d96a094a",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buy",
									"nameLocation": "3456:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3468:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "3460:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3460:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3459:17:0"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3494:0:0"
									},
									"scope": 1222,
									"src": "3447:860:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1493
									],
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "4571:38:0",
										"statements": [
											{
												"expression": {
													"id": 237,
													"name": "totalSupply_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "4589:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 236,
												"id": 238,
												"nodeType": "Return",
												"src": "4582:19:0"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4518:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 233,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4539:8:0"
									},
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4529:2:0"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "4562:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4561:9:0"
									},
									"scope": 1222,
									"src": "4509:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1500
									],
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "4898:674:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 248,
																	"name": "structPhases_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1921,
																	"src": "4912:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structPhase_$1916_storage_$",
																		"typeString": "mapping(address => struct structures.structPhase storage ref)"
																	}
																},
																"id": 250,
																"indexExpression": {
																	"id": 249,
																	"name": "privateProviderAdr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "4926:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4912:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_structPhase_$1916_storage",
																	"typeString": "struct structures.structPhase storage ref"
																}
															},
															"id": 251,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "statusPhase",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1913,
															"src": "4912:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "66616c7365",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4961:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														"src": "4912:54:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 254,
																	"name": "structPhases_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1921,
																	"src": "4970:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structPhase_$1916_storage_$",
																		"typeString": "mapping(address => struct structures.structPhase storage ref)"
																	}
																},
																"id": 256,
																"indexExpression": {
																	"id": 255,
																	"name": "publicProviderAdr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "4984:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4970:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_structPhase_$1916_storage",
																	"typeString": "struct structures.structPhase storage ref"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "statusPhase",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1913,
															"src": "4970:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "66616c7365",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5018:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														"src": "4970:53:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4912:111:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 267,
																	"name": "structPhases_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1921,
																	"src": "5130:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structPhase_$1916_storage_$",
																		"typeString": "mapping(address => struct structures.structPhase storage ref)"
																	}
																},
																"id": 269,
																"indexExpression": {
																	"id": 268,
																	"name": "privateProviderAdr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "5144:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5130:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_structPhase_$1916_storage",
																	"typeString": "struct structures.structPhase storage ref"
																}
															},
															"id": 270,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "statusPhase",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1913,
															"src": "5130:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "74727565",
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5179:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"src": "5130:53:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 279,
																		"name": "structPhases_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1921,
																		"src": "5346:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structPhase_$1916_storage_$",
																			"typeString": "mapping(address => struct structures.structPhase storage ref)"
																		}
																	},
																	"id": 281,
																	"indexExpression": {
																		"id": 280,
																		"name": "publicProviderAdr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 46,
																		"src": "5360:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5346:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_structPhase_$1916_storage",
																		"typeString": "struct structures.structPhase storage ref"
																	}
																},
																"id": 282,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "statusPhase",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1913,
																"src": "5346:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5394:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "5346:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"expression": {
																"hexValue": "30",
																"id": 291,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5563:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 247,
															"id": 292,
															"nodeType": "Return",
															"src": "5556:8:0"
														},
														"id": 293,
														"nodeType": "IfStatement",
														"src": "5342:222:0",
														"trueBody": {
															"id": 290,
															"nodeType": "Block",
															"src": "5400:150:0",
															"statements": [
																{
																	"expression": {
																		"expression": {
																			"baseExpression": {
																				"id": 285,
																				"name": "structUsers_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1911,
																				"src": "5498:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																					"typeString": "mapping(address => struct structures.structUser storage ref)"
																				}
																			},
																			"id": 287,
																			"indexExpression": {
																				"id": 286,
																				"name": "_tokenOwner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 242,
																				"src": "5511:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5498:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_structUser_$1906_storage",
																				"typeString": "struct structures.structUser storage ref"
																			}
																		},
																		"id": 288,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balance_public",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1905,
																		"src": "5498:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 247,
																	"id": 289,
																	"nodeType": "Return",
																	"src": "5491:47:0"
																}
															]
														}
													},
													"id": 294,
													"nodeType": "IfStatement",
													"src": "5126:438:0",
													"trueBody": {
														"id": 278,
														"nodeType": "Block",
														"src": "5185:151:0",
														"statements": [
															{
																"expression": {
																	"expression": {
																		"baseExpression": {
																			"id": 273,
																			"name": "structUsers_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1911,
																			"src": "5283:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																				"typeString": "mapping(address => struct structures.structUser storage ref)"
																			}
																		},
																		"id": 275,
																		"indexExpression": {
																			"id": 274,
																			"name": "_tokenOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 242,
																			"src": "5296:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5283:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_structUser_$1906_storage",
																			"typeString": "struct structures.structUser storage ref"
																		}
																	},
																	"id": 276,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balance_private",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1903,
																	"src": "5283:41:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 247,
																"id": 277,
																"nodeType": "Return",
																"src": "5276:48:0"
															}
														]
													}
												},
												"id": 295,
												"nodeType": "IfStatement",
												"src": "4909:655:0",
												"trueBody": {
													"id": 266,
													"nodeType": "Block",
													"src": "5025:95:0",
													"statements": [
														{
															"expression": {
																"expression": {
																	"baseExpression": {
																		"id": 261,
																		"name": "structUsers_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1911,
																		"src": "5070:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																			"typeString": "mapping(address => struct structures.structUser storage ref)"
																		}
																	},
																	"id": 263,
																	"indexExpression": {
																		"id": 262,
																		"name": "_tokenOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 242,
																		"src": "5083:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5070:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_structUser_$1906_storage",
																		"typeString": "struct structures.structUser storage ref"
																	}
																},
																"id": 264,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance_seed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1901,
																"src": "5070:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 247,
															"id": 265,
															"nodeType": "Return",
															"src": "5063:45:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4828:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 244,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4866:8:0"
									},
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "_tokenOwner",
												"nameLocation": "4846:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "4838:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4838:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4837:21:0"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "4889:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4889:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4888:9:0"
									},
									"scope": 1222,
									"src": "4819:753:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1518
									],
									"body": {
										"id": 685,
										"nodeType": "Block",
										"src": "6083:7178:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"hexValue": "73656564",
																"id": 308,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6112:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_66a80b61b29ec044d14c4c8c613e762ba1fb8eeb0c454d1ee00ed6dedaa5b5c5",
																	"typeString": "literal_string \"seed\""
																},
																"value": "seed"
															},
															{
																"id": 309,
																"name": "privateProviderAdr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "6120:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 310,
																"name": "publicProviderAdr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "6140:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_66a80b61b29ec044d14c4c8c613e762ba1fb8eeb0c454d1ee00ed6dedaa5b5c5",
																	"typeString": "literal_string \"seed\""
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 307,
															"name": "validatePhase",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "6098:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (string memory,address,address) view returns (bool)"
															}
														},
														"id": 311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6098:60:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 312,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6162:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6098:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"hexValue": "70726976617465",
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9046:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ba0b8d7971d83a895b04f69bb35eb4161849cc1e4886c0eec88858e4667ebaae",
																		"typeString": "literal_string \"private\""
																	},
																	"value": "private"
																},
																{
																	"id": 464,
																	"name": "privateProviderAdr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "9057:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 465,
																	"name": "publicProviderAdr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "9077:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_ba0b8d7971d83a895b04f69bb35eb4161849cc1e4886c0eec88858e4667ebaae",
																		"typeString": "literal_string \"private\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 462,
																"name": "validatePhase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1485,
																"src": "9032:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (string memory,address,address) view returns (bool)"
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9032:63:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "74727565",
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9099:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"src": "9032:71:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"hexValue": "7075626c6963",
																		"id": 572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11154:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3c0c3a2537aaf75b853bbf2b595e872d3db0359b7e792ebd8907fb017c3b71a2",
																			"typeString": "literal_string \"public\""
																		},
																		"value": "public"
																	},
																	{
																		"id": 573,
																		"name": "privateProviderAdr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 43,
																		"src": "11164:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 574,
																		"name": "publicProviderAdr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 46,
																		"src": "11184:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_3c0c3a2537aaf75b853bbf2b595e872d3db0359b7e792ebd8907fb017c3b71a2",
																			"typeString": "literal_string \"public\""
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 571,
																	"name": "validatePhase",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1485,
																	"src": "11140:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (string memory,address,address) view returns (bool)"
																	}
																},
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11140:62:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11206:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "11140:70:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"expression": {
																"hexValue": "66616c7365",
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13248:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 306,
															"id": 681,
															"nodeType": "Return",
															"src": "13241:12:0"
														},
														"id": 682,
														"nodeType": "IfStatement",
														"src": "11136:2117:0",
														"trueBody": {
															"id": 679,
															"nodeType": "Block",
															"src": "11212:2023:0",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 578,
																				"name": "validateOwner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1403,
																				"src": "11276:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																					"typeString": "function () view returns (bool)"
																				}
																			},
																			"id": 579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11276:15:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "74727565",
																			"id": 580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11295:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"src": "11276:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 677,
																		"nodeType": "Block",
																		"src": "12252:972:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 637,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 631,
																								"name": "_numTokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 301,
																								"src": "12423:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<=",
																							"rightExpression": {
																								"expression": {
																									"baseExpression": {
																										"id": 632,
																										"name": "structUsers_",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1911,
																										"src": "12437:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																											"typeString": "mapping(address => struct structures.structUser storage ref)"
																										}
																									},
																									"id": 635,
																									"indexExpression": {
																										"expression": {
																											"id": 633,
																											"name": "msg",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967281,
																											"src": "12450:3:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_magic_message",
																												"typeString": "msg"
																											}
																										},
																										"id": 634,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "sender",
																										"nodeType": "MemberAccess",
																										"src": "12450:10:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "12437:24:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_structUser_$1906_storage",
																										"typeString": "struct structures.structUser storage ref"
																									}
																								},
																								"id": 636,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "balance_public",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1905,
																								"src": "12437:39:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "12423:53:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						],
																						"id": 630,
																						"name": "require",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967278,
																							4294967278
																						],
																						"referencedDeclaration": 4294967278,
																						"src": "12415:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																							"typeString": "function (bool) pure"
																						}
																					},
																					"id": 638,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "12415:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 639,
																				"nodeType": "ExpressionStatement",
																				"src": "12415:62:0"
																			},
																			{
																				"expression": {
																					"id": 653,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"baseExpression": {
																								"id": 640,
																								"name": "structUsers_",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1911,
																								"src": "12622:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																									"typeString": "mapping(address => struct structures.structUser storage ref)"
																								}
																							},
																							"id": 643,
																							"indexExpression": {
																								"expression": {
																									"id": 641,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "12635:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 642,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "12635:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "12622:24:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_structUser_$1906_storage",
																								"typeString": "struct structures.structUser storage ref"
																							}
																						},
																						"id": 644,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberName": "balance_public",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1905,
																						"src": "12622:39:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 651,
																								"name": "_numTokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 301,
																								"src": "12708:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"expression": {
																									"baseExpression": {
																										"id": 645,
																										"name": "structUsers_",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1911,
																										"src": "12664:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																											"typeString": "mapping(address => struct structures.structUser storage ref)"
																										}
																									},
																									"id": 648,
																									"indexExpression": {
																										"expression": {
																											"id": 646,
																											"name": "msg",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967281,
																											"src": "12677:3:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_magic_message",
																												"typeString": "msg"
																											}
																										},
																										"id": 647,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "sender",
																										"nodeType": "MemberAccess",
																										"src": "12677:10:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "12664:24:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_structUser_$1906_storage",
																										"typeString": "struct structures.structUser storage ref"
																									}
																								},
																								"id": 649,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "balance_public",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1905,
																								"src": "12664:39:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 650,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sub",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1761,
																							"src": "12664:43:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 652,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "12664:55:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12622:97:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 654,
																				"nodeType": "ExpressionStatement",
																				"src": "12622:97:0"
																			},
																			{
																				"expression": {
																					"id": 666,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"baseExpression": {
																								"id": 655,
																								"name": "structUsers_",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1911,
																								"src": "12811:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																									"typeString": "mapping(address => struct structures.structUser storage ref)"
																								}
																							},
																							"id": 657,
																							"indexExpression": {
																								"id": 656,
																								"name": "_receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 299,
																								"src": "12824:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "12811:23:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_structUser_$1906_storage",
																								"typeString": "struct structures.structUser storage ref"
																							}
																						},
																						"id": 658,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberName": "balance_public",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1905,
																						"src": "12811:38:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 664,
																								"name": "_numTokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 301,
																								"src": "12895:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"expression": {
																									"baseExpression": {
																										"id": 659,
																										"name": "structUsers_",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1911,
																										"src": "12852:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																											"typeString": "mapping(address => struct structures.structUser storage ref)"
																										}
																									},
																									"id": 661,
																									"indexExpression": {
																										"id": 660,
																										"name": "_receiver",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 299,
																										"src": "12865:9:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "12852:23:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_structUser_$1906_storage",
																										"typeString": "struct structures.structUser storage ref"
																									}
																								},
																								"id": 662,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "balance_public",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1905,
																								"src": "12852:38:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 663,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1740,
																							"src": "12852:42:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 665,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "12852:54:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12811:95:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 667,
																				"nodeType": "ExpressionStatement",
																				"src": "12811:95:0"
																			},
																			{
																				"eventCall": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 669,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "13010:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 670,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "13010:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 671,
																							"name": "_receiver",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 299,
																							"src": "13022:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 672,
																							"name": "_numTokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 301,
																							"src": "13033:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 668,
																						"name": "Transfer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1546,
																						"src": "13001:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																							"typeString": "function (address,address,uint256)"
																						}
																					},
																					"id": 673,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "13001:43:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 674,
																				"nodeType": "EmitStatement",
																				"src": "12996:48:0"
																			},
																			{
																				"expression": {
																					"hexValue": "74727565",
																					"id": 675,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "13204:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				},
																				"functionReturnParameters": 306,
																				"id": 676,
																				"nodeType": "Return",
																				"src": "13197:11:0"
																			}
																		]
																	},
																	"id": 678,
																	"nodeType": "IfStatement",
																	"src": "11272:1952:0",
																	"trueBody": {
																		"id": 629,
																		"nodeType": "Block",
																		"src": "11301:945:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 589,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 583,
																								"name": "_numTokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 301,
																								"src": "11445:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<=",
																							"rightExpression": {
																								"expression": {
																									"baseExpression": {
																										"id": 584,
																										"name": "structUsers_",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1911,
																										"src": "11459:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																											"typeString": "mapping(address => struct structures.structUser storage ref)"
																										}
																									},
																									"id": 587,
																									"indexExpression": {
																										"expression": {
																											"id": 585,
																											"name": "msg",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967281,
																											"src": "11472:3:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_magic_message",
																												"typeString": "msg"
																											}
																										},
																										"id": 586,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "sender",
																										"nodeType": "MemberAccess",
																										"src": "11472:10:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "11459:24:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_structUser_$1906_storage",
																										"typeString": "struct structures.structUser storage ref"
																									}
																								},
																								"id": 588,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "balance_overall",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1899,
																								"src": "11459:40:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "11445:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						],
																						"id": 582,
																						"name": "require",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967278,
																							4294967278
																						],
																						"referencedDeclaration": 4294967278,
																						"src": "11437:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																							"typeString": "function (bool) pure"
																						}
																					},
																					"id": 590,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11437:63:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 591,
																				"nodeType": "ExpressionStatement",
																				"src": "11437:63:0"
																			},
																			{
																				"expression": {
																					"id": 605,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"baseExpression": {
																								"id": 592,
																								"name": "structUsers_",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1911,
																								"src": "11644:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																									"typeString": "mapping(address => struct structures.structUser storage ref)"
																								}
																							},
																							"id": 595,
																							"indexExpression": {
																								"expression": {
																									"id": 593,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "11657:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 594,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "11657:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "11644:24:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_structUser_$1906_storage",
																								"typeString": "struct structures.structUser storage ref"
																							}
																						},
																						"id": 596,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberName": "balance_overall",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1899,
																						"src": "11644:40:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 603,
																								"name": "_numTokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 301,
																								"src": "11732:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"expression": {
																									"baseExpression": {
																										"id": 597,
																										"name": "structUsers_",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1911,
																										"src": "11687:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																											"typeString": "mapping(address => struct structures.structUser storage ref)"
																										}
																									},
																									"id": 600,
																									"indexExpression": {
																										"expression": {
																											"id": 598,
																											"name": "msg",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967281,
																											"src": "11700:3:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_magic_message",
																												"typeString": "msg"
																											}
																										},
																										"id": 599,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "sender",
																										"nodeType": "MemberAccess",
																										"src": "11700:10:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "11687:24:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_structUser_$1906_storage",
																										"typeString": "struct structures.structUser storage ref"
																									}
																								},
																								"id": 601,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "balance_overall",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1899,
																								"src": "11687:40:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 602,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sub",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1761,
																							"src": "11687:44:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 604,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "11687:56:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11644:99:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 606,
																				"nodeType": "ExpressionStatement",
																				"src": "11644:99:0"
																			},
																			{
																				"expression": {
																					"id": 618,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"baseExpression": {
																								"id": 607,
																								"name": "structUsers_",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1911,
																								"src": "11833:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																									"typeString": "mapping(address => struct structures.structUser storage ref)"
																								}
																							},
																							"id": 609,
																							"indexExpression": {
																								"id": 608,
																								"name": "_receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 299,
																								"src": "11846:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "11833:23:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_structUser_$1906_storage",
																								"typeString": "struct structures.structUser storage ref"
																							}
																						},
																						"id": 610,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberName": "balance_public",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1905,
																						"src": "11833:38:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 616,
																								"name": "_numTokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 301,
																								"src": "11917:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"expression": {
																									"baseExpression": {
																										"id": 611,
																										"name": "structUsers_",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1911,
																										"src": "11874:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																											"typeString": "mapping(address => struct structures.structUser storage ref)"
																										}
																									},
																									"id": 613,
																									"indexExpression": {
																										"id": 612,
																										"name": "_receiver",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 299,
																										"src": "11887:9:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "11874:23:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_structUser_$1906_storage",
																										"typeString": "struct structures.structUser storage ref"
																									}
																								},
																								"id": 614,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "balance_public",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1905,
																								"src": "11874:38:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 615,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1740,
																							"src": "11874:42:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 617,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "11874:54:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11833:95:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 619,
																				"nodeType": "ExpressionStatement",
																				"src": "11833:95:0"
																			},
																			{
																				"eventCall": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 621,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "12032:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 622,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "12032:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 623,
																							"name": "_receiver",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 299,
																							"src": "12044:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 624,
																							"name": "_numTokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 301,
																							"src": "12055:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 620,
																						"name": "Transfer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1546,
																						"src": "12023:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																							"typeString": "function (address,address,uint256)"
																						}
																					},
																					"id": 625,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "12023:43:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 626,
																				"nodeType": "EmitStatement",
																				"src": "12018:48:0"
																			},
																			{
																				"expression": {
																					"hexValue": "74727565",
																					"id": 627,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "12226:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				},
																				"functionReturnParameters": 306,
																				"id": 628,
																				"nodeType": "Return",
																				"src": "12219:11:0"
																			}
																		]
																	}
																}
															]
														}
													},
													"id": 683,
													"nodeType": "IfStatement",
													"src": "9028:4225:0",
													"trueBody": {
														"id": 570,
														"nodeType": "Block",
														"src": "9105:2025:0",
														"statements": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 469,
																			"name": "validateOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1403,
																			"src": "9169:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																				"typeString": "function () view returns (bool)"
																			}
																		},
																		"id": 470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9169:15:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "74727565",
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9188:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	"src": "9169:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 568,
																	"nodeType": "Block",
																	"src": "10146:973:0",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 528,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 522,
																							"name": "_numTokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 301,
																							"src": "10317:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<=",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 523,
																									"name": "structUsers_",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1911,
																									"src": "10331:12:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																										"typeString": "mapping(address => struct structures.structUser storage ref)"
																									}
																								},
																								"id": 526,
																								"indexExpression": {
																									"expression": {
																										"id": 524,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "10344:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 525,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "10344:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "10331:24:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_structUser_$1906_storage",
																									"typeString": "struct structures.structUser storage ref"
																								}
																							},
																							"id": 527,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "balance_private",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1903,
																							"src": "10331:40:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "10317:54:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					],
																					"id": 521,
																					"name": "require",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						4294967278,
																						4294967278
																					],
																					"referencedDeclaration": 4294967278,
																					"src": "10309:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																						"typeString": "function (bool) pure"
																					}
																				},
																				"id": 529,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10309:63:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 530,
																			"nodeType": "ExpressionStatement",
																			"src": "10309:63:0"
																		},
																		{
																			"expression": {
																				"id": 544,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"expression": {
																						"baseExpression": {
																							"id": 531,
																							"name": "structUsers_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1911,
																							"src": "10516:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																								"typeString": "mapping(address => struct structures.structUser storage ref)"
																							}
																						},
																						"id": 534,
																						"indexExpression": {
																							"expression": {
																								"id": 532,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "10529:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 533,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "10529:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "10516:24:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_structUser_$1906_storage",
																							"typeString": "struct structures.structUser storage ref"
																						}
																					},
																					"id": 535,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"memberName": "balance_private",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1903,
																					"src": "10516:40:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"arguments": [
																						{
																							"id": 542,
																							"name": "_numTokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 301,
																							"src": "10604:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"baseExpression": {
																									"id": 536,
																									"name": "structUsers_",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1911,
																									"src": "10559:12:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																										"typeString": "mapping(address => struct structures.structUser storage ref)"
																									}
																								},
																								"id": 539,
																								"indexExpression": {
																									"expression": {
																										"id": 537,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "10572:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 538,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "10572:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "10559:24:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_structUser_$1906_storage",
																									"typeString": "struct structures.structUser storage ref"
																								}
																							},
																							"id": 540,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "balance_private",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1903,
																							"src": "10559:40:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 541,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1761,
																						"src": "10559:44:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 543,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "10559:56:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10516:99:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 545,
																			"nodeType": "ExpressionStatement",
																			"src": "10516:99:0"
																		},
																		{
																			"expression": {
																				"id": 557,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"expression": {
																						"baseExpression": {
																							"id": 546,
																							"name": "structUsers_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1911,
																							"src": "10705:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																								"typeString": "mapping(address => struct structures.structUser storage ref)"
																							}
																						},
																						"id": 548,
																						"indexExpression": {
																							"id": 547,
																							"name": "_receiver",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 299,
																							"src": "10718:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "10705:23:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_structUser_$1906_storage",
																							"typeString": "struct structures.structUser storage ref"
																						}
																					},
																					"id": 549,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"memberName": "balance_private",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1903,
																					"src": "10705:39:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"arguments": [
																						{
																							"id": 555,
																							"name": "_numTokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 301,
																							"src": "10791:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"baseExpression": {
																									"id": 550,
																									"name": "structUsers_",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1911,
																									"src": "10747:12:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																										"typeString": "mapping(address => struct structures.structUser storage ref)"
																									}
																								},
																								"id": 552,
																								"indexExpression": {
																									"id": 551,
																									"name": "_receiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 299,
																									"src": "10760:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "10747:23:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_structUser_$1906_storage",
																									"typeString": "struct structures.structUser storage ref"
																								}
																							},
																							"id": 553,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "balance_private",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1903,
																							"src": "10747:39:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 554,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "add",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1740,
																						"src": "10747:43:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 556,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "10747:55:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10705:97:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 558,
																			"nodeType": "ExpressionStatement",
																			"src": "10705:97:0"
																		},
																		{
																			"eventCall": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 560,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "10905:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 561,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "10905:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"id": 562,
																						"name": "_receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 299,
																						"src": "10917:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"id": 563,
																						"name": "_numTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 301,
																						"src": "10928:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 559,
																					"name": "Transfer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1546,
																					"src": "10896:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																						"typeString": "function (address,address,uint256)"
																					}
																				},
																				"id": 564,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10896:43:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 565,
																			"nodeType": "EmitStatement",
																			"src": "10891:48:0"
																		},
																		{
																			"expression": {
																				"hexValue": "74727565",
																				"id": 566,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11099:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"functionReturnParameters": 306,
																			"id": 567,
																			"nodeType": "Return",
																			"src": "11092:11:0"
																		}
																	]
																},
																"id": 569,
																"nodeType": "IfStatement",
																"src": "9165:1954:0",
																"trueBody": {
																	"id": 520,
																	"nodeType": "Block",
																	"src": "9194:946:0",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 480,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 474,
																							"name": "_numTokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 301,
																							"src": "9338:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<=",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 475,
																									"name": "structUsers_",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1911,
																									"src": "9352:12:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																										"typeString": "mapping(address => struct structures.structUser storage ref)"
																									}
																								},
																								"id": 478,
																								"indexExpression": {
																									"expression": {
																										"id": 476,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "9365:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 477,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "9365:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "9352:24:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_structUser_$1906_storage",
																									"typeString": "struct structures.structUser storage ref"
																								}
																							},
																							"id": 479,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "balance_overall",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1899,
																							"src": "9352:40:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "9338:54:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					],
																					"id": 473,
																					"name": "require",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						4294967278,
																						4294967278
																					],
																					"referencedDeclaration": 4294967278,
																					"src": "9330:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																						"typeString": "function (bool) pure"
																					}
																				},
																				"id": 481,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9330:63:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 482,
																			"nodeType": "ExpressionStatement",
																			"src": "9330:63:0"
																		},
																		{
																			"expression": {
																				"id": 496,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"expression": {
																						"baseExpression": {
																							"id": 483,
																							"name": "structUsers_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1911,
																							"src": "9537:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																								"typeString": "mapping(address => struct structures.structUser storage ref)"
																							}
																						},
																						"id": 486,
																						"indexExpression": {
																							"expression": {
																								"id": 484,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "9550:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 485,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "9550:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "9537:24:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_structUser_$1906_storage",
																							"typeString": "struct structures.structUser storage ref"
																						}
																					},
																					"id": 487,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"memberName": "balance_overall",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1899,
																					"src": "9537:40:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"arguments": [
																						{
																							"id": 494,
																							"name": "_numTokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 301,
																							"src": "9625:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"baseExpression": {
																									"id": 488,
																									"name": "structUsers_",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1911,
																									"src": "9580:12:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																										"typeString": "mapping(address => struct structures.structUser storage ref)"
																									}
																								},
																								"id": 491,
																								"indexExpression": {
																									"expression": {
																										"id": 489,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "9593:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 490,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "9593:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "9580:24:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_structUser_$1906_storage",
																									"typeString": "struct structures.structUser storage ref"
																								}
																							},
																							"id": 492,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "balance_overall",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1899,
																							"src": "9580:40:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 493,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1761,
																						"src": "9580:44:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 495,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "9580:56:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9537:99:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 497,
																			"nodeType": "ExpressionStatement",
																			"src": "9537:99:0"
																		},
																		{
																			"expression": {
																				"id": 509,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"expression": {
																						"baseExpression": {
																							"id": 498,
																							"name": "structUsers_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1911,
																							"src": "9726:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																								"typeString": "mapping(address => struct structures.structUser storage ref)"
																							}
																						},
																						"id": 500,
																						"indexExpression": {
																							"id": 499,
																							"name": "_receiver",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 299,
																							"src": "9739:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "9726:23:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_structUser_$1906_storage",
																							"typeString": "struct structures.structUser storage ref"
																						}
																					},
																					"id": 501,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"memberName": "balance_private",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1903,
																					"src": "9726:39:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"arguments": [
																						{
																							"id": 507,
																							"name": "_numTokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 301,
																							"src": "9812:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"baseExpression": {
																									"id": 502,
																									"name": "structUsers_",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1911,
																									"src": "9768:12:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																										"typeString": "mapping(address => struct structures.structUser storage ref)"
																									}
																								},
																								"id": 504,
																								"indexExpression": {
																									"id": 503,
																									"name": "_receiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 299,
																									"src": "9781:9:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "9768:23:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_structUser_$1906_storage",
																									"typeString": "struct structures.structUser storage ref"
																								}
																							},
																							"id": 505,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "balance_private",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1903,
																							"src": "9768:39:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 506,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "add",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1740,
																						"src": "9768:43:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 508,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "9768:55:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9726:97:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 510,
																			"nodeType": "ExpressionStatement",
																			"src": "9726:97:0"
																		},
																		{
																			"eventCall": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 512,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "9926:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 513,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "9926:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"id": 514,
																						"name": "_receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 299,
																						"src": "9938:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"id": 515,
																						"name": "_numTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 301,
																						"src": "9949:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 511,
																					"name": "Transfer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1546,
																					"src": "9917:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																						"typeString": "function (address,address,uint256)"
																					}
																				},
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9917:43:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 517,
																			"nodeType": "EmitStatement",
																			"src": "9912:48:0"
																		},
																		{
																			"expression": {
																				"hexValue": "74727565",
																				"id": 518,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10120:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"functionReturnParameters": 306,
																			"id": 519,
																			"nodeType": "Return",
																			"src": "10113:11:0"
																		}
																	]
																}
															}
														]
													}
												},
												"id": 684,
												"nodeType": "IfStatement",
												"src": "6094:7159:0",
												"trueBody": {
													"id": 461,
													"nodeType": "Block",
													"src": "6169:2853:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 314,
																		"name": "validateOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1403,
																		"src": "6239:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																			"typeString": "function () view returns (bool)"
																		}
																	},
																	"id": 315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6239:15:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "74727565",
																	"id": 316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6258:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6239:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 459,
																"nodeType": "Block",
																"src": "7627:1384:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 396,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 390,
																						"name": "_numTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 301,
																						"src": "7798:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"expression": {
																							"baseExpression": {
																								"id": 391,
																								"name": "structUsers_",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1911,
																								"src": "7812:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																									"typeString": "mapping(address => struct structures.structUser storage ref)"
																								}
																							},
																							"id": 394,
																							"indexExpression": {
																								"expression": {
																									"id": 392,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "7825:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 393,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "7825:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "7812:24:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_structUser_$1906_storage",
																								"typeString": "struct structures.structUser storage ref"
																							}
																						},
																						"id": 395,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "balance_seed",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1901,
																						"src": "7812:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "7798:51:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"id": 389,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7790:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																					"typeString": "function (bool) pure"
																				}
																			},
																			"id": 397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7790:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 398,
																		"nodeType": "ExpressionStatement",
																		"src": "7790:60:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_enum$_Role_$1890",
																						"typeString": "enum structures.Role"
																					},
																					"id": 407,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"baseExpression": {
																								"id": 400,
																								"name": "structUsers_",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1911,
																								"src": "8004:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																									"typeString": "mapping(address => struct structures.structUser storage ref)"
																								}
																							},
																							"id": 403,
																							"indexExpression": {
																								"expression": {
																									"id": 401,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "8017:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 402,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "8017:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "8004:24:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_structUser_$1906_storage",
																								"typeString": "struct structures.structUser storage ref"
																							}
																						},
																						"id": 404,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "role",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1893,
																						"src": "8004:29:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Role_$1890",
																							"typeString": "enum structures.Role"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"id": 405,
																							"name": "Role",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1890,
																							"src": "8037:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_enum$_Role_$1890_$",
																								"typeString": "type(enum structures.Role)"
																							}
																						},
																						"id": 406,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "INVESTOR",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1888,
																						"src": "8037:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Role_$1890",
																							"typeString": "enum structures.Role"
																						}
																					},
																					"src": "8004:46:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "596f7572206e6f7420696e766573746f72",
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8052:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_f1b42555ffaacb2479fbd22497c1ed2c2b4af451fda620715042bfc9de76ccd6",
																						"typeString": "literal_string \"Your not investor\""
																					},
																					"value": "Your not investor"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_f1b42555ffaacb2479fbd22497c1ed2c2b4af451fda620715042bfc9de76ccd6",
																						"typeString": "literal_string \"Your not investor\""
																					}
																				],
																				"id": 399,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7995:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7995:77:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 410,
																		"nodeType": "ExpressionStatement",
																		"src": "7995:77:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_enum$_Role_$1890",
																						"typeString": "enum structures.Role"
																					},
																					"id": 418,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"baseExpression": {
																								"id": 412,
																								"name": "structUsers_",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1911,
																								"src": "8211:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																									"typeString": "mapping(address => struct structures.structUser storage ref)"
																								}
																							},
																							"id": 414,
																							"indexExpression": {
																								"id": 413,
																								"name": "_receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 299,
																								"src": "8224:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "8211:23:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_structUser_$1906_storage",
																								"typeString": "struct structures.structUser storage ref"
																							}
																						},
																						"id": 415,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "role",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1893,
																						"src": "8211:28:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Role_$1890",
																							"typeString": "enum structures.Role"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"id": 416,
																							"name": "Role",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1890,
																							"src": "8243:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_enum$_Role_$1890_$",
																								"typeString": "type(enum structures.Role)"
																							}
																						},
																						"id": 417,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "INVESTOR",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1888,
																						"src": "8243:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Role_$1890",
																							"typeString": "enum structures.Role"
																						}
																					},
																					"src": "8211:45:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "596f7572206e6f7420696e766573746f72",
																					"id": 419,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8258:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_f1b42555ffaacb2479fbd22497c1ed2c2b4af451fda620715042bfc9de76ccd6",
																						"typeString": "literal_string \"Your not investor\""
																					},
																					"value": "Your not investor"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_f1b42555ffaacb2479fbd22497c1ed2c2b4af451fda620715042bfc9de76ccd6",
																						"typeString": "literal_string \"Your not investor\""
																					}
																				],
																				"id": 411,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8202:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:76:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 421,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:76:0"
																	},
																	{
																		"expression": {
																			"id": 435,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 422,
																						"name": "structUsers_",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1911,
																						"src": "8411:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																							"typeString": "mapping(address => struct structures.structUser storage ref)"
																						}
																					},
																					"id": 425,
																					"indexExpression": {
																						"expression": {
																							"id": 423,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "8424:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 424,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "8424:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "8411:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_structUser_$1906_storage",
																						"typeString": "struct structures.structUser storage ref"
																					}
																				},
																				"id": 426,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "balance_seed",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1901,
																				"src": "8411:37:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 433,
																						"name": "_numTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 301,
																						"src": "8493:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"baseExpression": {
																								"id": 427,
																								"name": "structUsers_",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1911,
																								"src": "8451:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																									"typeString": "mapping(address => struct structures.structUser storage ref)"
																								}
																							},
																							"id": 430,
																							"indexExpression": {
																								"expression": {
																									"id": 428,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "8464:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 429,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "8464:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "8451:24:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_structUser_$1906_storage",
																								"typeString": "struct structures.structUser storage ref"
																							}
																						},
																						"id": 431,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "balance_seed",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1901,
																						"src": "8451:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 432,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1761,
																					"src": "8451:41:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 434,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8451:53:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8411:93:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 436,
																		"nodeType": "ExpressionStatement",
																		"src": "8411:93:0"
																	},
																	{
																		"expression": {
																			"id": 448,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 437,
																						"name": "structUsers_",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1911,
																						"src": "8600:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																							"typeString": "mapping(address => struct structures.structUser storage ref)"
																						}
																					},
																					"id": 439,
																					"indexExpression": {
																						"id": 438,
																						"name": "_receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 299,
																						"src": "8613:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "8600:23:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_structUser_$1906_storage",
																						"typeString": "struct structures.structUser storage ref"
																					}
																				},
																				"id": 440,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "balance_seed",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1901,
																				"src": "8600:36:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 446,
																						"name": "_numTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 301,
																						"src": "8680:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"baseExpression": {
																								"id": 441,
																								"name": "structUsers_",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1911,
																								"src": "8639:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																									"typeString": "mapping(address => struct structures.structUser storage ref)"
																								}
																							},
																							"id": 443,
																							"indexExpression": {
																								"id": 442,
																								"name": "_receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 299,
																								"src": "8652:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "8639:23:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_structUser_$1906_storage",
																								"typeString": "struct structures.structUser storage ref"
																							}
																						},
																						"id": 444,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "balance_seed",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1901,
																						"src": "8639:36:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 445,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1740,
																					"src": "8639:40:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 447,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8639:52:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8600:91:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 449,
																		"nodeType": "ExpressionStatement",
																		"src": "8600:91:0"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 451,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "8797:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 452,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "8797:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 453,
																					"name": "_receiver",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 299,
																					"src": "8809:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 454,
																					"name": "_numTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 301,
																					"src": "8820:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 450,
																				"name": "Transfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1546,
																				"src": "8788:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8788:43:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 456,
																		"nodeType": "EmitStatement",
																		"src": "8783:48:0"
																	},
																	{
																		"expression": {
																			"hexValue": "74727565",
																			"id": 457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8991:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 306,
																		"id": 458,
																		"nodeType": "Return",
																		"src": "8984:11:0"
																	}
																]
															},
															"id": 460,
															"nodeType": "IfStatement",
															"src": "6235:2776:0",
															"trueBody": {
																"id": 388,
																"nodeType": "Block",
																"src": "6264:1357:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 325,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 319,
																						"name": "_numTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 301,
																						"src": "6408:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"expression": {
																							"baseExpression": {
																								"id": 320,
																								"name": "structUsers_",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1911,
																								"src": "6422:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																									"typeString": "mapping(address => struct structures.structUser storage ref)"
																								}
																							},
																							"id": 323,
																							"indexExpression": {
																								"expression": {
																									"id": 321,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "6435:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 322,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "6435:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "6422:24:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_structUser_$1906_storage",
																								"typeString": "struct structures.structUser storage ref"
																							}
																						},
																						"id": 324,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "balance_overall",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1899,
																						"src": "6422:40:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "6408:54:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"id": 318,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "6400:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																					"typeString": "function (bool) pure"
																				}
																			},
																			"id": 326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6400:63:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 327,
																		"nodeType": "ExpressionStatement",
																		"src": "6400:63:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_enum$_Role_$1890",
																						"typeString": "enum structures.Role"
																					},
																					"id": 336,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"baseExpression": {
																								"id": 329,
																								"name": "structUsers_",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1911,
																								"src": "6614:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																									"typeString": "mapping(address => struct structures.structUser storage ref)"
																								}
																							},
																							"id": 332,
																							"indexExpression": {
																								"expression": {
																									"id": 330,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "6627:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 331,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "6627:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "6614:24:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_structUser_$1906_storage",
																								"typeString": "struct structures.structUser storage ref"
																							}
																						},
																						"id": 333,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "role",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1893,
																						"src": "6614:29:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Role_$1890",
																							"typeString": "enum structures.Role"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"id": 334,
																							"name": "Role",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1890,
																							"src": "6647:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_enum$_Role_$1890_$",
																								"typeString": "type(enum structures.Role)"
																							}
																						},
																						"id": 335,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "INVESTOR",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1888,
																						"src": "6647:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Role_$1890",
																							"typeString": "enum structures.Role"
																						}
																					},
																					"src": "6614:46:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "596f7572206e6f7420696e766573746f72",
																					"id": 337,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6662:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_f1b42555ffaacb2479fbd22497c1ed2c2b4af451fda620715042bfc9de76ccd6",
																						"typeString": "literal_string \"Your not investor\""
																					},
																					"value": "Your not investor"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_f1b42555ffaacb2479fbd22497c1ed2c2b4af451fda620715042bfc9de76ccd6",
																						"typeString": "literal_string \"Your not investor\""
																					}
																				],
																				"id": 328,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "6605:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6605:77:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 339,
																		"nodeType": "ExpressionStatement",
																		"src": "6605:77:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_enum$_Role_$1890",
																						"typeString": "enum structures.Role"
																					},
																					"id": 347,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"baseExpression": {
																								"id": 341,
																								"name": "structUsers_",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1911,
																								"src": "6821:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																									"typeString": "mapping(address => struct structures.structUser storage ref)"
																								}
																							},
																							"id": 343,
																							"indexExpression": {
																								"id": 342,
																								"name": "_receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 299,
																								"src": "6834:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "6821:23:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_structUser_$1906_storage",
																								"typeString": "struct structures.structUser storage ref"
																							}
																						},
																						"id": 344,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "role",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1893,
																						"src": "6821:28:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Role_$1890",
																							"typeString": "enum structures.Role"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"id": 345,
																							"name": "Role",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1890,
																							"src": "6853:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_enum$_Role_$1890_$",
																								"typeString": "type(enum structures.Role)"
																							}
																						},
																						"id": 346,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "INVESTOR",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1888,
																						"src": "6853:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Role_$1890",
																							"typeString": "enum structures.Role"
																						}
																					},
																					"src": "6821:45:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "596f7572206e6f7420696e766573746f72",
																					"id": 348,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6868:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_f1b42555ffaacb2479fbd22497c1ed2c2b4af451fda620715042bfc9de76ccd6",
																						"typeString": "literal_string \"Your not investor\""
																					},
																					"value": "Your not investor"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_f1b42555ffaacb2479fbd22497c1ed2c2b4af451fda620715042bfc9de76ccd6",
																						"typeString": "literal_string \"Your not investor\""
																					}
																				],
																				"id": 340,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "6812:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6812:76:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 350,
																		"nodeType": "ExpressionStatement",
																		"src": "6812:76:0"
																	},
																	{
																		"expression": {
																			"id": 364,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 351,
																						"name": "structUsers_",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1911,
																						"src": "7021:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																							"typeString": "mapping(address => struct structures.structUser storage ref)"
																						}
																					},
																					"id": 354,
																					"indexExpression": {
																						"expression": {
																							"id": 352,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "7034:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 353,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "7034:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "7021:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_structUser_$1906_storage",
																						"typeString": "struct structures.structUser storage ref"
																					}
																				},
																				"id": 355,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "balance_overall",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1899,
																				"src": "7021:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 362,
																						"name": "_numTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 301,
																						"src": "7109:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"baseExpression": {
																								"id": 356,
																								"name": "structUsers_",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1911,
																								"src": "7064:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																									"typeString": "mapping(address => struct structures.structUser storage ref)"
																								}
																							},
																							"id": 359,
																							"indexExpression": {
																								"expression": {
																									"id": 357,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "7077:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 358,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "7077:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "7064:24:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_structUser_$1906_storage",
																								"typeString": "struct structures.structUser storage ref"
																							}
																						},
																						"id": 360,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "balance_overall",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1899,
																						"src": "7064:40:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 361,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1761,
																					"src": "7064:44:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 363,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7064:56:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7021:99:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 365,
																		"nodeType": "ExpressionStatement",
																		"src": "7021:99:0"
																	},
																	{
																		"expression": {
																			"id": 377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 366,
																						"name": "structUsers_",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1911,
																						"src": "7210:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																							"typeString": "mapping(address => struct structures.structUser storage ref)"
																						}
																					},
																					"id": 368,
																					"indexExpression": {
																						"id": 367,
																						"name": "_receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 299,
																						"src": "7223:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "7210:23:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_structUser_$1906_storage",
																						"typeString": "struct structures.structUser storage ref"
																					}
																				},
																				"id": 369,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "balance_seed",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1901,
																				"src": "7210:36:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 375,
																						"name": "_numTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 301,
																						"src": "7290:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"baseExpression": {
																								"id": 370,
																								"name": "structUsers_",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1911,
																								"src": "7249:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																									"typeString": "mapping(address => struct structures.structUser storage ref)"
																								}
																							},
																							"id": 372,
																							"indexExpression": {
																								"id": 371,
																								"name": "_receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 299,
																								"src": "7262:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "7249:23:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_structUser_$1906_storage",
																								"typeString": "struct structures.structUser storage ref"
																							}
																						},
																						"id": 373,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "balance_seed",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1901,
																						"src": "7249:36:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 374,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1740,
																					"src": "7249:40:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 376,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7249:52:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7210:91:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 378,
																		"nodeType": "ExpressionStatement",
																		"src": "7210:91:0"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 380,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "7407:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 381,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "7407:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 382,
																					"name": "_receiver",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 299,
																					"src": "7419:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 383,
																					"name": "_numTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 301,
																					"src": "7430:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 379,
																				"name": "Transfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1546,
																				"src": "7398:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7398:43:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 385,
																		"nodeType": "EmitStatement",
																		"src": "7393:48:0"
																	},
																	{
																		"expression": {
																			"hexValue": "74727565",
																			"id": 386,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7601:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 306,
																		"id": 387,
																		"nodeType": "Return",
																		"src": "7594:11:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "6004:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 303,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6059:8:0"
									},
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "_receiver",
												"nameLocation": "6021:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "6013:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6013:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "_numTokens",
												"nameLocation": "6040:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "6032:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6012:39:0"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "6077:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 304,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6077:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6076:6:0"
									},
									"scope": 1222,
									"src": "5995:7266:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1538
									],
									"body": {
										"id": 1174,
										"nodeType": "Block",
										"src": "13699:6109:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"hexValue": "73656564",
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13728:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_66a80b61b29ec044d14c4c8c613e762ba1fb8eeb0c454d1ee00ed6dedaa5b5c5",
																	"typeString": "literal_string \"seed\""
																},
																"value": "seed"
															},
															{
																"id": 700,
																"name": "privateProviderAdr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "13736:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 701,
																"name": "publicProviderAdr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "13756:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_66a80b61b29ec044d14c4c8c613e762ba1fb8eeb0c454d1ee00ed6dedaa5b5c5",
																	"typeString": "literal_string \"seed\""
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 698,
															"name": "validatePhase",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "13714:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (string memory,address,address) view returns (bool)"
															}
														},
														"id": 702,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13714:60:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 703,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13778:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "13714:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"hexValue": "70726976617465",
																	"id": 856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15770:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ba0b8d7971d83a895b04f69bb35eb4161849cc1e4886c0eec88858e4667ebaae",
																		"typeString": "literal_string \"private\""
																	},
																	"value": "private"
																},
																{
																	"id": 857,
																	"name": "privateProviderAdr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "15781:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 858,
																	"name": "publicProviderAdr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "15801:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_ba0b8d7971d83a895b04f69bb35eb4161849cc1e4886c0eec88858e4667ebaae",
																		"typeString": "literal_string \"private\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 855,
																"name": "validatePhase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1485,
																"src": "15756:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (string memory,address,address) view returns (bool)"
																}
															},
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15756:63:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "74727565",
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15823:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"src": "15756:71:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"hexValue": "7075626c6963",
																		"id": 1013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17793:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3c0c3a2537aaf75b853bbf2b595e872d3db0359b7e792ebd8907fb017c3b71a2",
																			"typeString": "literal_string \"public\""
																		},
																		"value": "public"
																	},
																	{
																		"id": 1014,
																		"name": "privateProviderAdr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 43,
																		"src": "17803:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1015,
																		"name": "publicProviderAdr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 46,
																		"src": "17823:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_3c0c3a2537aaf75b853bbf2b595e872d3db0359b7e792ebd8907fb017c3b71a2",
																			"typeString": "literal_string \"public\""
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1012,
																	"name": "validatePhase",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1485,
																	"src": "17779:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (string memory,address,address) view returns (bool)"
																	}
																},
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17779:62:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17845:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "17779:70:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"expression": {
																"hexValue": "66616c7365",
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19795:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 697,
															"id": 1170,
															"nodeType": "Return",
															"src": "19788:12:0"
														},
														"id": 1171,
														"nodeType": "IfStatement",
														"src": "17775:2025:0",
														"trueBody": {
															"id": 1168,
															"nodeType": "Block",
															"src": "17851:1931:0",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1019,
																				"name": "validateOwner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1403,
																				"src": "17871:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																					"typeString": "function () view returns (bool)"
																				}
																			},
																			"id": 1020,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17871:15:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "74727565",
																			"id": 1021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17890:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"src": "17871:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 1166,
																		"nodeType": "Block",
																		"src": "18893:878:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1101,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1096,
																								"name": "_numTokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 692,
																								"src": "18920:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<=",
																							"rightExpression": {
																								"expression": {
																									"baseExpression": {
																										"id": 1097,
																										"name": "structUsers_",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1911,
																										"src": "18934:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																											"typeString": "mapping(address => struct structures.structUser storage ref)"
																										}
																									},
																									"id": 1099,
																									"indexExpression": {
																										"id": 1098,
																										"name": "_owner",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 688,
																										"src": "18947:6:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "18934:20:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_structUser_$1906_storage",
																										"typeString": "struct structures.structUser storage ref"
																									}
																								},
																								"id": 1100,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "balance_public",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1905,
																								"src": "18934:35:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "18920:49:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						],
																						"id": 1095,
																						"name": "require",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967278,
																							4294967278
																						],
																						"referencedDeclaration": 4294967278,
																						"src": "18912:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																							"typeString": "function (bool) pure"
																						}
																					},
																					"id": 1102,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "18912:58:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1103,
																				"nodeType": "ExpressionStatement",
																				"src": "18912:58:0"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1105,
																								"name": "_numTokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 692,
																								"src": "19064:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<=",
																							"rightExpression": {
																								"baseExpression": {
																									"baseExpression": {
																										"id": 1106,
																										"name": "allowed",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 32,
																										"src": "19078:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																											"typeString": "mapping(address => mapping(address => uint256))"
																										}
																									},
																									"id": 1108,
																									"indexExpression": {
																										"id": 1107,
																										"name": "_owner",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 688,
																										"src": "19086:6:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "19078:15:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																										"typeString": "mapping(address => uint256)"
																									}
																								},
																								"id": 1111,
																								"indexExpression": {
																									"expression": {
																										"id": 1109,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "19094:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 1110,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "19094:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "19078:27:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "19064:41:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						],
																						"id": 1104,
																						"name": "require",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967278,
																							4294967278
																						],
																						"referencedDeclaration": 4294967278,
																						"src": "19056:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																							"typeString": "function (bool) pure"
																						}
																					},
																					"id": 1113,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "19056:50:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1114,
																				"nodeType": "ExpressionStatement",
																				"src": "19056:50:0"
																			},
																			{
																				"expression": {
																					"id": 1126,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"baseExpression": {
																								"id": 1115,
																								"name": "structUsers_",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1911,
																								"src": "19200:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																									"typeString": "mapping(address => struct structures.structUser storage ref)"
																								}
																							},
																							"id": 1117,
																							"indexExpression": {
																								"id": 1116,
																								"name": "_owner",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 688,
																								"src": "19213:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "19200:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_structUser_$1906_storage",
																								"typeString": "struct structures.structUser storage ref"
																							}
																						},
																						"id": 1118,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberName": "balance_public",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1905,
																						"src": "19200:35:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 1124,
																								"name": "_numTokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 692,
																								"src": "19278:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"expression": {
																									"baseExpression": {
																										"id": 1119,
																										"name": "structUsers_",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1911,
																										"src": "19238:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																											"typeString": "mapping(address => struct structures.structUser storage ref)"
																										}
																									},
																									"id": 1121,
																									"indexExpression": {
																										"id": 1120,
																										"name": "_owner",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 688,
																										"src": "19251:6:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "19238:20:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_structUser_$1906_storage",
																										"typeString": "struct structures.structUser storage ref"
																									}
																								},
																								"id": 1122,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "balance_public",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1905,
																								"src": "19238:35:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1123,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sub",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1761,
																							"src": "19238:39:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1125,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "19238:51:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "19200:89:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1127,
																				"nodeType": "ExpressionStatement",
																				"src": "19200:89:0"
																			},
																			{
																				"expression": {
																					"id": 1143,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 1128,
																								"name": "allowed",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 32,
																								"src": "19360:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(address => mapping(address => uint256))"
																								}
																							},
																							"id": 1132,
																							"indexExpression": {
																								"id": 1129,
																								"name": "_owner",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 688,
																								"src": "19368:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "19360:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 1133,
																						"indexExpression": {
																							"expression": {
																								"id": 1130,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "19376:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 1131,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "19376:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "19360:27:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 1141,
																								"name": "_numTokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 692,
																								"src": "19422:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"baseExpression": {
																									"baseExpression": {
																										"id": 1134,
																										"name": "allowed",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 32,
																										"src": "19390:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																											"typeString": "mapping(address => mapping(address => uint256))"
																										}
																									},
																									"id": 1136,
																									"indexExpression": {
																										"id": 1135,
																										"name": "_owner",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 688,
																										"src": "19398:6:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "19390:15:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																										"typeString": "mapping(address => uint256)"
																									}
																								},
																								"id": 1139,
																								"indexExpression": {
																									"expression": {
																										"id": 1137,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "19406:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 1138,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "19406:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "19390:27:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1140,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sub",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1761,
																							"src": "19390:31:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1142,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "19390:43:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "19360:73:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1144,
																				"nodeType": "ExpressionStatement",
																				"src": "19360:73:0"
																			},
																			{
																				"expression": {
																					"id": 1156,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"baseExpression": {
																								"id": 1145,
																								"name": "structUsers_",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1911,
																								"src": "19516:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																									"typeString": "mapping(address => struct structures.structUser storage ref)"
																								}
																							},
																							"id": 1147,
																							"indexExpression": {
																								"id": 1146,
																								"name": "_buyer",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 690,
																								"src": "19529:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "19516:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_structUser_$1906_storage",
																								"typeString": "struct structures.structUser storage ref"
																							}
																						},
																						"id": 1148,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberName": "balance_public",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1905,
																						"src": "19516:35:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 1154,
																								"name": "_numTokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 692,
																								"src": "19594:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"expression": {
																									"baseExpression": {
																										"id": 1149,
																										"name": "structUsers_",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1911,
																										"src": "19554:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																											"typeString": "mapping(address => struct structures.structUser storage ref)"
																										}
																									},
																									"id": 1151,
																									"indexExpression": {
																										"id": 1150,
																										"name": "_buyer",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 690,
																										"src": "19567:6:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "19554:20:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_structUser_$1906_storage",
																										"typeString": "struct structures.structUser storage ref"
																									}
																								},
																								"id": 1152,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "balance_public",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1905,
																								"src": "19554:35:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1153,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1740,
																							"src": "19554:39:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1155,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "19554:51:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "19516:89:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1157,
																				"nodeType": "ExpressionStatement",
																				"src": "19516:89:0"
																			},
																			{
																				"eventCall": {
																					"arguments": [
																						{
																							"id": 1159,
																							"name": "_owner",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 688,
																							"src": "19698:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 1160,
																							"name": "_buyer",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 690,
																							"src": "19706:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 1161,
																							"name": "_numTokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 692,
																							"src": "19714:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 1158,
																						"name": "Transfer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1546,
																						"src": "19689:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																							"typeString": "function (address,address,uint256)"
																						}
																					},
																					"id": 1162,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "19689:36:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1163,
																				"nodeType": "EmitStatement",
																				"src": "19684:41:0"
																			},
																			{
																				"expression": {
																					"hexValue": "74727565",
																					"id": 1164,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "19751:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				},
																				"functionReturnParameters": 697,
																				"id": 1165,
																				"nodeType": "Return",
																				"src": "19744:11:0"
																			}
																		]
																	},
																	"id": 1167,
																	"nodeType": "IfStatement",
																	"src": "17867:1904:0",
																	"trueBody": {
																		"id": 1094,
																		"nodeType": "Block",
																		"src": "17896:991:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1029,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1024,
																								"name": "_numTokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 692,
																								"src": "18046:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<=",
																							"rightExpression": {
																								"expression": {
																									"baseExpression": {
																										"id": 1025,
																										"name": "structUsers_",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1911,
																										"src": "18060:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																											"typeString": "mapping(address => struct structures.structUser storage ref)"
																										}
																									},
																									"id": 1027,
																									"indexExpression": {
																										"id": 1026,
																										"name": "_owner",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 688,
																										"src": "18073:6:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "18060:20:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_structUser_$1906_storage",
																										"typeString": "struct structures.structUser storage ref"
																									}
																								},
																								"id": 1028,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "balance_overall",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1899,
																								"src": "18060:36:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "18046:50:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						],
																						"id": 1023,
																						"name": "require",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967278,
																							4294967278
																						],
																						"referencedDeclaration": 4294967278,
																						"src": "18038:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																							"typeString": "function (bool) pure"
																						}
																					},
																					"id": 1030,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "18038:59:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1031,
																				"nodeType": "ExpressionStatement",
																				"src": "18038:59:0"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1040,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1033,
																								"name": "_numTokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 692,
																								"src": "18188:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<=",
																							"rightExpression": {
																								"baseExpression": {
																									"baseExpression": {
																										"id": 1034,
																										"name": "allowed",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 32,
																										"src": "18202:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																											"typeString": "mapping(address => mapping(address => uint256))"
																										}
																									},
																									"id": 1036,
																									"indexExpression": {
																										"id": 1035,
																										"name": "_owner",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 688,
																										"src": "18210:6:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "18202:15:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																										"typeString": "mapping(address => uint256)"
																									}
																								},
																								"id": 1039,
																								"indexExpression": {
																									"expression": {
																										"id": 1037,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "18218:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 1038,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "18218:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "18202:27:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "18188:41:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						],
																						"id": 1032,
																						"name": "require",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967278,
																							4294967278
																						],
																						"referencedDeclaration": 4294967278,
																						"src": "18180:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																							"typeString": "function (bool) pure"
																						}
																					},
																					"id": 1041,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "18180:50:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1042,
																				"nodeType": "ExpressionStatement",
																				"src": "18180:50:0"
																			},
																			{
																				"expression": {
																					"id": 1054,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"baseExpression": {
																								"id": 1043,
																								"name": "structUsers_",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1911,
																								"src": "18324:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																									"typeString": "mapping(address => struct structures.structUser storage ref)"
																								}
																							},
																							"id": 1045,
																							"indexExpression": {
																								"id": 1044,
																								"name": "_owner",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 688,
																								"src": "18337:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "18324:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_structUser_$1906_storage",
																								"typeString": "struct structures.structUser storage ref"
																							}
																						},
																						"id": 1046,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberName": "balance_seed",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1901,
																						"src": "18324:33:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 1052,
																								"name": "_numTokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 692,
																								"src": "18398:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"expression": {
																									"baseExpression": {
																										"id": 1047,
																										"name": "structUsers_",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1911,
																										"src": "18360:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																											"typeString": "mapping(address => struct structures.structUser storage ref)"
																										}
																									},
																									"id": 1049,
																									"indexExpression": {
																										"id": 1048,
																										"name": "_owner",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 688,
																										"src": "18373:6:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "18360:20:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_structUser_$1906_storage",
																										"typeString": "struct structures.structUser storage ref"
																									}
																								},
																								"id": 1050,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "balance_seed",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1901,
																								"src": "18360:33:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1051,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sub",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1761,
																							"src": "18360:37:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1053,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "18360:49:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "18324:85:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1055,
																				"nodeType": "ExpressionStatement",
																				"src": "18324:85:0"
																			},
																			{
																				"expression": {
																					"id": 1071,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 1056,
																								"name": "allowed",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 32,
																								"src": "18480:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(address => mapping(address => uint256))"
																								}
																							},
																							"id": 1060,
																							"indexExpression": {
																								"id": 1057,
																								"name": "_owner",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 688,
																								"src": "18488:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "18480:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 1061,
																						"indexExpression": {
																							"expression": {
																								"id": 1058,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "18496:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 1059,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "18496:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "18480:27:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 1069,
																								"name": "_numTokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 692,
																								"src": "18542:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"baseExpression": {
																									"baseExpression": {
																										"id": 1062,
																										"name": "allowed",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 32,
																										"src": "18510:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																											"typeString": "mapping(address => mapping(address => uint256))"
																										}
																									},
																									"id": 1064,
																									"indexExpression": {
																										"id": 1063,
																										"name": "_owner",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 688,
																										"src": "18518:6:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "18510:15:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																										"typeString": "mapping(address => uint256)"
																									}
																								},
																								"id": 1067,
																								"indexExpression": {
																									"expression": {
																										"id": 1065,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967281,
																										"src": "18526:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 1066,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"src": "18526:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "18510:27:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1068,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sub",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1761,
																							"src": "18510:31:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1070,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "18510:43:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "18480:73:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1072,
																				"nodeType": "ExpressionStatement",
																				"src": "18480:73:0"
																			},
																			{
																				"expression": {
																					"id": 1084,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"baseExpression": {
																								"id": 1073,
																								"name": "structUsers_",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1911,
																								"src": "18636:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																									"typeString": "mapping(address => struct structures.structUser storage ref)"
																								}
																							},
																							"id": 1075,
																							"indexExpression": {
																								"id": 1074,
																								"name": "_buyer",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 690,
																								"src": "18649:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "18636:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_structUser_$1906_storage",
																								"typeString": "struct structures.structUser storage ref"
																							}
																						},
																						"id": 1076,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberName": "balance_seed",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1901,
																						"src": "18636:33:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 1082,
																								"name": "_numTokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 692,
																								"src": "18710:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"expression": {
																									"baseExpression": {
																										"id": 1077,
																										"name": "structUsers_",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1911,
																										"src": "18672:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																											"typeString": "mapping(address => struct structures.structUser storage ref)"
																										}
																									},
																									"id": 1079,
																									"indexExpression": {
																										"id": 1078,
																										"name": "_buyer",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 690,
																										"src": "18685:6:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "18672:20:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_structUser_$1906_storage",
																										"typeString": "struct structures.structUser storage ref"
																									}
																								},
																								"id": 1080,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "balance_seed",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1901,
																								"src": "18672:33:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1081,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1740,
																							"src": "18672:37:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1083,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "18672:49:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "18636:85:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1085,
																				"nodeType": "ExpressionStatement",
																				"src": "18636:85:0"
																			},
																			{
																				"eventCall": {
																					"arguments": [
																						{
																							"id": 1087,
																							"name": "_owner",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 688,
																							"src": "18814:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 1088,
																							"name": "_buyer",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 690,
																							"src": "18822:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 1089,
																							"name": "_numTokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 692,
																							"src": "18830:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 1086,
																						"name": "Transfer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1546,
																						"src": "18805:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																							"typeString": "function (address,address,uint256)"
																						}
																					},
																					"id": 1090,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "18805:36:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1091,
																				"nodeType": "EmitStatement",
																				"src": "18800:41:0"
																			},
																			{
																				"expression": {
																					"hexValue": "74727565",
																					"id": 1092,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "18867:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				},
																				"functionReturnParameters": 697,
																				"id": 1093,
																				"nodeType": "Return",
																				"src": "18860:11:0"
																			}
																		]
																	}
																}
															]
														}
													},
													"id": 1172,
													"nodeType": "IfStatement",
													"src": "15752:4048:0",
													"trueBody": {
														"id": 1011,
														"nodeType": "Block",
														"src": "15829:1940:0",
														"statements": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 862,
																			"name": "validateOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1403,
																			"src": "15853:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																				"typeString": "function () view returns (bool)"
																			}
																		},
																		"id": 863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15853:15:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "74727565",
																		"id": 864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15872:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	"src": "15853:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 1009,
																	"nodeType": "Block",
																	"src": "16875:883:0",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 944,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 939,
																							"name": "_numTokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 692,
																							"src": "16902:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<=",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 940,
																									"name": "structUsers_",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1911,
																									"src": "16916:12:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																										"typeString": "mapping(address => struct structures.structUser storage ref)"
																									}
																								},
																								"id": 942,
																								"indexExpression": {
																									"id": 941,
																									"name": "_owner",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 688,
																									"src": "16929:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "16916:20:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_structUser_$1906_storage",
																									"typeString": "struct structures.structUser storage ref"
																								}
																							},
																							"id": 943,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "balance_private",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1903,
																							"src": "16916:36:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "16902:50:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					],
																					"id": 938,
																					"name": "require",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						4294967278,
																						4294967278
																					],
																					"referencedDeclaration": 4294967278,
																					"src": "16894:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																						"typeString": "function (bool) pure"
																					}
																				},
																				"id": 945,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "16894:59:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 946,
																			"nodeType": "ExpressionStatement",
																			"src": "16894:59:0"
																		},
																		{
																			"expression": {
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 955,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 948,
																							"name": "_numTokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 692,
																							"src": "17047:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<=",
																						"rightExpression": {
																							"baseExpression": {
																								"baseExpression": {
																									"id": 949,
																									"name": "allowed",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 32,
																									"src": "17061:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																										"typeString": "mapping(address => mapping(address => uint256))"
																									}
																								},
																								"id": 951,
																								"indexExpression": {
																									"id": 950,
																									"name": "_owner",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 688,
																									"src": "17069:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "17061:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																									"typeString": "mapping(address => uint256)"
																								}
																							},
																							"id": 954,
																							"indexExpression": {
																								"expression": {
																									"id": 952,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "17077:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 953,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "17077:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "17061:27:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "17047:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					],
																					"id": 947,
																					"name": "require",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						4294967278,
																						4294967278
																					],
																					"referencedDeclaration": 4294967278,
																					"src": "17039:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																						"typeString": "function (bool) pure"
																					}
																				},
																				"id": 956,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "17039:50:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 957,
																			"nodeType": "ExpressionStatement",
																			"src": "17039:50:0"
																		},
																		{
																			"expression": {
																				"id": 969,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"expression": {
																						"baseExpression": {
																							"id": 958,
																							"name": "structUsers_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1911,
																							"src": "17183:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																								"typeString": "mapping(address => struct structures.structUser storage ref)"
																							}
																						},
																						"id": 960,
																						"indexExpression": {
																							"id": 959,
																							"name": "_owner",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 688,
																							"src": "17196:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "17183:20:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_structUser_$1906_storage",
																							"typeString": "struct structures.structUser storage ref"
																						}
																					},
																					"id": 961,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"memberName": "balance_private",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1903,
																					"src": "17183:36:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"arguments": [
																						{
																							"id": 967,
																							"name": "_numTokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 692,
																							"src": "17263:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"baseExpression": {
																									"id": 962,
																									"name": "structUsers_",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1911,
																									"src": "17222:12:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																										"typeString": "mapping(address => struct structures.structUser storage ref)"
																									}
																								},
																								"id": 964,
																								"indexExpression": {
																									"id": 963,
																									"name": "_owner",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 688,
																									"src": "17235:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "17222:20:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_structUser_$1906_storage",
																									"typeString": "struct structures.structUser storage ref"
																								}
																							},
																							"id": 965,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "balance_private",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1903,
																							"src": "17222:36:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 966,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1761,
																						"src": "17222:40:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 968,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17222:52:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "17183:91:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 970,
																			"nodeType": "ExpressionStatement",
																			"src": "17183:91:0"
																		},
																		{
																			"expression": {
																				"id": 986,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"baseExpression": {
																						"baseExpression": {
																							"id": 971,
																							"name": "allowed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 32,
																							"src": "17345:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																								"typeString": "mapping(address => mapping(address => uint256))"
																							}
																						},
																						"id": 975,
																						"indexExpression": {
																							"id": 972,
																							"name": "_owner",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 688,
																							"src": "17353:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "17345:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 976,
																					"indexExpression": {
																						"expression": {
																							"id": 973,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "17361:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 974,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "17361:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"nodeType": "IndexAccess",
																					"src": "17345:27:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"arguments": [
																						{
																							"id": 984,
																							"name": "_numTokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 692,
																							"src": "17407:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"baseExpression": {
																								"baseExpression": {
																									"id": 977,
																									"name": "allowed",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 32,
																									"src": "17375:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																										"typeString": "mapping(address => mapping(address => uint256))"
																									}
																								},
																								"id": 979,
																								"indexExpression": {
																									"id": 978,
																									"name": "_owner",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 688,
																									"src": "17383:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "17375:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																									"typeString": "mapping(address => uint256)"
																								}
																							},
																							"id": 982,
																							"indexExpression": {
																								"expression": {
																									"id": 980,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "17391:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 981,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "17391:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "17375:27:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 983,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1761,
																						"src": "17375:31:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 985,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17375:43:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "17345:73:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 987,
																			"nodeType": "ExpressionStatement",
																			"src": "17345:73:0"
																		},
																		{
																			"expression": {
																				"id": 999,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"expression": {
																						"baseExpression": {
																							"id": 988,
																							"name": "structUsers_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1911,
																							"src": "17501:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																								"typeString": "mapping(address => struct structures.structUser storage ref)"
																							}
																						},
																						"id": 990,
																						"indexExpression": {
																							"id": 989,
																							"name": "_buyer",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 690,
																							"src": "17514:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "17501:20:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_structUser_$1906_storage",
																							"typeString": "struct structures.structUser storage ref"
																						}
																					},
																					"id": 991,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"memberName": "balance_private",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1903,
																					"src": "17501:36:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"arguments": [
																						{
																							"id": 997,
																							"name": "_numTokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 692,
																							"src": "17581:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"baseExpression": {
																									"id": 992,
																									"name": "structUsers_",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1911,
																									"src": "17540:12:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																										"typeString": "mapping(address => struct structures.structUser storage ref)"
																									}
																								},
																								"id": 994,
																								"indexExpression": {
																									"id": 993,
																									"name": "_buyer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 690,
																									"src": "17553:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "17540:20:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_structUser_$1906_storage",
																									"typeString": "struct structures.structUser storage ref"
																								}
																							},
																							"id": 995,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "balance_private",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1903,
																							"src": "17540:36:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 996,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "add",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1740,
																						"src": "17540:40:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 998,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "17540:52:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "17501:91:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1000,
																			"nodeType": "ExpressionStatement",
																			"src": "17501:91:0"
																		},
																		{
																			"eventCall": {
																				"arguments": [
																					{
																						"id": 1002,
																						"name": "_owner",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 688,
																						"src": "17685:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"id": 1003,
																						"name": "_buyer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 690,
																						"src": "17693:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"id": 1004,
																						"name": "_numTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 692,
																						"src": "17701:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1001,
																					"name": "Transfer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1546,
																					"src": "17676:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																						"typeString": "function (address,address,uint256)"
																					}
																				},
																				"id": 1005,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "17676:36:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 1006,
																			"nodeType": "EmitStatement",
																			"src": "17671:41:0"
																		},
																		{
																			"expression": {
																				"hexValue": "74727565",
																				"id": 1007,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "17738:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"functionReturnParameters": 697,
																			"id": 1008,
																			"nodeType": "Return",
																			"src": "17731:11:0"
																		}
																	]
																},
																"id": 1010,
																"nodeType": "IfStatement",
																"src": "15849:1909:0",
																"trueBody": {
																	"id": 937,
																	"nodeType": "Block",
																	"src": "15878:991:0",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 872,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 867,
																							"name": "_numTokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 692,
																							"src": "16028:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<=",
																						"rightExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 868,
																									"name": "structUsers_",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1911,
																									"src": "16042:12:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																										"typeString": "mapping(address => struct structures.structUser storage ref)"
																									}
																								},
																								"id": 870,
																								"indexExpression": {
																									"id": 869,
																									"name": "_owner",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 688,
																									"src": "16055:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "16042:20:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_structUser_$1906_storage",
																									"typeString": "struct structures.structUser storage ref"
																								}
																							},
																							"id": 871,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "balance_overall",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1899,
																							"src": "16042:36:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "16028:50:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					],
																					"id": 866,
																					"name": "require",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						4294967278,
																						4294967278
																					],
																					"referencedDeclaration": 4294967278,
																					"src": "16020:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																						"typeString": "function (bool) pure"
																					}
																				},
																				"id": 873,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "16020:59:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 874,
																			"nodeType": "ExpressionStatement",
																			"src": "16020:59:0"
																		},
																		{
																			"expression": {
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 883,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 876,
																							"name": "_numTokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 692,
																							"src": "16170:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<=",
																						"rightExpression": {
																							"baseExpression": {
																								"baseExpression": {
																									"id": 877,
																									"name": "allowed",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 32,
																									"src": "16184:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																										"typeString": "mapping(address => mapping(address => uint256))"
																									}
																								},
																								"id": 879,
																								"indexExpression": {
																									"id": 878,
																									"name": "_owner",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 688,
																									"src": "16192:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "16184:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																									"typeString": "mapping(address => uint256)"
																								}
																							},
																							"id": 882,
																							"indexExpression": {
																								"expression": {
																									"id": 880,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "16200:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 881,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "16200:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "16184:27:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "16170:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					],
																					"id": 875,
																					"name": "require",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						4294967278,
																						4294967278
																					],
																					"referencedDeclaration": 4294967278,
																					"src": "16162:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																						"typeString": "function (bool) pure"
																					}
																				},
																				"id": 884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "16162:50:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 885,
																			"nodeType": "ExpressionStatement",
																			"src": "16162:50:0"
																		},
																		{
																			"expression": {
																				"id": 897,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"expression": {
																						"baseExpression": {
																							"id": 886,
																							"name": "structUsers_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1911,
																							"src": "16306:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																								"typeString": "mapping(address => struct structures.structUser storage ref)"
																							}
																						},
																						"id": 888,
																						"indexExpression": {
																							"id": 887,
																							"name": "_owner",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 688,
																							"src": "16319:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "16306:20:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_structUser_$1906_storage",
																							"typeString": "struct structures.structUser storage ref"
																						}
																					},
																					"id": 889,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"memberName": "balance_seed",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1901,
																					"src": "16306:33:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"arguments": [
																						{
																							"id": 895,
																							"name": "_numTokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 692,
																							"src": "16380:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"baseExpression": {
																									"id": 890,
																									"name": "structUsers_",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1911,
																									"src": "16342:12:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																										"typeString": "mapping(address => struct structures.structUser storage ref)"
																									}
																								},
																								"id": 892,
																								"indexExpression": {
																									"id": 891,
																									"name": "_owner",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 688,
																									"src": "16355:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "16342:20:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_structUser_$1906_storage",
																									"typeString": "struct structures.structUser storage ref"
																								}
																							},
																							"id": 893,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "balance_seed",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1901,
																							"src": "16342:33:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 894,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1761,
																						"src": "16342:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 896,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16342:49:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "16306:85:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 898,
																			"nodeType": "ExpressionStatement",
																			"src": "16306:85:0"
																		},
																		{
																			"expression": {
																				"id": 914,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"baseExpression": {
																						"baseExpression": {
																							"id": 899,
																							"name": "allowed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 32,
																							"src": "16462:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																								"typeString": "mapping(address => mapping(address => uint256))"
																							}
																						},
																						"id": 903,
																						"indexExpression": {
																							"id": 900,
																							"name": "_owner",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 688,
																							"src": "16470:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "16462:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 904,
																					"indexExpression": {
																						"expression": {
																							"id": 901,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "16478:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 902,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "16478:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"nodeType": "IndexAccess",
																					"src": "16462:27:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"arguments": [
																						{
																							"id": 912,
																							"name": "_numTokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 692,
																							"src": "16524:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"baseExpression": {
																								"baseExpression": {
																									"id": 905,
																									"name": "allowed",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 32,
																									"src": "16492:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																										"typeString": "mapping(address => mapping(address => uint256))"
																									}
																								},
																								"id": 907,
																								"indexExpression": {
																									"id": 906,
																									"name": "_owner",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 688,
																									"src": "16500:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "16492:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																									"typeString": "mapping(address => uint256)"
																								}
																							},
																							"id": 910,
																							"indexExpression": {
																								"expression": {
																									"id": 908,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "16508:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 909,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "16508:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "16492:27:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 911,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1761,
																						"src": "16492:31:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 913,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16492:43:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "16462:73:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 915,
																			"nodeType": "ExpressionStatement",
																			"src": "16462:73:0"
																		},
																		{
																			"expression": {
																				"id": 927,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"expression": {
																						"baseExpression": {
																							"id": 916,
																							"name": "structUsers_",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1911,
																							"src": "16618:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																								"typeString": "mapping(address => struct structures.structUser storage ref)"
																							}
																						},
																						"id": 918,
																						"indexExpression": {
																							"id": 917,
																							"name": "_buyer",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 690,
																							"src": "16631:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "16618:20:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_structUser_$1906_storage",
																							"typeString": "struct structures.structUser storage ref"
																						}
																					},
																					"id": 919,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"memberName": "balance_seed",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1901,
																					"src": "16618:33:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"arguments": [
																						{
																							"id": 925,
																							"name": "_numTokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 692,
																							"src": "16692:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"baseExpression": {
																									"id": 920,
																									"name": "structUsers_",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1911,
																									"src": "16654:12:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																										"typeString": "mapping(address => struct structures.structUser storage ref)"
																									}
																								},
																								"id": 922,
																								"indexExpression": {
																									"id": 921,
																									"name": "_buyer",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 690,
																									"src": "16667:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "16654:20:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_structUser_$1906_storage",
																									"typeString": "struct structures.structUser storage ref"
																								}
																							},
																							"id": 923,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "balance_seed",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1901,
																							"src": "16654:33:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 924,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "add",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1740,
																						"src": "16654:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 926,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16654:49:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "16618:85:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 928,
																			"nodeType": "ExpressionStatement",
																			"src": "16618:85:0"
																		},
																		{
																			"eventCall": {
																				"arguments": [
																					{
																						"id": 930,
																						"name": "_owner",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 688,
																						"src": "16796:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"id": 931,
																						"name": "_buyer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 690,
																						"src": "16804:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"id": 932,
																						"name": "_numTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 692,
																						"src": "16812:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 929,
																					"name": "Transfer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1546,
																					"src": "16787:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																						"typeString": "function (address,address,uint256)"
																					}
																				},
																				"id": 933,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "16787:36:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 934,
																			"nodeType": "EmitStatement",
																			"src": "16782:41:0"
																		},
																		{
																			"expression": {
																				"hexValue": "74727565",
																				"id": 935,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16849:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"functionReturnParameters": 697,
																			"id": 936,
																			"nodeType": "Return",
																			"src": "16842:11:0"
																		}
																	]
																}
															}
														]
													}
												},
												"id": 1173,
												"nodeType": "IfStatement",
												"src": "13710:6090:0",
												"trueBody": {
													"id": 854,
													"nodeType": "Block",
													"src": "13785:1961:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 705,
																		"name": "validateOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1403,
																		"src": "13845:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																			"typeString": "function () view returns (bool)"
																		}
																	},
																	"id": 706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13845:15:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "74727565",
																	"id": 707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13864:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "13845:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 852,
																"nodeType": "Block",
																"src": "14867:868:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 787,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 782,
																						"name": "_numTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 692,
																						"src": "14894:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"expression": {
																							"baseExpression": {
																								"id": 783,
																								"name": "structUsers_",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1911,
																								"src": "14908:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																									"typeString": "mapping(address => struct structures.structUser storage ref)"
																								}
																							},
																							"id": 785,
																							"indexExpression": {
																								"id": 784,
																								"name": "_owner",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 688,
																								"src": "14921:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "14908:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_structUser_$1906_storage",
																								"typeString": "struct structures.structUser storage ref"
																							}
																						},
																						"id": 786,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "balance_seed",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1901,
																						"src": "14908:33:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14894:47:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"id": 781,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "14886:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																					"typeString": "function (bool) pure"
																				}
																			},
																			"id": 788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14886:56:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 789,
																		"nodeType": "ExpressionStatement",
																		"src": "14886:56:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 798,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 791,
																						"name": "_numTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 692,
																						"src": "15036:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 792,
																								"name": "allowed",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 32,
																								"src": "15050:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(address => mapping(address => uint256))"
																								}
																							},
																							"id": 794,
																							"indexExpression": {
																								"id": 793,
																								"name": "_owner",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 688,
																								"src": "15058:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "15050:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 797,
																						"indexExpression": {
																							"expression": {
																								"id": 795,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "15066:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 796,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "15066:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "15050:27:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "15036:41:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"id": 790,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "15028:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																					"typeString": "function (bool) pure"
																				}
																			},
																			"id": 799,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15028:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 800,
																		"nodeType": "ExpressionStatement",
																		"src": "15028:50:0"
																	},
																	{
																		"expression": {
																			"id": 812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 801,
																						"name": "structUsers_",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1911,
																						"src": "15172:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																							"typeString": "mapping(address => struct structures.structUser storage ref)"
																						}
																					},
																					"id": 803,
																					"indexExpression": {
																						"id": 802,
																						"name": "_owner",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 688,
																						"src": "15185:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "15172:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_structUser_$1906_storage",
																						"typeString": "struct structures.structUser storage ref"
																					}
																				},
																				"id": 804,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "balance_seed",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1901,
																				"src": "15172:33:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 810,
																						"name": "_numTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 692,
																						"src": "15246:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"baseExpression": {
																								"id": 805,
																								"name": "structUsers_",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1911,
																								"src": "15208:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																									"typeString": "mapping(address => struct structures.structUser storage ref)"
																								}
																							},
																							"id": 807,
																							"indexExpression": {
																								"id": 806,
																								"name": "_owner",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 688,
																								"src": "15221:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "15208:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_structUser_$1906_storage",
																								"typeString": "struct structures.structUser storage ref"
																							}
																						},
																						"id": 808,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "balance_seed",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1901,
																						"src": "15208:33:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 809,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1761,
																					"src": "15208:37:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 811,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "15208:49:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15172:85:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 813,
																		"nodeType": "ExpressionStatement",
																		"src": "15172:85:0"
																	},
																	{
																		"expression": {
																			"id": 829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 814,
																						"name": "allowed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 32,
																						"src": "15328:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																							"typeString": "mapping(address => mapping(address => uint256))"
																						}
																					},
																					"id": 818,
																					"indexExpression": {
																						"id": 815,
																						"name": "_owner",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 688,
																						"src": "15336:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "15328:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 819,
																				"indexExpression": {
																					"expression": {
																						"id": 816,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "15344:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 817,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "15344:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "15328:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 827,
																						"name": "_numTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 692,
																						"src": "15390:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 820,
																								"name": "allowed",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 32,
																								"src": "15358:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(address => mapping(address => uint256))"
																								}
																							},
																							"id": 822,
																							"indexExpression": {
																								"id": 821,
																								"name": "_owner",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 688,
																								"src": "15366:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "15358:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 825,
																						"indexExpression": {
																							"expression": {
																								"id": 823,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "15374:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 824,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "15374:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "15358:27:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 826,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1761,
																					"src": "15358:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 828,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "15358:43:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15328:73:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 830,
																		"nodeType": "ExpressionStatement",
																		"src": "15328:73:0"
																	},
																	{
																		"expression": {
																			"id": 842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 831,
																						"name": "structUsers_",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1911,
																						"src": "15484:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																							"typeString": "mapping(address => struct structures.structUser storage ref)"
																						}
																					},
																					"id": 833,
																					"indexExpression": {
																						"id": 832,
																						"name": "_buyer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 690,
																						"src": "15497:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "15484:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_structUser_$1906_storage",
																						"typeString": "struct structures.structUser storage ref"
																					}
																				},
																				"id": 834,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "balance_seed",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1901,
																				"src": "15484:33:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 840,
																						"name": "_numTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 692,
																						"src": "15558:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"baseExpression": {
																								"id": 835,
																								"name": "structUsers_",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1911,
																								"src": "15520:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																									"typeString": "mapping(address => struct structures.structUser storage ref)"
																								}
																							},
																							"id": 837,
																							"indexExpression": {
																								"id": 836,
																								"name": "_buyer",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 690,
																								"src": "15533:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "15520:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_structUser_$1906_storage",
																								"typeString": "struct structures.structUser storage ref"
																							}
																						},
																						"id": 838,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "balance_seed",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1901,
																						"src": "15520:33:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 839,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1740,
																					"src": "15520:37:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 841,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "15520:49:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15484:85:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 843,
																		"nodeType": "ExpressionStatement",
																		"src": "15484:85:0"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 845,
																					"name": "_owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "15662:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 846,
																					"name": "_buyer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 690,
																					"src": "15670:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 847,
																					"name": "_numTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 692,
																					"src": "15678:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 844,
																				"name": "Transfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1546,
																				"src": "15653:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15653:36:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 849,
																		"nodeType": "EmitStatement",
																		"src": "15648:41:0"
																	},
																	{
																		"expression": {
																			"hexValue": "74727565",
																			"id": 850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15715:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 697,
																		"id": 851,
																		"nodeType": "Return",
																		"src": "15708:11:0"
																	}
																]
															},
															"id": 853,
															"nodeType": "IfStatement",
															"src": "13841:1894:0",
															"trueBody": {
																"id": 780,
																"nodeType": "Block",
																"src": "13870:991:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 715,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 710,
																						"name": "_numTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 692,
																						"src": "14020:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"expression": {
																							"baseExpression": {
																								"id": 711,
																								"name": "structUsers_",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1911,
																								"src": "14034:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																									"typeString": "mapping(address => struct structures.structUser storage ref)"
																								}
																							},
																							"id": 713,
																							"indexExpression": {
																								"id": 712,
																								"name": "_owner",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 688,
																								"src": "14047:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "14034:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_structUser_$1906_storage",
																								"typeString": "struct structures.structUser storage ref"
																							}
																						},
																						"id": 714,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "balance_overall",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1899,
																						"src": "14034:36:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14020:50:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"id": 709,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "14012:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																					"typeString": "function (bool) pure"
																				}
																			},
																			"id": 716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14012:59:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 717,
																		"nodeType": "ExpressionStatement",
																		"src": "14012:59:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 726,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 719,
																						"name": "_numTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 692,
																						"src": "14162:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 720,
																								"name": "allowed",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 32,
																								"src": "14176:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(address => mapping(address => uint256))"
																								}
																							},
																							"id": 722,
																							"indexExpression": {
																								"id": 721,
																								"name": "_owner",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 688,
																								"src": "14184:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "14176:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 725,
																						"indexExpression": {
																							"expression": {
																								"id": 723,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "14192:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 724,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "14192:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "14176:27:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14162:41:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"id": 718,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "14154:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																					"typeString": "function (bool) pure"
																				}
																			},
																			"id": 727,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14154:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 728,
																		"nodeType": "ExpressionStatement",
																		"src": "14154:50:0"
																	},
																	{
																		"expression": {
																			"id": 740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 729,
																						"name": "structUsers_",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1911,
																						"src": "14298:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																							"typeString": "mapping(address => struct structures.structUser storage ref)"
																						}
																					},
																					"id": 731,
																					"indexExpression": {
																						"id": 730,
																						"name": "_owner",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 688,
																						"src": "14311:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "14298:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_structUser_$1906_storage",
																						"typeString": "struct structures.structUser storage ref"
																					}
																				},
																				"id": 732,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "balance_seed",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1901,
																				"src": "14298:33:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 738,
																						"name": "_numTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 692,
																						"src": "14372:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"baseExpression": {
																								"id": 733,
																								"name": "structUsers_",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1911,
																								"src": "14334:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																									"typeString": "mapping(address => struct structures.structUser storage ref)"
																								}
																							},
																							"id": 735,
																							"indexExpression": {
																								"id": 734,
																								"name": "_owner",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 688,
																								"src": "14347:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "14334:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_structUser_$1906_storage",
																								"typeString": "struct structures.structUser storage ref"
																							}
																						},
																						"id": 736,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "balance_seed",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1901,
																						"src": "14334:33:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 737,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1761,
																					"src": "14334:37:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 739,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14334:49:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "14298:85:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 741,
																		"nodeType": "ExpressionStatement",
																		"src": "14298:85:0"
																	},
																	{
																		"expression": {
																			"id": 757,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 742,
																						"name": "allowed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 32,
																						"src": "14454:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																							"typeString": "mapping(address => mapping(address => uint256))"
																						}
																					},
																					"id": 746,
																					"indexExpression": {
																						"id": 743,
																						"name": "_owner",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 688,
																						"src": "14462:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "14454:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 747,
																				"indexExpression": {
																					"expression": {
																						"id": 744,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "14470:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 745,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "14470:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "14454:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 755,
																						"name": "_numTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 692,
																						"src": "14516:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 748,
																								"name": "allowed",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 32,
																								"src": "14484:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(address => mapping(address => uint256))"
																								}
																							},
																							"id": 750,
																							"indexExpression": {
																								"id": 749,
																								"name": "_owner",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 688,
																								"src": "14492:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "14484:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 753,
																						"indexExpression": {
																							"expression": {
																								"id": 751,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "14500:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 752,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "14500:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "14484:27:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 754,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1761,
																					"src": "14484:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 756,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14484:43:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "14454:73:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 758,
																		"nodeType": "ExpressionStatement",
																		"src": "14454:73:0"
																	},
																	{
																		"expression": {
																			"id": 770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 759,
																						"name": "structUsers_",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1911,
																						"src": "14610:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																							"typeString": "mapping(address => struct structures.structUser storage ref)"
																						}
																					},
																					"id": 761,
																					"indexExpression": {
																						"id": 760,
																						"name": "_buyer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 690,
																						"src": "14623:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "14610:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_structUser_$1906_storage",
																						"typeString": "struct structures.structUser storage ref"
																					}
																				},
																				"id": 762,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "balance_seed",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1901,
																				"src": "14610:33:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 768,
																						"name": "_numTokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 692,
																						"src": "14684:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"baseExpression": {
																								"id": 763,
																								"name": "structUsers_",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1911,
																								"src": "14646:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																									"typeString": "mapping(address => struct structures.structUser storage ref)"
																								}
																							},
																							"id": 765,
																							"indexExpression": {
																								"id": 764,
																								"name": "_buyer",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 690,
																								"src": "14659:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "14646:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_structUser_$1906_storage",
																								"typeString": "struct structures.structUser storage ref"
																							}
																						},
																						"id": 766,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "balance_seed",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1901,
																						"src": "14646:33:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 767,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1740,
																					"src": "14646:37:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 769,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14646:49:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "14610:85:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 771,
																		"nodeType": "ExpressionStatement",
																		"src": "14610:85:0"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 773,
																					"name": "_owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "14788:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 774,
																					"name": "_buyer",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 690,
																					"src": "14796:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 775,
																					"name": "_numTokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 692,
																					"src": "14804:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 772,
																				"name": "Transfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1546,
																				"src": "14779:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14779:36:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 777,
																		"nodeType": "EmitStatement",
																		"src": "14774:41:0"
																	},
																	{
																		"expression": {
																			"hexValue": "74727565",
																			"id": 778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14841:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 697,
																		"id": 779,
																		"nodeType": "Return",
																		"src": "14834:11:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "13603:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 694,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13675:8:0"
									},
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "13624:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "13616:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "_buyer",
												"nameLocation": "13640:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "13632:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13632:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "_numTokens",
												"nameLocation": "13656:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "13648:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13648:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13615:52:0"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "13693:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 695,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13693:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13692:6:0"
									},
									"scope": 1222,
									"src": "13594:6214:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1527
									],
									"body": {
										"id": 1203,
										"nodeType": "Block",
										"src": "20231:282:0",
										"statements": [
											{
												"expression": {
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1185,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "20242:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1189,
															"indexExpression": {
																"expression": {
																	"id": 1186,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "20250:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "20250:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20242:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1190,
														"indexExpression": {
															"id": 1188,
															"name": "_delegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "20262:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20242:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1191,
														"name": "_numTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "20275:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20242:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1193,
												"nodeType": "ExpressionStatement",
												"src": "20242:43:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1195,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "20449:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "20449:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1197,
															"name": "_delegate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "20461:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1198,
															"name": "_numTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "20472:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1194,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1554,
														"src": "20440:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20440:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1200,
												"nodeType": "EmitStatement",
												"src": "20435:48:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20501:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1184,
												"id": 1202,
												"nodeType": "Return",
												"src": "20494:11:0"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 1204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "20153:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1181,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "20207:8:0"
									},
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "_delegate",
												"nameLocation": "20169:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "20161:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20161:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "_numTokens",
												"nameLocation": "20188:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "20180:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20160:39:0"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "20225:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1182,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20225:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20224:6:0"
									},
									"scope": 1222,
									"src": "20144:369:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1509
									],
									"body": {
										"id": 1220,
										"nodeType": "Block",
										"src": "20885:52:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1214,
															"name": "allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "20903:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1216,
														"indexExpression": {
															"id": 1215,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "20911:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "20903:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1218,
													"indexExpression": {
														"id": 1217,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "20919:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "20903:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1213,
												"id": 1219,
												"nodeType": "Return",
												"src": "20896:33:0"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 1221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "20804:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1210,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "20856:8:0"
									},
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "20822:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "20814:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20814:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "_delegate",
												"nameLocation": "20838:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "20830:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20830:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20813:35:0"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "20879:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "20879:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20878:6:0"
									},
									"scope": 1222,
									"src": "20795:142:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1223,
							"src": "377:20563:0",
							"usedErrors": []
						}
					],
					"src": "37:20903:0"
				},
				"id": 0
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol": {
				"ast": {
					"absolutePath": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhasePrivate.sol",
					"exportedSymbols": {
						"Main": [
							1357
						],
						"PhasePrivate": [
							1281
						],
						"getFuncs": [
							1376
						],
						"structures": [
							1940
						],
						"validateFuncs": [
							1486
						]
					},
					"id": 1282,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1224,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:1"
						},
						{
							"absolutePath": "Documents/GitHub/contract-token-cryptoMonster/backend/components/main.sol",
							"file": "./main.sol",
							"id": 1225,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1282,
							"sourceUnit": 1358,
							"src": "72:20:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1226,
										"name": "Main",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1357,
										"src": "121:4:1"
									},
									"id": 1227,
									"nodeType": "InheritanceSpecifier",
									"src": "121:4:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1281,
							"linearizedBaseContracts": [
								1281,
								1357,
								1486,
								1376,
								1940
							],
							"name": "PhasePrivate",
							"nameLocation": "105:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1261,
										"nodeType": "Block",
										"src": "331:320:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1237,
																		"name": "strucApplications_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1939,
																		"src": "350:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structApplication_$1934_storage_$",
																			"typeString": "mapping(address => struct structures.structApplication storage ref)"
																		}
																	},
																	"id": 1240,
																	"indexExpression": {
																		"expression": {
																			"id": 1238,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "369:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "369:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "350:30:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_structApplication_$1934_storage",
																		"typeString": "struct structures.structApplication storage ref"
																	}
																},
																"id": 1241,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "exist",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1933,
																"src": "350:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "390:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "350:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4170706c69636174696f6e20616c72656164792073656e7421",
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "396:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_97560a8dc06e7ebc393b3d32f64f2c70cc4ba72f1d5b74bca5ea1a4d60e7d88d",
																"typeString": "literal_string \"Application already sent!\""
															},
															"value": "Application already sent!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_97560a8dc06e7ebc393b3d32f64f2c70cc4ba72f1d5b74bca5ea1a4d60e7d88d",
																"typeString": "literal_string \"Application already sent!\""
															}
														],
														"id": 1236,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "342:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "342:82:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1246,
												"nodeType": "ExpressionStatement",
												"src": "342:82:1"
											},
											{
												"expression": {
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1247,
															"name": "strucApplications_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1939,
															"src": "530:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structApplication_$1934_storage_$",
																"typeString": "mapping(address => struct structures.structApplication storage ref)"
															}
														},
														"id": 1250,
														"indexExpression": {
															"expression": {
																"id": 1248,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "549:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "549:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "530:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_structApplication_$1934_storage",
															"typeString": "struct structures.structApplication storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1252,
																"name": "_name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1229,
																"src": "582:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"id": 1253,
																"name": "_contactForCommunication",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1231,
																"src": "589:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"id": 1254,
																"name": "_userAdr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1233,
																"src": "615:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "74727565",
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "625:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"hexValue": "66616c7365",
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "631:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "74727565",
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "638:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 1251,
															"name": "structApplication",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1934,
															"src": "564:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_structApplication_$1934_storage_ptr_$",
																"typeString": "type(struct structures.structApplication storage pointer)"
															}
														},
														"id": 1258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "564:79:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_structApplication_$1934_memory_ptr",
															"typeString": "struct structures.structApplication memory"
														}
													},
													"src": "530:113:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_structApplication_$1934_storage",
														"typeString": "struct structures.structApplication storage ref"
													}
												},
												"id": 1260,
												"nodeType": "ExpressionStatement",
												"src": "530:113:1"
											}
										]
									},
									"functionSelector": "785963c3",
									"id": 1262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "application",
									"nameLocation": "233:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "259:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "245:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1228,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "245:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "_contactForCommunication",
												"nameLocation": "280:24:1",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "266:38:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1230,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "266:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "_userAdr",
												"nameLocation": "314:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "306:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "306:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "244:79:1"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "331:0:1"
									},
									"scope": 1281,
									"src": "224:427:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1279,
										"nodeType": "Block",
										"src": "782:117:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Role_$1890",
																"typeString": "enum structures.Role"
															},
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1268,
																		"name": "structUsers_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1911,
																		"src": "801:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																			"typeString": "mapping(address => struct structures.structUser storage ref)"
																		}
																	},
																	"id": 1271,
																	"indexExpression": {
																		"expression": {
																			"id": 1269,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "814:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "814:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "801:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_structUser_$1906_storage",
																		"typeString": "struct structures.structUser storage ref"
																	}
																},
																"id": 1272,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "role",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1893,
																"src": "801:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$1890",
																	"typeString": "enum structures.Role"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1273,
																	"name": "Role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1890,
																	"src": "834:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Role_$1890_$",
																		"typeString": "type(enum structures.Role)"
																	}
																},
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "SYSTEM_PRIVATE",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1887,
																"src": "834:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$1890",
																	"typeString": "enum structures.Role"
																}
															},
															"src": "801:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f74206120707269766174652070726f766964657221",
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "855:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_19d3e2a9ee1c76e7edeb7619e2ff0e7534e58f7bb978671162fd0659f8514a66",
																"typeString": "literal_string \"You are not a private provider!\""
															},
															"value": "You are not a private provider!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_19d3e2a9ee1c76e7edeb7619e2ff0e7534e58f7bb978671162fd0659f8514a66",
																"typeString": "literal_string \"You are not a private provider!\""
															}
														],
														"id": 1267,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "793:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "793:96:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1278,
												"nodeType": "ExpressionStatement",
												"src": "793:96:1"
											}
										]
									},
									"functionSelector": "9d9e7a4b",
									"id": 1280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "acceptApplication",
									"nameLocation": "736:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "_changeStatus",
												"nameLocation": "760:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "755:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "755:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "754:20:1"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "782:0:1"
									},
									"scope": 1281,
									"src": "727:172:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1282,
							"src": "96:806:1",
							"usedErrors": []
						}
					],
					"src": "37:865:1"
				},
				"id": 1
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol": {
				"ast": {
					"absolutePath": "Documents/GitHub/contract-token-cryptoMonster/backend/components/PhaseSeed.sol",
					"exportedSymbols": {
						"Main": [
							1357
						],
						"PhaseSeed": [
							1351
						],
						"getFuncs": [
							1376
						],
						"structures": [
							1940
						],
						"validateFuncs": [
							1486
						]
					},
					"id": 1352,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1283,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:2"
						},
						{
							"absolutePath": "Documents/GitHub/contract-token-cryptoMonster/backend/components/main.sol",
							"file": "./main.sol",
							"id": 1284,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1352,
							"sourceUnit": 1358,
							"src": "72:20:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1285,
										"name": "Main",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1357,
										"src": "167:4:2"
									},
									"id": 1286,
									"nodeType": "InheritanceSpecifier",
									"src": "167:4:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1351,
							"linearizedBaseContracts": [
								1351,
								1357,
								1486,
								1376,
								1940
							],
							"name": "PhaseSeed",
							"nameLocation": "154:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1289,
									"mutability": "mutable",
									"name": "investorFirstAdr",
									"nameLocation": "187:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 1351,
									"src": "179:69:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1287,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "179:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307837383733314433436136623745333461433046383234633432613763433138413439356361626142",
										"id": 1288,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "206:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x78731D3Ca6b7E34aC0F824c42a7cC18A495cabaB"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1292,
									"mutability": "mutable",
									"name": "investorSecondAdr",
									"nameLocation": "277:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 1351,
									"src": "269:70:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1290,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "269:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307836313746324532664437324644394435353033313937303932614331363863393134363545376632",
										"id": 1291,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "297:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x617F2E2fD72FD9D5503197092aC168c91465E7f2"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1295,
									"mutability": "mutable",
									"name": "bestFriendAdr",
									"nameLocation": "367:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 1351,
									"src": "359:66:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1293,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "359:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307831374636414438456639383232393735373943323033303639433144626646453433343863333732",
										"id": 1294,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "383:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x17F6AD8Ef982297579C203069C1DbfFE4348c372"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1349,
										"nodeType": "Block",
										"src": "540:403:2",
										"statements": [
											{
												"expression": {
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1298,
															"name": "structUsers_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1911,
															"src": "551:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																"typeString": "mapping(address => struct structures.structUser storage ref)"
															}
														},
														"id": 1300,
														"indexExpression": {
															"id": 1299,
															"name": "investorFirstAdr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "564:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "551:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_structUser_$1906_storage",
															"typeString": "struct structures.structUser storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1302,
																	"name": "Role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1890,
																	"src": "595:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Role_$1890_$",
																		"typeString": "type(enum structures.Role)"
																	}
																},
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "INVESTOR",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1888,
																"src": "595:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$1890",
																	"typeString": "enum structures.Role"
																}
															},
															{
																"hexValue": "496e766573746f7231",
																"id": 1304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "611:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d0a05a97df9c4b7b791eedd06e4a00dfe69eb7e854483a05eac8126157986b33",
																	"typeString": "literal_string \"Investor1\""
																},
																"value": "Investor1"
															},
															{
																"arguments": [
																	{
																		"hexValue": "33343132",
																		"id": 1306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "638:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_66ad679a6ab6b7624d6cbe7f5b8e4651463ae1f5bcef33b44f1e540209f7341b",
																			"typeString": "literal_string \"3412\""
																		},
																		"value": "3412"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_66ad679a6ab6b7624d6cbe7f5b8e4651463ae1f5bcef33b44f1e540209f7341b",
																			"typeString": "literal_string \"3412\""
																		}
																	],
																	"id": 1305,
																	"name": "get_keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1375,
																	"src": "624:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (string memory) pure returns (bytes32)"
																	}
																},
																"id": 1307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "624:21:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"hexValue": "30",
																"id": 1308,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "647:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 1309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "650:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "653:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "656:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Role_$1890",
																	"typeString": "enum structures.Role"
																},
																{
																	"typeIdentifier": "t_stringliteral_d0a05a97df9c4b7b791eedd06e4a00dfe69eb7e854483a05eac8126157986b33",
																	"typeString": "literal_string \"Investor1\""
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1301,
															"name": "structUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1906,
															"src": "584:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_structUser_$1906_storage_ptr_$",
																"typeString": "type(struct structures.structUser storage pointer)"
															}
														},
														"id": 1312,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "584:74:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_structUser_$1906_memory_ptr",
															"typeString": "struct structures.structUser memory"
														}
													},
													"src": "551:107:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_structUser_$1906_storage",
														"typeString": "struct structures.structUser storage ref"
													}
												},
												"id": 1314,
												"nodeType": "ExpressionStatement",
												"src": "551:107:2"
											},
											{
												"expression": {
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1315,
															"name": "structUsers_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1911,
															"src": "682:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																"typeString": "mapping(address => struct structures.structUser storage ref)"
															}
														},
														"id": 1317,
														"indexExpression": {
															"id": 1316,
															"name": "investorSecondAdr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "695:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "682:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_structUser_$1906_storage",
															"typeString": "struct structures.structUser storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1319,
																	"name": "Role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1890,
																	"src": "727:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Role_$1890_$",
																		"typeString": "type(enum structures.Role)"
																	}
																},
																"id": 1320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "INVESTOR",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1888,
																"src": "727:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$1890",
																	"typeString": "enum structures.Role"
																}
															},
															{
																"hexValue": "496e766573746f7231",
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "742:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d0a05a97df9c4b7b791eedd06e4a00dfe69eb7e854483a05eac8126157986b33",
																	"typeString": "literal_string \"Investor1\""
																},
																"value": "Investor1"
															},
															{
																"arguments": [
																	{
																		"hexValue": "31343233",
																		"id": 1323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "769:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_560f53f9e6643f63dace8b2695c9680c3b0d96473ff0914d6a3517970d490ef6",
																			"typeString": "literal_string \"1423\""
																		},
																		"value": "1423"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_560f53f9e6643f63dace8b2695c9680c3b0d96473ff0914d6a3517970d490ef6",
																			"typeString": "literal_string \"1423\""
																		}
																	],
																	"id": 1322,
																	"name": "get_keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1375,
																	"src": "755:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (string memory) pure returns (bytes32)"
																	}
																},
																"id": 1324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "755:21:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"hexValue": "30",
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "778:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "781:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "784:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "787:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Role_$1890",
																	"typeString": "enum structures.Role"
																},
																{
																	"typeIdentifier": "t_stringliteral_d0a05a97df9c4b7b791eedd06e4a00dfe69eb7e854483a05eac8126157986b33",
																	"typeString": "literal_string \"Investor1\""
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1318,
															"name": "structUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1906,
															"src": "716:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_structUser_$1906_storage_ptr_$",
																"typeString": "type(struct structures.structUser storage pointer)"
															}
														},
														"id": 1329,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "716:73:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_structUser_$1906_memory_ptr",
															"typeString": "struct structures.structUser memory"
														}
													},
													"src": "682:107:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_structUser_$1906_storage",
														"typeString": "struct structures.structUser storage ref"
													}
												},
												"id": 1331,
												"nodeType": "ExpressionStatement",
												"src": "682:107:2"
											},
											{
												"expression": {
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1332,
															"name": "structUsers_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1911,
															"src": "813:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																"typeString": "mapping(address => struct structures.structUser storage ref)"
															}
														},
														"id": 1334,
														"indexExpression": {
															"id": 1333,
															"name": "bestFriendAdr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "826:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "813:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_structUser_$1906_storage",
															"typeString": "struct structures.structUser storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1336,
																	"name": "Role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1890,
																	"src": "854:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Role_$1890_$",
																		"typeString": "type(enum structures.Role)"
																	}
																},
																"id": 1337,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "INVESTOR",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1888,
																"src": "854:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Role_$1890",
																	"typeString": "enum structures.Role"
																}
															},
															{
																"hexValue": "4265737420667269656e64",
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "869:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_85bca78a6d512431c8b5ba7f8816d2311aafaac94f94909bcea4779b8a0545a5",
																	"typeString": "literal_string \"Best friend\""
																},
																"value": "Best friend"
															},
															{
																"arguments": [
																	{
																		"hexValue": "32333134",
																		"id": 1340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "898:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_a409469d725e39628d34ea5526ee949dc3293805e6f24e1ea217e96c641b8155",
																			"typeString": "literal_string \"2314\""
																		},
																		"value": "2314"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_a409469d725e39628d34ea5526ee949dc3293805e6f24e1ea217e96c641b8155",
																			"typeString": "literal_string \"2314\""
																		}
																	],
																	"id": 1339,
																	"name": "get_keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1375,
																	"src": "884:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (string memory) pure returns (bytes32)"
																	}
																},
																"id": 1341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "884:21:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"hexValue": "30",
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "907:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 1343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "910:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 1344,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "913:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "916:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Role_$1890",
																	"typeString": "enum structures.Role"
																},
																{
																	"typeIdentifier": "t_stringliteral_85bca78a6d512431c8b5ba7f8816d2311aafaac94f94909bcea4779b8a0545a5",
																	"typeString": "literal_string \"Best friend\""
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1335,
															"name": "structUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1906,
															"src": "843:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_structUser_$1906_storage_ptr_$",
																"typeString": "type(struct structures.structUser storage pointer)"
															}
														},
														"id": 1346,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "843:75:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_structUser_$1906_memory_ptr",
															"typeString": "struct structures.structUser memory"
														}
													},
													"src": "813:105:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_structUser_$1906_storage",
														"typeString": "struct structures.structUser storage ref"
													}
												},
												"id": 1348,
												"nodeType": "ExpressionStatement",
												"src": "813:105:2"
											}
										]
									},
									"id": 1350,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "537:2:2"
									},
									"returnParameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "540:0:2"
									},
									"scope": 1351,
									"src": "526:417:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1352,
							"src": "145:801:2",
							"usedErrors": []
						}
					],
					"src": "37:913:2"
				},
				"id": 2
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/components/main.sol": {
				"ast": {
					"absolutePath": "Documents/GitHub/contract-token-cryptoMonster/backend/components/main.sol",
					"exportedSymbols": {
						"Main": [
							1357
						],
						"getFuncs": [
							1376
						],
						"structures": [
							1940
						],
						"validateFuncs": [
							1486
						]
					},
					"id": 1358,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1353,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:3"
						},
						{
							"absolutePath": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol",
							"file": "../shared/helpers/validateFuncs.sol",
							"id": 1354,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1358,
							"sourceUnit": 1487,
							"src": "176:45:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1355,
										"name": "validateFuncs",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1486,
										"src": "242:13:3"
									},
									"id": 1356,
									"nodeType": "InheritanceSpecifier",
									"src": "242:13:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1357,
							"linearizedBaseContracts": [
								1357,
								1486,
								1376,
								1940
							],
							"name": "Main",
							"nameLocation": "234:4:3",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 1358,
							"src": "225:37:3",
							"usedErrors": []
						}
					],
					"src": "37:225:3"
				},
				"id": 3
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol": {
				"ast": {
					"absolutePath": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol",
					"exportedSymbols": {
						"getFuncs": [
							1376
						]
					},
					"id": 1377,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1359,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1376,
							"linearizedBaseContracts": [
								1376
							],
							"name": "getFuncs",
							"nameLocation": "81:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "217:65:4",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1369,
																			"name": "_hash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1361,
																			"src": "266:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"expression": {
																			"id": 1367,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "249:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "249:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 1370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "249:23:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1366,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "239:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "239:34:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 1372,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "238:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1365,
												"id": 1373,
												"nodeType": "Return",
												"src": "232:42:4"
											}
										]
									},
									"functionSelector": "8e4f8c6b",
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get_keccak256",
									"nameLocation": "153:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "_hash",
												"nameLocation": "181:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "167:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1360,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "167:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "166:21:4"
									},
									"returnParameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "208:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "208:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "207:9:4"
									},
									"scope": 1376,
									"src": "144:138:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1377,
							"src": "72:213:4",
							"usedErrors": []
						}
					],
					"src": "37:248:4"
				},
				"id": 4
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol": {
				"ast": {
					"absolutePath": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/validateFuncs.sol",
					"exportedSymbols": {
						"getFuncs": [
							1376
						],
						"structures": [
							1940
						],
						"validateFuncs": [
							1486
						]
					},
					"id": 1487,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1378,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:5"
						},
						{
							"absolutePath": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol",
							"file": "../lib/structures.sol",
							"id": 1379,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1487,
							"sourceUnit": 1941,
							"src": "72:31:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/helpers/getFuncs.sol",
							"file": "./getFuncs.sol",
							"id": 1380,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1487,
							"sourceUnit": 1377,
							"src": "105:24:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1381,
										"name": "structures",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1940,
										"src": "293:10:5"
									},
									"id": 1382,
									"nodeType": "InheritanceSpecifier",
									"src": "293:10:5"
								},
								{
									"baseName": {
										"id": 1383,
										"name": "getFuncs",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1376,
										"src": "305:8:5"
									},
									"id": 1384,
									"nodeType": "InheritanceSpecifier",
									"src": "305:8:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1486,
							"linearizedBaseContracts": [
								1486,
								1376,
								1940
							],
							"name": "validateFuncs",
							"nameLocation": "276:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1402,
										"nodeType": "Block",
										"src": "459:234:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Role_$1890",
														"typeString": "enum structures.Role"
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1389,
																"name": "structUsers_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1911,
																"src": "474:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
																	"typeString": "mapping(address => struct structures.structUser storage ref)"
																}
															},
															"id": 1392,
															"indexExpression": {
																"expression": {
																	"id": 1390,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "487:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "487:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "474:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_structUser_$1906_storage",
																"typeString": "struct structures.structUser storage ref"
															}
														},
														"id": 1393,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "role",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1893,
														"src": "474:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Role_$1890",
															"typeString": "enum structures.Role"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1394,
															"name": "Role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1890,
															"src": "507:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Role_$1890_$",
																"typeString": "type(enum structures.Role)"
															}
														},
														"id": 1395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "SYSTEM_OWNER",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1885,
														"src": "507:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Role_$1890",
															"typeString": "enum structures.Role"
														}
													},
													"src": "474:50:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1399,
												"nodeType": "IfStatement",
												"src": "470:80:5",
												"trueBody": {
													"expression": {
														"hexValue": "74727565",
														"id": 1397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "546:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"functionReturnParameters": 1388,
													"id": 1398,
													"nodeType": "Return",
													"src": "539:11:5"
												}
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "624:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 1388,
												"id": 1401,
												"nodeType": "Return",
												"src": "617:12:5"
											}
										]
									},
									"id": 1403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "validateOwner",
									"nameLocation": "414:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "427:2:5"
									},
									"returnParameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "453:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1386,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "453:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:6:5"
									},
									"scope": 1486,
									"src": "405:288:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "895:1076:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1415,
																"name": "_type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1405,
																"src": "924:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"id": 1414,
															"name": "get_keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "910:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (string memory) pure returns (bytes32)"
															}
														},
														"id": 1416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "910:20:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "73656564",
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "948:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_66a80b61b29ec044d14c4c8c613e762ba1fb8eeb0c454d1ee00ed6dedaa5b5c5",
																	"typeString": "literal_string \"seed\""
																},
																"value": "seed"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_66a80b61b29ec044d14c4c8c613e762ba1fb8eeb0c454d1ee00ed6dedaa5b5c5",
																	"typeString": "literal_string \"seed\""
																}
															],
															"id": 1417,
															"name": "get_keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "934:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (string memory) pure returns (bytes32)"
															}
														},
														"id": 1419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "934:21:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "910:45:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1441,
																	"name": "_type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1405,
																	"src": "1282:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1440,
																"name": "get_keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1375,
																"src": "1268:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (string memory) pure returns (bytes32)"
																}
															},
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1268:20:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "70726976617465",
																	"id": 1444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1306:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ba0b8d7971d83a895b04f69bb35eb4161849cc1e4886c0eec88858e4667ebaae",
																		"typeString": "literal_string \"private\""
																	},
																	"value": "private"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_ba0b8d7971d83a895b04f69bb35eb4161849cc1e4886c0eec88858e4667ebaae",
																		"typeString": "literal_string \"private\""
																	}
																],
																"id": 1443,
																"name": "get_keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1375,
																"src": "1292:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (string memory) pure returns (bytes32)"
																}
															},
															"id": 1445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1292:24:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "1268:48:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1460,
																		"name": "_type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1405,
																		"src": "1586:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1459,
																	"name": "get_keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1375,
																	"src": "1572:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (string memory) pure returns (bytes32)"
																	}
																},
																"id": 1461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1572:20:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "7075626c6963",
																		"id": 1463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1610:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3c0c3a2537aaf75b853bbf2b595e872d3db0359b7e792ebd8907fb017c3b71a2",
																			"typeString": "literal_string \"public\""
																		},
																		"value": "public"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_3c0c3a2537aaf75b853bbf2b595e872d3db0359b7e792ebd8907fb017c3b71a2",
																			"typeString": "literal_string \"public\""
																		}
																	],
																	"id": 1462,
																	"name": "get_keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1375,
																	"src": "1596:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (string memory) pure returns (bytes32)"
																	}
																},
																"id": 1464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1596:23:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "1572:47:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 1480,
															"nodeType": "Block",
															"src": "1869:95:5",
															"statements": [
																{
																	"expression": {
																		"hexValue": "66616c7365",
																		"id": 1478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1891:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"functionReturnParameters": 1413,
																	"id": 1479,
																	"nodeType": "Return",
																	"src": "1884:12:5"
																}
															]
														},
														"id": 1481,
														"nodeType": "IfStatement",
														"src": "1568:396:5",
														"trueBody": {
															"id": 1477,
															"nodeType": "Block",
															"src": "1621:242:5",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 1466,
																					"name": "structPhases_",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1921,
																					"src": "1640:13:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structPhase_$1916_storage_$",
																						"typeString": "mapping(address => struct structures.structPhase storage ref)"
																					}
																				},
																				"id": 1468,
																				"indexExpression": {
																					"id": 1467,
																					"name": "_providerPublic",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1409,
																					"src": "1654:15:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1640:30:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_structPhase_$1916_storage",
																					"typeString": "struct structures.structPhase storage ref"
																				}
																			},
																			"id": 1469,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "statusPhase",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1913,
																			"src": "1640:42:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "74727565",
																			"id": 1470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1686:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"src": "1640:50:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1474,
																	"nodeType": "IfStatement",
																	"src": "1636:80:5",
																	"trueBody": {
																		"expression": {
																			"hexValue": "74727565",
																			"id": 1472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1712:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 1413,
																		"id": 1473,
																		"nodeType": "Return",
																		"src": "1705:11:5"
																	}
																},
																{
																	"expression": {
																		"hexValue": "66616c7365",
																		"id": 1475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1790:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"functionReturnParameters": 1413,
																	"id": 1476,
																	"nodeType": "Return",
																	"src": "1783:12:5"
																}
															]
														}
													},
													"id": 1482,
													"nodeType": "IfStatement",
													"src": "1264:700:5",
													"trueBody": {
														"id": 1458,
														"nodeType": "Block",
														"src": "1318:244:5",
														"statements": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1447,
																				"name": "structPhases_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1921,
																				"src": "1337:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structPhase_$1916_storage_$",
																					"typeString": "mapping(address => struct structures.structPhase storage ref)"
																				}
																			},
																			"id": 1449,
																			"indexExpression": {
																				"id": 1448,
																				"name": "_providerPrivate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1407,
																				"src": "1351:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1337:31:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_structPhase_$1916_storage",
																				"typeString": "struct structures.structPhase storage ref"
																			}
																		},
																		"id": 1450,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "statusPhase",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1913,
																		"src": "1337:43:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "74727565",
																		"id": 1451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1384:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	"src": "1337:51:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1455,
																"nodeType": "IfStatement",
																"src": "1333:82:5",
																"trueBody": {
																	"expression": {
																		"hexValue": "74727565",
																		"id": 1453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1411:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	"functionReturnParameters": 1413,
																	"id": 1454,
																	"nodeType": "Return",
																	"src": "1404:11:5"
																}
															},
															{
																"expression": {
																	"hexValue": "66616c7365",
																	"id": 1456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1489:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"functionReturnParameters": 1413,
																"id": 1457,
																"nodeType": "Return",
																"src": "1482:12:5"
															}
														]
													}
												},
												"id": 1483,
												"nodeType": "IfStatement",
												"src": "906:1058:5",
												"trueBody": {
													"id": 1439,
													"nodeType": "Block",
													"src": "957:301:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1421,
																				"name": "structPhases_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1921,
																				"src": "976:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structPhase_$1916_storage_$",
																					"typeString": "mapping(address => struct structures.structPhase storage ref)"
																				}
																			},
																			"id": 1423,
																			"indexExpression": {
																				"id": 1422,
																				"name": "_providerPrivate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1407,
																				"src": "990:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "976:31:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_structPhase_$1916_storage",
																				"typeString": "struct structures.structPhase storage ref"
																			}
																		},
																		"id": 1424,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "statusPhase",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1913,
																		"src": "976:43:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "66616c7365",
																		"id": 1425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1023:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"src": "976:52:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1427,
																				"name": "structPhases_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1921,
																				"src": "1032:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structPhase_$1916_storage_$",
																					"typeString": "mapping(address => struct structures.structPhase storage ref)"
																				}
																			},
																			"id": 1429,
																			"indexExpression": {
																				"id": 1428,
																				"name": "_providerPublic",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1409,
																				"src": "1046:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1032:30:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_structPhase_$1916_storage",
																				"typeString": "struct structures.structPhase storage ref"
																			}
																		},
																		"id": 1430,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "statusPhase",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1913,
																		"src": "1032:42:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "66616c7365",
																		"id": 1431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1078:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"src": "1032:51:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "976:107:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1436,
															"nodeType": "IfStatement",
															"src": "972:139:5",
															"trueBody": {
																"expression": {
																	"hexValue": "74727565",
																	"id": 1434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1107:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"functionReturnParameters": 1413,
																"id": 1435,
																"nodeType": "Return",
																"src": "1100:11:5"
															}
														},
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1437,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1185:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1413,
															"id": 1438,
															"nodeType": "Return",
															"src": "1178:12:5"
														}
													]
												}
											}
										]
									},
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "validatePhase",
									"nameLocation": "780:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "_type",
												"nameLocation": "808:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "794:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1404,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "794:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "_providerPrivate",
												"nameLocation": "823:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "815:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "815:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "_providerPublic",
												"nameLocation": "849:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "841:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "841:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "793:72:5"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "889:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1411,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "889:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:6:5"
									},
									"scope": 1486,
									"src": "771:1200:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1487,
							"src": "267:1711:5",
							"usedErrors": []
						}
					],
					"src": "37:1941:5"
				},
				"id": 5
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/IERC20.sol": {
				"ast": {
					"absolutePath": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1555
						]
					},
					"id": 1556,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1488,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1555,
							"linearizedBaseContracts": [
								1555
							],
							"name": "IERC20",
							"nameLocation": "82:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 1493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "105:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "116:2:6"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "142:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "142:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "141:9:6"
									},
									"scope": 1555,
									"src": "96:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 1500,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "266:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "284:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "276:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "276:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "275:18:6"
									},
									"returnParameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "317:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "317:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "316:9:6"
									},
									"scope": 1555,
									"src": "257:69:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 1509,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "453:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "471:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "463:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "463:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "487:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "479:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "479:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "462:34:6"
									},
									"returnParameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "520:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "519:9:6"
									},
									"scope": 1555,
									"src": "444:85:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1518,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "714:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "731:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "723:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "723:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "744:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "736:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "736:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:30:6"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "771:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1515,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "771:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "770:6:6"
									},
									"scope": 1555,
									"src": "705:72:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 1527,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "901:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "917:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "909:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "909:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "935:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "927:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "927:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "908:35:6"
									},
									"returnParameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "962:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "962:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:6:6"
									},
									"scope": 1555,
									"src": "892:76:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 1538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1132:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1153:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "1145:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "1166:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "1158:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1158:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1181:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "1173:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1173:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:45:6"
									},
									"returnParameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "1208:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1535,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1208:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1207:6:6"
									},
									"scope": 1555,
									"src": "1123:91:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 1546,
									"name": "Transfer",
									"nameLocation": "1356:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1540,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "1381:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "1365:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1365:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1542,
												"indexed": true,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1404:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "1388:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1388:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "1417:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "1409:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1364:60:6"
									},
									"src": "1350:75:6"
								},
								{
									"anonymous": false,
									"id": 1554,
									"name": "Approval",
									"nameLocation": "1608:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"indexed": true,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1633:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "1617:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1617:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"indexed": true,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "1657:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "1641:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1641:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1552,
												"indexed": false,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "1675:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "1667:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1667:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1616:66:6"
									},
									"src": "1602:81:6"
								}
							],
							"scope": 1556,
							"src": "72:1753:6",
							"usedErrors": []
						}
					],
					"src": "37:1788:6"
				},
				"id": 6
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol": {
				"ast": {
					"absolutePath": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1882
						]
					},
					"id": 1883,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1557,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1882,
							"linearizedBaseContracts": [
								1882
							],
							"name": "SafeMath",
							"nameLocation": "80:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1588,
										"nodeType": "Block",
										"src": "313:146:7",
										"statements": [
											{
												"id": 1587,
												"nodeType": "UncheckedBlock",
												"src": "324:128:7",
												"statements": [
													{
														"assignments": [
															1570
														],
														"declarations": [
															{
																"constant": false,
																"id": 1570,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "357:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1587,
																"src": "349:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1569,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "349:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1574,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1571,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1560,
																"src": "361:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1572,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1562,
																"src": "365:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "361:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "349:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1575,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1570,
																"src": "385:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1576,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1560,
																"src": "389:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "385:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1582,
														"nodeType": "IfStatement",
														"src": "381:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "400:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "407:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1580,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "399:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1568,
															"id": 1581,
															"nodeType": "Return",
															"src": "392:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "432:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1584,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1570,
																	"src": "438:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1585,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "431:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1568,
														"id": 1586,
														"nodeType": "Return",
														"src": "424:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1558,
										"nodeType": "StructuredDocumentation",
										"src": "96:135:7",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "246:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "261:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "253:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "253:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "272:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "264:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "264:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "252:22:7"
									},
									"returnParameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "298:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1564,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "298:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "304:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "304:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "297:15:7"
									},
									"scope": 1882,
									"src": "237:222:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1616,
										"nodeType": "Block",
										"src": "687:118:7",
										"statements": [
											{
												"id": 1615,
												"nodeType": "UncheckedBlock",
												"src": "698:100:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1601,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1594,
																"src": "727:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1602,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1592,
																"src": "731:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "727:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1608,
														"nodeType": "IfStatement",
														"src": "723:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "742:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "749:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1606,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "741:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1600,
															"id": 1607,
															"nodeType": "Return",
															"src": "734:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "774:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1610,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1592,
																		"src": "780:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1611,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1594,
																		"src": "784:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "780:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1613,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "773:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1600,
														"id": 1614,
														"nodeType": "Return",
														"src": "766:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1590,
										"nodeType": "StructuredDocumentation",
										"src": "467:138:7",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "620:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "635:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "627:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "646:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "638:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "638:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "626:22:7"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "672:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1596,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "672:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "678:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "678:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "671:15:7"
									},
									"scope": 1882,
									"src": "611:194:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1658,
										"nodeType": "Block",
										"src": "1036:427:7",
										"statements": [
											{
												"id": 1657,
												"nodeType": "UncheckedBlock",
												"src": "1047:409:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1629,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1620,
																"src": "1309:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1630,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1314:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1309:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1636,
														"nodeType": "IfStatement",
														"src": "1305:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1325:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1331:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1634,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1324:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1628,
															"id": 1635,
															"nodeType": "Return",
															"src": "1317:16:7"
														}
													},
													{
														"assignments": [
															1638
														],
														"declarations": [
															{
																"constant": false,
																"id": 1638,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1356:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1657,
																"src": "1348:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1637,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1348:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1642,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1639,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1620,
																"src": "1360:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1640,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1622,
																"src": "1364:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1360:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1348:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1643,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1638,
																	"src": "1384:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1644,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1620,
																	"src": "1388:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1384:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1646,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1622,
																"src": "1393:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1384:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1652,
														"nodeType": "IfStatement",
														"src": "1380:33:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1404:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1411:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1650,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1403:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1628,
															"id": 1651,
															"nodeType": "Return",
															"src": "1396:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1436:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1654,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1638,
																	"src": "1442:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1655,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1435:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1628,
														"id": 1656,
														"nodeType": "Return",
														"src": "1428:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1618,
										"nodeType": "StructuredDocumentation",
										"src": "813:141:7",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "969:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "984:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "976:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "995:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "987:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:22:7"
									},
									"returnParameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "1021:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1624,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1021:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "1027:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1020:15:7"
									},
									"scope": 1882,
									"src": "960:503:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1686,
										"nodeType": "Block",
										"src": "1695:119:7",
										"statements": [
											{
												"id": 1685,
												"nodeType": "UncheckedBlock",
												"src": "1706:101:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1671,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1664,
																"src": "1735:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1740:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1735:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1678,
														"nodeType": "IfStatement",
														"src": "1731:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1751:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1758:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1676,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1750:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1670,
															"id": 1677,
															"nodeType": "Return",
															"src": "1743:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1783:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1680,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1662,
																		"src": "1789:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1681,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1664,
																		"src": "1793:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1789:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1683,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1782:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1670,
														"id": 1684,
														"nodeType": "Return",
														"src": "1775:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1660,
										"nodeType": "StructuredDocumentation",
										"src": "1471:142:7",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1628:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1643:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "1635:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1635:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1654:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "1646:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1646:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1634:22:7"
									},
									"returnParameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "1680:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1666,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1680:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "1686:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1679:15:7"
									},
									"scope": 1882,
									"src": "1619:195:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1714,
										"nodeType": "Block",
										"src": "2056:119:7",
										"statements": [
											{
												"id": 1713,
												"nodeType": "UncheckedBlock",
												"src": "2067:101:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1699,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1692,
																"src": "2096:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2101:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2096:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1706,
														"nodeType": "IfStatement",
														"src": "2092:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2112:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2119:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1704,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2111:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1698,
															"id": 1705,
															"nodeType": "Return",
															"src": "2104:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2144:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1708,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1690,
																		"src": "2150:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1709,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1692,
																		"src": "2154:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2150:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1711,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2143:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1698,
														"id": 1712,
														"nodeType": "Return",
														"src": "2136:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1688,
										"nodeType": "StructuredDocumentation",
										"src": "1822:152:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "1989:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2004:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "1996:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2015:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "2007:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2007:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:22:7"
									},
									"returnParameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "2041:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1694,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2041:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "2047:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2047:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2040:15:7"
									},
									"scope": 1882,
									"src": "1980:195:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1739,
										"nodeType": "Block",
										"src": "2489:74:7",
										"statements": [
											{
												"assignments": [
													1726
												],
												"declarations": [
													{
														"constant": false,
														"id": 1726,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2506:1:7",
														"nodeType": "VariableDeclaration",
														"scope": 1739,
														"src": "2498:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1725,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2498:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1730,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1727,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1718,
														"src": "2510:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1728,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "2514:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2510:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2498:17:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1732,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1726,
																"src": "2531:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1733,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1718,
																"src": "2536:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2531:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1731,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "2524:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2524:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1736,
												"nodeType": "ExpressionStatement",
												"src": "2524:14:7"
											},
											{
												"expression": {
													"id": 1737,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1726,
													"src": "2554:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1724,
												"id": 1738,
												"nodeType": "Return",
												"src": "2547:8:7"
											}
										]
									},
									"documentation": {
										"id": 1716,
										"nodeType": "StructuredDocumentation",
										"src": "2183:233:7",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2431:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2443:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "2435:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2435:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2454:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "2446:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2446:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2434:22:7"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "2480:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2480:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:9:7"
									},
									"scope": 1882,
									"src": "2422:141:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1760,
										"nodeType": "Block",
										"src": "2913:52:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1751,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1745,
																"src": "2929:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1752,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1743,
																"src": "2934:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2929:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1750,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "2922:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2922:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1755,
												"nodeType": "ExpressionStatement",
												"src": "2922:14:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1756,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1743,
														"src": "2952:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1757,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1745,
														"src": "2956:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2952:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1749,
												"id": 1759,
												"nodeType": "Return",
												"src": "2945:12:7"
											}
										]
									},
									"documentation": {
										"id": 1741,
										"nodeType": "StructuredDocumentation",
										"src": "2571:269:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "2855:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2867:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "2859:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2859:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2878:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "2870:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2870:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2858:22:7"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "2904:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2904:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2903:9:7"
									},
									"scope": 1882,
									"src": "2846:119:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1775,
										"nodeType": "Block",
										"src": "3291:31:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1771,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1764,
														"src": "3309:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1772,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1766,
														"src": "3313:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3309:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1770,
												"id": 1774,
												"nodeType": "Return",
												"src": "3302:12:7"
											}
										]
									},
									"documentation": {
										"id": 1762,
										"nodeType": "StructuredDocumentation",
										"src": "2973:245:7",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3233:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3245:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "3237:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3256:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "3248:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3248:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:22:7"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "3282:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3282:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3281:9:7"
									},
									"scope": 1882,
									"src": "3224:98:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1790,
										"nodeType": "Block",
										"src": "3690:31:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1786,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1779,
														"src": "3708:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1787,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1781,
														"src": "3712:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3708:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1785,
												"id": 1789,
												"nodeType": "Return",
												"src": "3701:12:7"
											}
										]
									},
									"documentation": {
										"id": 1777,
										"nodeType": "StructuredDocumentation",
										"src": "3330:287:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3632:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3644:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "3636:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3636:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3655:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "3647:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3647:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3635:22:7"
									},
									"returnParameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "3681:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3681:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3680:9:7"
									},
									"scope": 1882,
									"src": "3623:98:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1805,
										"nodeType": "Block",
										"src": "4255:31:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1801,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1794,
														"src": "4273:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1802,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1796,
														"src": "4277:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4273:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1800,
												"id": 1804,
												"nodeType": "Return",
												"src": "4266:12:7"
											}
										]
									},
									"documentation": {
										"id": 1792,
										"nodeType": "StructuredDocumentation",
										"src": "3729:453:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4197:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4209:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "4201:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4201:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4220:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "4212:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4212:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4200:22:7"
									},
									"returnParameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "4246:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4246:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4245:9:7"
									},
									"scope": 1882,
									"src": "4188:98:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1830,
										"nodeType": "Block",
										"src": "4858:111:7",
										"statements": [
											{
												"id": 1829,
												"nodeType": "UncheckedBlock",
												"src": "4869:93:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1819,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1811,
																		"src": "4902:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1820,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1809,
																		"src": "4907:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4902:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1822,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1813,
																	"src": "4910:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1818,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "4894:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4894:29:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1824,
														"nodeType": "ExpressionStatement",
														"src": "4894:29:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1825,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1809,
																"src": "4945:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1826,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1811,
																"src": "4949:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4945:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1817,
														"id": 1828,
														"nodeType": "Return",
														"src": "4938:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1807,
										"nodeType": "StructuredDocumentation",
										"src": "4294:465:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4774:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4786:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "4778:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4778:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4796:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "4788:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4788:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4812:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "4798:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1812,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4798:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4777:48:7"
									},
									"returnParameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "4849:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4849:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4848:9:7"
									},
									"scope": 1882,
									"src": "4765:204:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1855,
										"nodeType": "Block",
										"src": "5562:110:7",
										"statements": [
											{
												"id": 1854,
												"nodeType": "UncheckedBlock",
												"src": "5573:92:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1844,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1836,
																		"src": "5606:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5610:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5606:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1847,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1838,
																	"src": "5613:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1843,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5598:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5598:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1849,
														"nodeType": "ExpressionStatement",
														"src": "5598:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1850,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1834,
																"src": "5648:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1851,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1836,
																"src": "5652:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5648:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1842,
														"id": 1853,
														"nodeType": "Return",
														"src": "5641:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1832,
										"nodeType": "StructuredDocumentation",
										"src": "4977:484:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5476:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5488:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "5480:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5480:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5499:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "5491:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5491:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5516:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "5502:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1837,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5502:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5479:50:7"
									},
									"returnParameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "5553:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5553:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5552:9:7"
									},
									"scope": 1882,
									"src": "5467:205:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1880,
										"nodeType": "Block",
										"src": "6430:110:7",
										"statements": [
											{
												"id": 1879,
												"nodeType": "UncheckedBlock",
												"src": "6441:92:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1869,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1861,
																		"src": "6474:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6478:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6474:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1872,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1863,
																	"src": "6481:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1868,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6466:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6466:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1874,
														"nodeType": "ExpressionStatement",
														"src": "6466:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1875,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1859,
																"src": "6516:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1876,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1861,
																"src": "6520:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6516:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1867,
														"id": 1878,
														"nodeType": "Return",
														"src": "6509:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1857,
										"nodeType": "StructuredDocumentation",
										"src": "5680:649:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1881,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6344:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6356:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "6348:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6348:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6367:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "6359:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6359:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6384:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "6370:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1862,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6370:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6347:50:7"
									},
									"returnParameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "6421:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6421:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6420:9:7"
									},
									"scope": 1882,
									"src": "6335:205:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1883,
							"src": "72:6471:7",
							"usedErrors": []
						}
					],
					"src": "37:6506:7"
				},
				"id": 7
			},
			"Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol": {
				"ast": {
					"absolutePath": "Documents/GitHub/contract-token-cryptoMonster/backend/shared/lib/structures.sol",
					"exportedSymbols": {
						"structures": [
							1940
						]
					},
					"id": 1941,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1884,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1940,
							"linearizedBaseContracts": [
								1940
							],
							"name": "structures",
							"nameLocation": "81:10:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "structures.Role",
									"id": 1890,
									"members": [
										{
											"id": 1885,
											"name": "SYSTEM_OWNER",
											"nameLocation": "200:12:8",
											"nodeType": "EnumValue",
											"src": "200:12:8"
										},
										{
											"id": 1886,
											"name": "SYSTEM_PUBLIC",
											"nameLocation": "223:13:8",
											"nodeType": "EnumValue",
											"src": "223:13:8"
										},
										{
											"id": 1887,
											"name": "SYSTEM_PRIVATE",
											"nameLocation": "247:14:8",
											"nodeType": "EnumValue",
											"src": "247:14:8"
										},
										{
											"id": 1888,
											"name": "INVESTOR",
											"nameLocation": "272:8:8",
											"nodeType": "EnumValue",
											"src": "272:8:8"
										},
										{
											"id": 1889,
											"name": "USER",
											"nameLocation": "291:4:8",
											"nodeType": "EnumValue",
											"src": "291:4:8"
										}
									],
									"name": "Role",
									"nameLocation": "184:4:8",
									"nodeType": "EnumDefinition",
									"src": "179:123:8"
								},
								{
									"canonicalName": "structures.structUser",
									"id": 1906,
									"members": [
										{
											"constant": false,
											"id": 1893,
											"mutability": "mutable",
											"name": "role",
											"nameLocation": "416:4:8",
											"nodeType": "VariableDeclaration",
											"scope": 1906,
											"src": "411:9:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_Role_$1890",
												"typeString": "enum structures.Role"
											},
											"typeName": {
												"id": 1892,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1891,
													"name": "Role",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1890,
													"src": "411:4:8"
												},
												"referencedDeclaration": 1890,
												"src": "411:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Role_$1890",
													"typeString": "enum structures.Role"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1895,
											"mutability": "mutable",
											"name": "login",
											"nameLocation": "466:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1906,
											"src": "459:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1894,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "459:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1897,
											"mutability": "mutable",
											"name": "password",
											"nameLocation": "515:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 1906,
											"src": "507:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1896,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "507:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1899,
											"mutability": "mutable",
											"name": "balance_overall",
											"nameLocation": "565:15:8",
											"nodeType": "VariableDeclaration",
											"scope": 1906,
											"src": "557:23:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1898,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "557:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1901,
											"mutability": "mutable",
											"name": "balance_seed",
											"nameLocation": "626:12:8",
											"nodeType": "VariableDeclaration",
											"scope": 1906,
											"src": "618:20:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1900,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "618:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1903,
											"mutability": "mutable",
											"name": "balance_private",
											"nameLocation": "696:15:8",
											"nodeType": "VariableDeclaration",
											"scope": 1906,
											"src": "688:23:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1902,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "688:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1905,
											"mutability": "mutable",
											"name": "balance_public",
											"nameLocation": "769:14:8",
											"nodeType": "VariableDeclaration",
											"scope": 1906,
											"src": "761:22:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1904,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "761:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "structUser",
									"nameLocation": "389:10:8",
									"nodeType": "StructDefinition",
									"scope": 1940,
									"src": "382:448:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1911,
									"mutability": "mutable",
									"name": "structUsers_",
									"nameLocation": "868:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1940,
									"src": "836:44:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
										"typeString": "mapping(address => struct structures.structUser)"
									},
									"typeName": {
										"id": 1910,
										"keyType": {
											"id": 1907,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "845:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "836:31:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structUser_$1906_storage_$",
											"typeString": "mapping(address => struct structures.structUser)"
										},
										"valueType": {
											"id": 1909,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1908,
												"name": "structUser",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1906,
												"src": "856:10:8"
											},
											"referencedDeclaration": 1906,
											"src": "856:10:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_structUser_$1906_storage_ptr",
												"typeString": "struct structures.structUser"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "structures.structPhase",
									"id": 1916,
									"members": [
										{
											"constant": false,
											"id": 1913,
											"mutability": "mutable",
											"name": "statusPhase",
											"nameLocation": "1041:11:8",
											"nodeType": "VariableDeclaration",
											"scope": 1916,
											"src": "1036:16:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1912,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1036:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1915,
											"mutability": "mutable",
											"name": "reviewed",
											"nameLocation": "1093:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 1916,
											"src": "1088:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1914,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1088:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "structPhase",
									"nameLocation": "1013:11:8",
									"nodeType": "StructDefinition",
									"scope": 1940,
									"src": "1006:157:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1921,
									"mutability": "mutable",
									"name": "structPhases_",
									"nameLocation": "1202:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1940,
									"src": "1169:46:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structPhase_$1916_storage_$",
										"typeString": "mapping(address => struct structures.structPhase)"
									},
									"typeName": {
										"id": 1920,
										"keyType": {
											"id": 1917,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1178:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1169:32:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structPhase_$1916_storage_$",
											"typeString": "mapping(address => struct structures.structPhase)"
										},
										"valueType": {
											"id": 1919,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1918,
												"name": "structPhase",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1916,
												"src": "1189:11:8"
											},
											"referencedDeclaration": 1916,
											"src": "1189:11:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_structPhase_$1916_storage_ptr",
												"typeString": "struct structures.structPhase"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "structures.structApplication",
									"id": 1934,
									"members": [
										{
											"constant": false,
											"id": 1923,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "1415:4:8",
											"nodeType": "VariableDeclaration",
											"scope": 1934,
											"src": "1408:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1922,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1408:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1925,
											"mutability": "mutable",
											"name": "contactForCommunication",
											"nameLocation": "1466:23:8",
											"nodeType": "VariableDeclaration",
											"scope": 1934,
											"src": "1459:30:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1924,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1459:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1927,
											"mutability": "mutable",
											"name": "userAdr",
											"nameLocation": "1546:7:8",
											"nodeType": "VariableDeclaration",
											"scope": 1934,
											"src": "1538:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1926,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1538:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1929,
											"mutability": "mutable",
											"name": "status",
											"nameLocation": "1623:6:8",
											"nodeType": "VariableDeclaration",
											"scope": 1934,
											"src": "1618:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1928,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1618:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1931,
											"mutability": "mutable",
											"name": "reviewed",
											"nameLocation": "1693:8:8",
											"nodeType": "VariableDeclaration",
											"scope": 1934,
											"src": "1688:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1930,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1688:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1933,
											"mutability": "mutable",
											"name": "exist",
											"nameLocation": "1787:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 1934,
											"src": "1782:10:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1932,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1782:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "structApplication",
									"nameLocation": "1379:17:8",
									"nodeType": "StructDefinition",
									"scope": 1940,
									"src": "1372:485:8",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1939,
									"mutability": "mutable",
									"name": "strucApplications_",
									"nameLocation": "1902:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 1940,
									"src": "1863:57:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structApplication_$1934_storage_$",
										"typeString": "mapping(address => struct structures.structApplication)"
									},
									"typeName": {
										"id": 1938,
										"keyType": {
											"id": 1935,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1872:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1863:38:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_structApplication_$1934_storage_$",
											"typeString": "mapping(address => struct structures.structApplication)"
										},
										"valueType": {
											"id": 1937,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1936,
												"name": "structApplication",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1934,
												"src": "1883:17:8"
											},
											"referencedDeclaration": 1934,
											"src": "1883:17:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_structApplication_$1934_storage_ptr",
												"typeString": "struct structures.structApplication"
											}
										}
									},
									"visibility": "internal"
								}
							],
							"scope": 1941,
							"src": "72:1916:8",
							"usedErrors": []
						}
					],
					"src": "37:1951:8"
				},
				"id": 8
			}
		}
	}
}